#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataAsset_SkillTree

#include "Basic.hpp"

#include "BP_DataAsset_SkillTree_classes.hpp"
#include "BP_DataAsset_SkillTree_parameters.hpp"


namespace SDK
{

// Function BP_DataAsset_SkillTree.BP_DataAsset_SkillTree_C.BPI_GetDependencies
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>*    Classes                                                (Parm, OutParm)
// TArray<TSoftObjectPtr<class UObject>>*  Assets                                                 (Parm, OutParm)
// TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>>*ExternalDependencies                                   (Parm, OutParm)

void UBP_DataAsset_SkillTree_C::BPI_GetDependencies(TArray<TSoftClassPtr<class UClass>>* Classes, TArray<TSoftObjectPtr<class UObject>>* Assets, TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>>* ExternalDependencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillTree_C", "BPI_GetDependencies");

	Params::BP_DataAsset_SkillTree_C_BPI_GetDependencies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Classes != nullptr)
		*Classes = std::move(Parms.Classes);

	if (Assets != nullptr)
		*Assets = std::move(Parms.Assets);

	if (ExternalDependencies != nullptr)
		*ExternalDependencies = std::move(Parms.ExternalDependencies);
}


// Function BP_DataAsset_SkillTree.BP_DataAsset_SkillTree_C.GetAllSkillUnlockInfosMap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class UBP_DataAsset_Skill_C*, struct FFSkillUnlockInfos>*SkillUnlockInfos                                       (Parm, OutParm)

void UBP_DataAsset_SkillTree_C::GetAllSkillUnlockInfosMap(TMap<class UBP_DataAsset_Skill_C*, struct FFSkillUnlockInfos>* SkillUnlockInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillTree_C", "GetAllSkillUnlockInfosMap");

	Params::BP_DataAsset_SkillTree_C_GetAllSkillUnlockInfosMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkillUnlockInfos != nullptr)
		*SkillUnlockInfos = std::move(Parms.SkillUnlockInfos);
}


// Function BP_DataAsset_SkillTree.BP_DataAsset_SkillTree_C.GetSkillsUnlockedBySkill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class UBP_DataAsset_Skill_C*&     Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFSkillUnlockData>*       SkillUnlocks                                           (Parm, OutParm)

void UBP_DataAsset_SkillTree_C::GetSkillsUnlockedBySkill(const class UBP_DataAsset_Skill_C*& Key, TArray<struct FFSkillUnlockData>* SkillUnlocks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillTree_C", "GetSkillsUnlockedBySkill");

	Params::BP_DataAsset_SkillTree_C_GetSkillsUnlockedBySkill Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillUnlocks != nullptr)
		*SkillUnlocks = std::move(Parms.SkillUnlocks);
}


// Function BP_DataAsset_SkillTree.BP_DataAsset_SkillTree_C.GetUnlockedSkillsByNameIDs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    NameIDs                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UBP_DataAsset_Skill_C*>*   UnlockedSkills                                         (Parm, OutParm)
// bool*                                   AllFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>*                    MissingNameIDs                                         (Parm, OutParm)

void UBP_DataAsset_SkillTree_C::GetUnlockedSkillsByNameIDs(TArray<class FName>& NameIDs, TArray<class UBP_DataAsset_Skill_C*>* UnlockedSkills, bool* AllFound, TArray<class FName>* MissingNameIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_SkillTree_C", "GetUnlockedSkillsByNameIDs");

	Params::BP_DataAsset_SkillTree_C_GetUnlockedSkillsByNameIDs Parms{};

	Parms.NameIDs = std::move(NameIDs);

	UObject::ProcessEvent(Func, &Parms);

	NameIDs = std::move(Parms.NameIDs);

	if (UnlockedSkills != nullptr)
		*UnlockedSkills = std::move(Parms.UnlockedSkills);

	if (AllFound != nullptr)
		*AllFound = Parms.AllFound;

	if (MissingNameIDs != nullptr)
		*MissingNameIDs = std::move(Parms.MissingNameIDs);
}

}

