#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MiniMapCapture

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.ConvertLocationToMapLocation
// 0x0088 (0x0088 - 0x0000)
struct BP_MiniMapCapture_C_ConvertLocationToMapLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TwoDPosition;                                      // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_ConvertLocationToMapLocation) == 0x000008, "Wrong alignment on BP_MiniMapCapture_C_ConvertLocationToMapLocation");
static_assert(sizeof(BP_MiniMapCapture_C_ConvertLocationToMapLocation) == 0x000088, "Wrong size on BP_MiniMapCapture_C_ConvertLocationToMapLocation");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, Location) == 0x000000, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, TwoDPosition) == 0x000018, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::TwoDPosition' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_BreakVector_X_1) == 0x000040, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_Abs_ReturnValue) == 0x000068, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_Abs_ReturnValue_1) == 0x000070, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ConvertLocationToMapLocation, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'BP_MiniMapCapture_C_ConvertLocationToMapLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.ExecuteUbergraph_BP_MiniMapCapture
// 0x0058 (0x0058 - 0x0000)
struct BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ConvertLocationToMapLocation_2DPosition;  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryReadSectionGrayscaleValue_Succeed;     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_TryReadSectionGrayscaleValue_GreyScaleValue; // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddToUnlockedMapSections_AddedIndex;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_ReadTexturePixelQuery*              CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture) == 0x000008, "Wrong alignment on BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture");
static_assert(sizeof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture) == 0x000058, "Wrong size on BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, EntryPoint) == 0x000000, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_ConvertLocationToMapLocation_2DPosition) == 0x000030, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_ConvertLocationToMapLocation_2DPosition' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_GetCustomGI_ReturnValue) == 0x000040, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_TryReadSectionGrayscaleValue_Succeed) == 0x000048, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_TryReadSectionGrayscaleValue_Succeed' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_TryReadSectionGrayscaleValue_GreyScaleValue) == 0x000049, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_TryReadSectionGrayscaleValue_GreyScaleValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_IsValid_ReturnValue_1) == 0x00004A, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_AddToUnlockedMapSections_AddedIndex) == 0x00004C, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_AddToUnlockedMapSections_AddedIndex' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'BP_MiniMapCapture_C_ExecuteUbergraph_BP_MiniMapCapture::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.GetMapHeight
// 0x0048 (0x0048 - 0x0000)
struct BP_MiniMapCapture_C_GetMapHeight final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_GetMapHeight) == 0x000008, "Wrong alignment on BP_MiniMapCapture_C_GetMapHeight");
static_assert(sizeof(BP_MiniMapCapture_C_GetMapHeight) == 0x000048, "Wrong size on BP_MiniMapCapture_C_GetMapHeight");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, ReturnValue) == 0x000000, "Member 'BP_MiniMapCapture_C_GetMapHeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_BreakVector_X_1) == 0x000020, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapHeight, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'BP_MiniMapCapture_C_GetMapHeight::CallFunc_Abs_ReturnValue' has a wrong offset!");

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.GetMapWidth
// 0x0048 (0x0048 - 0x0000)
struct BP_MiniMapCapture_C_GetMapWidth final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_GetMapWidth) == 0x000008, "Wrong alignment on BP_MiniMapCapture_C_GetMapWidth");
static_assert(sizeof(BP_MiniMapCapture_C_GetMapWidth) == 0x000048, "Wrong size on BP_MiniMapCapture_C_GetMapWidth");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, ReturnValue) == 0x000000, "Member 'BP_MiniMapCapture_C_GetMapWidth::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_BreakVector_X) == 0x000008, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_BreakVector_X_1) == 0x000020, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_GetMapWidth, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'BP_MiniMapCapture_C_GetMapWidth::CallFunc_Abs_ReturnValue' has a wrong offset!");

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.IsLocationInUnlockedSection
// 0x0028 (0x0028 - 0x0000)
struct BP_MiniMapCapture_C_IsLocationInUnlockedSection final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInUnlockedSection;                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryReadSectionGrayscaleValue_Succeed;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_TryReadSectionGrayscaleValue_GreyScaleValue; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesUnlockedMapSectionsContains_IsContained; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_IsLocationInUnlockedSection) == 0x000008, "Wrong alignment on BP_MiniMapCapture_C_IsLocationInUnlockedSection");
static_assert(sizeof(BP_MiniMapCapture_C_IsLocationInUnlockedSection) == 0x000028, "Wrong size on BP_MiniMapCapture_C_IsLocationInUnlockedSection");
static_assert(offsetof(BP_MiniMapCapture_C_IsLocationInUnlockedSection, Location) == 0x000000, "Member 'BP_MiniMapCapture_C_IsLocationInUnlockedSection::Location' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_IsLocationInUnlockedSection, IsInUnlockedSection) == 0x000010, "Member 'BP_MiniMapCapture_C_IsLocationInUnlockedSection::IsInUnlockedSection' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_IsLocationInUnlockedSection, CallFunc_TryReadSectionGrayscaleValue_Succeed) == 0x000011, "Member 'BP_MiniMapCapture_C_IsLocationInUnlockedSection::CallFunc_TryReadSectionGrayscaleValue_Succeed' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_IsLocationInUnlockedSection, CallFunc_TryReadSectionGrayscaleValue_GreyScaleValue) == 0x000012, "Member 'BP_MiniMapCapture_C_IsLocationInUnlockedSection::CallFunc_TryReadSectionGrayscaleValue_GreyScaleValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_IsLocationInUnlockedSection, CallFunc_GetCustomGI_ReturnValue) == 0x000018, "Member 'BP_MiniMapCapture_C_IsLocationInUnlockedSection::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_IsLocationInUnlockedSection, CallFunc_DoesUnlockedMapSectionsContains_IsContained) == 0x000020, "Member 'BP_MiniMapCapture_C_IsLocationInUnlockedSection::CallFunc_DoesUnlockedMapSectionsContains_IsContained' has a wrong offset!");

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MiniMapCapture_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MiniMapCapture_C_ReceiveTick");
static_assert(sizeof(BP_MiniMapCapture_C_ReceiveTick) == 0x000004, "Wrong size on BP_MiniMapCapture_C_ReceiveTick");
static_assert(offsetof(BP_MiniMapCapture_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MiniMapCapture_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.TryReadSectionGrayscaleValue
// 0x0088 (0x0088 - 0x0000)
struct BP_MiniMapCapture_C_TryReadSectionGrayscaleValue final
{
public:
	struct FVector2D                              TwoDPosition;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Succeed;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         GreyscaleValue;                                    // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextureWidth_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextureHeight_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMapHeight_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMapWidth_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_TryReadPixel_PixelValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TryReadPixel_PixelValueNormalized;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryReadPixel_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue) == 0x000008, "Wrong alignment on BP_MiniMapCapture_C_TryReadSectionGrayscaleValue");
static_assert(sizeof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue) == 0x000088, "Wrong size on BP_MiniMapCapture_C_TryReadSectionGrayscaleValue");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, TwoDPosition) == 0x000000, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::TwoDPosition' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, Succeed) == 0x000010, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::Succeed' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, GreyscaleValue) == 0x000011, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::GreyscaleValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_BreakVector2D_X) == 0x000018, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_GetTextureWidth_ReturnValue) == 0x000028, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_GetTextureWidth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_GetTextureHeight_ReturnValue) == 0x00002C, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_GetTextureHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000038, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_GetMapHeight_ReturnValue) == 0x000040, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_GetMapHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_GetMapWidth_ReturnValue) == 0x000048, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_GetMapWidth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Round_ReturnValue) == 0x000070, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_Round_ReturnValue_1) == 0x000074, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_TryReadPixel_PixelValue) == 0x000078, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_TryReadPixel_PixelValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_TryReadPixel_PixelValueNormalized) == 0x00007C, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_TryReadPixel_PixelValueNormalized' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_TryReadSectionGrayscaleValue, CallFunc_TryReadPixel_ReturnValue) == 0x000080, "Member 'BP_MiniMapCapture_C_TryReadSectionGrayscaleValue::CallFunc_TryReadPixel_ReturnValue' has a wrong offset!");

// Function BP_MiniMapCapture.BP_MiniMapCapture_C.UserConstructionScript
// 0x0100 (0x0100 - 0x0000)
struct BP_MiniMapCapture_C_UserConstructionScript final
{
public:
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0000(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MiniMapCapture_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_MiniMapCapture_C_UserConstructionScript");
static_assert(sizeof(BP_MiniMapCapture_C_UserConstructionScript) == 0x000100, "Wrong size on BP_MiniMapCapture_C_UserConstructionScript");
static_assert(offsetof(BP_MiniMapCapture_C_UserConstructionScript, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000000, "Member 'BP_MiniMapCapture_C_UserConstructionScript::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MiniMapCapture_C_UserConstructionScript, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000F8, "Member 'BP_MiniMapCapture_C_UserConstructionScript::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

}

