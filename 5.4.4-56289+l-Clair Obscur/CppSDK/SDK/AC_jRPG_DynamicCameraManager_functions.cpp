#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_DynamicCameraManager

#include "Basic.hpp"

#include "AC_jRPG_DynamicCameraManager_classes.hpp"
#include "AC_jRPG_DynamicCameraManager_parameters.hpp"


namespace SDK
{

// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.ExecuteUbergraph_AC_jRPG_DynamicCameraManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_DynamicCameraManager_C::ExecuteUbergraph_AC_jRPG_DynamicCameraManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "ExecuteUbergraph_AC_jRPG_DynamicCameraManager");

	Params::AC_jRPG_DynamicCameraManager_C_ExecuteUbergraph_AC_jRPG_DynamicCameraManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.LoadBattleMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_BattleMap_C*                  BattleMapBP_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_DynamicCameraManager_C::LoadBattleMap(class ABP_BattleMap_C* BattleMapBP_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "LoadBattleMap");

	Params::AC_jRPG_DynamicCameraManager_C_LoadBattleMap Parms{};

	Parms.BattleMapBP_0 = BattleMapBP_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.ReapplyDynamicPath
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_DynamicCameraManager_C::ReapplyDynamicPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "ReapplyDynamicPath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UAC_jRPG_DynamicCameraManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_DynamicCameraManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "ReceiveTick");

	Params::AC_jRPG_DynamicCameraManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.SetAsViewTargetInstant
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_DynamicCameraManager_C::SetAsViewTargetInstant()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "SetAsViewTargetInstant");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.SetNewDynamicPath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             PathID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    RandomStartDistance                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UpdatePathLocation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_DynamicCameraManager_C::SetNewDynamicPath(class FName PathID, bool RandomStartDistance, bool Loop, bool UpdatePathLocation, const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "SetNewDynamicPath");

	Params::AC_jRPG_DynamicCameraManager_C_SetNewDynamicPath Parms{};

	Parms.PathID = PathID;
	Parms.RandomStartDistance = RandomStartDistance;
	Parms.Loop = Loop;
	Parms.UpdatePathLocation = UpdatePathLocation;
	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.StoreDynamicPathActors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_DynamicCameraManager_C::StoreDynamicPathActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "StoreDynamicPathActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_DynamicCameraManager.AC_jRPG_DynamicCameraManager_C.UpdateCameraLocAndRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  PathTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsTargeting_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_DynamicCameraManager_C::UpdateCameraLocAndRot(double PathTime, bool IsTargeting_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_DynamicCameraManager_C", "UpdateCameraLocAndRot");

	Params::AC_jRPG_DynamicCameraManager_C_UpdateCameraLocAndRot Parms{};

	Parms.PathTime = PathTime;
	Parms.IsTargeting_0 = IsTargeting_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

