#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_MappingOptionEntry

#include "Basic.hpp"

#include "WBP_Settings_MappingOptionEntry_classes.hpp"
#include "WBP_Settings_MappingOptionEntry_parameters.hpp"


namespace SDK
{

// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.BndEvt__WBP_Settings_MappingOptionEntry_InputKeySelector_K2Node_ComponentBoundEvent_0_OnIsSelectingKeyChanged__DelegateSignature
// (BlueprintEvent)

void UWBP_Settings_MappingOptionEntry_C::BndEvt__WBP_Settings_MappingOptionEntry_InputKeySelector_K2Node_ComponentBoundEvent_0_OnIsSelectingKeyChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "BndEvt__WBP_Settings_MappingOptionEntry_InputKeySelector_K2Node_ComponentBoundEvent_0_OnIsSelectingKeyChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.BndEvt__WBP_Settings_MappingOptionEntry_InputKeySelector_Slot1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const struct FInputChord&               SelectedKey                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_Settings_MappingOptionEntry_C::BndEvt__WBP_Settings_MappingOptionEntry_InputKeySelector_Slot1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "BndEvt__WBP_Settings_MappingOptionEntry_InputKeySelector_Slot1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");

	Params::WBP_Settings_MappingOptionEntry_C_BndEvt__WBP_Settings_MappingOptionEntry_InputKeySelector_Slot1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.ExecuteUbergraph_WBP_Settings_MappingOptionEntry
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_MappingOptionEntry_C::ExecuteUbergraph_WBP_Settings_MappingOptionEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "ExecuteUbergraph_WBP_Settings_MappingOptionEntry");

	Params::WBP_Settings_MappingOptionEntry_C_ExecuteUbergraph_WBP_Settings_MappingOptionEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.GetConflictCategories
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>*                    ConflictCategories_0                                   (Parm, OutParm)

void UWBP_Settings_MappingOptionEntry_C::GetConflictCategories(TArray<class FName>* ConflictCategories_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "GetConflictCategories");

	Params::WBP_Settings_MappingOptionEntry_C_GetConflictCategories Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ConflictCategories_0 != nullptr)
		*ConflictCategories_0 = std::move(Parms.ConflictCategories_0);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.GetKeyMapping
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FKeyMappingRow*                  KeyMappings_0                                          (Parm, OutParm)

void UWBP_Settings_MappingOptionEntry_C::GetKeyMapping(struct FKeyMappingRow* KeyMappings_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "GetKeyMapping");

	Params::WBP_Settings_MappingOptionEntry_C_GetKeyMapping Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KeyMappings_0 != nullptr)
		*KeyMappings_0 = std::move(Parms.KeyMappings_0);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.GetMappingName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName*                            MappingName_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_MappingOptionEntry_C::GetMappingName(class FName* MappingName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "GetMappingName");

	Params::WBP_Settings_MappingOptionEntry_C_GetMappingName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MappingName_0 != nullptr)
		*MappingName_0 = Parms.MappingName_0;
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.GetNewMapping
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMapPlayerKeyArgs*               NewMapping_0                                           (Parm, OutParm)

void UWBP_Settings_MappingOptionEntry_C::GetNewMapping(struct FMapPlayerKeyArgs* NewMapping_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "GetNewMapping");

	Params::WBP_Settings_MappingOptionEntry_C_GetNewMapping Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewMapping_0 != nullptr)
		*NewMapping_0 = std::move(Parms.NewMapping_0);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.IsAvailableOnCurrentPlatform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              CurrentPlatformTag                                     (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAvailable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_MappingOptionEntry_C::IsAvailableOnCurrentPlatform(const struct FGameplayTag& CurrentPlatformTag, bool* IsAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "IsAvailableOnCurrentPlatform");

	Params::WBP_Settings_MappingOptionEntry_C_IsAvailableOnCurrentPlatform Parms{};

	Parms.CurrentPlatformTag = std::move(CurrentPlatformTag);

	UObject::ProcessEvent(Func, &Parms);

	if (IsAvailable != nullptr)
		*IsAvailable = Parms.IsAvailable;
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_Settings_MappingOptionEntry_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "OnAddedToFocusPath");

	Params::WBP_Settings_MappingOptionEntry_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.OnFocusBackToBaseButton
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_MappingOptionEntry_C::OnFocusBackToBaseButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "OnFocusBackToBaseButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Settings_MappingOptionEntry_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "OnMouseEnter");

	Params::WBP_Settings_MappingOptionEntry_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FPointerEvent&             MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Settings_MappingOptionEntry_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "OnMouseLeave");

	Params::WBP_Settings_MappingOptionEntry_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWBP_Settings_MappingOptionEntry_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "OnRemovedFromFocusPath");

	Params::WBP_Settings_MappingOptionEntry_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Settings_MappingOptionEntry_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "PreConstruct");

	Params::WBP_Settings_MappingOptionEntry_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.ResetToCurrentMapping
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_MappingOptionEntry_C::ResetToCurrentMapping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "ResetToCurrentMapping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.SetKeyMapping
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FKeyMappingRow&            KeyMappings_0                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_Settings_MappingOptionEntry_C::SetKeyMapping(const struct FKeyMappingRow& KeyMappings_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "SetKeyMapping");

	Params::WBP_Settings_MappingOptionEntry_C_SetKeyMapping Parms{};

	Parms.KeyMappings_0 = std::move(KeyMappings_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Settings_MappingOptionEntry.WBP_Settings_MappingOptionEntry_C.SetMappingsSlotToNone
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_Settings_MappingOptionEntry_C::SetMappingsSlotToNone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Settings_MappingOptionEntry_C", "SetMappingsSlotToNone");

	UObject::ProcessEvent(Func, nullptr);
}

}

