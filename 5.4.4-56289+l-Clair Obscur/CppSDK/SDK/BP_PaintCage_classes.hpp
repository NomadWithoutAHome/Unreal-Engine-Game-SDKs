#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PaintCage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FSoundEvent_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PaintCage.BP_PaintCage_C
// 0x00A0 (0x0330 - 0x0290)
class ABP_PaintCage_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_HalfSphere;                                     // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_PaintCageLayer_Mid;                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_PaintCageLayer_Big;                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   BP_PaintCageLayer_Low;                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCustomNavModifierComponent*            CustomNavModifier;                                 // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_PainCage_Agony_Idle;                            // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_PainCage_Weakened_Idle;                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AC_PainCage_Full_Idle;                             // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Fx;                                                // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfRequiredActivations;                       // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        PaintBreaker;                                      // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         ActivationCount;                                   // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SphereMaterial;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFSoundEvent                           SFX_AC_PainCage_Deactivation;                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFSoundEvent                           SFX_GPE_PaintCage_Arrival_First;                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFSoundEvent                           SFX_GPE_PaintCage_Arrival_Second;                  // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFSoundEvent                           SFX_GPE_PaintCage_Arrival_Third;                   // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void UpdateCageVisuals(bool Instant);
	void UpdateCageState(bool Instant);
	void UpdateCageAudio();
	void ShieldMessage();
	void ReceiveBeginPlay();
	void PlayActivationAudio();
	void OnActivationReceived(bool Instant);
	int32 GetRemainingActivation();
	void ExecuteUbergraph_BP_PaintCage(int32 EntryPoint);
	void DestroyCageIfNeeded(bool Instant);
	void DestroyActorWithDelay(float Duration);
	void ButtonTrigger(bool Instant);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PaintCage_C">();
	}
	static class ABP_PaintCage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PaintCage_C>();
	}
};
static_assert(alignof(ABP_PaintCage_C) == 0x000008, "Wrong alignment on ABP_PaintCage_C");
static_assert(sizeof(ABP_PaintCage_C) == 0x000330, "Wrong size on ABP_PaintCage_C");
static_assert(offsetof(ABP_PaintCage_C, UberGraphFrame) == 0x000290, "Member 'ABP_PaintCage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, SM_HalfSphere) == 0x000298, "Member 'ABP_PaintCage_C::SM_HalfSphere' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, BP_PaintCageLayer_Mid) == 0x0002A0, "Member 'ABP_PaintCage_C::BP_PaintCageLayer_Mid' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, BP_PaintCageLayer_Big) == 0x0002A8, "Member 'ABP_PaintCage_C::BP_PaintCageLayer_Big' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, BP_PaintCageLayer_Low) == 0x0002B0, "Member 'ABP_PaintCage_C::BP_PaintCageLayer_Low' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, CustomNavModifier) == 0x0002B8, "Member 'ABP_PaintCage_C::CustomNavModifier' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, AC_PainCage_Agony_Idle) == 0x0002C0, "Member 'ABP_PaintCage_C::AC_PainCage_Agony_Idle' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, AC_PainCage_Weakened_Idle) == 0x0002C8, "Member 'ABP_PaintCage_C::AC_PainCage_Weakened_Idle' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, AC_PainCage_Full_Idle) == 0x0002D0, "Member 'ABP_PaintCage_C::AC_PainCage_Full_Idle' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, Fx) == 0x0002D8, "Member 'ABP_PaintCage_C::Fx' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, DefaultSceneRoot) == 0x0002E0, "Member 'ABP_PaintCage_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, NumberOfRequiredActivations) == 0x0002E8, "Member 'ABP_PaintCage_C::NumberOfRequiredActivations' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, PaintBreaker) == 0x0002F0, "Member 'ABP_PaintCage_C::PaintBreaker' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, ActivationCount) == 0x000300, "Member 'ABP_PaintCage_C::ActivationCount' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, SphereMaterial) == 0x000308, "Member 'ABP_PaintCage_C::SphereMaterial' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, SFX_AC_PainCage_Deactivation) == 0x000310, "Member 'ABP_PaintCage_C::SFX_AC_PainCage_Deactivation' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, SFX_GPE_PaintCage_Arrival_First) == 0x000318, "Member 'ABP_PaintCage_C::SFX_GPE_PaintCage_Arrival_First' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, SFX_GPE_PaintCage_Arrival_Second) == 0x000320, "Member 'ABP_PaintCage_C::SFX_GPE_PaintCage_Arrival_Second' has a wrong offset!");
static_assert(offsetof(ABP_PaintCage_C, SFX_GPE_PaintCage_Arrival_Third) == 0x000328, "Member 'ABP_PaintCage_C::SFX_GPE_PaintCage_Arrival_Third' has a wrong offset!");

}

