#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_InteractionObject_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_jRPG_InteractionObject_Base.BP_jRPG_InteractionObject_Base_C
// 0x0060 (0x02F0 - 0x0290)
class ABP_jRPG_InteractionObject_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        InteractionPromptLocation;                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       InteractionRange;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        InteractionRadius;                                 // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   ObjectGlobalID;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          DoesntRespawnIfInteracted;                         // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             As_BP_J_RPG_Character_World;                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   PromptText;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible)
	bool                                          InteractionEnabled;                                // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInteractionStatePersistent;                      // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShouldDisplayDistantFeedback;                      // 0x02EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	bool ShouldHideDistantInteraction();
	void CanInteractWithMount(bool* CanInteract);
	void IsInteractionDone(bool* Done);
	void GetInteractionPromptParams(struct FFPromptParams* PromptParams);
	void IsInteractionAvailable(bool* Available);
	void UpdateInteractionState();
	void SetInteractionEnabled(bool InteractionEnabled_0);
	void GetObjectInteractionState(bool* InteractionState);
	void SetObjectInteractionState(bool InteractionState);
	void UserConstructionScript();
	void BndEvt__InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter, bool Instant);
	void OnInteractionDisabled();
	void BndEvt__InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void OnOverlapEvent();
	void OnInteractionEnabled();
	void OnEndOverlapEvent();
	void OnEnemyBattleStateLoaded(bool BattleState);
	void OnObjectInteractionStateLoaded(bool InteractionState);
	void ExecuteUbergraph_BP_jRPG_InteractionObject_Base(int32 EntryPoint);

	bool Editor_DrawDebugShapes() const;
	bool Editor_GetDebugShapes(TArray<struct FEditorDebugShape_Arrow>& Arrows, TArray<struct FEditorDebugShape_Arrow>& Lines) const;
	void GetInteractionFeedbackLocation(struct FVector* Location) const;
	void GetInteractionLocation(struct FVector* Location) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_jRPG_InteractionObject_Base_C">();
	}
	static class ABP_jRPG_InteractionObject_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_jRPG_InteractionObject_Base_C>();
	}
};
static_assert(alignof(ABP_jRPG_InteractionObject_Base_C) == 0x000008, "Wrong alignment on ABP_jRPG_InteractionObject_Base_C");
static_assert(sizeof(ABP_jRPG_InteractionObject_Base_C) == 0x0002F0, "Wrong size on ABP_jRPG_InteractionObject_Base_C");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, UberGraphFrame) == 0x000290, "Member 'ABP_jRPG_InteractionObject_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, InteractionPromptLocation) == 0x000298, "Member 'ABP_jRPG_InteractionObject_Base_C::InteractionPromptLocation' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, Arrow) == 0x0002A0, "Member 'ABP_jRPG_InteractionObject_Base_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, InteractionRange) == 0x0002A8, "Member 'ABP_jRPG_InteractionObject_Base_C::InteractionRange' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, Scene) == 0x0002B0, "Member 'ABP_jRPG_InteractionObject_Base_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, InteractionRadius) == 0x0002B8, "Member 'ABP_jRPG_InteractionObject_Base_C::InteractionRadius' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, ObjectGlobalID) == 0x0002C0, "Member 'ABP_jRPG_InteractionObject_Base_C::ObjectGlobalID' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, DoesntRespawnIfInteracted) == 0x0002C8, "Member 'ABP_jRPG_InteractionObject_Base_C::DoesntRespawnIfInteracted' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, As_BP_J_RPG_Character_World) == 0x0002D0, "Member 'ABP_jRPG_InteractionObject_Base_C::As_BP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, PromptText) == 0x0002D8, "Member 'ABP_jRPG_InteractionObject_Base_C::PromptText' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, InteractionEnabled) == 0x0002E8, "Member 'ABP_jRPG_InteractionObject_Base_C::InteractionEnabled' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, IsInteractionStatePersistent) == 0x0002E9, "Member 'ABP_jRPG_InteractionObject_Base_C::IsInteractionStatePersistent' has a wrong offset!");
static_assert(offsetof(ABP_jRPG_InteractionObject_Base_C, ShouldDisplayDistantFeedback) == 0x0002EA, "Member 'ABP_jRPG_InteractionObject_Base_C::ShouldDisplayDistantFeedback' has a wrong offset!");

}

