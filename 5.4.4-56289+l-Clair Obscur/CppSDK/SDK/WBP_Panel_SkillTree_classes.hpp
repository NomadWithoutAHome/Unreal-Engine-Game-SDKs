#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Panel_SkillTree

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "FSkillGraphEdge_structs.hpp"
#include "E_GM_SkillTreeAction_structs.hpp"
#include "EInputAction_structs.hpp"
#include "CommonUI_classes.hpp"
#include "ESkillNodeState_structs.hpp"
#include "E_Characters_structs.hpp"
#include "UMG_structs.hpp"
#include "ELearnSkillBlockedReason_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Panel_SkillTree.WBP_Panel_SkillTree_C
// 0x0220 (0x0650 - 0x0430)
class UWBP_Panel_SkillTree_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Forbidden;                                    // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       AvailableSkillPoints;                              // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    AvailableSkillPointsTitle;                         // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_SkillConnectionsGraphContainer;        // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_SkillContextMenuContainer;             // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_SkillGraphContainer;                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDynamicEntryBox*                       DynamicEntryBox_ResourceCost;                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    ReadOnlyText;                                      // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BaseButton_C*                      ResetButton;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ResetOverlay;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextualInputActionBinding_C*       ResetTreeBinding;                                  // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTooltip_C*                    SkillTooltip;                                      // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GM_CharacterSheet_C*               WBP_GM_CharacterSheet;                             // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<struct FFSkillGraphEdge, class UWBP_SkillTreeConnection_C*> SkillConnectionWidgets;         // 0x04A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWBP_SkillTreeElement_C*                SelectedSkillNodeWidget;                           // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CurrentCharacter;                                  // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UBP_DataAsset_Skill_C* SkillData)> OnSkillAssignClicked;     // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UBP_DataAsset_Skill_C*                  SelectedSkillAsset;                                // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_ContextualActions_C*               CurrentContextualAction;                           // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<EInputAction, E_GM_SkillTreeAction>      ActionsMapping;                                    // 0x0520(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UBP_DataAsset_Skill_C*, class UWBP_SkillTreeElement_C*> SkillToWidgetElement;         // 0x0570(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class FName, E_GM_SkillTreeAction>       ActionsMappingCommon;                              // 0x05C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsReadOnly;                                        // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_SkillTreeElement_C*                FirstEntryPointSkill;                              // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSoundEventDataTableRowHandle          SD_Forbidden;                                      // 0x0620(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_LearnSkill;                                     // 0x0630(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_ResetSkills_Confirm;                            // 0x0640(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void Action_AssignSkill(class UWBP_GM_PromptGeneric_C* PromptWidget);
	void Action_LearnSkill(class UWBP_GM_PromptGeneric_C* PromptWidget);
	void AddContextualActionCommonUI(const struct FS_CommonUI_ActionDataRowHandle& TriggeringInputAction, const class FText& Text, bool Allowed, const E_GM_SkillTreeAction SkillTreeAction);
	void BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature(double Progress);
	void BndEvt__WBP_Panel_SkillTree_ResetButton_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BP_OnDeactivated();
	void BPI_Appear();
	void BPI_Disappear();
	void BPI_GetCharacterNotificationState(class UBP_CharacterData_C* CharacterData, bool* HasNotification);
	void BPI_LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void BPI_SetIsReadOnly(bool IsReadOnly_0);
	void ExecuteUbergraph_WBP_Panel_SkillTree(int32 EntryPoint);
	void GetCenterReferentialPosition(const struct FVector2D& InPosition, const struct FVector2D& InMin, const struct FVector2D& InMax, struct FVector2D* CenterPosition);
	void IsSkillSecretLocked(const struct FFSkillUnlockData& UnlockData, bool* IsSecretLocked);
	void LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void OnContextualAction_CommonUI(const struct FDataTableRowHandle& InputAction, class UWBP_GM_PromptGeneric_C* PromptWidget);
	void OnSkillNodeClicked(class UWBP_SkillTreeElement_C* SkillNodeWidget);
	void OnSkillNodeSelected(class UWBP_SkillTreeElement_C* SkillNodeWidget);
	void UpdateSkillConnectionStates(class UBP_CharacterData_C* Character);

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Panel_SkillTree_C">();
	}
	static class UWBP_Panel_SkillTree_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Panel_SkillTree_C>();
	}
};
static_assert(alignof(UWBP_Panel_SkillTree_C) == 0x000008, "Wrong alignment on UWBP_Panel_SkillTree_C");
static_assert(sizeof(UWBP_Panel_SkillTree_C) == 0x000650, "Wrong size on UWBP_Panel_SkillTree_C");
static_assert(offsetof(UWBP_Panel_SkillTree_C, UberGraphFrame) == 0x000430, "Member 'UWBP_Panel_SkillTree_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, Anim_Forbidden) == 0x000438, "Member 'UWBP_Panel_SkillTree_C::Anim_Forbidden' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, AvailableSkillPoints) == 0x000440, "Member 'UWBP_Panel_SkillTree_C::AvailableSkillPoints' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, AvailableSkillPointsTitle) == 0x000448, "Member 'UWBP_Panel_SkillTree_C::AvailableSkillPointsTitle' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, CanvasPanel_SkillConnectionsGraphContainer) == 0x000450, "Member 'UWBP_Panel_SkillTree_C::CanvasPanel_SkillConnectionsGraphContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, CanvasPanel_SkillContextMenuContainer) == 0x000458, "Member 'UWBP_Panel_SkillTree_C::CanvasPanel_SkillContextMenuContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, CanvasPanel_SkillGraphContainer) == 0x000460, "Member 'UWBP_Panel_SkillTree_C::CanvasPanel_SkillGraphContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, DynamicEntryBox_ResourceCost) == 0x000468, "Member 'UWBP_Panel_SkillTree_C::DynamicEntryBox_ResourceCost' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, ReadOnlyText) == 0x000470, "Member 'UWBP_Panel_SkillTree_C::ReadOnlyText' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, ResetButton) == 0x000478, "Member 'UWBP_Panel_SkillTree_C::ResetButton' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, ResetOverlay) == 0x000480, "Member 'UWBP_Panel_SkillTree_C::ResetOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, ResetTreeBinding) == 0x000488, "Member 'UWBP_Panel_SkillTree_C::ResetTreeBinding' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SkillTooltip) == 0x000490, "Member 'UWBP_Panel_SkillTree_C::SkillTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, WBP_GM_CharacterSheet) == 0x000498, "Member 'UWBP_Panel_SkillTree_C::WBP_GM_CharacterSheet' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SkillConnectionWidgets) == 0x0004A0, "Member 'UWBP_Panel_SkillTree_C::SkillConnectionWidgets' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SelectedSkillNodeWidget) == 0x0004F0, "Member 'UWBP_Panel_SkillTree_C::SelectedSkillNodeWidget' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, CurrentCharacter) == 0x0004F8, "Member 'UWBP_Panel_SkillTree_C::CurrentCharacter' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, OnSkillAssignClicked) == 0x000500, "Member 'UWBP_Panel_SkillTree_C::OnSkillAssignClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SelectedSkillAsset) == 0x000510, "Member 'UWBP_Panel_SkillTree_C::SelectedSkillAsset' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, CurrentContextualAction) == 0x000518, "Member 'UWBP_Panel_SkillTree_C::CurrentContextualAction' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, ActionsMapping) == 0x000520, "Member 'UWBP_Panel_SkillTree_C::ActionsMapping' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SkillToWidgetElement) == 0x000570, "Member 'UWBP_Panel_SkillTree_C::SkillToWidgetElement' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, ActionsMappingCommon) == 0x0005C0, "Member 'UWBP_Panel_SkillTree_C::ActionsMappingCommon' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, IsReadOnly) == 0x000610, "Member 'UWBP_Panel_SkillTree_C::IsReadOnly' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, FirstEntryPointSkill) == 0x000618, "Member 'UWBP_Panel_SkillTree_C::FirstEntryPointSkill' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SD_Forbidden) == 0x000620, "Member 'UWBP_Panel_SkillTree_C::SD_Forbidden' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SD_LearnSkill) == 0x000630, "Member 'UWBP_Panel_SkillTree_C::SD_LearnSkill' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_SkillTree_C, SD_ResetSkills_Confirm) == 0x000640, "Member 'UWBP_Panel_SkillTree_C::SD_ResetSkills_Confirm' has a wrong offset!");

}

