#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialSystemComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_TutorialCardParameters_structs.hpp"
#include "S_TutorialHintParameters_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_TutorialSystemComponent.BP_TutorialSystemComponent_C
// 0x00A0 (0x0140 - 0x00A0)
class UBP_TutorialSystemComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FS_TutorialCardParameters>      TutorialCardQueue;                                 // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_TutorialCard_C*                    CurrentTutorialCard;                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FDataTableRowHandle& TutorialCardRow)> OnTutorialCardCompleted; // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<TScriptInterface<class IBPI_TutorialListenerInterface_C>> TutorialListeners;              // 0x00D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void()>              OnAnyTutorialCardCompleted;                        // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FS_TutorialHintParameters>      TutorialHintQueue;                                 // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_TutorialHint_C*                    CurrentTutorialHint;                               // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(const struct FDataTableRowHandle& TutorialHintRow)> OnTutorialHintCompleted; // 0x0108(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnAnyTutorialHintCompleted;                        // 0x0118(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnEnableTutorialsChanged;                          // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          CanQueueAnyTutorial;                               // 0x0138(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddTutorialListener(TScriptInterface<class IBPI_TutorialListenerInterface_C> Listener);
	bool AreTutorialsEnabled();
	void CleanAllQueuedTutorials();
	void ExecuteUbergraph_BP_TutorialSystemComponent(int32 EntryPoint);
	bool HasActiveTutorialCard();
	void OnChangeMapProcessStarted(class FName LevelDestination);
	void OnCVarAutoSkipTutorialsChanged(bool NewValue);
	void OnNewSettingsApplied(const class UConfigurableGameUserSettings* UserConfig);
	void OnTutorialCardDiscarded(class UWBP_TutorialCard_C* Widget);
	void OnTutorialCardRowDiscarded(const struct FDataTableRowHandle& TutorialCardRow);
	void OnTutorialHintFinished(class UWBP_TutorialHint_C* Widget);
	void OnTutorialHintRowFinished(const struct FDataTableRowHandle& TutorialHintRow);
	void ProcessTutorialListenersForCard(const struct FDataTableRowHandle& TutorialCardRow);
	void QueueTutorialCard(const struct FS_TutorialCardParameters& TutorialCardParameters);
	void QueueTutorialHint(const struct FS_TutorialHintParameters& TutorialHintParameters);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void SetTutorialCardContextActive(bool Active);
	void SkipTutorialCard();
	void SkipTutorialHint();
	void TryDisplayNextTutorialCard();
	void TryDisplayNextTutorialHint();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_TutorialSystemComponent_C">();
	}
	static class UBP_TutorialSystemComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_TutorialSystemComponent_C>();
	}
};
static_assert(alignof(UBP_TutorialSystemComponent_C) == 0x000008, "Wrong alignment on UBP_TutorialSystemComponent_C");
static_assert(sizeof(UBP_TutorialSystemComponent_C) == 0x000140, "Wrong size on UBP_TutorialSystemComponent_C");
static_assert(offsetof(UBP_TutorialSystemComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_TutorialSystemComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, TutorialCardQueue) == 0x0000A8, "Member 'UBP_TutorialSystemComponent_C::TutorialCardQueue' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, CurrentTutorialCard) == 0x0000B8, "Member 'UBP_TutorialSystemComponent_C::CurrentTutorialCard' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, OnTutorialCardCompleted) == 0x0000C0, "Member 'UBP_TutorialSystemComponent_C::OnTutorialCardCompleted' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, TutorialListeners) == 0x0000D0, "Member 'UBP_TutorialSystemComponent_C::TutorialListeners' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, OnAnyTutorialCardCompleted) == 0x0000E0, "Member 'UBP_TutorialSystemComponent_C::OnAnyTutorialCardCompleted' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, TutorialHintQueue) == 0x0000F0, "Member 'UBP_TutorialSystemComponent_C::TutorialHintQueue' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, CurrentTutorialHint) == 0x000100, "Member 'UBP_TutorialSystemComponent_C::CurrentTutorialHint' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, OnTutorialHintCompleted) == 0x000108, "Member 'UBP_TutorialSystemComponent_C::OnTutorialHintCompleted' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, OnAnyTutorialHintCompleted) == 0x000118, "Member 'UBP_TutorialSystemComponent_C::OnAnyTutorialHintCompleted' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, OnEnableTutorialsChanged) == 0x000128, "Member 'UBP_TutorialSystemComponent_C::OnEnableTutorialsChanged' has a wrong offset!");
static_assert(offsetof(UBP_TutorialSystemComponent_C, CanQueueAnyTutorial) == 0x000138, "Member 'UBP_TutorialSystemComponent_C::CanQueueAnyTutorial' has a wrong offset!");

}

