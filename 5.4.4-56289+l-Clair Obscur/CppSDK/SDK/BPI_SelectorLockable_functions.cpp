#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_SelectorLockable

#include "Basic.hpp"

#include "BPI_SelectorLockable_classes.hpp"
#include "BPI_SelectorLockable_parameters.hpp"


namespace SDK
{

// Function BPI_SelectorLockable.BPI_SelectorLockable_C.SetSelectorIsLocked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewLockStatus                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_SelectorLockable_C::SetSelectorIsLocked(bool NewLockStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_SelectorLockable_C", "SetSelectorIsLocked");

	Params::BPI_SelectorLockable_C_SetSelectorIsLocked Parms{};

	Parms.NewLockStatus = NewLockStatus;

	AsUObject()->ProcessEvent(Func, &Parms);
}

}

