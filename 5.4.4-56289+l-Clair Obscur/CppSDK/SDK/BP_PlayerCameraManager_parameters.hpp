#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCameraManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_PlayerCameraManager.BP_PlayerCameraManager_C.ShouldPlayCameraShake
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCameraManager_C_ShouldPlayCameraShake final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayCameraShake_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnableCameraShakes_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCameraOverride_HasOverride;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCameraManager_C_ShouldPlayCameraShake) == 0x000008, "Wrong alignment on BP_PlayerCameraManager_C_ShouldPlayCameraShake");
static_assert(sizeof(BP_PlayerCameraManager_C_ShouldPlayCameraShake) == 0x000030, "Wrong size on BP_PlayerCameraManager_C_ShouldPlayCameraShake");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, ReturnValue) == 0x000000, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000008, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, CallFunc_ShouldPlayCameraShake_ReturnValue) == 0x000010, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::CallFunc_ShouldPlayCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, CallFunc_GetEnableCameraShakes_ReturnValue) == 0x000011, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::CallFunc_GetEnableCameraShakes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000020, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, CallFunc_HasCameraOverride_HasOverride) == 0x000029, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::CallFunc_HasCameraOverride_HasOverride' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCameraManager_C_ShouldPlayCameraShake, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BP_PlayerCameraManager_C_ShouldPlayCameraShake::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

