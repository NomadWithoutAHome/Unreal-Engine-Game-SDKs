#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Paticle_wind_settings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Paticle_wind_settings.BP_Paticle_wind_settings_C
// 0x0058 (0x02E8 - 0x0290)
class ABP_Paticle_wind_settings_C final : public AActor
{
public:
	class UArrowComponent*                        Arrow;                                             // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Update;                                            // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWindDirectionalSource*                 Wind_in_scene;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Intansity_Wind_Multiplay;                          // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        speed_wind;                                        // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        wind_rotation_Horizontal;                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Gravity;                                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Current_Acelerate_Paticle;                         // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Paticle_wind_settings_C">();
	}
	static class ABP_Paticle_wind_settings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Paticle_wind_settings_C>();
	}
};
static_assert(alignof(ABP_Paticle_wind_settings_C) == 0x000008, "Wrong alignment on ABP_Paticle_wind_settings_C");
static_assert(sizeof(ABP_Paticle_wind_settings_C) == 0x0002E8, "Wrong size on ABP_Paticle_wind_settings_C");
static_assert(offsetof(ABP_Paticle_wind_settings_C, Arrow) == 0x000290, "Member 'ABP_Paticle_wind_settings_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, Billboard) == 0x000298, "Member 'ABP_Paticle_wind_settings_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, Update) == 0x0002A0, "Member 'ABP_Paticle_wind_settings_C::Update' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, Wind_in_scene) == 0x0002A8, "Member 'ABP_Paticle_wind_settings_C::Wind_in_scene' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, Intansity_Wind_Multiplay) == 0x0002B0, "Member 'ABP_Paticle_wind_settings_C::Intansity_Wind_Multiplay' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, speed_wind) == 0x0002B8, "Member 'ABP_Paticle_wind_settings_C::speed_wind' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, wind_rotation_Horizontal) == 0x0002C0, "Member 'ABP_Paticle_wind_settings_C::wind_rotation_Horizontal' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, Gravity) == 0x0002C8, "Member 'ABP_Paticle_wind_settings_C::Gravity' has a wrong offset!");
static_assert(offsetof(ABP_Paticle_wind_settings_C, Current_Acelerate_Paticle) == 0x0002D0, "Member 'ABP_Paticle_wind_settings_C::Current_Acelerate_Paticle' has a wrong offset!");

}

