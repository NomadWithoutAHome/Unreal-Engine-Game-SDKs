#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightSafeArea

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_LightSafeArea.BP_LightSafeArea_C.BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_LightSafeArea.BP_LightSafeArea_C.BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_LightSafeArea_C_BndEvt__BP_LightSafeArea_shape_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_LightSafeArea.BP_LightSafeArea_C.ExecuteUbergraph_BP_LightSafeArea
// 0x0158 (0x0158 - 0x0000)
struct BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_InteractingWorldCharacter;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySetInSafeArea_Output_IsInSafeLightArea; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0058(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_TrySetInSafeArea_Output_IsInSafeLightArea_1; // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea) == 0x000008, "Wrong alignment on BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea");
static_assert(sizeof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea) == 0x000158, "Wrong size on BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, EntryPoint) == 0x000000, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_Event_InteractingWorldCharacter) == 0x000008, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_Event_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_Event_Instant) == 0x000010, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000018, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OtherActor) == 0x000020, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OtherComp) == 0x000028, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000030, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, CallFunc_TrySetInSafeArea_Output_IsInSafeLightArea) == 0x000034, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::CallFunc_TrySetInSafeArea_Output_IsInSafeLightArea' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, CallFunc_IsValid_ReturnValue) == 0x000035, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000038, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000040, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000048, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000050, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_bFromSweep) == 0x000054, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, K2Node_ComponentBoundEvent_SweepResult) == 0x000058, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea, CallFunc_TrySetInSafeArea_Output_IsInSafeLightArea_1) == 0x000150, "Member 'BP_LightSafeArea_C_ExecuteUbergraph_BP_LightSafeArea::CallFunc_TrySetInSafeArea_Output_IsInSafeLightArea_1' has a wrong offset!");

// Function BP_LightSafeArea.BP_LightSafeArea_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BP_LightSafeArea_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSafeArea_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BP_LightSafeArea_C_OnInteractionRequested");
static_assert(sizeof(BP_LightSafeArea_C_OnInteractionRequested) == 0x000010, "Wrong size on BP_LightSafeArea_C_OnInteractionRequested");
static_assert(offsetof(BP_LightSafeArea_C_OnInteractionRequested, InteractingWorldCharacter) == 0x000000, "Member 'BP_LightSafeArea_C_OnInteractionRequested::InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BP_LightSafeArea_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BP_LightSafeArea.BP_LightSafeArea_C.TrySetInSafeArea
// 0x0020 (0x0020 - 0x0000)
struct BP_LightSafeArea_C_TrySetInSafeArea final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInSafeLightArea;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Output_IsInSafeLightArea;                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_LightAreaMecanic_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightSafeArea_C_TrySetInSafeArea) == 0x000008, "Wrong alignment on BP_LightSafeArea_C_TrySetInSafeArea");
static_assert(sizeof(BP_LightSafeArea_C_TrySetInSafeArea) == 0x000020, "Wrong size on BP_LightSafeArea_C_TrySetInSafeArea");
static_assert(offsetof(BP_LightSafeArea_C_TrySetInSafeArea, TargetActor) == 0x000000, "Member 'BP_LightSafeArea_C_TrySetInSafeArea::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_TrySetInSafeArea, IsInSafeLightArea) == 0x000008, "Member 'BP_LightSafeArea_C_TrySetInSafeArea::IsInSafeLightArea' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_TrySetInSafeArea, Output_IsInSafeLightArea) == 0x000009, "Member 'BP_LightSafeArea_C_TrySetInSafeArea::Output_IsInSafeLightArea' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_TrySetInSafeArea, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_LightSafeArea_C_TrySetInSafeArea::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightSafeArea_C_TrySetInSafeArea, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_LightSafeArea_C_TrySetInSafeArea::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

