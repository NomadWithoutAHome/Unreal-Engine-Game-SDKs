#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_ChildExecutor

#include "Basic.hpp"

#include "BP_GameActionInstance_ChildExecutor_classes.hpp"
#include "BP_GameActionInstance_ChildExecutor_parameters.hpp"


namespace SDK
{

// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.ExecuteChildGameAction
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameAction_Wrapper&       GameActionWrapper                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_GameActionInstance_ChildExecutor_C::ExecuteChildGameAction(const struct FGameAction_Wrapper& GameActionWrapper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_ChildExecutor_C", "ExecuteChildGameAction");

	Params::BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction Parms{};

	Parms.GameActionWrapper = std::move(GameActionWrapper);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.OnChildGameActionFinished
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameActionInstance*              GameActionInstance                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameActionInstance_ChildExecutor_C::OnChildGameActionFinished(class UGameActionInstance* GameActionInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_ChildExecutor_C", "OnChildGameActionFinished");

	Params::BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished Parms{};

	Parms.GameActionInstance = GameActionInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.TryExecuteChildGameAction
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameAction_Wrapper&       GameActionWrapper                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_GameActionInstance_ChildExecutor_C::TryExecuteChildGameAction(const struct FGameAction_Wrapper& GameActionWrapper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_ChildExecutor_C", "TryExecuteChildGameAction");

	Params::BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction Parms{};

	Parms.GameActionWrapper = std::move(GameActionWrapper);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.GetDebugString
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_GameActionInstance_ChildExecutor_C::GetDebugString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_ChildExecutor_C", "GetDebugString");

	Params::BP_GameActionInstance_ChildExecutor_C_GetDebugString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

