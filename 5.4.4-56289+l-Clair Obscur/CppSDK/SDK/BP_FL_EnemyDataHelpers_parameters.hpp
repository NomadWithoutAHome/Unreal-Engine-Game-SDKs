#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FL_EnemyDataHelpers

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FL_EnemyDataHelpers.BP_FL_EnemyDataHelpers_C.GetSavedFleePointIndex
// 0x0080 (0x0080 - 0x0000)
struct BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex final
{
public:
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_FleePoint_C>         FleePoint;                                         // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_FleePoint_C>         CallFunc_Map_Find_Value;                           // 0x0050(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex) == 0x000008, "Wrong alignment on BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex");
static_assert(sizeof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex) == 0x000080, "Wrong size on BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, Enemy) == 0x000000, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::Enemy' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, __WorldContext) == 0x000008, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, FleePoint) == 0x000010, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::FleePoint' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, IsValid) == 0x000038, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::IsValid' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, CallFunc_GetCustomGI_ReturnValue) == 0x000040, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, CallFunc_GetGlobalObjectID_ObjectID) == 0x000048, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex, CallFunc_Map_Find_ReturnValue) == 0x000078, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedFleePointIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_FL_EnemyDataHelpers.BP_FL_EnemyDataHelpers_C.GetSavedRoamingPointIndex
// 0x0030 (0x0030 - 0x0000)
struct BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex final
{
public:
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex) == 0x000008, "Wrong alignment on BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex");
static_assert(sizeof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex) == 0x000030, "Wrong size on BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, Enemy) == 0x000000, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::Enemy' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, __WorldContext) == 0x000008, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, Index_0) == 0x000010, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, IsValid) == 0x000014, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::IsValid' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, CallFunc_GetCustomGI_ReturnValue) == 0x000018, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, CallFunc_GetGlobalObjectID_ObjectID) == 0x000020, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedRoamingPointIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_FL_EnemyDataHelpers.BP_FL_EnemyDataHelpers_C.GetEnemyTransformBeforeBattle
// 0x0100 (0x0100 - 0x0000)
struct BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle final
{
public:
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value;                           // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle) == 0x000010, "Wrong alignment on BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle");
static_assert(sizeof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle) == 0x000100, "Wrong size on BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, Enemy) == 0x000000, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::Enemy' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, __WorldContext) == 0x000008, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, Transform) == 0x000010, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::Transform' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, IsValid) == 0x000070, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::IsValid' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, CallFunc_GetCustomGI_ReturnValue) == 0x000078, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, CallFunc_GetGlobalObjectID_ObjectID) == 0x000080, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, CallFunc_Map_Find_Value) == 0x000090, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyTransformBeforeBattle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_FL_EnemyDataHelpers.BP_FL_EnemyDataHelpers_C.GetSavedEnemyTransform
// 0x0170 (0x0170 - 0x0000)
struct BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform final
{
public:
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_wildcard_Variable;                            // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDynamicallySpawnedEnemy_Result;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0xE];                                       // 0x00F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Map_Find_Value;                           // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform) == 0x000010, "Wrong alignment on BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform");
static_assert(sizeof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform) == 0x000170, "Wrong size on BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, Enemy) == 0x000000, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::Enemy' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, __WorldContext) == 0x000008, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, Transform) == 0x000010, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, IsValid) == 0x000070, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::IsValid' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, Temp_wildcard_Variable) == 0x000080, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, CallFunc_GetGlobalObjectID_ObjectID) == 0x0000E0, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, CallFunc_GetCustomGI_ReturnValue) == 0x0000E8, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, CallFunc_IsDynamicallySpawnedEnemy_Result) == 0x0000F0, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::CallFunc_IsDynamicallySpawnedEnemy_Result' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, CallFunc_Not_PreBool_ReturnValue) == 0x0000F1, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, CallFunc_Map_Find_Value) == 0x000100, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform, CallFunc_BooleanAND_ReturnValue) == 0x000161, "Member 'BP_FL_EnemyDataHelpers_C_GetSavedEnemyTransform::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FL_EnemyDataHelpers.BP_FL_EnemyDataHelpers_C.GetEnemyBattleState
// 0x0038 (0x0038 - 0x0000)
struct BP_FL_EnemyDataHelpers_C_GetEnemyBattleState final
{
public:
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          BattleState;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectIDWithGroup_ObjectID;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDynamicallySpawnedEnemy_Result;         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_2;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState) == 0x000008, "Wrong alignment on BP_FL_EnemyDataHelpers_C_GetEnemyBattleState");
static_assert(sizeof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState) == 0x000038, "Wrong size on BP_FL_EnemyDataHelpers_C_GetEnemyBattleState");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, Enemy) == 0x000000, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::Enemy' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, __WorldContext) == 0x000008, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, BattleState) == 0x000010, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::BattleState' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_GetCustomGI_ReturnValue) == 0x000018, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_GetGlobalObjectIDWithGroup_ObjectID) == 0x000020, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_GetGlobalObjectIDWithGroup_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_Map_Find_ReturnValue) == 0x000029, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_IsDynamicallySpawnedEnemy_Result) == 0x00002A, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_IsDynamicallySpawnedEnemy_Result' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_Map_Find_Value_1) == 0x00002D, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_Map_Find_ReturnValue_1) == 0x00002E, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_BooleanAND_ReturnValue_1) == 0x00002F, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_Map_Find_Value_2) == 0x000030, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_Map_Find_ReturnValue_2) == 0x000031, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_BooleanAND_ReturnValue_2) == 0x000032, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetEnemyBattleState, CallFunc_BooleanAND_ReturnValue_3) == 0x000033, "Member 'BP_FL_EnemyDataHelpers_C_GetEnemyBattleState::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_FL_EnemyDataHelpers.BP_FL_EnemyDataHelpers_C.IsDynamicallySpawnedEnemy
// 0x0030 (0x0030 - 0x0000)
struct BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy final
{
public:
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetWorldMapEnemyGlobalID_ID;              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy) == 0x000008, "Wrong alignment on BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy");
static_assert(sizeof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy) == 0x000030, "Wrong size on BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, Enemy) == 0x000000, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::Enemy' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, __WorldContext) == 0x000008, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, Result) == 0x000010, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::Result' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, CallFunc_GetWorldMapEnemyGlobalID_ID) == 0x000014, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::CallFunc_GetWorldMapEnemyGlobalID_ID' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, CallFunc_GetGlobalObjectID_ObjectID) == 0x000020, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000028, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'BP_FL_EnemyDataHelpers_C_IsDynamicallySpawnedEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FL_EnemyDataHelpers.BP_FL_EnemyDataHelpers_C.GetWorldMapEnemyGlobalID
// 0x0010 (0x0010 - 0x0000)
struct BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ID;                                                // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID) == 0x000008, "Wrong alignment on BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID");
static_assert(sizeof(BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID) == 0x000010, "Wrong size on BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID, __WorldContext) == 0x000000, "Member 'BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID, ID) == 0x000008, "Member 'BP_FL_EnemyDataHelpers_C_GetWorldMapEnemyGlobalID::ID' has a wrong offset!");

}

