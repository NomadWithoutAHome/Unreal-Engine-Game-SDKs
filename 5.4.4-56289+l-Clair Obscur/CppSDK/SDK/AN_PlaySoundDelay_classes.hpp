#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_PlaySoundDelay

#include "Basic.hpp"

#include "EInWorldAudioContainerComponents_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AN_PlaySoundDelay.AN_PlaySoundDelay_C
// 0x0020 (0x0058 - 0x0038)
class UAN_PlaySoundDelay_C final : public UAnimNotify
{
public:
	class USoundBase*                             Sound;                                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInWorldAudioContainerComponents              Attach_to_component_InWorld;                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Random_Range_Min;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Range_Max;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AN_PlaySoundDelay_C">();
	}
	static class UAN_PlaySoundDelay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAN_PlaySoundDelay_C>();
	}
};
static_assert(alignof(UAN_PlaySoundDelay_C) == 0x000008, "Wrong alignment on UAN_PlaySoundDelay_C");
static_assert(sizeof(UAN_PlaySoundDelay_C) == 0x000058, "Wrong size on UAN_PlaySoundDelay_C");
static_assert(offsetof(UAN_PlaySoundDelay_C, Sound) == 0x000038, "Member 'UAN_PlaySoundDelay_C::Sound' has a wrong offset!");
static_assert(offsetof(UAN_PlaySoundDelay_C, Attach_to_component_InWorld) == 0x000040, "Member 'UAN_PlaySoundDelay_C::Attach_to_component_InWorld' has a wrong offset!");
static_assert(offsetof(UAN_PlaySoundDelay_C, Random_Range_Min) == 0x000048, "Member 'UAN_PlaySoundDelay_C::Random_Range_Min' has a wrong offset!");
static_assert(offsetof(UAN_PlaySoundDelay_C, Random_Range_Max) == 0x000050, "Member 'UAN_PlaySoundDelay_C::Random_Range_Max' has a wrong offset!");

}

