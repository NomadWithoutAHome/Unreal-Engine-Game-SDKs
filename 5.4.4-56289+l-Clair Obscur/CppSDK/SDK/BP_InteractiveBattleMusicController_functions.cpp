#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveBattleMusicController

#include "Basic.hpp"

#include "BP_InteractiveBattleMusicController_classes.hpp"
#include "BP_InteractiveBattleMusicController_parameters.hpp"


namespace SDK
{

// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.BPI_OnAnyCharacterAP_Changed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleEvent_APChange_C*       AP_Change                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::BPI_OnAnyCharacterAP_Changed(class UBP_BattleEvent_APChange_C* AP_Change)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "BPI_OnAnyCharacterAP_Changed");

	Params::BP_InteractiveBattleMusicController_C_BPI_OnAnyCharacterAP_Changed Parms{};

	Parms.AP_Change = AP_Change;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.BPI_OnAnyCharacterDamaged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              BattleDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::BPI_OnAnyCharacterDamaged(class UBP_BattleDamages_C* BattleDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "BPI_OnAnyCharacterDamaged");

	Params::BP_InteractiveBattleMusicController_C_BPI_OnAnyCharacterDamaged Parms{};

	Parms.BattleDamage = BattleDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.BPI_OnBattleStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::BPI_OnBattleStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "BPI_OnBattleStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.BPI_OnReserveTeamSent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::BPI_OnReserveTeamSent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "BPI_OnReserveTeamSent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.ComputeHealthRatioForCharacters
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class ABP_jRPG_Character_Battle_Base_C*>&Characters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double*                                 Ratio                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::ComputeHealthRatioForCharacters(const TArray<class ABP_jRPG_Character_Battle_Base_C*>& Characters, double* Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "ComputeHealthRatioForCharacters");

	Params::BP_InteractiveBattleMusicController_C_ComputeHealthRatioForCharacters Parms{};

	Parms.Characters = std::move(Characters);

	UObject::ProcessEvent(Func, &Parms);

	if (Ratio != nullptr)
		*Ratio = Parms.Ratio;
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.ExecuteUbergraph_BP_InteractiveBattleMusicController
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::ExecuteUbergraph_BP_InteractiveBattleMusicController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "ExecuteUbergraph_BP_InteractiveBattleMusicController");

	Params::BP_InteractiveBattleMusicController_C_ExecuteUbergraph_BP_InteractiveBattleMusicController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.IsTurnStartInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   InProgress                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::IsTurnStartInProgress(bool* InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "IsTurnStartInProgress");

	Params::BP_InteractiveBattleMusicController_C_IsTurnStartInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InProgress != nullptr)
		*InProgress = Parms.InProgress;
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnBattleStop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::OnBattleStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnBattleStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnCharacterDealtDamages
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Damages                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 ProcessedDamages                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::OnCharacterDealtDamages(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, double Damages, double* ProcessedDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnCharacterDealtDamages");

	Params::BP_InteractiveBattleMusicController_C_OnCharacterDealtDamages Parms{};

	Parms.CharacterStats = CharacterStats;
	Parms.Damages = Damages;

	UObject::ProcessEvent(Func, &Parms);

	if (ProcessedDamages != nullptr)
		*ProcessedDamages = Parms.ProcessedDamages;
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnCharacterKilled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::OnCharacterKilled(class UAC_jRPG_CharacterBattleStats_C* CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnCharacterKilled");

	Params::BP_InteractiveBattleMusicController_C_OnCharacterKilled Parms{};

	Parms.CharacterStats = CharacterStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnCharacterReceivedDamages
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  SourceCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  ReceivedDamages                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleDamages_C*              BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::OnCharacterReceivedDamages(class UAC_jRPG_CharacterBattleStats_C* TargetCharacter, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter, double ReceivedDamages, class UBP_BattleDamages_C* BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnCharacterReceivedDamages");

	Params::BP_InteractiveBattleMusicController_C_OnCharacterReceivedDamages Parms{};

	Parms.TargetCharacter = TargetCharacter;
	Parms.SourceCharacter = SourceCharacter;
	Parms.ReceivedDamages = ReceivedDamages;
	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnCharacterResurrected
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::OnCharacterResurrected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnCharacterResurrected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnCharacterTurnStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const class UBP_DependencyRefCounter_C*&TurnStartDependencies                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::OnCharacterTurnStart(class UAC_jRPG_CharacterBattleStats_C* CharacterStats, const class UBP_DependencyRefCounter_C*& TurnStartDependencies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnCharacterTurnStart");

	Params::BP_InteractiveBattleMusicController_C_OnCharacterTurnStart Parms{};

	Parms.CharacterStats = CharacterStats;
	Parms.TurnStartDependencies = TurnStartDependencies;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnSuccessfulDodge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::OnSuccessfulDodge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnSuccessfulDodge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.OnSuccessfulParry
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::OnSuccessfulParry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "OnSuccessfulParry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.ProcessAddBuffAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UAction_AddBuff_C*&         BuffAddAction                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_InteractiveBattleMusicController_C::ProcessAddBuffAction(const class UAction_AddBuff_C*& BuffAddAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "ProcessAddBuffAction");

	Params::BP_InteractiveBattleMusicController_C_ProcessAddBuffAction Parms{};

	Parms.BuffAddAction = BuffAddAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.UpdateHealthAudioTriggers
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::UpdateHealthAudioTriggers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "UpdateHealthAudioTriggers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractiveBattleMusicController.BP_InteractiveBattleMusicController_C.UpdateHealthRatio
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_InteractiveBattleMusicController_C::UpdateHealthRatio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractiveBattleMusicController_C", "UpdateHealthRatio");

	UObject::ProcessEvent(Func, nullptr);
}

}

