#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleMap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleMap.BP_BattleMap_C.CheckForErrors
// 0x0790 (0x0790 - 0x0000)
struct BP_BattleMap_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         local_alliesSpots;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                local_furthestForward;                             // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0068(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_AreWIP_ChecksEnabled_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0080(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_ConcatenateDisplayNames_Result;           // 0x00E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0010)()
	TArray<class UChildActorComponent*>           CallFunc_GetEnemiesSpots_Array;                    // 0x0160(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UChildActorComponent*>           CallFunc_GetAlliesSpots_Array;                     // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UChildActorComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0190(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x01A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01F8(0x0048)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_OutHit; // 0x0240(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_ReturnValue; // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_OutHit_1; // 0x0340(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_ReturnValue_1; // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_443[0x1];                                      // 0x0443(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x04C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin_1;                  // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent_1;               // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0558(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0570(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x05C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x05D0(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x05F0(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x0600(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_614[0xC];                                      // 0x0614(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0620(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0680(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x06B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x06C8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x3];                                      // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x3];                                      // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_701[0x7];                                      // 0x0701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFurthestBound_Point;                   // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugSphere_Radius_ImplicitCast;      // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_CheckForErrors) == 0x000010, "Wrong alignment on BP_BattleMap_C_CheckForErrors");
static_assert(sizeof(BP_BattleMap_C_CheckForErrors) == 0x000790, "Wrong size on BP_BattleMap_C_CheckForErrors");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_BattleMap_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_BattleMap_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, local_alliesSpots) == 0x000018, "Member 'BP_BattleMap_C_CheckForErrors::local_alliesSpots' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, local_furthestForward) == 0x000028, "Member 'BP_BattleMap_C_CheckForErrors::local_furthestForward' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Loop_Counter_Variable_2) == 0x00005C, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Array_Index_Variable_3) == 0x000064, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_object_Variable) == 0x000068, "Member 'BP_BattleMap_C_CheckForErrors::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_AreWIP_ChecksEnabled_ReturnValue) == 0x000078, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_AreWIP_ChecksEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000080, "Member 'BP_BattleMap_C_CheckForErrors::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetActorBounds_Origin) == 0x0000A0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetActorBounds_BoxExtent) == 0x0000B8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_VSize_ReturnValue) == 0x0000D8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_ConcatenateDisplayNames_Result) == 0x0000E8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_ConcatenateDisplayNames_Result' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData) == 0x0000F8, "Member 'BP_BattleMap_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000140, "Member 'BP_BattleMap_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000150, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetEnemiesSpots_Array) == 0x000160, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetEnemiesSpots_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetAlliesSpots_Array) == 0x000170, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetAlliesSpots_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Get_Item_1) == 0x000180, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000190, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0001A0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B0, "Member 'BP_BattleMap_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001F8, "Member 'BP_BattleMap_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_OutHit) == 0x000240, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_ReturnValue) == 0x000338, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_OutHit_1) == 0x000340, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_OutHit_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_ReturnValue_1) == 0x000438, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_EDITORCHECK_TraceFreeAimLineOfSight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Length_ReturnValue_1) == 0x00043C, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000440, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_bBlockingHit) == 0x000441, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_bInitialOverlap) == 0x000442, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_Time) == 0x000444, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_Distance) == 0x000448, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_Location) == 0x000450, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_ImpactPoint) == 0x000468, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_Normal) == 0x000480, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_ImpactNormal) == 0x000498, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_PhysMat) == 0x0004B0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_HitActor) == 0x0004B8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_HitComponent) == 0x0004C0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_HitBoneName) == 0x0004C8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_BoneName) == 0x0004D0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_HitItem) == 0x0004D8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_ElementIndex) == 0x0004DC, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_FaceIndex) == 0x0004E0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_TraceStart) == 0x0004E8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_BreakHitResult_TraceEnd) == 0x000500, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetDisplayName_ReturnValue) == 0x000518, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetActorBounds_Origin_1) == 0x000528, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetActorBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetActorBounds_BoxExtent_1) == 0x000540, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetActorBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000558, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Length_ReturnValue_2) == 0x000568, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData_3) == 0x000570, "Member 'BP_BattleMap_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Less_IntInt_ReturnValue_2) == 0x0005B8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, K2Node_MakeArray_Array_1) == 0x0005C0, "Member 'BP_BattleMap_C_CheckForErrors::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Format_ReturnValue_1) == 0x0005D0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_int_Loop_Counter_Variable_3) == 0x0005E0, "Member 'BP_BattleMap_C_CheckForErrors::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x0005E4, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Add_IntInt_ReturnValue_3) == 0x0005E8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, Temp_wildcard_Temp_buffer_array_Variable) == 0x0005F0, "Member 'BP_BattleMap_C_CheckForErrors::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, K2Node_MakeArray_Array_2) == 0x000600, "Member 'BP_BattleMap_C_CheckForErrors::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_1) == 0x000610, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000620, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_ComponentOverlapActors_OutActors) == 0x000680, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000690, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_VSize_ReturnValue_1) == 0x000698, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0006A0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Get_Item_3) == 0x0006A8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_MakeVector_ReturnValue) == 0x0006B0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0006C8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Contains_ReturnValue) == 0x0006F0, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_2) == 0x0006F4, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue) == 0x0006F8, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Array_Length_ReturnValue_3) == 0x0006FC, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Less_IntInt_ReturnValue_3) == 0x000700, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000708, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000720, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000738, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_GetFurthestBound_Point) == 0x000750, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_GetFurthestBound_Point' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000768, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrors, CallFunc_DrawDebugSphere_Radius_ImplicitCast) == 0x000780, "Member 'BP_BattleMap_C_CheckForErrors::CallFunc_DrawDebugSphere_Radius_ImplicitCast' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.CheckForErrorsActorArray
// 0x0230 (0x0230 - 0x0000)
struct BP_BattleMap_C_CheckForErrorsActorArray final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<TSoftObjectPtr<class AActor>>          Array;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ArrayName;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x00F0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0218(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_CheckForErrorsActorArray) == 0x000008, "Wrong alignment on BP_BattleMap_C_CheckForErrorsActorArray");
static_assert(sizeof(BP_BattleMap_C_CheckForErrorsActorArray) == 0x000230, "Wrong size on BP_BattleMap_C_CheckForErrorsActorArray");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, ErrorMessages) == 0x000000, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, Array) == 0x000010, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, ArrayName) == 0x000020, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::ArrayName' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, Temp_int_Array_Index_Variable) == 0x0000E4, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000118, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000120, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_DynamicCast_AsActor) == 0x000128, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless) == 0x000138, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Less_IntInt_ReturnValue) == 0x000141, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Add_IntInt_ReturnValue) == 0x000144, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000148, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000150, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_MakeArray_Array) == 0x0001E8, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Format_ReturnValue_1) == 0x000218, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Array_Add_ReturnValue) == 0x000228, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_CheckForErrorsActorArray, CallFunc_Array_Add_ReturnValue_1) == 0x00022C, "Member 'BP_BattleMap_C_CheckForErrorsActorArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.EDITORCHECK_TraceFreeAimLineOfSight
// 0x0328 (0x0328 - 0x0000)
struct BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight final
{
public:
	class UChildActorComponent*                   HeroSpot;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   EnemySpot;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OutHit;                                            // 0x0018(0x00F8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0110(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0118(0x0010)(ConstParm, ReferenceParm)
	class ABP_jRPG_EnemyBattleSpot_C*             K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Spot;   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_CharacterBattleSpot_C*         K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Spot; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x01A8(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_wildcard_Variable;                            // 0x01B8(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x01C8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x02C8(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight) == 0x000008, "Wrong alignment on BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight");
static_assert(sizeof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight) == 0x000328, "Wrong size on BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, HeroSpot) == 0x000000, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::HeroSpot' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, EnemySpot) == 0x000008, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::EnemySpot' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, DrawDebugType) == 0x000010, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, OutHit) == 0x000018, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::OutHit' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, ReturnValue) == 0x000110, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000118, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Spot) == 0x000128, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Spot' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Spot) == 0x000138, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Spot' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000148, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, K2Node_MakeArray_Array) == 0x000160, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000170, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000178, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000180, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, Temp_int_Loop_Counter_Variable) == 0x000198, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Add_IntInt_ReturnValue) == 0x00019C, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, Temp_wildcard_Temp_buffer_array_Variable) == 0x0001A8, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, Temp_wildcard_Variable) == 0x0001B8, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_CapsuleTraceSingle_OutHit) == 0x0001C8, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x0002C0, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Array_Get_Item) == 0x0002C8, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0002F0, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Array_Length_ReturnValue) == 0x0002F8, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, K2Node_DynamicCast_AsActor) == 0x000300, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, K2Node_DynamicCast_bSuccess_2) == 0x000308, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Less_IntInt_ReturnValue) == 0x000309, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Array_Add_ReturnValue) == 0x00030C, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_IsValid_ReturnValue) == 0x000310, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000318, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight, CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast) == 0x000320, "Member 'BP_BattleMap_C_EDITORCHECK_TraceFreeAimLineOfSight::CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.ExecuteUbergraph_BP_BattleMap
// 0x0138 (0x0138 - 0x0000)
struct BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0018(0x0010)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFurthestBound_Point;                   // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCylinder_Radius_ImplicitCast;    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap) == 0x000008, "Wrong alignment on BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap");
static_assert(sizeof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap) == 0x000138, "Wrong size on BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, EntryPoint) == 0x000000, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000018, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Not_PreBool_ReturnValue_1) == 0x000099, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_GetFurthestBound_Point) == 0x0000A0, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_GetFurthestBound_Point' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Add_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_Vector_GetAbs_ReturnValue) == 0x000110, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_VSizeXY_ReturnValue) == 0x000128, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap, CallFunc_DrawDebugCylinder_Radius_ImplicitCast) == 0x000130, "Member 'BP_BattleMap_C_ExecuteUbergraph_BP_BattleMap::CallFunc_DrawDebugCylinder_Radius_ImplicitCast' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.FindBattleActorByTag
// 0x0358 (0x0358 - 0x0000)
struct BP_BattleMap_C_FindBattleActorByTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  Temp_wildcard_Variable;                            // 0x0010(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue_1; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue_2; // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0138(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x01A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0218(0x0010)()
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0238(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0280(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x02B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02C0(0x0048)(HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Map_Find_Value;                           // 0x0308(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0338(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_FindBattleActorByTag) == 0x000008, "Wrong alignment on BP_BattleMap_C_FindBattleActorByTag");
static_assert(sizeof(BP_BattleMap_C_FindBattleActorByTag) == 0x000358, "Wrong size on BP_BattleMap_C_FindBattleActorByTag");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, Tag) == 0x000000, "Member 'BP_BattleMap_C_FindBattleActorByTag::Tag' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, Actor) == 0x000008, "Member 'BP_BattleMap_C_FindBattleActorByTag::Actor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, Temp_wildcard_Variable) == 0x000010, "Member 'BP_BattleMap_C_FindBattleActorByTag::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000038, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_DynamicCast_AsActor) == 0x000060, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000B9, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_GetDebugStringFromGameplayTag_ReturnValue_1) == 0x0000C0, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_GetDebugStringFromGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000D0, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_GetDebugStringFromGameplayTag_ReturnValue_2) == 0x000128, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_GetDebugStringFromGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000138, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_GetDisplayName_ReturnValue) == 0x000148, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0001A0, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B0, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_GetDisplayName_ReturnValue_1) == 0x0001F8, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeArray_Array) == 0x000208, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000218, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Format_ReturnValue) == 0x000228, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeStruct_FormatArgumentData_4) == 0x000238, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeArray_Array_1) == 0x000280, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Format_ReturnValue_1) == 0x000290, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_GetDisplayName_ReturnValue_2) == 0x0002A0, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Conv_StringToText_ReturnValue_5) == 0x0002B0, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002C0, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Map_Find_Value) == 0x000308, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Map_Find_ReturnValue) == 0x000330, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, K2Node_MakeArray_Array_2) == 0x000338, "Member 'BP_BattleMap_C_FindBattleActorByTag::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_FindBattleActorByTag, CallFunc_Format_ReturnValue_2) == 0x000348, "Member 'BP_BattleMap_C_FindBattleActorByTag::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.GetAlliesSpots
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleMap_C_GetAlliesSpots final
{
public:
	TArray<class UChildActorComponent*>           Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UChildActorComponent*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BattleMap_C_GetAlliesSpots) == 0x000008, "Wrong alignment on BP_BattleMap_C_GetAlliesSpots");
static_assert(sizeof(BP_BattleMap_C_GetAlliesSpots) == 0x000020, "Wrong size on BP_BattleMap_C_GetAlliesSpots");
static_assert(offsetof(BP_BattleMap_C_GetAlliesSpots, Array) == 0x000000, "Member 'BP_BattleMap_C_GetAlliesSpots::Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAlliesSpots, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_BattleMap_C_GetAlliesSpots::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.GetAllSpots
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleMap_C_GetAllSpots final
{
public:
	TArray<class UChildActorComponent*>           Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UChildActorComponent*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BattleMap_C_GetAllSpots) == 0x000008, "Wrong alignment on BP_BattleMap_C_GetAllSpots");
static_assert(sizeof(BP_BattleMap_C_GetAllSpots) == 0x000020, "Wrong size on BP_BattleMap_C_GetAllSpots");
static_assert(offsetof(BP_BattleMap_C_GetAllSpots, Array) == 0x000000, "Member 'BP_BattleMap_C_GetAllSpots::Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpots, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_BattleMap_C_GetAllSpots::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.GetAllSpotsActors
// 0x0078 (0x0078 - 0x0000)
struct BP_BattleMap_C_GetAllSpotsActors final
{
public:
	TArray<class AActor*>                         Array;                                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UChildActorComponent*>           local_AllSpots;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class AActor*>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0048(0x0010)(ConstParm, ReferenceParm)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           CallFunc_GetAllSpots_Array;                        // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BattleMap_C_GetAllSpotsActors) == 0x000008, "Wrong alignment on BP_BattleMap_C_GetAllSpotsActors");
static_assert(sizeof(BP_BattleMap_C_GetAllSpotsActors) == 0x000078, "Wrong size on BP_BattleMap_C_GetAllSpotsActors");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, Array) == 0x000000, "Member 'BP_BattleMap_C_GetAllSpotsActors::Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, local_AllSpots) == 0x000010, "Member 'BP_BattleMap_C_GetAllSpotsActors::local_AllSpots' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000020, "Member 'BP_BattleMap_C_GetAllSpotsActors::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_BattleMap_C_GetAllSpotsActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_BattleMap_C_GetAllSpotsActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_BattleMap_C_GetAllSpotsActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BattleMap_C_GetAllSpotsActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_BattleMap_C_GetAllSpotsActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, Temp_wildcard_Temp_buffer_array_Variable) == 0x000048, "Member 'BP_BattleMap_C_GetAllSpotsActors::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_BattleMap_C_GetAllSpotsActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BP_BattleMap_C_GetAllSpotsActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetAllSpotsActors, CallFunc_GetAllSpots_Array) == 0x000068, "Member 'BP_BattleMap_C_GetAllSpotsActors::CallFunc_GetAllSpots_Array' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.GetBattleSpotTransform
// 0x0190 (0x0190 - 0x0000)
struct BP_BattleMap_C_GetBattleSpotTransform final
{
public:
	class USceneComponent*                        self2;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_GetBattleSpotTransform) == 0x000010, "Wrong alignment on BP_BattleMap_C_GetBattleSpotTransform");
static_assert(sizeof(BP_BattleMap_C_GetBattleSpotTransform) == 0x000190, "Wrong size on BP_BattleMap_C_GetBattleSpotTransform");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, self2) == 0x000000, "Member 'BP_BattleMap_C_GetBattleSpotTransform::self2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, ReturnValue) == 0x000010, "Member 'BP_BattleMap_C_GetBattleSpotTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'BP_BattleMap_C_GetBattleSpotTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'BP_BattleMap_C_GetBattleSpotTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'BP_BattleMap_C_GetBattleSpotTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'BP_BattleMap_C_GetBattleSpotTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BP_BattleMap_C_GetBattleSpotTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetBattleSpotTransform, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_BattleMap_C_GetBattleSpotTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.GetEnemiesSpots
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleMap_C_GetEnemiesSpots final
{
public:
	TArray<class UChildActorComponent*>           Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UChildActorComponent*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BattleMap_C_GetEnemiesSpots) == 0x000008, "Wrong alignment on BP_BattleMap_C_GetEnemiesSpots");
static_assert(sizeof(BP_BattleMap_C_GetEnemiesSpots) == 0x000020, "Wrong size on BP_BattleMap_C_GetEnemiesSpots");
static_assert(offsetof(BP_BattleMap_C_GetEnemiesSpots, Array) == 0x000000, "Member 'BP_BattleMap_C_GetEnemiesSpots::Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetEnemiesSpots, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_BattleMap_C_GetEnemiesSpots::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.GetFurthestBound
// 0x0160 (0x0160 - 0x0000)
struct BP_BattleMap_C_GetFurthestBound final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_furthestDistance;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                local_furthestPoint;                               // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetAllSpotsActors_Array;                  // 0x0088(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorArrayBounds_Center;               // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorArrayBounds_BoxExtent;            // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_GetFurthestBound) == 0x000008, "Wrong alignment on BP_BattleMap_C_GetFurthestBound");
static_assert(sizeof(BP_BattleMap_C_GetFurthestBound) == 0x000160, "Wrong size on BP_BattleMap_C_GetFurthestBound");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, Point) == 0x000000, "Member 'BP_BattleMap_C_GetFurthestBound::Point' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, local_furthestDistance) == 0x000018, "Member 'BP_BattleMap_C_GetFurthestBound::local_furthestDistance' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, local_furthestPoint) == 0x000020, "Member 'BP_BattleMap_C_GetFurthestBound::local_furthestPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_BattleMap_C_GetFurthestBound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_BattleMap_C_GetFurthestBound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BattleMap_C_GetFurthestBound::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_GetAllSpotsActors_Array) == 0x000088, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_GetAllSpotsActors_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_GetActorArrayBounds_Center) == 0x0000B0, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_GetActorArrayBounds_Center' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_GetActorArrayBounds_BoxExtent) == 0x0000C8, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_GetActorArrayBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000E8, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Vector_Distance_ReturnValue) == 0x000120, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_BreakVector_X_1) == 0x000128, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_BreakVector_Y_1) == 0x000130, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_BreakVector_Z_1) == 0x000138, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_GetFurthestBound, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'BP_BattleMap_C_GetFurthestBound::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.ProcessActorsToHide
// 0x0070 (0x0070 - 0x0000)
struct BP_BattleMap_C_ProcessActorsToHide final
{
public:
	bool                                          ShouldHide;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldProcessActorHiddenState_ReturnValue; // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ConditionCheckerComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_ProcessActorsToHide) == 0x000008, "Wrong alignment on BP_BattleMap_C_ProcessActorsToHide");
static_assert(sizeof(BP_BattleMap_C_ProcessActorsToHide) == 0x000070, "Wrong size on BP_BattleMap_C_ProcessActorsToHide");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, ShouldHide) == 0x000000, "Member 'BP_BattleMap_C_ProcessActorsToHide::ShouldHide' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BattleMap_C_ProcessActorsToHide::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_BattleMap_C_ProcessActorsToHide::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, K2Node_DynamicCast_AsActor) == 0x000050, "Member 'BP_BattleMap_C_ProcessActorsToHide::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BattleMap_C_ProcessActorsToHide::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_ShouldProcessActorHiddenState_ReturnValue) == 0x000059, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_ShouldProcessActorHiddenState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToHide, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_BattleMap_C_ProcessActorsToHide::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.ProcessActorsToUnhide
// 0x0060 (0x0060 - 0x0000)
struct BP_BattleMap_C_ProcessActorsToUnhide final
{
public:
	bool                                          ShouldUnhide;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0018(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldProcessActorHiddenState_ReturnValue; // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_ProcessActorsToUnhide) == 0x000008, "Wrong alignment on BP_BattleMap_C_ProcessActorsToUnhide");
static_assert(sizeof(BP_BattleMap_C_ProcessActorsToUnhide) == 0x000060, "Wrong size on BP_BattleMap_C_ProcessActorsToUnhide");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, ShouldUnhide) == 0x000000, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::ShouldUnhide' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, K2Node_DynamicCast_AsActor) == 0x000050, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ProcessActorsToUnhide, CallFunc_ShouldProcessActorHiddenState_ReturnValue) == 0x00005A, "Member 'BP_BattleMap_C_ProcessActorsToUnhide::CallFunc_ShouldProcessActorHiddenState_ReturnValue' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.SetBattleMapActive
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleMap_C_SetBattleMapActive final
{
public:
	bool                                          IsActive;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_SetBattleMapActive) == 0x000001, "Wrong alignment on BP_BattleMap_C_SetBattleMapActive");
static_assert(sizeof(BP_BattleMap_C_SetBattleMapActive) == 0x000001, "Wrong size on BP_BattleMap_C_SetBattleMapActive");
static_assert(offsetof(BP_BattleMap_C_SetBattleMapActive, IsActive) == 0x000000, "Member 'BP_BattleMap_C_SetBattleMapActive::IsActive' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.SetBattleMapStreamingSourceActive
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleMap_C_SetBattleMapStreamingSourceActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_SetBattleMapStreamingSourceActive) == 0x000008, "Wrong alignment on BP_BattleMap_C_SetBattleMapStreamingSourceActive");
static_assert(sizeof(BP_BattleMap_C_SetBattleMapStreamingSourceActive) == 0x000030, "Wrong size on BP_BattleMap_C_SetBattleMapStreamingSourceActive");
static_assert(offsetof(BP_BattleMap_C_SetBattleMapStreamingSourceActive, Active) == 0x000000, "Member 'BP_BattleMap_C_SetBattleMapStreamingSourceActive::Active' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SetBattleMapStreamingSourceActive, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_BattleMap_C_SetBattleMapStreamingSourceActive::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SetBattleMapStreamingSourceActive, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000010, "Member 'BP_BattleMap_C_SetBattleMapStreamingSourceActive::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SetBattleMapStreamingSourceActive, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BattleMap_C_SetBattleMapStreamingSourceActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SetBattleMapStreamingSourceActive, K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1) == 0x000020, "Member 'BP_BattleMap_C_SetBattleMapStreamingSourceActive::K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SetBattleMapStreamingSourceActive, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_BattleMap_C_SetBattleMapStreamingSourceActive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.ShouldProcessActorHiddenState
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleMap_C_ShouldProcessActorHiddenState final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_ShouldProcessActorHiddenState) == 0x000008, "Wrong alignment on BP_BattleMap_C_ShouldProcessActorHiddenState");
static_assert(sizeof(BP_BattleMap_C_ShouldProcessActorHiddenState) == 0x000020, "Wrong size on BP_BattleMap_C_ShouldProcessActorHiddenState");
static_assert(offsetof(BP_BattleMap_C_ShouldProcessActorHiddenState, Target) == 0x000000, "Member 'BP_BattleMap_C_ShouldProcessActorHiddenState::Target' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ShouldProcessActorHiddenState, ReturnValue) == 0x000008, "Member 'BP_BattleMap_C_ShouldProcessActorHiddenState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ShouldProcessActorHiddenState, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless) == 0x000010, "Member 'BP_BattleMap_C_ShouldProcessActorHiddenState::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ShouldProcessActorHiddenState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_BattleMap_C_ShouldProcessActorHiddenState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_ShouldProcessActorHiddenState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_BattleMap_C_ShouldProcessActorHiddenState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.SpawnPreviewActorAtSpot
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BattleMap_C_SpawnPreviewActorAtSpot final
{
public:
	TSoftClassPtr<class UClass>                   ActorClass;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class USceneComponent*                        BattleSpotComponent;                               // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetBattleSpotTransform_ReturnValue;       // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsActor;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_SpawnPreviewActorAtSpot) == 0x000010, "Wrong alignment on BP_BattleMap_C_SpawnPreviewActorAtSpot");
static_assert(sizeof(BP_BattleMap_C_SpawnPreviewActorAtSpot) == 0x0000C0, "Wrong size on BP_BattleMap_C_SpawnPreviewActorAtSpot");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, ActorClass) == 0x000000, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::ActorClass' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, BattleSpotComponent) == 0x000028, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::BattleSpotComponent' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, CallFunc_GetBattleSpotTransform_ReturnValue) == 0x000030, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::CallFunc_GetBattleSpotTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000090, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, K2Node_ClassDynamicCast_AsActor) == 0x000098, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::K2Node_ClassDynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, K2Node_ClassDynamicCast_bSuccess) == 0x0000A0, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_SpawnPreviewActorAtSpot, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'BP_BattleMap_C_SpawnPreviewActorAtSpot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_BattleMap.BP_BattleMap_C.UpdateCamerasLookAtPoints
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BattleMap_C_UpdateCamerasLookAtPoints final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_DynamicCameraPath_C*           K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_DynamicCameraPath_C*           K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_DynamicCameraPath_C*           K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_2; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_DynamicCameraPath_C*           K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_3; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleMap_C_UpdateCamerasLookAtPoints) == 0x000008, "Wrong alignment on BP_BattleMap_C_UpdateCamerasLookAtPoints");
static_assert(sizeof(BP_BattleMap_C_UpdateCamerasLookAtPoints) == 0x0000A0, "Wrong size on BP_BattleMap_C_UpdateCamerasLookAtPoints");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000018, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000030, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000048, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path) == 0x000060, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_1) == 0x000070, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_2) == 0x000080, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_3) == 0x000090, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_AsBP_J_RPG_Dynamic_Camera_Path_3' has a wrong offset!");
static_assert(offsetof(BP_BattleMap_C_UpdateCamerasLookAtPoints, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'BP_BattleMap_C_UpdateCamerasLookAtPoints::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

}

