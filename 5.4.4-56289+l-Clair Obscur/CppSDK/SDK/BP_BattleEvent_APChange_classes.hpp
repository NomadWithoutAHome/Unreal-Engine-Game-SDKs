#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleEvent_APChange

#include "Basic.hpp"

#include "EAPChangeReason_structs.hpp"
#include "BP_BattleEvent_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleEvent_APChange.BP_BattleEvent_APChange_C
// 0x0018 (0x0040 - 0x0028)
class UBP_BattleEvent_APChange_C final : public UBP_BattleEvent_Base_C
{
public:
	int32                                         NewValue;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         PreviousValue;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EAPChangeReason                               ChangeReason;                                      // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BroadcastBattleEvent(class UAC_jRPG_BattleManager_C*& BattleManager);
	class UAC_jRPG_CharacterBattleStats_C* GetAffectedCharacterStats();
	EAPChangeReason GetChangeReason();
	int32 GetDelta();
	int32 GetNewValue();
	int32 GetPreviousValue();
	bool IsGain();
	bool IsLoss();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleEvent_APChange_C">();
	}
	static class UBP_BattleEvent_APChange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BattleEvent_APChange_C>();
	}
};
static_assert(alignof(UBP_BattleEvent_APChange_C) == 0x000008, "Wrong alignment on UBP_BattleEvent_APChange_C");
static_assert(sizeof(UBP_BattleEvent_APChange_C) == 0x000040, "Wrong size on UBP_BattleEvent_APChange_C");
static_assert(offsetof(UBP_BattleEvent_APChange_C, NewValue) == 0x000028, "Member 'UBP_BattleEvent_APChange_C::NewValue' has a wrong offset!");
static_assert(offsetof(UBP_BattleEvent_APChange_C, PreviousValue) == 0x00002C, "Member 'UBP_BattleEvent_APChange_C::PreviousValue' has a wrong offset!");
static_assert(offsetof(UBP_BattleEvent_APChange_C, CharacterStats) == 0x000030, "Member 'UBP_BattleEvent_APChange_C::CharacterStats' has a wrong offset!");
static_assert(offsetof(UBP_BattleEvent_APChange_C, ChangeReason) == 0x000038, "Member 'UBP_BattleEvent_APChange_C::ChangeReason' has a wrong offset!");

}

