#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharacterSelectorButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "CommonUI_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CharacterSelectorButton.WBP_CharacterSelectorButton_C
// 0x00B0 (0x1650 - 0x15A0)
class UWBP_CharacterSelectorButton_C final : public UCommonButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_PressedActive;                                // 0x15A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_HoveredActive;                                // 0x15B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Hovered;                                      // 0x15B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Pressed;                                      // 0x15C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Active;                                       // 0x15C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonLazyImage*                       ActiveStain;                                       // 0x15D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       Background;                                        // 0x15D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ButtonContent;                                     // 0x15E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           ContentNegativeRetainer;                           // 0x15E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstance*                      BackgroundMaterialInstance;                        // 0x15F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              SelectedStainTexture;                              // 0x15F8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FMargin                                ContentPadding;                                    // 0x1620(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          IsActive;                                          // 0x1630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1631[0x7];                                     // 0x1631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SD_OnClicked;                                      // 0x1638(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void BP_OnFocusLost();
	void BP_OnFocusReceived();
	void BP_OnHovered();
	void BP_OnPressed();
	void BP_OnReleased();
	void BP_OnUnhovered();
	void ExecuteUbergraph_WBP_CharacterSelectorButton(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetIsActive(bool IsActive_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CharacterSelectorButton_C">();
	}
	static class UWBP_CharacterSelectorButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CharacterSelectorButton_C>();
	}
};
static_assert(alignof(UWBP_CharacterSelectorButton_C) == 0x000010, "Wrong alignment on UWBP_CharacterSelectorButton_C");
static_assert(sizeof(UWBP_CharacterSelectorButton_C) == 0x001650, "Wrong size on UWBP_CharacterSelectorButton_C");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, UberGraphFrame) == 0x0015A0, "Member 'UWBP_CharacterSelectorButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, Anim_PressedActive) == 0x0015A8, "Member 'UWBP_CharacterSelectorButton_C::Anim_PressedActive' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, Anim_HoveredActive) == 0x0015B0, "Member 'UWBP_CharacterSelectorButton_C::Anim_HoveredActive' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, Anim_Hovered) == 0x0015B8, "Member 'UWBP_CharacterSelectorButton_C::Anim_Hovered' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, Anim_Pressed) == 0x0015C0, "Member 'UWBP_CharacterSelectorButton_C::Anim_Pressed' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, Anim_Active) == 0x0015C8, "Member 'UWBP_CharacterSelectorButton_C::Anim_Active' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, ActiveStain) == 0x0015D0, "Member 'UWBP_CharacterSelectorButton_C::ActiveStain' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, Background) == 0x0015D8, "Member 'UWBP_CharacterSelectorButton_C::Background' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, ButtonContent) == 0x0015E0, "Member 'UWBP_CharacterSelectorButton_C::ButtonContent' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, ContentNegativeRetainer) == 0x0015E8, "Member 'UWBP_CharacterSelectorButton_C::ContentNegativeRetainer' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, BackgroundMaterialInstance) == 0x0015F0, "Member 'UWBP_CharacterSelectorButton_C::BackgroundMaterialInstance' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, SelectedStainTexture) == 0x0015F8, "Member 'UWBP_CharacterSelectorButton_C::SelectedStainTexture' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, ContentPadding) == 0x001620, "Member 'UWBP_CharacterSelectorButton_C::ContentPadding' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, IsActive) == 0x001630, "Member 'UWBP_CharacterSelectorButton_C::IsActive' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterSelectorButton_C, SD_OnClicked) == 0x001638, "Member 'UWBP_CharacterSelectorButton_C::SD_OnClicked' has a wrong offset!");

}

