#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_JRPG_APChange

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_JRPG_APChange.WBP_JRPG_APChange_C
// 0x0048 (0x0328 - 0x02E0)
class UWBP_JRPG_APChange_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_APLost;                                       // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_APgain;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       APText;                                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_APShard_Lost_C*                    WBP_APShard_Lost;                                  // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_APShard_Single_C*                  WBP_APShard_Single;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_APShard_Single_C*                  WBP_APShard_Single_BG;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         APChange;                                          // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor_Reference;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_JRPG_APChange(int32 EntryPoint);
	bool IsAPGain();
	void OnTimerEnd();
	void SetAPText();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_JRPG_APChange_C">();
	}
	static class UWBP_JRPG_APChange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_JRPG_APChange_C>();
	}
};
static_assert(alignof(UWBP_JRPG_APChange_C) == 0x000008, "Wrong alignment on UWBP_JRPG_APChange_C");
static_assert(sizeof(UWBP_JRPG_APChange_C) == 0x000328, "Wrong size on UWBP_JRPG_APChange_C");
static_assert(offsetof(UWBP_JRPG_APChange_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_JRPG_APChange_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, Anim_APLost) == 0x0002E8, "Member 'UWBP_JRPG_APChange_C::Anim_APLost' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, Anim_APgain) == 0x0002F0, "Member 'UWBP_JRPG_APChange_C::Anim_APgain' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, APText) == 0x0002F8, "Member 'UWBP_JRPG_APChange_C::APText' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, WBP_APShard_Lost) == 0x000300, "Member 'UWBP_JRPG_APChange_C::WBP_APShard_Lost' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, WBP_APShard_Single) == 0x000308, "Member 'UWBP_JRPG_APChange_C::WBP_APShard_Single' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, WBP_APShard_Single_BG) == 0x000310, "Member 'UWBP_JRPG_APChange_C::WBP_APShard_Single_BG' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, APChange) == 0x000318, "Member 'UWBP_JRPG_APChange_C::APChange' has a wrong offset!");
static_assert(offsetof(UWBP_JRPG_APChange_C, Actor_Reference) == 0x000320, "Member 'UWBP_JRPG_APChange_C::Actor_Reference' has a wrong offset!");

}

