#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_MapSpawnPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_jRPG_MapSpawnPoint.BP_jRPG_MapSpawnPoint_C.CheckForErrors
// 0x01B0 (0x01B0 - 0x0000)
struct BP_jRPG_MapSpawnPoint_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0038(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0048(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<class ABP_jRPG_MapSpawnPoint_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ReferenceParm)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00F8(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0158(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0170(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LighingScenarioMain_DONOTTOUCH_C*   CallFunc_GetActorOfClass_ReturnValue;              // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapSpawnPoint_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_jRPG_MapSpawnPoint_C_CheckForErrors");
static_assert(sizeof(BP_jRPG_MapSpawnPoint_C_CheckForErrors) == 0x0001B0, "Wrong size on BP_jRPG_MapSpawnPoint_C_CheckForErrors");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, K2Node_MakeArray_Array_1) == 0x000028, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000038, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Format_ReturnValue_1) == 0x000048, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_MatchesTag_ReturnValue) == 0x00005C, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000E4, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_MatchesTag_ReturnValue_1) == 0x0000E5, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000E8, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000F8, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, K2Node_MakeArray_Array_2) == 0x000158, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000168, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Format_ReturnValue_2) == 0x000170, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue_1) == 0x000180, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_1) == 0x000184, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_2) == 0x000188, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00018C, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, Temp_int_Loop_Counter_Variable) == 0x000190, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue_2) == 0x000194, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Less_IntInt_ReturnValue) == 0x000195, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_Add_IntInt_ReturnValue) == 0x000198, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_GetActorOfClass_ReturnValue) == 0x0001A0, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_CheckForErrors, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'BP_jRPG_MapSpawnPoint_C_CheckForErrors::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapSpawnPoint.BP_jRPG_MapSpawnPoint_C.ExecuteUbergraph_BP_jRPG_MapSpawnPoint
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SpawnPointManager_C*                CallFunc_GetSpawnPointManager_SpawnPointManager;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LightingScenarioReference_C*        K2Node_DynamicCast_AsBP_Lighting_Scenario_Reference; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint) == 0x000008, "Wrong alignment on BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint");
static_assert(sizeof(BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint) == 0x000028, "Wrong size on BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint, EntryPoint) == 0x000000, "Member 'BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint, CallFunc_GetSpawnPointManager_SpawnPointManager) == 0x000010, "Member 'BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint::CallFunc_GetSpawnPointManager_SpawnPointManager' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint, K2Node_DynamicCast_AsBP_Lighting_Scenario_Reference) == 0x000018, "Member 'BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint::K2Node_DynamicCast_AsBP_Lighting_Scenario_Reference' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_jRPG_MapSpawnPoint_C_ExecuteUbergraph_BP_jRPG_MapSpawnPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_MapSpawnPoint.BP_jRPG_MapSpawnPoint_C.GetDebugString
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_MapSpawnPoint_C_GetDebugString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapSpawnPoint_C_GetDebugString) == 0x000008, "Wrong alignment on BP_jRPG_MapSpawnPoint_C_GetDebugString");
static_assert(sizeof(BP_jRPG_MapSpawnPoint_C_GetDebugString) == 0x000038, "Wrong size on BP_jRPG_MapSpawnPoint_C_GetDebugString");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_GetDebugString, ReturnValue) == 0x000000, "Member 'BP_jRPG_MapSpawnPoint_C_GetDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_GetDebugString, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_jRPG_MapSpawnPoint_C_GetDebugString::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_GetDebugString, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000020, "Member 'BP_jRPG_MapSpawnPoint_C_GetDebugString::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_GetDebugString, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000030, "Member 'BP_jRPG_MapSpawnPoint_C_GetDebugString::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapSpawnPoint.BP_jRPG_MapSpawnPoint_C.GetSpawnTransfrom
// 0x00C0 (0x00C0 - 0x0000)
struct BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom) == 0x000010, "Wrong alignment on BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom");
static_assert(sizeof(BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom) == 0x0000C0, "Wrong size on BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom, SpawnTransform) == 0x000000, "Member 'BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000060, "Member 'BP_jRPG_MapSpawnPoint_C_GetSpawnTransfrom::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapSpawnPoint.BP_jRPG_MapSpawnPoint_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_MapSpawnPoint_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapSpawnPoint_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_jRPG_MapSpawnPoint_C_UserConstructionScript");
static_assert(sizeof(BP_jRPG_MapSpawnPoint_C_UserConstructionScript) == 0x000001, "Wrong size on BP_jRPG_MapSpawnPoint_C_UserConstructionScript");
static_assert(offsetof(BP_jRPG_MapSpawnPoint_C_UserConstructionScript, CallFunc_IsPackagedBuild_ReturnValue) == 0x000000, "Member 'BP_jRPG_MapSpawnPoint_C_UserConstructionScript::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");

}

