#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterData

#include "Basic.hpp"

#include "FPassiveEffect_structs.hpp"
#include "S_Stats_AttributesScaling_structs.hpp"
#include "S_jRPG_OverdriveSource_structs.hpp"
#include "E_jRPG_ItemSubtype_structs.hpp"
#include "EAttributeScalingGrade_structs.hpp"
#include "Engine_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "FPassiveEffectProgression_structs.hpp"
#include "E_CustomizationItemType_structs.hpp"
#include "E_jRPG_ItemType_structs.hpp"
#include "FEquipmentSlot_structs.hpp"
#include "EAttackType_structs.hpp"
#include "S_WeaponDefinition_structs.hpp"
#include "ESkillElementOverride_structs.hpp"
#include "S_WeaponInstanceData_structs.hpp"
#include "S_CharacterCustomizationItemData_structs.hpp"
#include "ELearnSkillBlockedReason_structs.hpp"
#include "S_jRPG_CharacterSaveState_structs.hpp"
#include "FCharacterAttributeScalingList_structs.hpp"
#include "ESkillNodeState_structs.hpp"
#include "FSkillUnlockInfos_structs.hpp"
#include "FSkillUnlockData_structs.hpp"
#include "FCharacterStats_structs.hpp"
#include "FCharacterBattleAudioProfile_structs.hpp"
#include "S_PassiveEffectDisplayData_structs.hpp"
#include "E_Characters_structs.hpp"
#include "S_Stats_LevelScaling_structs.hpp"
#include "S_jRPG_CharacterDefinition_structs.hpp"


namespace SDK::Params
{

// Function BP_CharacterData.BP_CharacterData_C.AddExperience
// 0x0320 (0x0320 - 0x0000)
struct BP_CharacterData_C_AddExperience final
{
public:
	int32                                         XP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_newLevel;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_hasLeveledUp;                                // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_addedXPInCurrentLevel;                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_remainingXPToAdd;                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaximumLevel_Level;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0128(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0178(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_5;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_6;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x01D0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0218(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0270(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0280(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0290(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02E8(0x0010)()
	int32                                         CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded_1; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_AddExperience) == 0x000008, "Wrong alignment on BP_CharacterData_C_AddExperience");
static_assert(sizeof(BP_CharacterData_C_AddExperience) == 0x000320, "Wrong size on BP_CharacterData_C_AddExperience");
static_assert(offsetof(BP_CharacterData_C_AddExperience, XP) == 0x000000, "Member 'BP_CharacterData_C_AddExperience::XP' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, local_newLevel) == 0x000004, "Member 'BP_CharacterData_C_AddExperience::local_newLevel' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, local_hasLeveledUp) == 0x000008, "Member 'BP_CharacterData_C_AddExperience::local_hasLeveledUp' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, local_addedXPInCurrentLevel) == 0x00000C, "Member 'BP_CharacterData_C_AddExperience::local_addedXPInCurrentLevel' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, local_remainingXPToAdd) == 0x000010, "Member 'BP_CharacterData_C_AddExperience::local_remainingXPToAdd' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000020, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, Temp_int_Variable) == 0x0000BC, "Member 'BP_CharacterData_C_AddExperience::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_GetMaximumLevel_Level) == 0x0000C0, "Member 'BP_CharacterData_C_AddExperience::CallFunc_GetMaximumLevel_Level' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_CharacterData_C_AddExperience::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0000C8, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D0, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000118, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded) == 0x000120, "Member 'BP_CharacterData_C_AddExperience::CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData_3) == 0x000128, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x000170, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData_4) == 0x000178, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_IntToInt64_ReturnValue_5) == 0x0001C0, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_IntToInt64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_IntToInt64_ReturnValue_6) == 0x0001C8, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_IntToInt64_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData_5) == 0x0001D0, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData_6) == 0x000218, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeArray_Array) == 0x000260, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Conv_NameToText_ReturnValue) == 0x000270, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Format_ReturnValue) == 0x000280, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeStruct_FormatArgumentData_7) == 0x000290, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, K2Node_MakeArray_Array_1) == 0x0002D8, "Member 'BP_CharacterData_C_AddExperience::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Format_ReturnValue_1) == 0x0002E8, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded_1) == 0x0002F8, "Member 'BP_CharacterData_C_AddExperience::CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002FC, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000300, "Member 'BP_CharacterData_C_AddExperience::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Add_IntInt_ReturnValue) == 0x000304, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000308, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Add_IntInt_ReturnValue_1) == 0x00030C, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Add_IntInt_ReturnValue_2) == 0x000310, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_Min_ReturnValue) == 0x000314, "Member 'BP_CharacterData_C_AddExperience::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddExperience, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000318, "Member 'BP_CharacterData_C_AddExperience::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.AddLuminaPointFromConsumable
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_AddLuminaPointFromConsumable final
{
public:
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_AddLuminaPointFromConsumable) == 0x000008, "Wrong alignment on BP_CharacterData_C_AddLuminaPointFromConsumable");
static_assert(sizeof(BP_CharacterData_C_AddLuminaPointFromConsumable) == 0x000010, "Wrong size on BP_CharacterData_C_AddLuminaPointFromConsumable");
static_assert(offsetof(BP_CharacterData_C_AddLuminaPointFromConsumable, CallFunc_GetAchievementManager_ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_AddLuminaPointFromConsumable::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddLuminaPointFromConsumable, Temp_int_Variable) == 0x000008, "Member 'BP_CharacterData_C_AddLuminaPointFromConsumable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AddLuminaPointFromConsumable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CharacterData_C_AddLuminaPointFromConsumable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ApplyCharacterCustomizationItem
// 0x0240 (0x0240 - 0x0000)
struct BP_CharacterData_C_ApplyCharacterCustomizationItem final
{
public:
	class FName                                   ItemName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00C8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F8(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_CharacterCustomization_C* K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Customization; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ApplyCharacterCustomizationItem) == 0x000008, "Wrong alignment on BP_CharacterData_C_ApplyCharacterCustomizationItem");
static_assert(sizeof(BP_CharacterData_C_ApplyCharacterCustomizationItem) == 0x000240, "Wrong size on BP_CharacterData_C_ApplyCharacterCustomizationItem");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, ItemName) == 0x000000, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::ItemName' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000018, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, K2Node_MakeArray_Array_1) == 0x0000C8, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, CallFunc_Format_ReturnValue_1) == 0x0000E8, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F8, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000228, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Customization) == 0x000230, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Customization' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, K2Node_DynamicCast_bSuccess) == 0x000238, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ApplyCharacterCustomizationItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000239, "Member 'BP_CharacterData_C_ApplyCharacterCustomizationItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.AssignPointToAttribute
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CharacterData_C_AssignPointToAttribute final
{
public:
	ECharacterAttribute                           Attribute;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAttributePointsToAssign_ReturnValue;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	int32                                         CallFunc_Map_Find_Value;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_AssignPointToAttribute) == 0x000008, "Wrong alignment on BP_CharacterData_C_AssignPointToAttribute");
static_assert(sizeof(BP_CharacterData_C_AssignPointToAttribute) == 0x0000A8, "Wrong size on BP_CharacterData_C_AssignPointToAttribute");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, Attribute) == 0x000000, "Member 'BP_CharacterData_C_AssignPointToAttribute::Attribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_GetAttributePointsToAssign_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_GetAttributePointsToAssign_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_CharacterData_C_AssignPointToAttribute::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_CharacterData_C_AssignPointToAttribute::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_Map_Find_Value) == 0x000098, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_Map_Find_ReturnValue) == 0x00009C, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_AssignPointToAttribute, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_CharacterData_C_AssignPointToAttribute::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.BPI_GetDependencies
// 0x0148 (0x0148 - 0x0000)
struct BP_CharacterData_C_BPI_GetDependencies final
{
public:
	TArray<TSoftClassPtr<class UClass>>           Classes;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftObjectPtr<class UObject>>         Assets;                                            // 0x0010(0x0010)(Parm, OutParm)
	TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>> ExternalDependencies;           // 0x0020(0x0010)(Parm, OutParm)
	TArray<TSoftClassPtr<class UClass>>           local_classes;                                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>> Temp_wildcard_Temp_buffer_array_Variable; // 0x0048(0x0010)(ConstParm, ReferenceParm)
	TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0058(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFPassiveEffect>                CallFunc_GetEquippedPassiveEffectsData_PassiveEffectDefinitions; // 0x0080(0x0010)(ReferenceParm)
	struct FFPassiveEffect                        CallFunc_Array_Get_Item;                           // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetAllAvailableEquippedSkills_ReturnValue; // 0x00D8(0x0010)(ReferenceParm)
	class UBP_DataAsset_Skill_C*                  CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LoadingDependenciesSource_C> CallFunc_Array_Add_NewItem_CastInput;   // 0x00F0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetBattleSoftClass_CharacterActorSoftClass; // 0x0118(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_BPI_GetDependencies) == 0x000008, "Wrong alignment on BP_CharacterData_C_BPI_GetDependencies");
static_assert(sizeof(BP_CharacterData_C_BPI_GetDependencies) == 0x000148, "Wrong size on BP_CharacterData_C_BPI_GetDependencies");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Classes) == 0x000000, "Member 'BP_CharacterData_C_BPI_GetDependencies::Classes' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Assets) == 0x000010, "Member 'BP_CharacterData_C_BPI_GetDependencies::Assets' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, ExternalDependencies) == 0x000020, "Member 'BP_CharacterData_C_BPI_GetDependencies::ExternalDependencies' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, local_classes) == 0x000030, "Member 'BP_CharacterData_C_BPI_GetDependencies::local_classes' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_CharacterData_C_BPI_GetDependencies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Temp_wildcard_Temp_buffer_array_Variable) == 0x000048, "Member 'BP_CharacterData_C_BPI_GetDependencies::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000058, "Member 'BP_CharacterData_C_BPI_GetDependencies::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_CharacterData_C_BPI_GetDependencies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'BP_CharacterData_C_BPI_GetDependencies::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'BP_CharacterData_C_BPI_GetDependencies::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_GetEquippedPassiveEffectsData_PassiveEffectDefinitions) == 0x000080, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_GetEquippedPassiveEffectsData_PassiveEffectDefinitions' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_GetAllAvailableEquippedSkills_ReturnValue) == 0x0000D8, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_GetAllAvailableEquippedSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Array_Add_NewItem_CastInput) == 0x0000F0, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Array_Add_NewItem_CastInput' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_IsValid_ReturnValue) == 0x000104, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Less_IntInt_ReturnValue_1) == 0x000114, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_GetBattleSoftClass_CharacterActorSoftClass) == 0x000118, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_GetBattleSoftClass_CharacterActorSoftClass' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_BPI_GetDependencies, CallFunc_Array_Add_ReturnValue_1) == 0x000140, "Member 'BP_CharacterData_C_BPI_GetDependencies::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanAffordLuminaCost
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_CanAffordLuminaCost final
{
public:
	int32                                         LuminaCost;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAvailableLuminaPoints_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanAffordLuminaCost) == 0x000004, "Wrong alignment on BP_CharacterData_C_CanAffordLuminaCost");
static_assert(sizeof(BP_CharacterData_C_CanAffordLuminaCost) == 0x000010, "Wrong size on BP_CharacterData_C_CanAffordLuminaCost");
static_assert(offsetof(BP_CharacterData_C_CanAffordLuminaCost, LuminaCost) == 0x000000, "Member 'BP_CharacterData_C_CanAffordLuminaCost::LuminaCost' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanAffordLuminaCost, ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_CanAffordLuminaCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanAffordLuminaCost, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000005, "Member 'BP_CharacterData_C_CanAffordLuminaCost::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanAffordLuminaCost, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000006, "Member 'BP_CharacterData_C_CanAffordLuminaCost::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanAffordLuminaCost, CallFunc_GetAvailableLuminaPoints_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_CanAffordLuminaCost::CallFunc_GetAvailableLuminaPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanAffordLuminaCost, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CharacterData_C_CanAffordLuminaCost::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanAffordSkillUnlock
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_CanAffordSkillUnlock final
{
public:
	class UBP_DataAsset_Skill_C*                  Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordSkillUnlock_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanAffordSkillUnlock) == 0x000008, "Wrong alignment on BP_CharacterData_C_CanAffordSkillUnlock");
static_assert(sizeof(BP_CharacterData_C_CanAffordSkillUnlock) == 0x000010, "Wrong size on BP_CharacterData_C_CanAffordSkillUnlock");
static_assert(offsetof(BP_CharacterData_C_CanAffordSkillUnlock, Skill) == 0x000000, "Member 'BP_CharacterData_C_CanAffordSkillUnlock::Skill' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanAffordSkillUnlock, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_CanAffordSkillUnlock::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanAffordSkillUnlock, CallFunc_CanAffordSkillUnlock_ReturnValue) == 0x000009, "Member 'BP_CharacterData_C_CanAffordSkillUnlock::CallFunc_CanAffordSkillUnlock_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanEquipItem
// 0x0138 (0x0138 - 0x0000)
struct BP_CharacterData_C_CanEquipItem final
{
public:
	struct FS_jRPG_Item_StaticData                ItemData;                                          // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanEquipItem) == 0x000008, "Wrong alignment on BP_CharacterData_C_CanEquipItem");
static_assert(sizeof(BP_CharacterData_C_CanEquipItem) == 0x000138, "Wrong size on BP_CharacterData_C_CanEquipItem");
static_assert(offsetof(BP_CharacterData_C_CanEquipItem, ItemData) == 0x000000, "Member 'BP_CharacterData_C_CanEquipItem::ItemData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipItem, ReturnValue) == 0x000130, "Member 'BP_CharacterData_C_CanEquipItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipItem, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000131, "Member 'BP_CharacterData_C_CanEquipItem::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipItem, CallFunc_Set_Contains_ReturnValue) == 0x000132, "Member 'BP_CharacterData_C_CanEquipItem::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipItem, CallFunc_BooleanOR_ReturnValue) == 0x000133, "Member 'BP_CharacterData_C_CanEquipItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanEquipLuminaPassive
// 0x0068 (0x0068 - 0x0000)
struct BP_CharacterData_C_CanEquipLuminaPassive final
{
public:
	struct FFPassiveEffect                        PassiveEffectDefinition;                           // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             PassiveEffectProgression;                          // 0x0048(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EffectiveCost;                                     // 0x005C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEffectiveLuminaCost_ReturnValue;       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordLuminaCost_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanEquipLuminaPassive) == 0x000008, "Wrong alignment on BP_CharacterData_C_CanEquipLuminaPassive");
static_assert(sizeof(BP_CharacterData_C_CanEquipLuminaPassive) == 0x000068, "Wrong size on BP_CharacterData_C_CanEquipLuminaPassive");
static_assert(offsetof(BP_CharacterData_C_CanEquipLuminaPassive, PassiveEffectDefinition) == 0x000000, "Member 'BP_CharacterData_C_CanEquipLuminaPassive::PassiveEffectDefinition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipLuminaPassive, PassiveEffectProgression) == 0x000048, "Member 'BP_CharacterData_C_CanEquipLuminaPassive::PassiveEffectProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipLuminaPassive, ReturnValue) == 0x000058, "Member 'BP_CharacterData_C_CanEquipLuminaPassive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipLuminaPassive, EffectiveCost) == 0x00005C, "Member 'BP_CharacterData_C_CanEquipLuminaPassive::EffectiveCost' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipLuminaPassive, CallFunc_GetEffectiveLuminaCost_ReturnValue) == 0x000060, "Member 'BP_CharacterData_C_CanEquipLuminaPassive::CallFunc_GetEffectiveLuminaCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanEquipLuminaPassive, CallFunc_CanAffordLuminaCost_ReturnValue) == 0x000064, "Member 'BP_CharacterData_C_CanEquipLuminaPassive::CallFunc_CanAffordLuminaCost_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanLearnSkill
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_CanLearnSkill final
{
public:
	const class UBP_DataAsset_Skill_C*            Skill;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELearnSkillBlockedReason                      BlockedReason;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanLearnSkill_ReturnValue;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELearnSkillBlockedReason                      CallFunc_CanLearnSkill_BlockedReason;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanLearnSkill) == 0x000008, "Wrong alignment on BP_CharacterData_C_CanLearnSkill");
static_assert(sizeof(BP_CharacterData_C_CanLearnSkill) == 0x000010, "Wrong size on BP_CharacterData_C_CanLearnSkill");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill, Skill) == 0x000000, "Member 'BP_CharacterData_C_CanLearnSkill::Skill' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_CanLearnSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill, BlockedReason) == 0x000009, "Member 'BP_CharacterData_C_CanLearnSkill::BlockedReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill, CallFunc_CanLearnSkill_ReturnValue) == 0x00000A, "Member 'BP_CharacterData_C_CanLearnSkill::CallFunc_CanLearnSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill, CallFunc_CanLearnSkill_BlockedReason) == 0x00000B, "Member 'BP_CharacterData_C_CanLearnSkill::CallFunc_CanLearnSkill_BlockedReason' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanLearnSkill_OLD
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterData_C_CanLearnSkill_OLD final
{
public:
	const class UBP_DataAsset_Skill_C*            Skill;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELearnSkillBlockedReason                      BlockedReason;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAvailableSkillPoints_ReturnValue;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSkillUnlockInfos                     CallFunc_Map_Find_Value;                           // 0x0010(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanLearnSkill_OLD) == 0x000008, "Wrong alignment on BP_CharacterData_C_CanLearnSkill_OLD");
static_assert(sizeof(BP_CharacterData_C_CanLearnSkill_OLD) == 0x000048, "Wrong size on BP_CharacterData_C_CanLearnSkill_OLD");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, Skill) == 0x000000, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::Skill' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, BlockedReason) == 0x000009, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::BlockedReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_Array_Contains_ReturnValue) == 0x00000A, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_GetAvailableSkillPoints_ReturnValue) == 0x00000C, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_GetAvailableSkillPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_Array_Contains_ReturnValue_1) == 0x000041, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_Greater_IntInt_ReturnValue) == 0x000042, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_IsValid_ReturnValue) == 0x000043, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_BooleanOR_ReturnValue) == 0x000045, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanLearnSkill_OLD, CallFunc_Not_PreBool_ReturnValue_1) == 0x000046, "Member 'BP_CharacterData_C_CanLearnSkill_OLD::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanUpdateInternals
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterData_C_CanUpdateInternals final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanUpdateInternals) == 0x000001, "Wrong alignment on BP_CharacterData_C_CanUpdateInternals");
static_assert(sizeof(BP_CharacterData_C_CanUpdateInternals) == 0x000002, "Wrong size on BP_CharacterData_C_CanUpdateInternals");
static_assert(offsetof(BP_CharacterData_C_CanUpdateInternals, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_CanUpdateInternals::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanUpdateInternals, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_CharacterData_C_CanUpdateInternals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanUseGearPassiveEffects
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_CanUseGearPassiveEffects final
{
public:
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseWeaponPassiveEffects_ReturnValue;   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               CallFunc_GetItemType_Item_Type;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanUseGearPassiveEffects) == 0x000008, "Wrong alignment on BP_CharacterData_C_CanUseGearPassiveEffects");
static_assert(sizeof(BP_CharacterData_C_CanUseGearPassiveEffects) == 0x000010, "Wrong size on BP_CharacterData_C_CanUseGearPassiveEffects");
static_assert(offsetof(BP_CharacterData_C_CanUseGearPassiveEffects, ItemInstance) == 0x000000, "Member 'BP_CharacterData_C_CanUseGearPassiveEffects::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanUseGearPassiveEffects, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_CanUseGearPassiveEffects::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanUseGearPassiveEffects, CallFunc_CanUseWeaponPassiveEffects_ReturnValue) == 0x000009, "Member 'BP_CharacterData_C_CanUseGearPassiveEffects::CallFunc_CanUseWeaponPassiveEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanUseGearPassiveEffects, CallFunc_GetItemType_Item_Type) == 0x00000A, "Member 'BP_CharacterData_C_CanUseGearPassiveEffects::CallFunc_GetItemType_Item_Type' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanUseGearPassiveEffects, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'BP_CharacterData_C_CanUseGearPassiveEffects::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanUseGearPassiveEffects, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_CharacterData_C_CanUseGearPassiveEffects::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CanUseWeaponPassiveEffects
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterData_C_CanUseWeaponPassiveEffects final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CanUseWeaponPassiveEffects) == 0x000001, "Wrong alignment on BP_CharacterData_C_CanUseWeaponPassiveEffects");
static_assert(sizeof(BP_CharacterData_C_CanUseWeaponPassiveEffects) == 0x000002, "Wrong size on BP_CharacterData_C_CanUseWeaponPassiveEffects");
static_assert(offsetof(BP_CharacterData_C_CanUseWeaponPassiveEffects, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_CanUseWeaponPassiveEffects::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CanUseWeaponPassiveEffects, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_CharacterData_C_CanUseWeaponPassiveEffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ComputeAttributeStats
// 0x08C0 (0x08C0 - 0x0000)
struct BP_CharacterData_C_ComputeAttributeStats final
{
public:
	TMap<ECharacterAttribute, int32>              AssignedAttributes;                                // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<E_jRPG_StatType, double>                 local_newStats;                                    // 0x0050(0x0050)(Edit, BlueprintVisible)
	double                                        Temp_real_Variable;                                // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ECharacterAttribute>                   CallFunc_Map_Keys_Keys;                            // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_jRPG_StatType, double>                 K2Node_MakeVariable_MakeVariableOutput;            // 0x00D8(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0178(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0188(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0238(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0248(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0258(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02A0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x02E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02F8(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0358(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0368(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x03B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03F8(0x0010)(ReferenceParm)
	struct FFCharacterAttributeScalingList        CallFunc_Map_Find_Value_1;                         // 0x0408(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x04B0(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys_1;                          // 0x04C8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x04D8(0x0048)(HasGetValueTypeHash)
	E_jRPG_StatType                               CallFunc_Array_Get_Item_1;                         // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x3];                                      // 0x0521(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0540(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0550(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0598(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x05A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x05B8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x05C8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x05D8(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value_2;                         // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CallFunc_Map_Find_Value_3;                         // 0x0630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys_2;                          // 0x0640(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0650(0x0010)()
	E_jRPG_StatType                               CallFunc_Array_Get_Item_2;                         // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661[0x7];                                      // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0668(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5; // 0x06B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_4;                         // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C5[0x3];                                      // 0x06C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x06C8(0x0010)()
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x06E0(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0730(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0748(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x0790(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value_5;                         // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x07E8(0x0010)(ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0800(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0814(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0815(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_816[0x2];                                      // 0x0816(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_824[0x4];                                      // 0x0824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0828(0x0010)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x0840(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0888(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0898(0x0010)()
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ComputeAttributeStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_ComputeAttributeStats");
static_assert(sizeof(BP_CharacterData_C_ComputeAttributeStats) == 0x0008C0, "Wrong size on BP_CharacterData_C_ComputeAttributeStats");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, AssignedAttributes) == 0x000000, "Member 'BP_CharacterData_C_ComputeAttributeStats::AssignedAttributes' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, local_newStats) == 0x000050, "Member 'BP_CharacterData_C_ComputeAttributeStats::local_newStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_real_Variable) == 0x0000A0, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Keys_Keys) == 0x0000A8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Variable) == 0x0000BC, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Variable_1) == 0x0000C0, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000C4, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetValidValue_ReturnValue) == 0x0000CC, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000CD, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000CE, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0000CF, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000D0, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeVariable_MakeVariableOutput) == 0x0000D8, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_MakeLiteralInt_ReturnValue) == 0x000134, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Loop_Counter_Variable_1) == 0x000140, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x000144, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Add_IntInt_ReturnValue_2) == 0x000148, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Array_Index_Variable_2) == 0x00014C, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000158, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000168, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_StringToText_ReturnValue) == 0x000178, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000188, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001E0, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000228, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000238, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000248, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_2) == 0x000258, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002A0, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0002E8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002F8, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, Temp_int_Loop_Counter_Variable_2) == 0x000340, "Member 'BP_CharacterData_C_ComputeAttributeStats::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Add_IntInt_ReturnValue_3) == 0x000344, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_Value) == 0x000348, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_ReturnValue) == 0x00034C, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000350, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000358, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_5) == 0x000368, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_6) == 0x0003B0, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeArray_Array) == 0x0003F8, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_Value_1) == 0x000408, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_ReturnValue_1) == 0x0004A8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Format_ReturnValue) == 0x0004B0, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0004C0, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Keys_Keys_1) == 0x0004C8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_7) == 0x0004D8, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Array_Get_Item_1) == 0x000520, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Array_Length_ReturnValue_1) == 0x000524, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000528, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Less_IntInt_ReturnValue_2) == 0x000538, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000540, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_8) == 0x000550, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000598, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeArray_Array_1) == 0x0005A8, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_StringToText_ReturnValue_5) == 0x0005B8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Format_ReturnValue_1) == 0x0005C8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_9) == 0x0005D8, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_Value_2) == 0x000620, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_ReturnValue_2) == 0x000628, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_Value_3) == 0x000630, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_ReturnValue_3) == 0x000638, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Keys_Keys_2) == 0x000640, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000650, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Array_Get_Item_2) == 0x000660, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_10) == 0x000668, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5) == 0x0006B0, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_Value_4) == 0x0006C0, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_ReturnValue_4) == 0x0006C4, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_StringToText_ReturnValue_6) == 0x0006C8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Multiply_IntInt_ReturnValue) == 0x0006D8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_11) == 0x0006E0, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000728, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToText_ReturnValue) == 0x000730, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000740, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_12) == 0x000748, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_13) == 0x000790, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_Value_5) == 0x0007D8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Map_Find_ReturnValue_5) == 0x0007E0, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeArray_Array_2) == 0x0007E8, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0007F8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Format_ReturnValue_2) == 0x000800, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Array_Length_ReturnValue_2) == 0x000810, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_IsValid_ReturnValue) == 0x000814, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Less_IntInt_ReturnValue_3) == 0x000815, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000818, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetFloatValue_ReturnValue) == 0x000820, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000828, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000838, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeStruct_FormatArgumentData_14) == 0x000840, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, K2Node_MakeArray_Array_3) == 0x000888, "Member 'BP_CharacterData_C_ComputeAttributeStats::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Format_ReturnValue_3) == 0x000898, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0008A8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0008B0, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeAttributeStats, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0008B8, "Member 'BP_CharacterData_C_ComputeAttributeStats::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ComputeEquipmentStats
// 0x0430 (0x0430 - 0x0000)
struct BP_CharacterData_C_ComputeEquipmentStats final
{
public:
	TMap<struct FFEquipmentSlot, class UBP_ItemInstance_Gear_C*> EquipmentInstances;                 // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<E_jRPG_StatType, double>                 EquipmentStats_0;                                  // 0x0050(0x0050)(Parm, OutParm)
	TMap<E_jRPG_StatType, double>                 local_EquipmentStats;                              // 0x00A0(0x0050)(Edit, BlueprintVisible)
	TArray<class UBP_ItemInstance_Gear_C*>        CallFunc_Map_Values_Values;                        // 0x00F0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0120(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_StatType, double>                 CallFunc_GetCurrentStats_CurrentStats;             // 0x0140(0x0050)()
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0190(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys;                            // 0x02C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemID_ItemID;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x02E0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02F0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0338(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x036C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               CallFunc_Array_Get_Item_1;                         // 0x036D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x036E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36F[0x1];                                      // 0x036F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon; // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponInstancePower_TotalDamage;       // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_BaseDamage;        // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_ScalingDamage;     // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterAttribute, int32>              CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute; // 0x03B0(0x0050)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ComputeEquipmentStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_ComputeEquipmentStats");
static_assert(sizeof(BP_CharacterData_C_ComputeEquipmentStats) == 0x000430, "Wrong size on BP_CharacterData_C_ComputeEquipmentStats");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, EquipmentInstances) == 0x000000, "Member 'BP_CharacterData_C_ComputeEquipmentStats::EquipmentInstances' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, EquipmentStats_0) == 0x000050, "Member 'BP_CharacterData_C_ComputeEquipmentStats::EquipmentStats_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, local_EquipmentStats) == 0x0000A0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::local_EquipmentStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Map_Values_Values) == 0x0000F0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_int_Variable) == 0x000100, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Conv_IntToByte_ReturnValue) == 0x000108, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetValidValue_ReturnValue) == 0x000109, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_int_Variable_1) == 0x00010C, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000114, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000115, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000118, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_real_Variable) == 0x000120, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_MakeLiteralInt_ReturnValue) == 0x000128, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_int_Array_Index_Variable) == 0x00012C, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Array_Get_Item) == 0x000138, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetCurrentStats_CurrentStats) == 0x000140, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetCurrentStats_CurrentStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetItemStaticData_ItemStaticData) == 0x000190, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Map_Keys_Keys) == 0x0002C0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D4, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetItemID_ItemID) == 0x0002D8, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Conv_NameToText_ReturnValue) == 0x0002E0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, K2Node_MakeStruct_FormatArgumentData) == 0x0002F0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, K2Node_MakeArray_Array) == 0x000338, "Member 'BP_CharacterData_C_ComputeEquipmentStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_int_Loop_Counter_Variable) == 0x000348, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Format_ReturnValue) == 0x000350, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x000360, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000364, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_int_Array_Index_Variable_1) == 0x000368, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_byte_Variable) == 0x00036C, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Array_Get_Item_1) == 0x00036D, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00036E, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Map_Find_Value) == 0x000370, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Map_Find_ReturnValue) == 0x000378, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000380, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000388, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, Temp_int_Loop_Counter_Variable_1) == 0x000390, "Member 'BP_CharacterData_C_ComputeEquipmentStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon) == 0x000398, "Member 'BP_CharacterData_C_ComputeEquipmentStats::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, K2Node_DynamicCast_bSuccess) == 0x0003A0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetWeaponInstancePower_TotalDamage) == 0x0003A4, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetWeaponInstancePower_TotalDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetWeaponInstancePower_BaseDamage) == 0x0003A8, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetWeaponInstancePower_BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetWeaponInstancePower_ScalingDamage) == 0x0003AC, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetWeaponInstancePower_ScalingDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute) == 0x0003B0, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Less_IntInt_ReturnValue_2) == 0x000400, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000408, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Add_IntInt_ReturnValue_2) == 0x000410, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Map_Find_Value_1) == 0x000418, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Map_Find_ReturnValue_1) == 0x000420, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeEquipmentStats, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000428, "Member 'BP_CharacterData_C_ComputeEquipmentStats::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ComputeStatsFromParts
// 0x02A0 (0x02A0 - 0x0000)
struct BP_CharacterData_C_ComputeStatsFromParts final
{
public:
	TMap<E_jRPG_StatType, double>                 base;                                              // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<E_jRPG_StatType, double>                 Leveling;                                          // 0x0050(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<E_jRPG_StatType, double>                 Equipment;                                         // 0x00A0(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<E_jRPG_StatType, double>                 Attributes;                                        // 0x00F0(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<E_jRPG_StatType, double>                 ComputedStats_0;                                   // 0x0140(0x0050)(Parm, OutParm)
	TMap<E_jRPG_StatType, double>                 local_ComputedStats;                               // 0x0190(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_3;             // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1; // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_2;                         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_3;                         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_4;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ComputeStatsFromParts) == 0x000008, "Wrong alignment on BP_CharacterData_C_ComputeStatsFromParts");
static_assert(sizeof(BP_CharacterData_C_ComputeStatsFromParts) == 0x0002A0, "Wrong size on BP_CharacterData_C_ComputeStatsFromParts");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, base) == 0x000000, "Member 'BP_CharacterData_C_ComputeStatsFromParts::base' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, Leveling) == 0x000050, "Member 'BP_CharacterData_C_ComputeStatsFromParts::Leveling' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, Equipment) == 0x0000A0, "Member 'BP_CharacterData_C_ComputeStatsFromParts::Equipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, Attributes) == 0x0000F0, "Member 'BP_CharacterData_C_ComputeStatsFromParts::Attributes' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, ComputedStats_0) == 0x000140, "Member 'BP_CharacterData_C_ComputeStatsFromParts::ComputedStats_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, local_ComputedStats) == 0x000190, "Member 'BP_CharacterData_C_ComputeStatsFromParts::local_ComputedStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, Temp_int_Variable) == 0x0001E0, "Member 'BP_CharacterData_C_ComputeStatsFromParts::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, Temp_int_Variable_1) == 0x0001E4, "Member 'BP_CharacterData_C_ComputeStatsFromParts::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_IntToByte_ReturnValue) == 0x0001E8, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Add_IntInt_ReturnValue) == 0x0001EC, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_GetValidValue_ReturnValue) == 0x0001F0, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0001F1, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001F2, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0001F3, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0001F4, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, Temp_int_Variable_2) == 0x0001F8, "Member 'BP_CharacterData_C_ComputeStatsFromParts::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, Temp_int_Variable_3) == 0x0001FC, "Member 'BP_CharacterData_C_ComputeStatsFromParts::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000200, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Add_IntInt_ReturnValue_1) == 0x000204, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_GetValidValue_ReturnValue_1) == 0x000208, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_IntToByte_ReturnValue_3) == 0x000209, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_IntToByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00020A, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1) == 0x00020B, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00020C, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_Value) == 0x000210, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_ReturnValue) == 0x000218, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_Value_1) == 0x000220, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_ReturnValue_1) == 0x000228, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_Value_2) == 0x000230, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_ReturnValue_2) == 0x000238, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_Value_3) == 0x000240, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_ReturnValue_3) == 0x000248, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000250, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000260, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Round_ReturnValue) == 0x000268, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_MakeLiteralInt_ReturnValue) == 0x00026C, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000270, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Less_IntInt_ReturnValue) == 0x000278, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_Value_4) == 0x000280, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Map_Find_ReturnValue_4) == 0x000288, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Round_ReturnValue_1) == 0x00028C, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000290, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000298, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ComputeStatsFromParts, CallFunc_Less_IntInt_ReturnValue_1) == 0x00029C, "Member 'BP_CharacterData_C_ComputeStatsFromParts::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.CreateCopy
// 0x0390 (0x0390 - 0x0000)
struct BP_CharacterData_C_CreateCopy final
{
public:
	class UBP_CharacterData_C*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_CharacterSaveState             K2Node_MakeStruct_S_jRPG_CharacterSaveState;       // 0x0008(0x01C0)(HasGetValueTypeHash)
	struct FS_jRPG_CharacterSaveState             CallFunc_SaveCharacterState_StructOut;             // 0x01C8(0x01C0)(HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_CreateCopy) == 0x000008, "Wrong alignment on BP_CharacterData_C_CreateCopy");
static_assert(sizeof(BP_CharacterData_C_CreateCopy) == 0x000390, "Wrong size on BP_CharacterData_C_CreateCopy");
static_assert(offsetof(BP_CharacterData_C_CreateCopy, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_CreateCopy::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CreateCopy, K2Node_MakeStruct_S_jRPG_CharacterSaveState) == 0x000008, "Member 'BP_CharacterData_C_CreateCopy::K2Node_MakeStruct_S_jRPG_CharacterSaveState' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CreateCopy, CallFunc_SaveCharacterState_StructOut) == 0x0001C8, "Member 'BP_CharacterData_C_CreateCopy::CallFunc_SaveCharacterState_StructOut' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_CreateCopy, CallFunc_SpawnObject_ReturnValue) == 0x000388, "Member 'BP_CharacterData_C_CreateCopy::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.DEBUG_CVarChange_IgnoreLuminaCost
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterData_C_DEBUG_CVarChange_IgnoreLuminaCost final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_DEBUG_CVarChange_IgnoreLuminaCost) == 0x000001, "Wrong alignment on BP_CharacterData_C_DEBUG_CVarChange_IgnoreLuminaCost");
static_assert(sizeof(BP_CharacterData_C_DEBUG_CVarChange_IgnoreLuminaCost) == 0x000001, "Wrong size on BP_CharacterData_C_DEBUG_CVarChange_IgnoreLuminaCost");
static_assert(offsetof(BP_CharacterData_C_DEBUG_CVarChange_IgnoreLuminaCost, NewValue) == 0x000000, "Member 'BP_CharacterData_C_DEBUG_CVarChange_IgnoreLuminaCost::NewValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.DEBUG_UnlockAllLuminaPassives
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0010)()
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0028(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives) == 0x000008, "Wrong alignment on BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives");
static_assert(sizeof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives) == 0x0000A0, "Wrong size on BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, Temp_int_Variable) == 0x000020, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000028, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Array_IsEmpty_ReturnValue) == 0x000092, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Greater_IntInt_ReturnValue) == 0x000093, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Not_PreBool_ReturnValue) == 0x000094, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000095, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_BooleanOR_ReturnValue) == 0x000096, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Not_PreBool_ReturnValue_1) == 0x000097, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_CharacterData_C_DEBUG_UnlockAllLuminaPassives::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.DispatchModificationsIfPossible
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterData_C_DispatchModificationsIfPossible final
{
public:
	class FString                                 DebugReason;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UBP_SaveManager_C*                      CallFunc_GetSaveManager_SaveManager;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_DispatchModificationsIfPossible) == 0x000008, "Wrong alignment on BP_CharacterData_C_DispatchModificationsIfPossible");
static_assert(sizeof(BP_CharacterData_C_DispatchModificationsIfPossible) == 0x000018, "Wrong size on BP_CharacterData_C_DispatchModificationsIfPossible");
static_assert(offsetof(BP_CharacterData_C_DispatchModificationsIfPossible, DebugReason) == 0x000000, "Member 'BP_CharacterData_C_DispatchModificationsIfPossible::DebugReason' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DispatchModificationsIfPossible, CallFunc_GetSaveManager_SaveManager) == 0x000010, "Member 'BP_CharacterData_C_DispatchModificationsIfPossible::CallFunc_GetSaveManager_SaveManager' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.DoEquippedItemsGivePassiveEffect
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_DoEquippedItemsGivePassiveEffect final
{
public:
	class FName                                   PassiveEffectID;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GivePassiveEffect;                                 // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ItemInstance_Gear_C*>        CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	class UBP_ItemInstance_Gear_C*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetGearPassiveEffects_PassiveEffectIDs;   // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect) == 0x000008, "Wrong alignment on BP_CharacterData_C_DoEquippedItemsGivePassiveEffect");
static_assert(sizeof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect) == 0x000050, "Wrong size on BP_CharacterData_C_DoEquippedItemsGivePassiveEffect");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, PassiveEffectID) == 0x000000, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::PassiveEffectID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, GivePassiveEffect) == 0x000008, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::GivePassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, CallFunc_GetGearPassiveEffects_PassiveEffectIDs) == 0x000038, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::CallFunc_GetGearPassiveEffects_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_DoEquippedItemsGivePassiveEffect, CallFunc_Array_Contains_ReturnValue) == 0x000049, "Member 'BP_CharacterData_C_DoEquippedItemsGivePassiveEffect::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.EquipItemInSlot
// 0x0368 (0x0368 - 0x0000)
struct BP_CharacterData_C_EquipItemInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0008(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0140(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0150(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0198(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B8(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x0210(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0220(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotEmpty_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0270(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0280(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02C8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0310(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0320(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0330(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0340(0x0010)()
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_EquipItemInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_EquipItemInSlot");
static_assert(sizeof(BP_CharacterData_C_EquipItemInSlot) == 0x000368, "Wrong size on BP_CharacterData_C_EquipItemInSlot");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_EquipItemInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, Item) == 0x000008, "Member 'BP_CharacterData_C_EquipItemInSlot::Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000138, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000139, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Conv_NameToText_ReturnValue) == 0x000140, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000150, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000198, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeArray_Array) == 0x0001A8, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B8, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Format_ReturnValue) == 0x000200, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Conv_NameToText_ReturnValue_2) == 0x000210, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeStruct_FormatArgumentData_2) == 0x000220, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_IsSlotEmpty_ReturnValue) == 0x000268, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_IsSlotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000270, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeStruct_FormatArgumentData_3) == 0x000280, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002C8, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeArray_Array_1) == 0x000310, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, K2Node_MakeArray_Array_2) == 0x000320, "Member 'BP_CharacterData_C_EquipItemInSlot::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Format_ReturnValue_1) == 0x000330, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Format_ReturnValue_2) == 0x000340, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000350, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000358, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_IsValid_ReturnValue) == 0x000360, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000361, "Member 'BP_CharacterData_C_EquipItemInSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.EquipItemInstanceInSlot
// 0x0258 (0x0258 - 0x0000)
struct BP_CharacterData_C_EquipItemInstanceInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0020(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x00E0(0x0010)()
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotEmpty_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0150(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0160(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0200(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0210(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0220(0x0010)()
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_EquipItemInstanceInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_EquipItemInstanceInSlot");
static_assert(sizeof(BP_CharacterData_C_EquipItemInstanceInSlot) == 0x000258, "Wrong size on BP_CharacterData_C_EquipItemInstanceInSlot");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, Item) == 0x000008, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_GetItemDefinitionID_ReturnValue_1) == 0x000018, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_GetItemDefinitionID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Conv_NameToText_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000030, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Conv_NameToText_ReturnValue_2) == 0x0000E0, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_IsSlotEmpty_ReturnValue) == 0x000148, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_IsSlotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000150, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData_3) == 0x000160, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001A8, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeArray_Array_1) == 0x0001F0, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, K2Node_MakeArray_Array_2) == 0x000200, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Format_ReturnValue_1) == 0x000210, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Format_ReturnValue_2) == 0x000220, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000230, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000238, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000240, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000248, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_IsValid_ReturnValue) == 0x000250, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipItemInstanceInSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000251, "Member 'BP_CharacterData_C_EquipItemInstanceInSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.EquipLuminaPassive
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CharacterData_C_EquipLuminaPassive final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	struct FFPassiveEffectProgression             CallFunc_GetPassiveEffectProgression_Progression;  // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x0070(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_CanEquipLuminaPassive_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CanEquipLuminaPassive_EffectiveCost;      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_EquipLuminaPassive) == 0x000008, "Wrong alignment on BP_CharacterData_C_EquipLuminaPassive");
static_assert(sizeof(BP_CharacterData_C_EquipLuminaPassive) == 0x0000F0, "Wrong size on BP_CharacterData_C_EquipLuminaPassive");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, Name_0) == 0x000000, "Member 'BP_CharacterData_C_EquipLuminaPassive::Name_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_GetPassiveEffectProgression_Progression) == 0x000018, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_GetPassiveEffectProgression_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_CharacterData_C_EquipLuminaPassive::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x000070, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_GetPassiveEffectDefinition_Found) == 0x0000B8, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_CharacterData_C_EquipLuminaPassive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_CanEquipLuminaPassive_ReturnValue) == 0x0000D0, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_CanEquipLuminaPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_CanEquipLuminaPassive_EffectiveCost) == 0x0000D4, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_CanEquipLuminaPassive_EffectiveCost' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipLuminaPassive, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E8, "Member 'BP_CharacterData_C_EquipLuminaPassive::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.EquipMissingLuminaPassivesFromItemInstance
// 0x00C0 (0x00C0 - 0x0000)
struct BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance final
{
public:
	class UBP_ItemInstance_Gear_C*                ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetGearPassiveEffects_PassiveEffectIDs;   // 0x0008(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance) == 0x000008, "Wrong alignment on BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance");
static_assert(sizeof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance) == 0x0000C0, "Wrong size on BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, ItemInstance) == 0x000000, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_GetGearPassiveEffects_PassiveEffectIDs) == 0x000008, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_GetGearPassiveEffects_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Array_Contains_ReturnValue) == 0x0000B4, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Less_IntInt_ReturnValue) == 0x0000B5, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Not_PreBool_ReturnValue) == 0x0000B6, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItemInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.EquipMissingLuminaPassivesFromItems
// 0x01E0 (0x01E0 - 0x0000)
struct BP_CharacterData_C_EquipMissingLuminaPassivesFromItems final
{
public:
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetPictosUnlockedPassiveEffects_PassiveEffects; // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0140(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0158(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7[0x1];                                      // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems) == 0x000008, "Wrong alignment on BP_CharacterData_C_EquipMissingLuminaPassivesFromItems");
static_assert(sizeof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems) == 0x0001E0, "Wrong size on BP_CharacterData_C_EquipMissingLuminaPassivesFromItems");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, Item) == 0x000000, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_GetPictosUnlockedPassiveEffects_PassiveEffects) == 0x000130, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_GetPictosUnlockedPassiveEffects_PassiveEffects' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Conv_NameToText_ReturnValue) == 0x000140, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, K2Node_MakeStruct_FormatArgumentData) == 0x000158, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, K2Node_MakeArray_Array) == 0x0001A8, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, Temp_int_Loop_Counter_Variable) == 0x0001D0, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Array_Contains_ReturnValue) == 0x0001D4, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Less_IntInt_ReturnValue) == 0x0001D5, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Not_PreBool_ReturnValue) == 0x0001D6, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_EquipMissingLuminaPassivesFromItems, CallFunc_Add_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_CharacterData_C_EquipMissingLuminaPassivesFromItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.EquipSkill
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_EquipSkill final
{
public:
	class UBP_DataAsset_Skill_C*                  SkillID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_EquipSkill) == 0x000008, "Wrong alignment on BP_CharacterData_C_EquipSkill");
static_assert(sizeof(BP_CharacterData_C_EquipSkill) == 0x000008, "Wrong size on BP_CharacterData_C_EquipSkill");
static_assert(offsetof(BP_CharacterData_C_EquipSkill, SkillID) == 0x000000, "Member 'BP_CharacterData_C_EquipSkill::SkillID' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.Error_PassiveEffectNotFoundInDT
// 0x00D8 (0x00D8 - 0x0000)
struct BP_CharacterData_C_Error_PassiveEffectNotFoundInDT final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT) == 0x000008, "Wrong alignment on BP_CharacterData_C_Error_PassiveEffectNotFoundInDT");
static_assert(sizeof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT) == 0x0000D8, "Wrong size on BP_CharacterData_C_Error_PassiveEffectNotFoundInDT");
static_assert(offsetof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT, Name_0) == 0x000000, "Member 'BP_CharacterData_C_Error_PassiveEffectNotFoundInDT::Name_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_Error_PassiveEffectNotFoundInDT::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000018, "Member 'BP_CharacterData_C_Error_PassiveEffectNotFoundInDT::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_CharacterData_C_Error_PassiveEffectNotFoundInDT::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_CharacterData_C_Error_PassiveEffectNotFoundInDT::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_CharacterData_C_Error_PassiveEffectNotFoundInDT::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Error_PassiveEffectNotFoundInDT, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_CharacterData_C_Error_PassiveEffectNotFoundInDT::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ExecuteUbergraph_BP_CharacterData
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterData_C_ExecuteUbergraph_BP_CharacterData final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ExecuteUbergraph_BP_CharacterData) == 0x000004, "Wrong alignment on BP_CharacterData_C_ExecuteUbergraph_BP_CharacterData");
static_assert(sizeof(BP_CharacterData_C_ExecuteUbergraph_BP_CharacterData) == 0x000004, "Wrong size on BP_CharacterData_C_ExecuteUbergraph_BP_CharacterData");
static_assert(offsetof(BP_CharacterData_C_ExecuteUbergraph_BP_CharacterData, EntryPoint) == 0x000000, "Member 'BP_CharacterData_C_ExecuteUbergraph_BP_CharacterData::EntryPoint' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.Get Weapon Power
// 0x0138 (0x0138 - 0x0000)
struct BP_CharacterData_C_Get_Weapon_Power final
{
public:
	struct FS_WeaponInstanceData                  WeaponInstanceData;                                // 0x0000(0x0110)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PhysicalPower;                                     // 0x0110(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MagicalPower;                                      // 0x0114(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BasePhysicalPower;                                 // 0x0118(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BaseMagicalPower;                                  // 0x011C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScalingPhysicalPower;                              // 0x0120(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScalingMagicalPower;                               // 0x0124(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_scalingMagicalPower;                         // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_scalingPhysicalPower;                        // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_Get_Weapon_Power) == 0x000008, "Wrong alignment on BP_CharacterData_C_Get_Weapon_Power");
static_assert(sizeof(BP_CharacterData_C_Get_Weapon_Power) == 0x000138, "Wrong size on BP_CharacterData_C_Get_Weapon_Power");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, WeaponInstanceData) == 0x000000, "Member 'BP_CharacterData_C_Get_Weapon_Power::WeaponInstanceData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, PhysicalPower) == 0x000110, "Member 'BP_CharacterData_C_Get_Weapon_Power::PhysicalPower' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, MagicalPower) == 0x000114, "Member 'BP_CharacterData_C_Get_Weapon_Power::MagicalPower' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, BasePhysicalPower) == 0x000118, "Member 'BP_CharacterData_C_Get_Weapon_Power::BasePhysicalPower' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, BaseMagicalPower) == 0x00011C, "Member 'BP_CharacterData_C_Get_Weapon_Power::BaseMagicalPower' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, ScalingPhysicalPower) == 0x000120, "Member 'BP_CharacterData_C_Get_Weapon_Power::ScalingPhysicalPower' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, ScalingMagicalPower) == 0x000124, "Member 'BP_CharacterData_C_Get_Weapon_Power::ScalingMagicalPower' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, local_scalingMagicalPower) == 0x000128, "Member 'BP_CharacterData_C_Get_Weapon_Power::local_scalingMagicalPower' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Get_Weapon_Power, local_scalingPhysicalPower) == 0x000130, "Member 'BP_CharacterData_C_Get_Weapon_Power::local_scalingPhysicalPower' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetActionsOrder
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_GetActionsOrder final
{
public:
	TArray<class FName>                           CharacterActionsOrder;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_CharacterData_C_GetActionsOrder) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetActionsOrder");
static_assert(sizeof(BP_CharacterData_C_GetActionsOrder) == 0x000010, "Wrong size on BP_CharacterData_C_GetActionsOrder");
static_assert(offsetof(BP_CharacterData_C_GetActionsOrder, CharacterActionsOrder) == 0x000000, "Member 'BP_CharacterData_C_GetActionsOrder::CharacterActionsOrder' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAllEquipmentSlotTypes
// 0x0040 (0x0040 - 0x0000)
struct BP_CharacterData_C_GetAllEquipmentSlotTypes final
{
public:
	TArray<struct FFEquipmentSlot>                EquipmentSlots;                                    // 0x0000(0x0010)(Parm, OutParm)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot_2;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot_3;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFEquipmentSlot>                K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CharacterData_C_GetAllEquipmentSlotTypes) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAllEquipmentSlotTypes");
static_assert(sizeof(BP_CharacterData_C_GetAllEquipmentSlotTypes) == 0x000040, "Wrong size on BP_CharacterData_C_GetAllEquipmentSlotTypes");
static_assert(offsetof(BP_CharacterData_C_GetAllEquipmentSlotTypes, EquipmentSlots) == 0x000000, "Member 'BP_CharacterData_C_GetAllEquipmentSlotTypes::EquipmentSlots' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAllEquipmentSlotTypes, K2Node_MakeStruct_FEquipmentSlot) == 0x000010, "Member 'BP_CharacterData_C_GetAllEquipmentSlotTypes::K2Node_MakeStruct_FEquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAllEquipmentSlotTypes, K2Node_MakeStruct_FEquipmentSlot_1) == 0x000018, "Member 'BP_CharacterData_C_GetAllEquipmentSlotTypes::K2Node_MakeStruct_FEquipmentSlot_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAllEquipmentSlotTypes, K2Node_MakeStruct_FEquipmentSlot_2) == 0x000020, "Member 'BP_CharacterData_C_GetAllEquipmentSlotTypes::K2Node_MakeStruct_FEquipmentSlot_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAllEquipmentSlotTypes, K2Node_MakeStruct_FEquipmentSlot_3) == 0x000028, "Member 'BP_CharacterData_C_GetAllEquipmentSlotTypes::K2Node_MakeStruct_FEquipmentSlot_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAllEquipmentSlotTypes, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_CharacterData_C_GetAllEquipmentSlotTypes::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAllowedEquipmentSubtypes
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_GetAllowedEquipmentSubtypes final
{
public:
	TSet<E_jRPG_ItemSubtype>                      AllowedEquipmentSubtypes;                          // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_CharacterData_C_GetAllowedEquipmentSubtypes) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAllowedEquipmentSubtypes");
static_assert(sizeof(BP_CharacterData_C_GetAllowedEquipmentSubtypes) == 0x000050, "Wrong size on BP_CharacterData_C_GetAllowedEquipmentSubtypes");
static_assert(offsetof(BP_CharacterData_C_GetAllowedEquipmentSubtypes, AllowedEquipmentSubtypes) == 0x000000, "Member 'BP_CharacterData_C_GetAllowedEquipmentSubtypes::AllowedEquipmentSubtypes' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetArmUITexture
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetArmUITexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetArmUITexture) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetArmUITexture");
static_assert(sizeof(BP_CharacterData_C_GetArmUITexture) == 0x000008, "Wrong size on BP_CharacterData_C_GetArmUITexture");
static_assert(offsetof(BP_CharacterData_C_GetArmUITexture, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetArmUITexture::ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAssignedAttributePoints
// 0x0098 (0x0098 - 0x0000)
struct BP_CharacterData_C_GetAssignedAttributePoints final
{
public:
	ECharacterAttribute                           Attribute;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	int32                                         CallFunc_Map_Find_Value;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_GetAssignedAttributePoints) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAssignedAttributePoints");
static_assert(sizeof(BP_CharacterData_C_GetAssignedAttributePoints) == 0x000098, "Wrong size on BP_CharacterData_C_GetAssignedAttributePoints");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, Attribute) == 0x000000, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::Attribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, Value) == 0x000004, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, CallFunc_Map_Find_ReturnValue) == 0x00002C, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAssignedAttributePoints, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_CharacterData_C_GetAssignedAttributePoints::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAttributePointsToAssign
// 0x0048 (0x0048 - 0x0000)
struct BP_CharacterData_C_GetAttributePointsToAssign final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_assignedPoints;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxAttributePoints_ReturnValue;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<ECharacterAttribute>                   CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetAttributePointsToAssign) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAttributePointsToAssign");
static_assert(sizeof(BP_CharacterData_C_GetAttributePointsToAssign) == 0x000048, "Wrong size on BP_CharacterData_C_GetAttributePointsToAssign");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, local_assignedPoints) == 0x000004, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::local_assignedPoints' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000014, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000015, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Not_PreBool_ReturnValue) == 0x000016, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_GetMaxAttributePoints_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_GetMaxAttributePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Map_Find_Value) == 0x000038, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Map_Find_ReturnValue) == 0x00003C, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAttributePointsToAssign, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_CharacterData_C_GetAttributePointsToAssign::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAttributeStats
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_GetAttributeStats final
{
public:
	TMap<E_jRPG_StatType, double>                 EquipmentStats_0;                                  // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_CharacterData_C_GetAttributeStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAttributeStats");
static_assert(sizeof(BP_CharacterData_C_GetAttributeStats) == 0x000050, "Wrong size on BP_CharacterData_C_GetAttributeStats");
static_assert(offsetof(BP_CharacterData_C_GetAttributeStats, EquipmentStats_0) == 0x000000, "Member 'BP_CharacterData_C_GetAttributeStats::EquipmentStats_0' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAudioProfile_Battle
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CharacterData_C_GetAudioProfile_Battle final
{
public:
	struct FFCharacterBattleAudioProfile          BattleAudioProfile;                                // 0x0000(0x00D0)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetAudioProfile_Battle) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAudioProfile_Battle");
static_assert(sizeof(BP_CharacterData_C_GetAudioProfile_Battle) == 0x0000D0, "Wrong size on BP_CharacterData_C_GetAudioProfile_Battle");
static_assert(offsetof(BP_CharacterData_C_GetAudioProfile_Battle, BattleAudioProfile) == 0x000000, "Member 'BP_CharacterData_C_GetAudioProfile_Battle::BattleAudioProfile' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAudioProfile_Exploration
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetAudioProfile_Exploration final
{
public:
	class UBP_DataAsset_CharacterExplorationAudioProfile_C* ReturnValue;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetAudioProfile_Exploration) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAudioProfile_Exploration");
static_assert(sizeof(BP_CharacterData_C_GetAudioProfile_Exploration) == 0x000008, "Wrong size on BP_CharacterData_C_GetAudioProfile_Exploration");
static_assert(offsetof(BP_CharacterData_C_GetAudioProfile_Exploration, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetAudioProfile_Exploration::ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAvailableLuminaPoints
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_GetAvailableLuminaPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentlyUsedLuminaPoints_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLuminaPoints_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetAvailableLuminaPoints) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetAvailableLuminaPoints");
static_assert(sizeof(BP_CharacterData_C_GetAvailableLuminaPoints) == 0x000010, "Wrong size on BP_CharacterData_C_GetAvailableLuminaPoints");
static_assert(offsetof(BP_CharacterData_C_GetAvailableLuminaPoints, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetAvailableLuminaPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailableLuminaPoints, CallFunc_GetCurrentlyUsedLuminaPoints_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_GetAvailableLuminaPoints::CallFunc_GetCurrentlyUsedLuminaPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailableLuminaPoints, CallFunc_GetMaxLuminaPoints_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetAvailableLuminaPoints::CallFunc_GetMaxLuminaPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailableLuminaPoints, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CharacterData_C_GetAvailableLuminaPoints::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAvailablePassiveEffects
// 0x0100 (0x0100 - 0x0000)
struct BP_CharacterData_C_GetAvailablePassiveEffects final
{
public:
	TArray<class FName>                           PassiveEffectIDs;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           EquipmentPassiveEffectIDs;                         // 0x0010(0x0010)(Parm, OutParm)
	TArray<class FName>                           LearntPassiveEffectIDs;                            // 0x0020(0x0010)(Parm, OutParm)
	TArray<class FName>                           local_equipmentPassiveEffectIDs;                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           local_learntPassiveEffectIDs;                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_wildcard_Variable;                            // 0x0060(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFPassiveEffectProgression>     CallFunc_GetAllSharedPassiveEffectProgressions_PassiveEffectProgressions; // 0x0090(0x0010)(ReferenceParm)
	struct FFPassiveEffectProgression             CallFunc_Array_Get_Item;                           // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ItemInstance_Gear_C*>        CallFunc_Map_Values_Values;                        // 0x00B0(0x0010)(ReferenceParm)
	class UBP_ItemInstance_Gear_C*                CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetGearPassiveEffects_PassiveEffectIDs;   // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetAvailablePassiveEffects) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAvailablePassiveEffects");
static_assert(sizeof(BP_CharacterData_C_GetAvailablePassiveEffects) == 0x000100, "Wrong size on BP_CharacterData_C_GetAvailablePassiveEffects");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, PassiveEffectIDs) == 0x000000, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, EquipmentPassiveEffectIDs) == 0x000010, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::EquipmentPassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, LearntPassiveEffectIDs) == 0x000020, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::LearntPassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, local_equipmentPassiveEffectIDs) == 0x000030, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::local_equipmentPassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, local_learntPassiveEffectIDs) == 0x000040, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::local_learntPassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, Temp_wildcard_Variable) == 0x000060, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, Temp_int_Array_Index_Variable_2) == 0x000084, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_GetCustomGI_ReturnValue) == 0x000088, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_GetAllSharedPassiveEffectProgressions_PassiveEffectProgressions) == 0x000090, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_GetAllSharedPassiveEffectProgressions_PassiveEffectProgressions' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Map_Values_Values) == 0x0000B0, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_GetGearPassiveEffects_PassiveEffectIDs) == 0x0000C8, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_GetGearPassiveEffects_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_Get_Item_2) == 0x0000DC, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E8, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F4, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F5, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_Contains_ReturnValue) == 0x0000F6, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Not_PreBool_ReturnValue) == 0x0000F7, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffects, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000F8, "Member 'BP_CharacterData_C_GetAvailablePassiveEffects::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAvailablePassiveEffectsForSlots
// 0x0090 (0x0090 - 0x0000)
struct BP_CharacterData_C_GetAvailablePassiveEffectsForSlots final
{
public:
	TArray<struct FFEquipmentSlot>                Slots;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           PassiveEffectIDs;                                  // 0x0010(0x0010)(Parm, OutParm)
	TArray<class FName>                           local_equipmentPassiveEffectIDs;                   // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                CallFunc_GetItemInstanceInSlot_ItemInstance;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x0060(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetAvailablePassiveEffectsForSlots");
static_assert(sizeof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots) == 0x000090, "Wrong size on BP_CharacterData_C_GetAvailablePassiveEffectsForSlots");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, Slots) == 0x000000, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::Slots' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, PassiveEffectIDs) == 0x000010, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, local_equipmentPassiveEffectIDs) == 0x000020, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::local_equipmentPassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_GetItemInstanceInSlot_ItemInstance) == 0x000050, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_GetItemInstanceInSlot_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_IsSlotUsed_ReturnValue) == 0x000058, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x000060, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailablePassiveEffectsForSlots, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'BP_CharacterData_C_GetAvailablePassiveEffectsForSlots::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetAvailableSkillPoints
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_GetAvailableSkillPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalSkillPoints_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetAvailableSkillPoints) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetAvailableSkillPoints");
static_assert(sizeof(BP_CharacterData_C_GetAvailableSkillPoints) == 0x000010, "Wrong size on BP_CharacterData_C_GetAvailableSkillPoints");
static_assert(offsetof(BP_CharacterData_C_GetAvailableSkillPoints, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetAvailableSkillPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailableSkillPoints, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_GetAvailableSkillPoints::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailableSkillPoints, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000005, "Member 'BP_CharacterData_C_GetAvailableSkillPoints::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailableSkillPoints, CallFunc_GetTotalSkillPoints_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetAvailableSkillPoints::CallFunc_GetTotalSkillPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetAvailableSkillPoints, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CharacterData_C_GetAvailableSkillPoints::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetBaseStats
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_GetBaseStats final
{
public:
	TMap<E_jRPG_StatType, double>                 CharacterStats;                                    // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_CharacterData_C_GetBaseStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetBaseStats");
static_assert(sizeof(BP_CharacterData_C_GetBaseStats) == 0x000050, "Wrong size on BP_CharacterData_C_GetBaseStats");
static_assert(offsetof(BP_CharacterData_C_GetBaseStats, CharacterStats) == 0x000000, "Member 'BP_CharacterData_C_GetBaseStats::CharacterStats' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetBattleAudioProfile
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CharacterData_C_GetBattleAudioProfile final
{
public:
	struct FFCharacterBattleAudioProfile          BattleAudioProfile;                                // 0x0000(0x00D0)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetBattleAudioProfile) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetBattleAudioProfile");
static_assert(sizeof(BP_CharacterData_C_GetBattleAudioProfile) == 0x0000D0, "Wrong size on BP_CharacterData_C_GetBattleAudioProfile");
static_assert(offsetof(BP_CharacterData_C_GetBattleAudioProfile, BattleAudioProfile) == 0x000000, "Member 'BP_CharacterData_C_GetBattleAudioProfile::BattleAudioProfile' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetBattleIcon
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetBattleIcon final
{
public:
	class UTexture2D*                             CharacterIconBattle;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetBattleIcon) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetBattleIcon");
static_assert(sizeof(BP_CharacterData_C_GetBattleIcon) == 0x000008, "Wrong size on BP_CharacterData_C_GetBattleIcon");
static_assert(offsetof(BP_CharacterData_C_GetBattleIcon, CharacterIconBattle) == 0x000000, "Member 'BP_CharacterData_C_GetBattleIcon::CharacterIconBattle' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetBattleSoftClass
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterData_C_GetBattleSoftClass final
{
public:
	TSoftClassPtr<class UClass>                   CharacterActorSoftClass;                           // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetBattleSoftClass) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetBattleSoftClass");
static_assert(sizeof(BP_CharacterData_C_GetBattleSoftClass) == 0x000028, "Wrong size on BP_CharacterData_C_GetBattleSoftClass");
static_assert(offsetof(BP_CharacterData_C_GetBattleSoftClass, CharacterActorSoftClass) == 0x000000, "Member 'BP_CharacterData_C_GetBattleSoftClass::CharacterActorSoftClass' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetBattleStartAP_Count
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterData_C_GetBattleStartAP_Count final
{
public:
	int32                                         AP_Count;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetBattleStartAP_Count) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetBattleStartAP_Count");
static_assert(sizeof(BP_CharacterData_C_GetBattleStartAP_Count) == 0x000004, "Wrong size on BP_CharacterData_C_GetBattleStartAP_Count");
static_assert(offsetof(BP_CharacterData_C_GetBattleStartAP_Count, AP_Count) == 0x000000, "Member 'BP_CharacterData_C_GetBattleStartAP_Count::AP_Count' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCharacterDeadPortrait
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetCharacterDeadPortrait final
{
public:
	class UMaterialInstance*                      CharacterDeadPortrait;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCharacterDeadPortrait) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCharacterDeadPortrait");
static_assert(sizeof(BP_CharacterData_C_GetCharacterDeadPortrait) == 0x000008, "Wrong size on BP_CharacterData_C_GetCharacterDeadPortrait");
static_assert(offsetof(BP_CharacterData_C_GetCharacterDeadPortrait, CharacterDeadPortrait) == 0x000000, "Member 'BP_CharacterData_C_GetCharacterDeadPortrait::CharacterDeadPortrait' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCharacterDisplayName
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_GetCharacterDisplayName final
{
public:
	class FText                                   CharacterDisplayName;                              // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_CharacterData_C_GetCharacterDisplayName) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCharacterDisplayName");
static_assert(sizeof(BP_CharacterData_C_GetCharacterDisplayName) == 0x000010, "Wrong size on BP_CharacterData_C_GetCharacterDisplayName");
static_assert(offsetof(BP_CharacterData_C_GetCharacterDisplayName, CharacterDisplayName) == 0x000000, "Member 'BP_CharacterData_C_GetCharacterDisplayName::CharacterDisplayName' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCharacterGenderTag
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterData_C_GetCharacterGenderTag final
{
public:
	ETextGender                                   GenderTag;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCharacterGenderTag) == 0x000001, "Wrong alignment on BP_CharacterData_C_GetCharacterGenderTag");
static_assert(sizeof(BP_CharacterData_C_GetCharacterGenderTag) == 0x000001, "Wrong size on BP_CharacterData_C_GetCharacterGenderTag");
static_assert(offsetof(BP_CharacterData_C_GetCharacterGenderTag, GenderTag) == 0x000000, "Member 'BP_CharacterData_C_GetCharacterGenderTag::GenderTag' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCharacterIconBig
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetCharacterIconBig final
{
public:
	class UTexture2D*                             CharacterIconBig;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCharacterIconBig) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCharacterIconBig");
static_assert(sizeof(BP_CharacterData_C_GetCharacterIconBig) == 0x000008, "Wrong size on BP_CharacterData_C_GetCharacterIconBig");
static_assert(offsetof(BP_CharacterData_C_GetCharacterIconBig, CharacterIconBig) == 0x000000, "Member 'BP_CharacterData_C_GetCharacterIconBig::CharacterIconBig' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCharacterPortrait
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetCharacterPortrait final
{
public:
	class UTexture2D*                             CharacterIcon;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCharacterPortrait) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCharacterPortrait");
static_assert(sizeof(BP_CharacterData_C_GetCharacterPortrait) == 0x000008, "Wrong size on BP_CharacterData_C_GetCharacterPortrait");
static_assert(offsetof(BP_CharacterData_C_GetCharacterPortrait, CharacterIcon) == 0x000000, "Member 'BP_CharacterData_C_GetCharacterPortrait::CharacterIcon' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCharacterStats
// 0x0058 (0x0058 - 0x0000)
struct BP_CharacterData_C_GetCharacterStats final
{
public:
	TMap<E_jRPG_StatType, double>                 Stats;                                             // 0x0000(0x0050)(Parm, OutParm)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCharacterStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCharacterStats");
static_assert(sizeof(BP_CharacterData_C_GetCharacterStats) == 0x000058, "Wrong size on BP_CharacterData_C_GetCharacterStats");
static_assert(offsetof(BP_CharacterData_C_GetCharacterStats, Stats) == 0x000000, "Member 'BP_CharacterData_C_GetCharacterStats::Stats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCharacterStats, CallFunc_Map_Length_ReturnValue) == 0x000050, "Member 'BP_CharacterData_C_GetCharacterStats::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCharacterStats, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'BP_CharacterData_C_GetCharacterStats::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCommonBattleStats
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterData_C_GetCommonBattleStats final
{
public:
	struct FFCharacterStats                       CommonStats;                                       // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCommonBattleStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCommonBattleStats");
static_assert(sizeof(BP_CharacterData_C_GetCommonBattleStats) == 0x000030, "Wrong size on BP_CharacterData_C_GetCommonBattleStats");
static_assert(offsetof(BP_CharacterData_C_GetCommonBattleStats, CommonStats) == 0x000000, "Member 'BP_CharacterData_C_GetCommonBattleStats::CommonStats' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCurrentLevelExperience
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterData_C_GetCurrentLevelExperience final
{
public:
	int32                                         CurrentExperienceInLevel_0;                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCurrentLevelExperience) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetCurrentLevelExperience");
static_assert(sizeof(BP_CharacterData_C_GetCurrentLevelExperience) == 0x000004, "Wrong size on BP_CharacterData_C_GetCurrentLevelExperience");
static_assert(offsetof(BP_CharacterData_C_GetCurrentLevelExperience, CurrentExperienceInLevel_0) == 0x000000, "Member 'BP_CharacterData_C_GetCurrentLevelExperience::CurrentExperienceInLevel_0' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCurrentLevelExperienceProgression
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterData_C_GetCurrentLevelExperienceProgression final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLevelExperience_CurrentExperienceInLevel; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCurrentLevelExperienceProgression) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCurrentLevelExperienceProgression");
static_assert(sizeof(BP_CharacterData_C_GetCurrentLevelExperienceProgression) == 0x000028, "Wrong size on BP_CharacterData_C_GetCurrentLevelExperienceProgression");
static_assert(offsetof(BP_CharacterData_C_GetCurrentLevelExperienceProgression, Progress) == 0x000000, "Member 'BP_CharacterData_C_GetCurrentLevelExperienceProgression::Progress' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCurrentLevelExperienceProgression, CallFunc_GetCurrentLevelExperience_CurrentExperienceInLevel) == 0x000008, "Member 'BP_CharacterData_C_GetCurrentLevelExperienceProgression::CallFunc_GetCurrentLevelExperience_CurrentExperienceInLevel' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCurrentLevelExperienceProgression, CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded) == 0x00000C, "Member 'BP_CharacterData_C_GetCurrentLevelExperienceProgression::CallFunc_GetExperienceNeededToLevelUp_ExperienceNeeded' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCurrentLevelExperienceProgression, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_GetCurrentLevelExperienceProgression::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCurrentLevelExperienceProgression, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000018, "Member 'BP_CharacterData_C_GetCurrentLevelExperienceProgression::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCurrentLevelExperienceProgression, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_GetCurrentLevelExperienceProgression::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCurrentlyUsedLuminaPoints
// 0x0004 (0x0004 - 0x0000)
struct BP_CharacterData_C_GetCurrentlyUsedLuminaPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCurrentlyUsedLuminaPoints) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetCurrentlyUsedLuminaPoints");
static_assert(sizeof(BP_CharacterData_C_GetCurrentlyUsedLuminaPoints) == 0x000004, "Wrong size on BP_CharacterData_C_GetCurrentlyUsedLuminaPoints");
static_assert(offsetof(BP_CharacterData_C_GetCurrentlyUsedLuminaPoints, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetCurrentlyUsedLuminaPoints::ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetCustomizationTypeForCharacter
// 0x0158 (0x0158 - 0x0000)
struct BP_CharacterData_C_GetCustomizationTypeForCharacter final
{
public:
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	E_CustomizationItemType                       CustomizationType;                                 // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_CharacterFace_C*     K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Face; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_CharacterSkin_C*     K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Skin; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemCompatibleWithCharacter_Compatible; // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemCompatibleWithCharacter_Compatible_1; // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetCustomizationTypeForCharacter) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetCustomizationTypeForCharacter");
static_assert(sizeof(BP_CharacterData_C_GetCustomizationTypeForCharacter) == 0x000158, "Wrong size on BP_CharacterData_C_GetCustomizationTypeForCharacter");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, Item) == 0x000000, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, CustomizationType) == 0x000130, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::CustomizationType' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Face) == 0x000138, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Face' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Skin) == 0x000148, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::K2Node_DynamicCast_AsBP_Data_Asset_Item_Character_Skin' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, CallFunc_IsItemCompatibleWithCharacter_Compatible) == 0x000151, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::CallFunc_IsItemCompatibleWithCharacter_Compatible' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetCustomizationTypeForCharacter, CallFunc_IsItemCompatibleWithCharacter_Compatible_1) == 0x000152, "Member 'BP_CharacterData_C_GetCustomizationTypeForCharacter::CallFunc_IsItemCompatibleWithCharacter_Compatible_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEffectiveLuminaCost
// 0x0148 (0x0148 - 0x0000)
struct BP_CharacterData_C_GetEffectiveLuminaCost final
{
public:
	struct FFPassiveEffect                        PassiveEffectDefinition;                           // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             PassiveEffectProgression;                          // 0x0048(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0060(0x0010)()
	bool                                          CallFunc_IsPassiveEffectUnlocked_IsUnlocked;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_BecauseLearnt;    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_BecauseEquipment; // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x00C8(0x0010)()
	int32                                         K2Node_Select_Default;                             // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_GetEffectiveLuminaCost) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEffectiveLuminaCost");
static_assert(sizeof(BP_CharacterData_C_GetEffectiveLuminaCost) == 0x000148, "Wrong size on BP_CharacterData_C_GetEffectiveLuminaCost");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, PassiveEffectDefinition) == 0x000000, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::PassiveEffectDefinition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, PassiveEffectProgression) == 0x000048, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::PassiveEffectProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, ReturnValue) == 0x000058, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, Temp_bool_Variable) == 0x00005C, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, CallFunc_Conv_NameToText_ReturnValue) == 0x000060, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, CallFunc_IsPassiveEffectUnlocked_IsUnlocked) == 0x000070, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::CallFunc_IsPassiveEffectUnlocked_IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, CallFunc_IsPassiveEffectUnlocked_BecauseLearnt) == 0x000071, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::CallFunc_IsPassiveEffectUnlocked_BecauseLearnt' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, CallFunc_IsPassiveEffectUnlocked_BecauseEquipment) == 0x000072, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::CallFunc_IsPassiveEffectUnlocked_BecauseEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, Temp_int_Variable) == 0x0000C0, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0000C8, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, K2Node_Select_Default) == 0x0000D8, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEffectiveLuminaCost, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_CharacterData_C_GetEffectiveLuminaCost::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetElementForSkill
// 0x0110 (0x0110 - 0x0000)
struct BP_CharacterData_C_GetElementForSkill final
{
public:
	class UBP_DataAsset_Skill_C*                  SkillDefinition;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedWeaponItemInstance_Valid;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetEquippedWeaponItemInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_WeaponDefinition;     // 0x0018(0x00F0)(HasGetValueTypeHash)
	EAttackType                                   Temp_byte_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillElementOverride                         Temp_byte_Variable_1;                              // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   K2Node_Select_Default;                             // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetElementForSkill) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetElementForSkill");
static_assert(sizeof(BP_CharacterData_C_GetElementForSkill) == 0x000110, "Wrong size on BP_CharacterData_C_GetElementForSkill");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, SkillDefinition) == 0x000000, "Member 'BP_CharacterData_C_GetElementForSkill::SkillDefinition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetElementForSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, CallFunc_GetEquippedWeaponItemInstance_Valid) == 0x000009, "Member 'BP_CharacterData_C_GetElementForSkill::CallFunc_GetEquippedWeaponItemInstance_Valid' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, CallFunc_GetEquippedWeaponItemInstance_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_GetElementForSkill::CallFunc_GetEquippedWeaponItemInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, CallFunc_GetWeaponDefinition_WeaponDefinition) == 0x000018, "Member 'BP_CharacterData_C_GetElementForSkill::CallFunc_GetWeaponDefinition_WeaponDefinition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, Temp_byte_Variable) == 0x000108, "Member 'BP_CharacterData_C_GetElementForSkill::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000109, "Member 'BP_CharacterData_C_GetElementForSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, Temp_byte_Variable_1) == 0x00010A, "Member 'BP_CharacterData_C_GetElementForSkill::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetElementForSkill, K2Node_Select_Default) == 0x00010B, "Member 'BP_CharacterData_C_GetElementForSkill::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquipmentSaveData
// 0x00E8 (0x00E8 - 0x0000)
struct BP_CharacterData_C_GetEquipmentSaveData final
{
public:
	TMap<struct FFEquipmentSlot, class FName>     local_equipmentPerSlotSave1;                       // 0x0000(0x0050)(Parm, OutParm)
	TMap<struct FFEquipmentSlot, class FName>     local_equipmentPerSlotSave;                        // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFEquipmentSlot>                CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm)
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_Map_Find_Value;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetEquipmentSaveData) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquipmentSaveData");
static_assert(sizeof(BP_CharacterData_C_GetEquipmentSaveData) == 0x0000E8, "Wrong size on BP_CharacterData_C_GetEquipmentSaveData");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, local_equipmentPerSlotSave1) == 0x000000, "Member 'BP_CharacterData_C_GetEquipmentSaveData::local_equipmentPerSlotSave1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, local_equipmentPerSlotSave) == 0x000050, "Member 'BP_CharacterData_C_GetEquipmentSaveData::local_equipmentPerSlotSave' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_CharacterData_C_GetEquipmentSaveData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_CharacterData_C_GetEquipmentSaveData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_Less_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentSaveData, CallFunc_GetItemDefinitionID_ReturnValue) == 0x0000DC, "Member 'BP_CharacterData_C_GetEquipmentSaveData::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquipmentStats
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_GetEquipmentStats final
{
public:
	TMap<E_jRPG_StatType, double>                 EquipmentStats_0;                                  // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_CharacterData_C_GetEquipmentStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquipmentStats");
static_assert(sizeof(BP_CharacterData_C_GetEquipmentStats) == 0x000050, "Wrong size on BP_CharacterData_C_GetEquipmentStats");
static_assert(offsetof(BP_CharacterData_C_GetEquipmentStats, EquipmentStats_0) == 0x000000, "Member 'BP_CharacterData_C_GetEquipmentStats::EquipmentStats_0' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquippedPassiveEffectsData
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CharacterData_C_GetEquippedPassiveEffectsData final
{
public:
	TArray<struct FFPassiveEffect>                PassiveEffectDefinitions;                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FFPassiveEffect>                Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFPassiveEffect>                Temp_wildcard_Temp_buffer_array_Variable;          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetEquippedPassiveEffectsData) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquippedPassiveEffectsData");
static_assert(sizeof(BP_CharacterData_C_GetEquippedPassiveEffectsData) == 0x0000A0, "Wrong size on BP_CharacterData_C_GetEquippedPassiveEffectsData");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, PassiveEffectDefinitions) == 0x000000, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::PassiveEffectDefinitions' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000010, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, Temp_wildcard_Temp_buffer_array_Variable) == 0x000030, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedPassiveEffectsData, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BP_CharacterData_C_GetEquippedPassiveEffectsData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquippedSkills
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterData_C_GetEquippedSkills final
{
public:
	TArray<class UBP_DataAsset_Skill_C*>          EquippedSkills_0;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetEquippedSkills_EquippedSkills;         // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CharacterData_C_GetEquippedSkills) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquippedSkills");
static_assert(sizeof(BP_CharacterData_C_GetEquippedSkills) == 0x000020, "Wrong size on BP_CharacterData_C_GetEquippedSkills");
static_assert(offsetof(BP_CharacterData_C_GetEquippedSkills, EquippedSkills_0) == 0x000000, "Member 'BP_CharacterData_C_GetEquippedSkills::EquippedSkills_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedSkills, CallFunc_GetEquippedSkills_EquippedSkills) == 0x000010, "Member 'BP_CharacterData_C_GetEquippedSkills::CallFunc_GetEquippedSkills_EquippedSkills' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquippedSkillsSaveData
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterData_C_GetEquippedSkillsSaveData final
{
public:
	TArray<class FName>                           EquippedSkillIDs;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           CallFunc_GetEquippedSkillsSaveData_EquippedSkillIDs; // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CharacterData_C_GetEquippedSkillsSaveData) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquippedSkillsSaveData");
static_assert(sizeof(BP_CharacterData_C_GetEquippedSkillsSaveData) == 0x000020, "Wrong size on BP_CharacterData_C_GetEquippedSkillsSaveData");
static_assert(offsetof(BP_CharacterData_C_GetEquippedSkillsSaveData, EquippedSkillIDs) == 0x000000, "Member 'BP_CharacterData_C_GetEquippedSkillsSaveData::EquippedSkillIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedSkillsSaveData, CallFunc_GetEquippedSkillsSaveData_EquippedSkillIDs) == 0x000010, "Member 'BP_CharacterData_C_GetEquippedSkillsSaveData::CallFunc_GetEquippedSkillsSaveData_EquippedSkillIDs' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquippedWeaponDefinition
// 0x0330 (0x0330 - 0x0000)
struct BP_CharacterData_C_GetEquippedWeaponDefinition final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponDefinition                    ReturnValue;                                       // 0x0008(0x00F0)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemInSlot_Value;                      // 0x0100(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemID_ItemID;                         // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponDefinition_Found;                // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_OutRow;               // 0x0240(0x00F0)(HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetEquippedWeaponDefinition) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquippedWeaponDefinition");
static_assert(sizeof(BP_CharacterData_C_GetEquippedWeaponDefinition) == 0x000330, "Wrong size on BP_CharacterData_C_GetEquippedWeaponDefinition");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, Valid) == 0x000000, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::Valid' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, K2Node_MakeStruct_FEquipmentSlot) == 0x0000F8, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::K2Node_MakeStruct_FEquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, CallFunc_GetItemInSlot_Value) == 0x000100, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::CallFunc_GetItemInSlot_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, CallFunc_IsSlotUsed_ReturnValue) == 0x000230, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, CallFunc_GetItemID_ItemID) == 0x000234, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::CallFunc_GetItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, CallFunc_GetWeaponDefinition_Found) == 0x00023C, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::CallFunc_GetWeaponDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponDefinition, CallFunc_GetWeaponDefinition_OutRow) == 0x000240, "Member 'BP_CharacterData_C_GetEquippedWeaponDefinition::CallFunc_GetWeaponDefinition_OutRow' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquippedWeaponItem
// 0x0278 (0x0278 - 0x0000)
struct BP_CharacterData_C_GetEquippedWeaponItem final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                ReturnValue;                                       // 0x0008(0x0130)(Parm, OutParm, ReturnParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemInSlot_Value;                      // 0x0140(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetEquippedWeaponItem) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquippedWeaponItem");
static_assert(sizeof(BP_CharacterData_C_GetEquippedWeaponItem) == 0x000278, "Wrong size on BP_CharacterData_C_GetEquippedWeaponItem");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItem, Valid) == 0x000000, "Member 'BP_CharacterData_C_GetEquippedWeaponItem::Valid' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItem, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetEquippedWeaponItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItem, K2Node_MakeStruct_FEquipmentSlot) == 0x000138, "Member 'BP_CharacterData_C_GetEquippedWeaponItem::K2Node_MakeStruct_FEquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItem, CallFunc_GetItemInSlot_Value) == 0x000140, "Member 'BP_CharacterData_C_GetEquippedWeaponItem::CallFunc_GetItemInSlot_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItem, CallFunc_IsSlotUsed_ReturnValue) == 0x000270, "Member 'BP_CharacterData_C_GetEquippedWeaponItem::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetEquippedWeaponItemInstance
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterData_C_GetEquippedWeaponItemInstance final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        K2Node_MakeStruct_FEquipmentSlot;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_GetItemInstanceInSlot_ItemInstance;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetEquippedWeaponItemInstance) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetEquippedWeaponItemInstance");
static_assert(sizeof(BP_CharacterData_C_GetEquippedWeaponItemInstance) == 0x000038, "Wrong size on BP_CharacterData_C_GetEquippedWeaponItemInstance");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItemInstance, Valid) == 0x000000, "Member 'BP_CharacterData_C_GetEquippedWeaponItemInstance::Valid' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItemInstance, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetEquippedWeaponItemInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItemInstance, K2Node_MakeStruct_FEquipmentSlot) == 0x000010, "Member 'BP_CharacterData_C_GetEquippedWeaponItemInstance::K2Node_MakeStruct_FEquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItemInstance, CallFunc_IsSlotUsed_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_GetEquippedWeaponItemInstance::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItemInstance, CallFunc_GetItemInstanceInSlot_ItemInstance) == 0x000020, "Member 'BP_CharacterData_C_GetEquippedWeaponItemInstance::CallFunc_GetItemInstanceInSlot_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItemInstance, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon) == 0x000028, "Member 'BP_CharacterData_C_GetEquippedWeaponItemInstance::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetEquippedWeaponItemInstance, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_CharacterData_C_GetEquippedWeaponItemInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetExplorationAudioProfile
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetExplorationAudioProfile final
{
public:
	class UBP_DataAsset_CharacterExplorationAudioProfile_C* AudioProfileAsset;                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetExplorationAudioProfile) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetExplorationAudioProfile");
static_assert(sizeof(BP_CharacterData_C_GetExplorationAudioProfile) == 0x000008, "Wrong size on BP_CharacterData_C_GetExplorationAudioProfile");
static_assert(offsetof(BP_CharacterData_C_GetExplorationAudioProfile, AudioProfileAsset) == 0x000000, "Member 'BP_CharacterData_C_GetExplorationAudioProfile::AudioProfileAsset' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetGearItemsFromEquipmentSlots
// 0x0078 (0x0078 - 0x0000)
struct BP_CharacterData_C_GetGearItemsFromEquipmentSlots final
{
public:
	TMap<struct FFEquipmentSlot, struct FS_jRPG_Item_StaticData> EquipmentPerSlot_0;                 // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	TArray<struct FS_jRPG_Item_StaticData>        CallFunc_Map_Values_Values;                        // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetGearItemsFromEquipmentSlots");
static_assert(sizeof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots) == 0x000078, "Wrong size on BP_CharacterData_C_GetGearItemsFromEquipmentSlots");
static_assert(offsetof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots, EquipmentPerSlot_0) == 0x000000, "Member 'BP_CharacterData_C_GetGearItemsFromEquipmentSlots::EquipmentPerSlot_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots, CallFunc_Map_Values_Values) == 0x000050, "Member 'BP_CharacterData_C_GetGearItemsFromEquipmentSlots::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_CharacterData_C_GetGearItemsFromEquipmentSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_CharacterData_C_GetGearItemsFromEquipmentSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_CharacterData_C_GetGearItemsFromEquipmentSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_CharacterData_C_GetGearItemsFromEquipmentSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearItemsFromEquipmentSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_CharacterData_C_GetGearItemsFromEquipmentSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetGearPassiveEffects
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterData_C_GetGearPassiveEffects final
{
public:
	class UBP_ItemInstance_Gear_C*                GearInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           PassiveEffectIDs;                                  // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_CanUseGearPassiveEffects_ReturnValue;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetGearPassiveEffects) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetGearPassiveEffects");
static_assert(sizeof(BP_CharacterData_C_GetGearPassiveEffects) == 0x000030, "Wrong size on BP_CharacterData_C_GetGearPassiveEffects");
static_assert(offsetof(BP_CharacterData_C_GetGearPassiveEffects, GearInstance) == 0x000000, "Member 'BP_CharacterData_C_GetGearPassiveEffects::GearInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearPassiveEffects, PassiveEffectIDs) == 0x000008, "Member 'BP_CharacterData_C_GetGearPassiveEffects::PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearPassiveEffects, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x000018, "Member 'BP_CharacterData_C_GetGearPassiveEffects::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetGearPassiveEffects, CallFunc_CanUseGearPassiveEffects_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_GetGearPassiveEffects::CallFunc_CanUseGearPassiveEffects_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetHPPercent
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterData_C_GetHPPercent final
{
public:
	double                                        HPPercent;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetHPPercent) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetHPPercent");
static_assert(sizeof(BP_CharacterData_C_GetHPPercent) == 0x000018, "Wrong size on BP_CharacterData_C_GetHPPercent");
static_assert(offsetof(BP_CharacterData_C_GetHPPercent, HPPercent) == 0x000000, "Member 'BP_CharacterData_C_GetHPPercent::HPPercent' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetHPPercent, CallFunc_GetMaxHP_MaxHP) == 0x000008, "Member 'BP_CharacterData_C_GetHPPercent::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetHPPercent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_GetHPPercent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetIsExcluded
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterData_C_GetIsExcluded final
{
public:
	bool                                          Excluded;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetIsExcluded) == 0x000001, "Wrong alignment on BP_CharacterData_C_GetIsExcluded");
static_assert(sizeof(BP_CharacterData_C_GetIsExcluded) == 0x000001, "Wrong size on BP_CharacterData_C_GetIsExcluded");
static_assert(offsetof(BP_CharacterData_C_GetIsExcluded, Excluded) == 0x000000, "Member 'BP_CharacterData_C_GetIsExcluded::Excluded' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetItemInSlot
// 0x0340 (0x0340 - 0x0000)
struct BP_CharacterData_C_GetItemInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                Value;                                             // 0x0008(0x0130)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0138(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0148(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0190(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_Map_Find_Value;                           // 0x01E8(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0320(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0330(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_GetItemInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetItemInSlot");
static_assert(sizeof(BP_CharacterData_C_GetItemInSlot) == 0x000340, "Wrong size on BP_CharacterData_C_GetItemInSlot");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_GetItemInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, Value) == 0x000008, "Member 'BP_CharacterData_C_GetItemInSlot::Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000138, "Member 'BP_CharacterData_C_GetItemInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000148, "Member 'BP_CharacterData_C_GetItemInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, CallFunc_Conv_NameToText_ReturnValue) == 0x000190, "Member 'BP_CharacterData_C_GetItemInSlot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001A0, "Member 'BP_CharacterData_C_GetItemInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, CallFunc_Map_Find_Value) == 0x0001E8, "Member 'BP_CharacterData_C_GetItemInSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, CallFunc_Map_Find_ReturnValue) == 0x000318, "Member 'BP_CharacterData_C_GetItemInSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, K2Node_MakeArray_Array) == 0x000320, "Member 'BP_CharacterData_C_GetItemInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInSlot, CallFunc_Format_ReturnValue) == 0x000330, "Member 'BP_CharacterData_C_GetItemInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetItemInstanceInSlot
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CharacterData_C_GetItemInstanceInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                ItemInstance;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0010(0x0010)()
	class UBP_ItemInstance_Gear_C*                CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_GetItemInstanceInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetItemInstanceInSlot");
static_assert(sizeof(BP_CharacterData_C_GetItemInstanceInSlot) == 0x0000F0, "Wrong size on BP_CharacterData_C_GetItemInstanceInSlot");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, ItemInstance) == 0x000008, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000010, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, CallFunc_Conv_NameToText_ReturnValue) == 0x000078, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetItemInstanceInSlot, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_CharacterData_C_GetItemInstanceInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetLearntSkills
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_GetLearntSkills final
{
public:
	TMap<class FName, int32>                      LearntSkills_0;                                    // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(BP_CharacterData_C_GetLearntSkills) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetLearntSkills");
static_assert(sizeof(BP_CharacterData_C_GetLearntSkills) == 0x000050, "Wrong size on BP_CharacterData_C_GetLearntSkills");
static_assert(offsetof(BP_CharacterData_C_GetLearntSkills, LearntSkills_0) == 0x000000, "Member 'BP_CharacterData_C_GetLearntSkills::LearntSkills_0' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetLuminaDisplayDataFromName
// 0x0190 (0x0190 - 0x0000)
struct BP_CharacterData_C_GetLuminaDisplayDataFromName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PassiveEffectDisplayData            PassiveEffectDisplayData;                          // 0x0008(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	struct FFPassiveEffect                        Temp_wildcard_Variable;                            // 0x0070(0x0048)(HasGetValueTypeHash)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x00B8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectProgression             CallFunc_GetPassiveEffectProgression_Progression;  // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             Temp_wildcard_Variable_1;                          // 0x0114(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEffectiveLuminaCost_ReturnValue;       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PassiveEffectDisplayData            K2Node_MakeStruct_S_PassiveEffectDisplayData;      // 0x0128(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetLuminaDisplayDataFromName) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetLuminaDisplayDataFromName");
static_assert(sizeof(BP_CharacterData_C_GetLuminaDisplayDataFromName) == 0x000190, "Wrong size on BP_CharacterData_C_GetLuminaDisplayDataFromName");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, Name_0) == 0x000000, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::Name_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, PassiveEffectDisplayData) == 0x000008, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::PassiveEffectDisplayData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, Temp_wildcard_Variable) == 0x000070, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x0000B8, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, CallFunc_GetPassiveEffectDefinition_Found) == 0x000100, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, CallFunc_GetPassiveEffectProgression_Progression) == 0x000104, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::CallFunc_GetPassiveEffectProgression_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, Temp_wildcard_Variable_1) == 0x000114, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, CallFunc_GetEffectiveLuminaCost_ReturnValue) == 0x000124, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::CallFunc_GetEffectiveLuminaCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaDisplayDataFromName, K2Node_MakeStruct_S_PassiveEffectDisplayData) == 0x000128, "Member 'BP_CharacterData_C_GetLuminaDisplayDataFromName::K2Node_MakeStruct_S_PassiveEffectDisplayData' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetLuminaInfoFromName
// 0x00C0 (0x00C0 - 0x0000)
struct BP_CharacterData_C_GetLuminaInfoFromName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffect                        Definition;                                        // 0x0008(0x0048)(Parm, OutParm, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             Progression;                                       // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_GetPassiveEffectProgression_Progression;  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x0070(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetLuminaInfoFromName) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetLuminaInfoFromName");
static_assert(sizeof(BP_CharacterData_C_GetLuminaInfoFromName) == 0x0000C0, "Wrong size on BP_CharacterData_C_GetLuminaInfoFromName");
static_assert(offsetof(BP_CharacterData_C_GetLuminaInfoFromName, Name_0) == 0x000000, "Member 'BP_CharacterData_C_GetLuminaInfoFromName::Name_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaInfoFromName, Definition) == 0x000008, "Member 'BP_CharacterData_C_GetLuminaInfoFromName::Definition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaInfoFromName, Progression) == 0x000050, "Member 'BP_CharacterData_C_GetLuminaInfoFromName::Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaInfoFromName, CallFunc_GetPassiveEffectProgression_Progression) == 0x000060, "Member 'BP_CharacterData_C_GetLuminaInfoFromName::CallFunc_GetPassiveEffectProgression_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaInfoFromName, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x000070, "Member 'BP_CharacterData_C_GetLuminaInfoFromName::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetLuminaInfoFromName, CallFunc_GetPassiveEffectDefinition_Found) == 0x0000B8, "Member 'BP_CharacterData_C_GetLuminaInfoFromName::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetMaxAttributePoints
// 0x000C (0x000C - 0x0000)
struct BP_CharacterData_C_GetMaxAttributePoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetMaxAttributePoints) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetMaxAttributePoints");
static_assert(sizeof(BP_CharacterData_C_GetMaxAttributePoints) == 0x00000C, "Wrong size on BP_CharacterData_C_GetMaxAttributePoints");
static_assert(offsetof(BP_CharacterData_C_GetMaxAttributePoints, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetMaxAttributePoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxAttributePoints, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_GetMaxAttributePoints::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxAttributePoints, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000005, "Member 'BP_CharacterData_C_GetMaxAttributePoints::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxAttributePoints, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_CharacterData_C_GetMaxAttributePoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxAttributePoints, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_GetMaxAttributePoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetMaxHP
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterData_C_GetMaxHP final
{
public:
	double                                        MaxHP;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetMaxHP) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetMaxHP");
static_assert(sizeof(BP_CharacterData_C_GetMaxHP) == 0x000020, "Wrong size on BP_CharacterData_C_GetMaxHP");
static_assert(offsetof(BP_CharacterData_C_GetMaxHP, MaxHP) == 0x000000, "Member 'BP_CharacterData_C_GetMaxHP::MaxHP' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxHP, Temp_byte_Variable) == 0x000008, "Member 'BP_CharacterData_C_GetMaxHP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxHP, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_CharacterData_C_GetMaxHP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxHP, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_GetMaxHP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetMaxLuminaPoints
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetMaxLuminaPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetMaxLuminaPoints) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetMaxLuminaPoints");
static_assert(sizeof(BP_CharacterData_C_GetMaxLuminaPoints) == 0x000008, "Wrong size on BP_CharacterData_C_GetMaxLuminaPoints");
static_assert(offsetof(BP_CharacterData_C_GetMaxLuminaPoints, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetMaxLuminaPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxLuminaPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_GetMaxLuminaPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetMaxLuminaPointsDetails
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetMaxLuminaPointsDetails final
{
public:
	int32                                         FromLevel;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromConsumables;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetMaxLuminaPointsDetails) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetMaxLuminaPointsDetails");
static_assert(sizeof(BP_CharacterData_C_GetMaxLuminaPointsDetails) == 0x000008, "Wrong size on BP_CharacterData_C_GetMaxLuminaPointsDetails");
static_assert(offsetof(BP_CharacterData_C_GetMaxLuminaPointsDetails, FromLevel) == 0x000000, "Member 'BP_CharacterData_C_GetMaxLuminaPointsDetails::FromLevel' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetMaxLuminaPointsDetails, FromConsumables) == 0x000004, "Member 'BP_CharacterData_C_GetMaxLuminaPointsDetails::FromConsumables' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetOverdriveSources
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_GetOverdriveSources final
{
public:
	struct FS_jRPG_OverdriveSource                OverdriveSources;                                  // 0x0000(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetOverdriveSources) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetOverdriveSources");
static_assert(sizeof(BP_CharacterData_C_GetOverdriveSources) == 0x000010, "Wrong size on BP_CharacterData_C_GetOverdriveSources");
static_assert(offsetof(BP_CharacterData_C_GetOverdriveSources, OverdriveSources) == 0x000000, "Member 'BP_CharacterData_C_GetOverdriveSources::OverdriveSources' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetPassiveEffectProgression
// 0x0030 (0x0030 - 0x0000)
struct BP_CharacterData_C_GetPassiveEffectProgression final
{
public:
	class FName                                   PassiveEffectID;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             Progression;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_GetOrCreateSharedPassiveEffectProgression_Progression; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetPassiveEffectProgression) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetPassiveEffectProgression");
static_assert(sizeof(BP_CharacterData_C_GetPassiveEffectProgression) == 0x000030, "Wrong size on BP_CharacterData_C_GetPassiveEffectProgression");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgression, PassiveEffectID) == 0x000000, "Member 'BP_CharacterData_C_GetPassiveEffectProgression::PassiveEffectID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgression, Progression) == 0x000008, "Member 'BP_CharacterData_C_GetPassiveEffectProgression::Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgression, CallFunc_GetCustomGI_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_GetPassiveEffectProgression::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgression, CallFunc_GetOrCreateSharedPassiveEffectProgression_Progression) == 0x000020, "Member 'BP_CharacterData_C_GetPassiveEffectProgression::CallFunc_GetOrCreateSharedPassiveEffectProgression_Progression' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetPassiveEffectProgressionFromItem
// 0x0188 (0x0188 - 0x0000)
struct BP_CharacterData_C_GetPassiveEffectProgressionFromItem final
{
public:
	struct FS_jRPG_Item_StaticData                ItemData;                                          // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0130(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectProgression             Progression;                                       // 0x0134(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Pictos_C*            K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos;    // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffects_PassiveEffects; // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPassiveEffectProgressionData_ReturnValue; // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectProgression             CallFunc_GetPassiveEffectProgression_Progression;  // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetPassiveEffectProgressionFromItem");
static_assert(sizeof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem) == 0x000188, "Wrong size on BP_CharacterData_C_GetPassiveEffectProgressionFromItem");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, ItemData) == 0x000000, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::ItemData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, Found) == 0x000130, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, Progression) == 0x000134, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, CallFunc_IsValid_ReturnValue) == 0x000144, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos) == 0x000148, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, CallFunc_GetUnlockedPassiveEffects_PassiveEffects) == 0x000158, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::CallFunc_GetUnlockedPassiveEffects_PassiveEffects' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, CallFunc_Array_Get_Item) == 0x00016C, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000174, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, CallFunc_HasPassiveEffectProgressionData_ReturnValue) == 0x000175, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::CallFunc_HasPassiveEffectProgressionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetPassiveEffectProgressionFromItem, CallFunc_GetPassiveEffectProgression_Progression) == 0x000178, "Member 'BP_CharacterData_C_GetPassiveEffectProgressionFromItem::CallFunc_GetPassiveEffectProgression_Progression' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetSkillGraph
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetSkillGraph final
{
public:
	class UBP_DataAsset_SkillGraph_C*             SkillGraph_0;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetSkillGraph) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetSkillGraph");
static_assert(sizeof(BP_CharacterData_C_GetSkillGraph) == 0x000008, "Wrong size on BP_CharacterData_C_GetSkillGraph");
static_assert(offsetof(BP_CharacterData_C_GetSkillGraph, SkillGraph_0) == 0x000000, "Member 'BP_CharacterData_C_GetSkillGraph::SkillGraph_0' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetSkillState
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterData_C_GetSkillState final
{
public:
	class UBP_DataAsset_Skill_C*                  Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               NodeState;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_unlockCost;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               CallFunc_GetSkillState_NodeState;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetSkillState) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetSkillState");
static_assert(sizeof(BP_CharacterData_C_GetSkillState) == 0x000018, "Wrong size on BP_CharacterData_C_GetSkillState");
static_assert(offsetof(BP_CharacterData_C_GetSkillState, Skill) == 0x000000, "Member 'BP_CharacterData_C_GetSkillState::Skill' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSkillState, NodeState) == 0x000008, "Member 'BP_CharacterData_C_GetSkillState::NodeState' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSkillState, local_unlockCost) == 0x00000C, "Member 'BP_CharacterData_C_GetSkillState::local_unlockCost' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSkillState, CallFunc_GetSkillState_NodeState) == 0x000010, "Member 'BP_CharacterData_C_GetSkillState::CallFunc_GetSkillState_NodeState' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetSkillTree
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetSkillTree final
{
public:
	class UBP_DataAsset_SkillTree_C*              SkillTree;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetSkillTree) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetSkillTree");
static_assert(sizeof(BP_CharacterData_C_GetSkillTree) == 0x000008, "Wrong size on BP_CharacterData_C_GetSkillTree");
static_assert(offsetof(BP_CharacterData_C_GetSkillTree, SkillTree) == 0x000000, "Member 'BP_CharacterData_C_GetSkillTree::SkillTree' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetSlotForItem
// 0x0058 (0x0058 - 0x0000)
struct BP_CharacterData_C_GetSlotForItem final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        Slot;                                              // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFEquipmentSlot>                CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetSlotForItem) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetSlotForItem");
static_assert(sizeof(BP_CharacterData_C_GetSlotForItem) == 0x000058, "Wrong size on BP_CharacterData_C_GetSlotForItem");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, ItemId) == 0x000000, "Member 'BP_CharacterData_C_GetSlotForItem::ItemId' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, Found) == 0x000008, "Member 'BP_CharacterData_C_GetSlotForItem::Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, Slot) == 0x00000C, "Member 'BP_CharacterData_C_GetSlotForItem::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_CharacterData_C_GetSlotForItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_CharacterData_C_GetSlotForItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_GetItemDefinitionID_ReturnValue) == 0x00004C, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetSlotForItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000054, "Member 'BP_CharacterData_C_GetSlotForItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetTotalAssignedAttributePoints
// 0x00D8 (0x00D8 - 0x0000)
struct BP_CharacterData_C_GetTotalAssignedAttributePoints final
{
public:
	int32                                         TotalAssignedAttributePoints;                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalTotalAssignedAttributePoints;                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECharacterAttribute>                   K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	int32                                         CallFunc_Map_Find_Value;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetTotalAssignedAttributePoints) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetTotalAssignedAttributePoints");
static_assert(sizeof(BP_CharacterData_C_GetTotalAssignedAttributePoints) == 0x0000D8, "Wrong size on BP_CharacterData_C_GetTotalAssignedAttributePoints");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, TotalAssignedAttributePoints) == 0x000000, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::TotalAssignedAttributePoints' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, LocalTotalAssignedAttributePoints) == 0x000004, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::LocalTotalAssignedAttributePoints' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, K2Node_MakeArray_Array_1) == 0x0000A8, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Map_Find_ReturnValue) == 0x0000CC, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalAssignedAttributePoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_CharacterData_C_GetTotalAssignedAttributePoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetTotalSkillPoints
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_GetTotalSkillPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalSkillPoints_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetTotalSkillPoints) == 0x000004, "Wrong alignment on BP_CharacterData_C_GetTotalSkillPoints");
static_assert(sizeof(BP_CharacterData_C_GetTotalSkillPoints) == 0x000008, "Wrong size on BP_CharacterData_C_GetTotalSkillPoints");
static_assert(offsetof(BP_CharacterData_C_GetTotalSkillPoints, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_GetTotalSkillPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetTotalSkillPoints, CallFunc_GetTotalSkillPoints_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_GetTotalSkillPoints::CallFunc_GetTotalSkillPoints_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetUnlockedSkillSaveData
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterData_C_GetUnlockedSkillSaveData final
{
public:
	TArray<class FName>                           UnlockedSkillIDs;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           CallFunc_GetUnlockedSkillSaveData_UnlockedSkillIDs; // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CharacterData_C_GetUnlockedSkillSaveData) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetUnlockedSkillSaveData");
static_assert(sizeof(BP_CharacterData_C_GetUnlockedSkillSaveData) == 0x000020, "Wrong size on BP_CharacterData_C_GetUnlockedSkillSaveData");
static_assert(offsetof(BP_CharacterData_C_GetUnlockedSkillSaveData, UnlockedSkillIDs) == 0x000000, "Member 'BP_CharacterData_C_GetUnlockedSkillSaveData::UnlockedSkillIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetUnlockedSkillSaveData, CallFunc_GetUnlockedSkillSaveData_UnlockedSkillIDs) == 0x000010, "Member 'BP_CharacterData_C_GetUnlockedSkillSaveData::CallFunc_GetUnlockedSkillSaveData_UnlockedSkillIDs' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetWeaponInstancePower
// 0x0430 (0x0430 - 0x0000)
struct BP_CharacterData_C_GetWeaponInstancePower final
{
public:
	class UBP_ItemInstance_Gear_Weapon_C*         WeaponInstanceData;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalDamage;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BaseDamage;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScalingDamage;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterAttribute, int32>              ScalingDamageByAttribute;                          // 0x0018(0x0050)(Parm, OutParm)
	TMap<ECharacterAttribute, EAttributeScalingGrade> local_scaling;                                 // 0x0068(0x0050)(Edit, BlueprintVisible)
	int32                                         local_currentAttributeScalingDamage;               // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAttribute                           local_currentAttribute;                            // 0x00BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalScalingDamage;                                // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterAttribute, int32>              LocalScalingDamageByAttribute;                     // 0x00C8(0x0050)(Edit, BlueprintVisible)
	TMap<ECharacterAttribute, EAttributeScalingGrade> K2Node_MakeVariable_MakeVariableOutput;        // 0x0118(0x0050)()
	TMap<E_jRPG_StatType, double>                 CallFunc_GetCurrentStats_CurrentStats;             // 0x0168(0x0050)()
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterAttribute, EAttributeScalingGrade> CallFunc_GetCurrentAttributeScaling_ReturnValue; // 0x01C0(0x0050)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0210(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0220(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0268(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0278(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0294(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02C0(0x0048)(HasGetValueTypeHash)
	TArray<ECharacterAttribute>                   CallFunc_Map_Keys_Keys;                            // 0x0308(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0328(0x0048)(HasGetValueTypeHash)
	EAttributeScalingGrade                        CallFunc_Map_Find_Value_2;                         // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0390(0x0010)()
	double                                        CallFunc_GetWeaponScalingPotencyMultiplier_Multiplier; // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x03A8(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0410(0x0010)()
	ECharacterAttribute                           Temp_byte_Variable_1;                              // 0x0420(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttributeScalingGrade                        Temp_byte_Variable_2;                              // 0x042C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetWeaponInstancePower) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetWeaponInstancePower");
static_assert(sizeof(BP_CharacterData_C_GetWeaponInstancePower) == 0x000430, "Wrong size on BP_CharacterData_C_GetWeaponInstancePower");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, WeaponInstanceData) == 0x000000, "Member 'BP_CharacterData_C_GetWeaponInstancePower::WeaponInstanceData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, TotalDamage) == 0x000008, "Member 'BP_CharacterData_C_GetWeaponInstancePower::TotalDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, BaseDamage) == 0x00000C, "Member 'BP_CharacterData_C_GetWeaponInstancePower::BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, ScalingDamage) == 0x000010, "Member 'BP_CharacterData_C_GetWeaponInstancePower::ScalingDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, ScalingDamageByAttribute) == 0x000018, "Member 'BP_CharacterData_C_GetWeaponInstancePower::ScalingDamageByAttribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, local_scaling) == 0x000068, "Member 'BP_CharacterData_C_GetWeaponInstancePower::local_scaling' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, local_currentAttributeScalingDamage) == 0x0000B8, "Member 'BP_CharacterData_C_GetWeaponInstancePower::local_currentAttributeScalingDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, local_currentAttribute) == 0x0000BC, "Member 'BP_CharacterData_C_GetWeaponInstancePower::local_currentAttribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, LocalScalingDamage) == 0x0000C0, "Member 'BP_CharacterData_C_GetWeaponInstancePower::LocalScalingDamage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, LocalScalingDamageByAttribute) == 0x0000C8, "Member 'BP_CharacterData_C_GetWeaponInstancePower::LocalScalingDamageByAttribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, K2Node_MakeVariable_MakeVariableOutput) == 0x000118, "Member 'BP_CharacterData_C_GetWeaponInstancePower::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_GetCurrentStats_CurrentStats) == 0x000168, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_GetCurrentStats_CurrentStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_GetItemDefinitionID_ReturnValue) == 0x0001B8, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_GetCurrentAttributeScaling_ReturnValue) == 0x0001C0, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_GetCurrentAttributeScaling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Conv_NameToText_ReturnValue) == 0x000210, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, K2Node_MakeStruct_FormatArgumentData) == 0x000220, "Member 'BP_CharacterData_C_GetWeaponInstancePower::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, K2Node_MakeArray_Array) == 0x000268, "Member 'BP_CharacterData_C_GetWeaponInstancePower::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Format_ReturnValue) == 0x000278, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, Temp_int_Array_Index_Variable) == 0x000288, "Member 'BP_CharacterData_C_GetWeaponInstancePower::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, Temp_int_Loop_Counter_Variable) == 0x00028C, "Member 'BP_CharacterData_C_GetWeaponInstancePower::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Add_IntInt_ReturnValue) == 0x000290, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, Temp_byte_Variable) == 0x000294, "Member 'BP_CharacterData_C_GetWeaponInstancePower::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Map_Find_Value) == 0x000298, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Map_Find_ReturnValue) == 0x0002A0, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Map_Find_Value_1) == 0x0002A4, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Map_Find_ReturnValue_1) == 0x0002A8, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Round_ReturnValue) == 0x0002AC, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0002B0, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0002B8, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002C0, "Member 'BP_CharacterData_C_GetWeaponInstancePower::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Map_Keys_Keys) == 0x000308, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000318, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Array_Get_Item) == 0x000320, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, K2Node_MakeStruct_FormatArgumentData_2) == 0x000328, "Member 'BP_CharacterData_C_GetWeaponInstancePower::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Map_Find_Value_2) == 0x000370, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Map_Find_ReturnValue_2) == 0x000371, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Array_Length_ReturnValue) == 0x000374, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000378, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Less_IntInt_ReturnValue) == 0x000379, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000380, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Conv_StringToText_ReturnValue) == 0x000390, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_GetWeaponScalingPotencyMultiplier_Multiplier) == 0x0003A0, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_GetWeaponScalingPotencyMultiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, K2Node_MakeStruct_FormatArgumentData_3) == 0x0003A8, "Member 'BP_CharacterData_C_GetWeaponInstancePower::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003F0, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, K2Node_MakeArray_Array_1) == 0x0003F8, "Member 'BP_CharacterData_C_GetWeaponInstancePower::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Round_ReturnValue_1) == 0x000408, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Format_ReturnValue_1) == 0x000410, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, Temp_byte_Variable_1) == 0x000420, "Member 'BP_CharacterData_C_GetWeaponInstancePower::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Add_IntInt_ReturnValue_1) == 0x000424, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, CallFunc_Add_IntInt_ReturnValue_2) == 0x000428, "Member 'BP_CharacterData_C_GetWeaponInstancePower::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponInstancePower, Temp_byte_Variable_2) == 0x00042C, "Member 'BP_CharacterData_C_GetWeaponInstancePower::Temp_byte_Variable_2' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.GetWeaponScalingPotencyMultiplier
// 0x0078 (0x0078 - 0x0000)
struct BP_CharacterData_C_GetWeaponScalingPotencyMultiplier final
{
public:
	EAttributeScalingGrade                        ScalingGrade;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAttribute                           Attribute;                                         // 0x0001(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Multiplier;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttributeScalingGrade                        Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier) == 0x000008, "Wrong alignment on BP_CharacterData_C_GetWeaponScalingPotencyMultiplier");
static_assert(sizeof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier) == 0x000078, "Wrong size on BP_CharacterData_C_GetWeaponScalingPotencyMultiplier");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, ScalingGrade) == 0x000000, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::ScalingGrade' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Attribute) == 0x000001, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Attribute' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Multiplier) == 0x000008, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_byte_Variable) == 0x000010, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_real_Variable) == 0x000014, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_real_Variable_1) == 0x000018, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_real_Variable_2) == 0x00001C, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_real_Variable_3) == 0x000020, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_real_Variable_4) == 0x000024, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_real_Variable_5) == 0x000028, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, K2Node_Select_Default) == 0x000038, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, Temp_bool_Variable) == 0x00003C, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000040, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, K2Node_Select_Default_1) == 0x000048, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_Map_Find_ReturnValue) == 0x000054, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_GetWeaponScalingPotencyMultiplier, K2Node_Select_Option_0_ImplicitCast) == 0x000070, "Member 'BP_CharacterData_C_GetWeaponScalingPotencyMultiplier::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.HasItemEquipped
// 0x0058 (0x0058 - 0x0000)
struct BP_CharacterData_C_HasItemEquipped final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        Slot;                                              // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFEquipmentSlot>                CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_HasItemEquipped) == 0x000008, "Wrong alignment on BP_CharacterData_C_HasItemEquipped");
static_assert(sizeof(BP_CharacterData_C_HasItemEquipped) == 0x000058, "Wrong size on BP_CharacterData_C_HasItemEquipped");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, ItemId) == 0x000000, "Member 'BP_CharacterData_C_HasItemEquipped::ItemId' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, IsEquipped) == 0x000008, "Member 'BP_CharacterData_C_HasItemEquipped::IsEquipped' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, Slot) == 0x00000C, "Member 'BP_CharacterData_C_HasItemEquipped::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_CharacterData_C_HasItemEquipped::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_CharacterData_C_HasItemEquipped::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_GetItemDefinitionID_ReturnValue) == 0x00004C, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasItemEquipped, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000054, "Member 'BP_CharacterData_C_HasItemEquipped::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.HasLearnableSkills
// 0x0002 (0x0002 - 0x0000)
struct BP_CharacterData_C_HasLearnableSkills final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLearnableSkills_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_HasLearnableSkills) == 0x000001, "Wrong alignment on BP_CharacterData_C_HasLearnableSkills");
static_assert(sizeof(BP_CharacterData_C_HasLearnableSkills) == 0x000002, "Wrong size on BP_CharacterData_C_HasLearnableSkills");
static_assert(offsetof(BP_CharacterData_C_HasLearnableSkills, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_HasLearnableSkills::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasLearnableSkills, CallFunc_HasLearnableSkills_ReturnValue) == 0x000001, "Member 'BP_CharacterData_C_HasLearnableSkills::CallFunc_HasLearnableSkills_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.HasLearntAnyAdjacentSkill
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_HasLearntAnyAdjacentSkill final
{
public:
	const class UBP_DataAsset_Skill_C*            Skill;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasLearntDependencySkills_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_HasLearntAnyAdjacentSkill) == 0x000008, "Wrong alignment on BP_CharacterData_C_HasLearntAnyAdjacentSkill");
static_assert(sizeof(BP_CharacterData_C_HasLearntAnyAdjacentSkill) == 0x000010, "Wrong size on BP_CharacterData_C_HasLearntAnyAdjacentSkill");
static_assert(offsetof(BP_CharacterData_C_HasLearntAnyAdjacentSkill, Skill) == 0x000000, "Member 'BP_CharacterData_C_HasLearntAnyAdjacentSkill::Skill' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasLearntAnyAdjacentSkill, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_HasLearntAnyAdjacentSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasLearntAnyAdjacentSkill, CallFunc_HasLearntDependencySkills_ReturnValue) == 0x000009, "Member 'BP_CharacterData_C_HasLearntAnyAdjacentSkill::CallFunc_HasLearntDependencySkills_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.HasMoreSkillsToEquip
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterData_C_HasMoreSkillsToEquip final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxSkillsCount_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetEquippedSkills_EquippedSkills;         // 0x0008(0x0010)(ReferenceParm)
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetUnlockedSkills_ReturnValue;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_HasMoreSkillsToEquip) == 0x000008, "Wrong alignment on BP_CharacterData_C_HasMoreSkillsToEquip");
static_assert(sizeof(BP_CharacterData_C_HasMoreSkillsToEquip) == 0x000038, "Wrong size on BP_CharacterData_C_HasMoreSkillsToEquip");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_GetMaxSkillsCount_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_GetMaxSkillsCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_GetEquippedSkills_EquippedSkills) == 0x000008, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_GetEquippedSkills_EquippedSkills' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_GetUnlockedSkills_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_GetUnlockedSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasMoreSkillsToEquip, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_CharacterData_C_HasMoreSkillsToEquip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.HasPassiveEffectProgressionData
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterData_C_HasPassiveEffectProgressionData final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectProgression             CallFunc_Map_Find_Value;                           // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_HasPassiveEffectProgressionData) == 0x000004, "Wrong alignment on BP_CharacterData_C_HasPassiveEffectProgressionData");
static_assert(sizeof(BP_CharacterData_C_HasPassiveEffectProgressionData) == 0x000020, "Wrong size on BP_CharacterData_C_HasPassiveEffectProgressionData");
static_assert(offsetof(BP_CharacterData_C_HasPassiveEffectProgressionData, Key) == 0x000000, "Member 'BP_CharacterData_C_HasPassiveEffectProgressionData::Key' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasPassiveEffectProgressionData, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_HasPassiveEffectProgressionData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasPassiveEffectProgressionData, CallFunc_Map_Find_Value) == 0x00000C, "Member 'BP_CharacterData_C_HasPassiveEffectProgressionData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasPassiveEffectProgressionData, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'BP_CharacterData_C_HasPassiveEffectProgressionData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.HasReachedMaximulLevel
// 0x001C (0x001C - 0x0000)
struct BP_CharacterData_C_HasReachedMaximulLevel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_newLevel;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_hasLeveledUp;                                // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_addedXPInCurrentLevel;                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_remainingXPToAdd;                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaximumLevel_Level;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_HasReachedMaximulLevel) == 0x000004, "Wrong alignment on BP_CharacterData_C_HasReachedMaximulLevel");
static_assert(sizeof(BP_CharacterData_C_HasReachedMaximulLevel) == 0x00001C, "Wrong size on BP_CharacterData_C_HasReachedMaximulLevel");
static_assert(offsetof(BP_CharacterData_C_HasReachedMaximulLevel, ReturnValue) == 0x000000, "Member 'BP_CharacterData_C_HasReachedMaximulLevel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasReachedMaximulLevel, local_newLevel) == 0x000004, "Member 'BP_CharacterData_C_HasReachedMaximulLevel::local_newLevel' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasReachedMaximulLevel, local_hasLeveledUp) == 0x000008, "Member 'BP_CharacterData_C_HasReachedMaximulLevel::local_hasLeveledUp' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasReachedMaximulLevel, local_addedXPInCurrentLevel) == 0x00000C, "Member 'BP_CharacterData_C_HasReachedMaximulLevel::local_addedXPInCurrentLevel' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasReachedMaximulLevel, local_remainingXPToAdd) == 0x000010, "Member 'BP_CharacterData_C_HasReachedMaximulLevel::local_remainingXPToAdd' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasReachedMaximulLevel, CallFunc_GetMaximumLevel_Level) == 0x000014, "Member 'BP_CharacterData_C_HasReachedMaximulLevel::CallFunc_GetMaximumLevel_Level' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_HasReachedMaximulLevel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_HasReachedMaximulLevel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.InitializeAssignedAttributePoints
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterData_C_InitializeAssignedAttributePoints final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECharacterAttribute>                   K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_InitializeAssignedAttributePoints) == 0x000008, "Wrong alignment on BP_CharacterData_C_InitializeAssignedAttributePoints");
static_assert(sizeof(BP_CharacterData_C_InitializeAssignedAttributePoints) == 0x000038, "Wrong size on BP_CharacterData_C_InitializeAssignedAttributePoints");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitializeAssignedAttributePoints, Temp_int_Variable) == 0x000030, "Member 'BP_CharacterData_C_InitializeAssignedAttributePoints::Temp_int_Variable' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.InitLuminaPassiveProgression
// 0x002C (0x002C - 0x0000)
struct BP_CharacterData_C_InitLuminaPassiveProgression final
{
public:
	class FName                                   PassiveEffectID;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             K2Node_MakeStruct_FPassiveEffectProgression;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_Map_Find_Value;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_InitLuminaPassiveProgression) == 0x000004, "Wrong alignment on BP_CharacterData_C_InitLuminaPassiveProgression");
static_assert(sizeof(BP_CharacterData_C_InitLuminaPassiveProgression) == 0x00002C, "Wrong size on BP_CharacterData_C_InitLuminaPassiveProgression");
static_assert(offsetof(BP_CharacterData_C_InitLuminaPassiveProgression, PassiveEffectID) == 0x000000, "Member 'BP_CharacterData_C_InitLuminaPassiveProgression::PassiveEffectID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitLuminaPassiveProgression, K2Node_MakeStruct_FPassiveEffectProgression) == 0x000008, "Member 'BP_CharacterData_C_InitLuminaPassiveProgression::K2Node_MakeStruct_FPassiveEffectProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitLuminaPassiveProgression, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_CharacterData_C_InitLuminaPassiveProgression::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitLuminaPassiveProgression, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_InitLuminaPassiveProgression::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_InitLuminaPassiveProgression, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_CharacterData_C_InitLuminaPassiveProgression::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.IsPassiveEffectUnlocked
// 0x0024 (0x0024 - 0x0000)
struct BP_CharacterData_C_IsPassiveEffectUnlocked final
{
public:
	class FName                                   PassiveEffectName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecauseLearnt;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecauseEquipment;                                  // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_becauseEquipment;                            // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_becauseLearnt;                               // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isAvailable;                                 // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectProgression             CallFunc_GetPassiveEffectProgression_Progression;  // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_IsPassiveEffectUnlocked) == 0x000004, "Wrong alignment on BP_CharacterData_C_IsPassiveEffectUnlocked");
static_assert(sizeof(BP_CharacterData_C_IsPassiveEffectUnlocked) == 0x000024, "Wrong size on BP_CharacterData_C_IsPassiveEffectUnlocked");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, PassiveEffectName) == 0x000000, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::PassiveEffectName' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, IsUnlocked) == 0x000008, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, BecauseLearnt) == 0x000009, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::BecauseLearnt' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, BecauseEquipment) == 0x00000A, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::BecauseEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, local_becauseEquipment) == 0x00000B, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::local_becauseEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, local_becauseLearnt) == 0x00000C, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::local_becauseLearnt' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, local_isAvailable) == 0x00000D, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::local_isAvailable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00000E, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, CallFunc_GetPassiveEffectProgression_Progression) == 0x000010, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::CallFunc_GetPassiveEffectProgression_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect) == 0x000020, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsPassiveEffectUnlocked, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000021, "Member 'BP_CharacterData_C_IsPassiveEffectUnlocked::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.IsSkillUnlocked
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_IsSkillUnlocked final
{
public:
	const class UBP_DataAsset_Skill_C*            Skill;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillUnlocked_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_IsSkillUnlocked) == 0x000008, "Wrong alignment on BP_CharacterData_C_IsSkillUnlocked");
static_assert(sizeof(BP_CharacterData_C_IsSkillUnlocked) == 0x000010, "Wrong size on BP_CharacterData_C_IsSkillUnlocked");
static_assert(offsetof(BP_CharacterData_C_IsSkillUnlocked, Skill) == 0x000000, "Member 'BP_CharacterData_C_IsSkillUnlocked::Skill' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsSkillUnlocked, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_IsSkillUnlocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsSkillUnlocked, CallFunc_IsSkillUnlocked_ReturnValue) == 0x000009, "Member 'BP_CharacterData_C_IsSkillUnlocked::CallFunc_IsSkillUnlocked_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.IsSlotEmpty
// 0x000C (0x000C - 0x0000)
struct BP_CharacterData_C_IsSlotEmpty final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_IsSlotEmpty) == 0x000004, "Wrong alignment on BP_CharacterData_C_IsSlotEmpty");
static_assert(sizeof(BP_CharacterData_C_IsSlotEmpty) == 0x00000C, "Wrong size on BP_CharacterData_C_IsSlotEmpty");
static_assert(offsetof(BP_CharacterData_C_IsSlotEmpty, Slot) == 0x000000, "Member 'BP_CharacterData_C_IsSlotEmpty::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsSlotEmpty, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_IsSlotEmpty::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsSlotEmpty, CallFunc_IsSlotUsed_ReturnValue) == 0x000009, "Member 'BP_CharacterData_C_IsSlotEmpty::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsSlotEmpty, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_CharacterData_C_IsSlotEmpty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.IsSlotUsed
// 0x000C (0x000C - 0x0000)
struct BP_CharacterData_C_IsSlotUsed final
{
public:
	struct FFEquipmentSlot                        Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_IsSlotUsed) == 0x000004, "Wrong alignment on BP_CharacterData_C_IsSlotUsed");
static_assert(sizeof(BP_CharacterData_C_IsSlotUsed) == 0x00000C, "Wrong size on BP_CharacterData_C_IsSlotUsed");
static_assert(offsetof(BP_CharacterData_C_IsSlotUsed, Key) == 0x000000, "Member 'BP_CharacterData_C_IsSlotUsed::Key' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsSlotUsed, ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_IsSlotUsed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_IsSlotUsed, CallFunc_Map_Contains_ReturnValue) == 0x000009, "Member 'BP_CharacterData_C_IsSlotUsed::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.LoadAssignedAttributePoints
// 0x02B0 (0x02B0 - 0x0000)
struct BP_CharacterData_C_LoadAssignedAttributePoints final
{
public:
	TMap<ECharacterAttribute, int32>              InputPin;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<ECharacterAttribute, int32>              local_previousPoints;                              // 0x0050(0x0050)(Edit, BlueprintVisible)
	bool                                          local_hasChanged;                                  // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_nextAssignedPointsCount;                     // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_assignedPoints;                              // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECharacterAttribute>                   CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0048)(HasGetValueTypeHash)
	TMap<ECharacterAttribute, int32>              K2Node_MakeVariable_MakeVariableOutput;            // 0x0118(0x0050)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0190(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01D8(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxAttributePoints_ReturnValue;        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0238(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0280(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0290(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_LoadAssignedAttributePoints) == 0x000008, "Wrong alignment on BP_CharacterData_C_LoadAssignedAttributePoints");
static_assert(sizeof(BP_CharacterData_C_LoadAssignedAttributePoints) == 0x0002B0, "Wrong size on BP_CharacterData_C_LoadAssignedAttributePoints");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, InputPin) == 0x000000, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::InputPin' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, local_previousPoints) == 0x000050, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::local_previousPoints' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, local_hasChanged) == 0x0000A0, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::local_hasChanged' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, local_nextAssignedPointsCount) == 0x0000A4, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::local_nextAssignedPointsCount' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, local_assignedPoints) == 0x0000A8, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::local_assignedPoints' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000C0, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, K2Node_MakeVariable_MakeVariableOutput) == 0x000118, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, Temp_int_Array_Index_Variable) == 0x000168, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Array_Get_Item) == 0x00016C, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Map_Find_Value) == 0x000170, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Map_Find_ReturnValue) == 0x000174, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Map_Find_Value_1) == 0x000178, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Map_Find_ReturnValue_1) == 0x00017C, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00017D, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000180, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000188, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, K2Node_MakeStruct_FormatArgumentData_1) == 0x000190, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001D8, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_GetMaxAttributePoints_ReturnValue) == 0x000220, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_GetMaxAttributePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000228, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000230, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, K2Node_MakeStruct_FormatArgumentData_3) == 0x000238, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, K2Node_MakeArray_Array) == 0x000280, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Format_ReturnValue) == 0x000290, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Add_IntInt_ReturnValue) == 0x0002A0, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, Temp_int_Loop_Counter_Variable) == 0x0002A4, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Less_IntInt_ReturnValue) == 0x0002A8, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadAssignedAttributePoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002AC, "Member 'BP_CharacterData_C_LoadAssignedAttributePoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.LoadBattleFinalState
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterData_C_LoadBattleFinalState final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleStartAP_Count_AP_Count;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_LoadBattleFinalState) == 0x000008, "Wrong alignment on BP_CharacterData_C_LoadBattleFinalState");
static_assert(sizeof(BP_CharacterData_C_LoadBattleFinalState) == 0x000020, "Wrong size on BP_CharacterData_C_LoadBattleFinalState");
static_assert(offsetof(BP_CharacterData_C_LoadBattleFinalState, CharacterStats) == 0x000000, "Member 'BP_CharacterData_C_LoadBattleFinalState::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadBattleFinalState, CallFunc_GetBattleStartAP_Count_AP_Count) == 0x000008, "Member 'BP_CharacterData_C_LoadBattleFinalState::CallFunc_GetBattleStartAP_Count_AP_Count' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadBattleFinalState, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_LoadBattleFinalState::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadBattleFinalState, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_LoadBattleFinalState::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.LoadCharacterBaseDataFromID
// 0x03C0 (0x03C0 - 0x0000)
struct BP_CharacterData_C_LoadCharacterBaseDataFromID final
{
public:
	class FName                                   HardcodedNameID_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	struct FS_jRPG_CharacterDefinition            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0328)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0390(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03A0(0x0010)()
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x03B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_LoadCharacterBaseDataFromID) == 0x000008, "Wrong alignment on BP_CharacterData_C_LoadCharacterBaseDataFromID");
static_assert(sizeof(BP_CharacterData_C_LoadCharacterBaseDataFromID) == 0x0003C0, "Wrong size on BP_CharacterData_C_LoadCharacterBaseDataFromID");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, HardcodedNameID_0) == 0x000000, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::HardcodedNameID_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000388, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, K2Node_MakeArray_Array) == 0x000390, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, CallFunc_Format_ReturnValue) == 0x0003A0, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataFromID, K2Node_CreateDelegate_OutputDelegate) == 0x0003B0, "Member 'BP_CharacterData_C_LoadCharacterBaseDataFromID::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.LoadCharacterBaseDataLegacy
// 0x01C8 (0x01C8 - 0x0000)
struct BP_CharacterData_C_LoadCharacterBaseDataLegacy final
{
public:
	struct FS_jRPG_CharacterSaveState             Legacy_CharacterSaveData;                          // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   LegacyOnly_GameInstance;                           // 0x01C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_LoadCharacterBaseDataLegacy) == 0x000008, "Wrong alignment on BP_CharacterData_C_LoadCharacterBaseDataLegacy");
static_assert(sizeof(BP_CharacterData_C_LoadCharacterBaseDataLegacy) == 0x0001C8, "Wrong size on BP_CharacterData_C_LoadCharacterBaseDataLegacy");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataLegacy, Legacy_CharacterSaveData) == 0x000000, "Member 'BP_CharacterData_C_LoadCharacterBaseDataLegacy::Legacy_CharacterSaveData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterBaseDataLegacy, LegacyOnly_GameInstance) == 0x0001C0, "Member 'BP_CharacterData_C_LoadCharacterBaseDataLegacy::LegacyOnly_GameInstance' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.LoadCharacterCustomizationFromItemData
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterData_C_LoadCharacterCustomizationFromItemData final
{
public:
	bool                                          CallFunc_IsValid__CharacterCustomizationItemData__Valid; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_LoadCharacterCustomizationFromItemData) == 0x000001, "Wrong alignment on BP_CharacterData_C_LoadCharacterCustomizationFromItemData");
static_assert(sizeof(BP_CharacterData_C_LoadCharacterCustomizationFromItemData) == 0x000001, "Wrong size on BP_CharacterData_C_LoadCharacterCustomizationFromItemData");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterCustomizationFromItemData, CallFunc_IsValid__CharacterCustomizationItemData__Valid) == 0x000000, "Member 'BP_CharacterData_C_LoadCharacterCustomizationFromItemData::CallFunc_IsValid__CharacterCustomizationItemData__Valid' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.LoadCharacterDefinition
// 0x0388 (0x0388 - 0x0000)
struct BP_CharacterData_C_LoadCharacterDefinition final
{
public:
	struct FS_jRPG_CharacterDefinition            CharacterDefinition_0;                             // 0x0000(0x0328)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterSkillGraphSystem_C*        CallFunc_SpawnObject_ReturnValue;                  // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_CharacterBattleAudioProfile_C* K2Node_DynamicCast_AsBP_Data_Asset_Character_Battle_Audio_Profile; // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_CharacterExplorationAudioProfile_C* K2Node_DynamicCast_AsBP_Data_Asset_Character_Exploration_Audio_Profile; // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_SkillGraph_C*             K2Node_DynamicCast_AsBP_Data_Asset_Skill_Graph;    // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0374(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_LoadCharacterDefinition) == 0x000008, "Wrong alignment on BP_CharacterData_C_LoadCharacterDefinition");
static_assert(sizeof(BP_CharacterData_C_LoadCharacterDefinition) == 0x000388, "Wrong size on BP_CharacterData_C_LoadCharacterDefinition");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, CharacterDefinition_0) == 0x000000, "Member 'BP_CharacterData_C_LoadCharacterDefinition::CharacterDefinition_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, CallFunc_SpawnObject_ReturnValue) == 0x000328, "Member 'BP_CharacterData_C_LoadCharacterDefinition::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000330, "Member 'BP_CharacterData_C_LoadCharacterDefinition::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, K2Node_DynamicCast_AsBP_Data_Asset_Character_Battle_Audio_Profile) == 0x000338, "Member 'BP_CharacterData_C_LoadCharacterDefinition::K2Node_DynamicCast_AsBP_Data_Asset_Character_Battle_Audio_Profile' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, K2Node_DynamicCast_bSuccess) == 0x000340, "Member 'BP_CharacterData_C_LoadCharacterDefinition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000348, "Member 'BP_CharacterData_C_LoadCharacterDefinition::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, K2Node_DynamicCast_AsBP_Data_Asset_Character_Exploration_Audio_Profile) == 0x000350, "Member 'BP_CharacterData_C_LoadCharacterDefinition::K2Node_DynamicCast_AsBP_Data_Asset_Character_Exploration_Audio_Profile' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, K2Node_DynamicCast_bSuccess_1) == 0x000358, "Member 'BP_CharacterData_C_LoadCharacterDefinition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000360, "Member 'BP_CharacterData_C_LoadCharacterDefinition::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, K2Node_DynamicCast_AsBP_Data_Asset_Skill_Graph) == 0x000368, "Member 'BP_CharacterData_C_LoadCharacterDefinition::K2Node_DynamicCast_AsBP_Data_Asset_Skill_Graph' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, K2Node_DynamicCast_bSuccess_2) == 0x000370, "Member 'BP_CharacterData_C_LoadCharacterDefinition::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterDefinition, K2Node_CreateDelegate_OutputDelegate) == 0x000374, "Member 'BP_CharacterData_C_LoadCharacterDefinition::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.LoadCharacterState
// 0x0828 (0x0828 - 0x0000)
struct BP_CharacterData_C_LoadCharacterState final
{
public:
	struct FS_jRPG_CharacterSaveState             CharacterState;                                    // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          local_;                                            // 0x01C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x01C1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFEquipmentSlot>                CallFunc_Map_Keys_Keys;                            // 0x01C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01F8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0240(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0298(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02A8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B8(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x02C8(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x02D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02E8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0330(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x0390(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_3;            // 0x03A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x03B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x03F8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0440(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0450(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0460(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0470(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_4;            // 0x0480(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0490(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_IsUnlocked;       // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_BecauseLearnt;    // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_BecauseEquipment; // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DB[0x5];                                      // 0x04DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetLuminaInfoFromName_Definition;         // 0x04E0(0x0048)(HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_GetLuminaInfoFromName_Progression;        // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0538(0x0010)()
	bool                                          CallFunc_CanEquipLuminaPassive_ReturnValue;        // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CanEquipLuminaPassive_EffectiveCost;      // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0550(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0598(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x05A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x05F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0608(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x061C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item_1;                         // 0x062C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0638(0x0010)()
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x7];                                      // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0658(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_5;            // 0x06A0(0x0010)()
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x06B8(0x0048)(HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0710(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0720(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x3];                                      // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_StatType, double>                 CallFunc_GetCharacterStats_Stats;                  // 0x0738(0x0050)()
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleStartAP_Count_AP_Count;          // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_6;            // 0x07B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x07C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0808(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0818(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_LoadCharacterState) == 0x000008, "Wrong alignment on BP_CharacterData_C_LoadCharacterState");
static_assert(sizeof(BP_CharacterData_C_LoadCharacterState) == 0x000828, "Wrong size on BP_CharacterData_C_LoadCharacterState");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CharacterState) == 0x000000, "Member 'BP_CharacterData_C_LoadCharacterState::CharacterState' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, local_) == 0x0001C0, "Member 'BP_CharacterData_C_LoadCharacterState::local_' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, Temp_byte_Variable) == 0x0001C1, "Member 'BP_CharacterData_C_LoadCharacterState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Map_Keys_Keys) == 0x0001C8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Array_Length_ReturnValue_1) == 0x0001DC, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Array_Length_ReturnValue_2) == 0x0001E0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Array_Length_ReturnValue_3) == 0x0001E4, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001E8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0001F0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData) == 0x0001F8, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_1) == 0x000240, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeArray_Array_1) == 0x000298, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Format_ReturnValue) == 0x0002A8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Format_ReturnValue_1) == 0x0002B8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_NameToText_ReturnValue) == 0x0002C8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0002D8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002E8, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_3) == 0x000330, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, Temp_int_Array_Index_Variable) == 0x000378, "Member 'BP_CharacterData_C_LoadCharacterState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000380, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Array_Get_Item) == 0x000388, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_NameToText_ReturnValue_2) == 0x000390, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_NameToText_ReturnValue_3) == 0x0003A0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_NameToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_4) == 0x0003B0, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_5) == 0x0003F8, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeArray_Array_2) == 0x000440, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeArray_Array_3) == 0x000450, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Format_ReturnValue_2) == 0x000460, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Format_ReturnValue_3) == 0x000470, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_NameToText_ReturnValue_4) == 0x000480, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_NameToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_6) == 0x000490, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_IsPassiveEffectUnlocked_IsUnlocked) == 0x0004D8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_IsPassiveEffectUnlocked_IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_IsPassiveEffectUnlocked_BecauseLearnt) == 0x0004D9, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_IsPassiveEffectUnlocked_BecauseLearnt' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_IsPassiveEffectUnlocked_BecauseEquipment) == 0x0004DA, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_IsPassiveEffectUnlocked_BecauseEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_GetLuminaInfoFromName_Definition) == 0x0004E0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_GetLuminaInfoFromName_Definition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_GetLuminaInfoFromName_Progression) == 0x000528, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_GetLuminaInfoFromName_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_BoolToText_ReturnValue) == 0x000538, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_CanEquipLuminaPassive_ReturnValue) == 0x000548, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_CanEquipLuminaPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_CanEquipLuminaPassive_EffectiveCost) == 0x00054C, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_CanEquipLuminaPassive_EffectiveCost' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_7) == 0x000550, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000598, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_8) == 0x0005A8, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeArray_Array_4) == 0x0005F0, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000600, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Format_ReturnValue_4) == 0x000608, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, Temp_int_Loop_Counter_Variable) == 0x000618, "Member 'BP_CharacterData_C_LoadCharacterState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Less_IntInt_ReturnValue) == 0x00061C, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Add_IntInt_ReturnValue) == 0x000620, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, Temp_int_Loop_Counter_Variable_1) == 0x000624, "Member 'BP_CharacterData_C_LoadCharacterState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, Temp_int_Array_Index_Variable_1) == 0x000628, "Member 'BP_CharacterData_C_LoadCharacterState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Array_Get_Item_1) == 0x00062C, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_EquipmentSlotToString_Result) == 0x000638, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Map_Find_Value) == 0x000648, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Map_Find_ReturnValue) == 0x000650, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_9) == 0x000658, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_NameToText_ReturnValue_5) == 0x0006A0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_NameToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_FindItemInstanceByID_ItemInstance) == 0x0006B0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_10) == 0x0006B8, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000700, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_DynamicCast_bSuccess) == 0x000708, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeArray_Array_5) == 0x000710, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Format_ReturnValue_5) == 0x000720, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000730, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000734, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_GetCharacterStats_Stats) == 0x000738, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_GetCharacterStats_Stats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Map_Find_Value_1) == 0x000788, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Map_Find_ReturnValue_1) == 0x000790, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_FMin_ReturnValue) == 0x000798, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_GetBattleStartAP_Count_AP_Count) == 0x0007A0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_GetBattleStartAP_Count_AP_Count' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0007A8, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Conv_NameToText_ReturnValue_6) == 0x0007B0, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Conv_NameToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeStruct_FormatArgumentData_11) == 0x0007C0, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, K2Node_MakeArray_Array_6) == 0x000808, "Member 'BP_CharacterData_C_LoadCharacterState::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_LoadCharacterState, CallFunc_Format_ReturnValue_6) == 0x000818, "Member 'BP_CharacterData_C_LoadCharacterState::CallFunc_Format_ReturnValue_6' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.MergeCurrentEquipmentInstancesWithOverrides
// 0x0180 (0x0180 - 0x0000)
struct BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides final
{
public:
	TMap<struct FFEquipmentSlot, class UBP_ItemInstance_Gear_C*> EquipmentOverrides;                 // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<struct FFEquipmentSlot, class UBP_ItemInstance_Gear_C*> MergedEquipment;                    // 0x0050(0x0050)(Parm, OutParm)
	TMap<struct FFEquipmentSlot, class UBP_ItemInstance_Gear_C*> local_equipmentInstancePerSlot;     // 0x00A0(0x0050)(Edit, BlueprintVisible)
	TMap<struct FFEquipmentSlot, struct FS_jRPG_Item_StaticData> local_EquipmentPerSlot;             // 0x00F0(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFEquipmentSlot>                CallFunc_Map_Keys_Keys;                            // 0x0150(0x0010)(ReferenceParm)
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_Map_Find_Value;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides) == 0x000008, "Wrong alignment on BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides");
static_assert(sizeof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides) == 0x000180, "Wrong size on BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, EquipmentOverrides) == 0x000000, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::EquipmentOverrides' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, MergedEquipment) == 0x000050, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::MergedEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, local_equipmentInstancePerSlot) == 0x0000A0, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::local_equipmentInstancePerSlot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, local_EquipmentPerSlot) == 0x0000F0, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::local_EquipmentPerSlot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, Temp_int_Array_Index_Variable) == 0x000140, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, CallFunc_Map_Keys_Keys) == 0x000150, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, CallFunc_Map_Find_Value) == 0x000170, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, CallFunc_Map_Find_ReturnValue) == 0x000178, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides, CallFunc_Less_IntInt_ReturnValue) == 0x000179, "Member 'BP_CharacterData_C_MergeCurrentEquipmentInstancesWithOverrides::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.OnNewItemAcquired
// 0x0130 (0x0130 - 0x0000)
struct BP_CharacterData_C_OnNewItemAcquired final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_OnNewItemAcquired) == 0x000008, "Wrong alignment on BP_CharacterData_C_OnNewItemAcquired");
static_assert(sizeof(BP_CharacterData_C_OnNewItemAcquired) == 0x000130, "Wrong size on BP_CharacterData_C_OnNewItemAcquired");
static_assert(offsetof(BP_CharacterData_C_OnNewItemAcquired, ItemStaticData) == 0x000000, "Member 'BP_CharacterData_C_OnNewItemAcquired::ItemStaticData' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.PreviewStatsWithEquipmentOverrides
// 0x01E0 (0x01E0 - 0x0000)
struct BP_CharacterData_C_PreviewStatsWithEquipmentOverrides final
{
public:
	TMap<struct FFEquipmentSlot, class UBP_ItemInstance_Gear_C*> EquipmentOverrides;                 // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<E_jRPG_StatType, double>                 StatsPreview;                                      // 0x0050(0x0050)(Parm, OutParm)
	TMap<struct FFEquipmentSlot, class UBP_ItemInstance_Gear_C*> CallFunc_MergeCurrentEquipmentInstancesWithOverrides_MergedEquipment; // 0x00A0(0x0050)()
	TMap<E_jRPG_StatType, double>                 CallFunc_GetBaseStats_CharacterStats;              // 0x00F0(0x0050)()
	TMap<E_jRPG_StatType, double>                 CallFunc_ComputeEquipmentStats_EquipmentStats;     // 0x0140(0x0050)()
	TMap<E_jRPG_StatType, double>                 CallFunc_ComputeStatsFromParts_ComputedStats;      // 0x0190(0x0050)()
};
static_assert(alignof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides) == 0x000008, "Wrong alignment on BP_CharacterData_C_PreviewStatsWithEquipmentOverrides");
static_assert(sizeof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides) == 0x0001E0, "Wrong size on BP_CharacterData_C_PreviewStatsWithEquipmentOverrides");
static_assert(offsetof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides, EquipmentOverrides) == 0x000000, "Member 'BP_CharacterData_C_PreviewStatsWithEquipmentOverrides::EquipmentOverrides' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides, StatsPreview) == 0x000050, "Member 'BP_CharacterData_C_PreviewStatsWithEquipmentOverrides::StatsPreview' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides, CallFunc_MergeCurrentEquipmentInstancesWithOverrides_MergedEquipment) == 0x0000A0, "Member 'BP_CharacterData_C_PreviewStatsWithEquipmentOverrides::CallFunc_MergeCurrentEquipmentInstancesWithOverrides_MergedEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides, CallFunc_GetBaseStats_CharacterStats) == 0x0000F0, "Member 'BP_CharacterData_C_PreviewStatsWithEquipmentOverrides::CallFunc_GetBaseStats_CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides, CallFunc_ComputeEquipmentStats_EquipmentStats) == 0x000140, "Member 'BP_CharacterData_C_PreviewStatsWithEquipmentOverrides::CallFunc_ComputeEquipmentStats_EquipmentStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_PreviewStatsWithEquipmentOverrides, CallFunc_ComputeStatsFromParts_ComputedStats) == 0x000190, "Member 'BP_CharacterData_C_PreviewStatsWithEquipmentOverrides::CallFunc_ComputeStatsFromParts_ComputedStats' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ProgressEquippedLuminas
// 0x02E0 (0x02E0 - 0x0000)
struct BP_CharacterData_C_ProgressEquippedLuminas final
{
public:
	struct FFPassiveEffectProgression             local_currentPassiveProgression;                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           local_passiveEffectsToProgress;                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_ItemInstance_Gear_C*>        CallFunc_Map_Values_Values;                        // 0x0048(0x0010)(ReferenceParm)
	class UBP_ItemInstance_Gear_C*                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x0068(0x0010)(ReferenceParm)
	E_jRPG_ItemType                               CallFunc_GetItemType_Item_Type;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0090(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_DataAsset_Item_Pictos_C*            K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos;    // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x01D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01E0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0230(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0010)()
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0258(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0268(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02D0(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_ProgressEquippedLuminas) == 0x000008, "Wrong alignment on BP_CharacterData_C_ProgressEquippedLuminas");
static_assert(sizeof(BP_CharacterData_C_ProgressEquippedLuminas) == 0x0002E0, "Wrong size on BP_CharacterData_C_ProgressEquippedLuminas");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, local_currentPassiveProgression) == 0x000000, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::local_currentPassiveProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, local_passiveEffectsToProgress) == 0x000010, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::local_passiveEffectsToProgress' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, Temp_int_Loop_Counter_Variable_2) == 0x000038, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Map_Values_Values) == 0x000048, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x000068, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_GetItemType_Item_Type) == 0x000078, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_GetItemType_Item_Type' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Array_Get_Item_1) == 0x00007C, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000084, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_GetItemStaticData_ItemStaticData) == 0x000090, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos) == 0x0001C0, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::K2Node_DynamicCast_AsBP_Data_Asset_Item_Pictos' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, K2Node_DynamicCast_bSuccess) == 0x0001C8, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Conv_NameToText_ReturnValue) == 0x0001D0, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, K2Node_MakeStruct_FormatArgumentData) == 0x0001E0, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Array_AddUnique_ReturnValue) == 0x000228, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, K2Node_MakeArray_Array) == 0x000230, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Format_ReturnValue) == 0x000240, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Array_Get_Item_2) == 0x000250, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000258, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, K2Node_MakeStruct_FormatArgumentData_1) == 0x000268, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Array_Length_ReturnValue_2) == 0x0002B0, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, K2Node_MakeArray_Array_1) == 0x0002B8, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002C8, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressEquippedLuminas, CallFunc_Format_ReturnValue_1) == 0x0002D0, "Member 'BP_CharacterData_C_ProgressEquippedLuminas::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ProgressPassiveEffectShared
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CharacterData_C_ProgressPassiveEffectShared final
{
public:
	class FName                                   PassiveEffectID;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             local_currentPassiveProgression;                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x0020(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectProgression             CallFunc_GetPassiveEffectProgression_Progression;  // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_UpdateSharedPassiveEffectProgression_UpdatedProgression; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             K2Node_SetFieldsInStruct_StructOut;                // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ProgressPassiveEffectShared) == 0x000008, "Wrong alignment on BP_CharacterData_C_ProgressPassiveEffectShared");
static_assert(sizeof(BP_CharacterData_C_ProgressPassiveEffectShared) == 0x0000A8, "Wrong size on BP_CharacterData_C_ProgressPassiveEffectShared");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, PassiveEffectID) == 0x000000, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::PassiveEffectID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, local_currentPassiveProgression) == 0x000008, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::local_currentPassiveProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, CallFunc_GetCustomGI_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x000020, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, CallFunc_GetPassiveEffectDefinition_Found) == 0x000068, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, CallFunc_GetPassiveEffectProgression_Progression) == 0x00006C, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::CallFunc_GetPassiveEffectProgression_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, CallFunc_UpdateSharedPassiveEffectProgression_UpdatedProgression) == 0x000080, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::CallFunc_UpdateSharedPassiveEffectProgression_UpdatedProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, K2Node_SetFieldsInStruct_StructOut) == 0x000090, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ProgressPassiveEffectShared, CallFunc_GetBoolCVar_ReturnValue) == 0x0000A0, "Member 'BP_CharacterData_C_ProgressPassiveEffectShared::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ReceiveExplorationDamage
// 0x00E0 (0x00E0 - 0x0000)
struct BP_CharacterData_C_ReceiveExplorationDamage final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ReceiveExplorationDamage) == 0x000008, "Wrong alignment on BP_CharacterData_C_ReceiveExplorationDamage");
static_assert(sizeof(BP_CharacterData_C_ReceiveExplorationDamage) == 0x0000E0, "Wrong size on BP_CharacterData_C_ReceiveExplorationDamage");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, Amount) == 0x000000, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::Amount' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, CallFunc_Max_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamage, CallFunc_FMax_ReturnValue) == 0x0000D8, "Member 'BP_CharacterData_C_ReceiveExplorationDamage::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ReceiveExplorationDamagePercent
// 0x0038 (0x0038 - 0x0000)
struct BP_CharacterData_C_ReceiveExplorationDamagePercent final
{
public:
	int32                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_ReceiveExplorationDamagePercent) == 0x000008, "Wrong alignment on BP_CharacterData_C_ReceiveExplorationDamagePercent");
static_assert(sizeof(BP_CharacterData_C_ReceiveExplorationDamagePercent) == 0x000038, "Wrong size on BP_CharacterData_C_ReceiveExplorationDamagePercent");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamagePercent, Percent) == 0x000000, "Member 'BP_CharacterData_C_ReceiveExplorationDamagePercent::Percent' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamagePercent, CallFunc_GetMaxHP_MaxHP) == 0x000008, "Member 'BP_CharacterData_C_ReceiveExplorationDamagePercent::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamagePercent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_ReceiveExplorationDamagePercent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamagePercent, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000018, "Member 'BP_CharacterData_C_ReceiveExplorationDamagePercent::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamagePercent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_ReceiveExplorationDamagePercent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamagePercent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_ReceiveExplorationDamagePercent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReceiveExplorationDamagePercent, CallFunc_FCeil_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_ReceiveExplorationDamagePercent::CallFunc_FCeil_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.RefreshUsedLuminaPointsInternal
// 0x01E8 (0x01E8 - 0x0000)
struct BP_CharacterData_C_RefreshUsedLuminaPointsInternal final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00E0(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0100(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0048)(HasGetValueTypeHash)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x0158(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01A8(0x0010)(ReferenceParm)
	struct FFPassiveEffectProgression             CallFunc_GetPassiveEffectProgression_Progression;  // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01C8(0x0010)()
	bool                                          CallFunc_CanEquipLuminaPassive_ReturnValue;        // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CanEquipLuminaPassive_EffectiveCost;      // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal) == 0x000008, "Wrong alignment on BP_CharacterData_C_RefreshUsedLuminaPointsInternal");
static_assert(sizeof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal) == 0x0001E8, "Wrong size on BP_CharacterData_C_RefreshUsedLuminaPointsInternal");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00000C, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00000D, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000018, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, K2Node_MakeArray_Array_1) == 0x0000C0, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Format_ReturnValue_1) == 0x0000E0, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Conv_NameToText_ReturnValue) == 0x000100, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x000158, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_GetPassiveEffectDefinition_Found) == 0x0001A0, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, K2Node_MakeArray_Array_2) == 0x0001A8, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_GetPassiveEffectProgression_Progression) == 0x0001B8, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_GetPassiveEffectProgression_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Format_ReturnValue_2) == 0x0001C8, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_CanEquipLuminaPassive_ReturnValue) == 0x0001D8, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_CanEquipLuminaPassive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_CanEquipLuminaPassive_EffectiveCost) == 0x0001DC, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_CanEquipLuminaPassive_EffectiveCost' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_RefreshUsedLuminaPointsInternal, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001E0, "Member 'BP_CharacterData_C_RefreshUsedLuminaPointsInternal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ReplaceItemInSlot
// 0x0210 (0x0210 - 0x0000)
struct BP_CharacterData_C_ReplaceItemInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0008(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0138(0x0010)()
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0148(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0158(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0200(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_ReplaceItemInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_ReplaceItemInSlot");
static_assert(sizeof(BP_CharacterData_C_ReplaceItemInSlot) == 0x000210, "Wrong size on BP_CharacterData_C_ReplaceItemInSlot");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_ReplaceItemInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, Item) == 0x000008, "Member 'BP_CharacterData_C_ReplaceItemInSlot::Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, CallFunc_Conv_NameToText_ReturnValue) == 0x000138, "Member 'BP_CharacterData_C_ReplaceItemInSlot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000148, "Member 'BP_CharacterData_C_ReplaceItemInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000158, "Member 'BP_CharacterData_C_ReplaceItemInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001A0, "Member 'BP_CharacterData_C_ReplaceItemInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, K2Node_MakeArray_Array) == 0x0001E8, "Member 'BP_CharacterData_C_ReplaceItemInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, CallFunc_IsSlotUsed_ReturnValue) == 0x0001F8, "Member 'BP_CharacterData_C_ReplaceItemInSlot::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInSlot, CallFunc_Format_ReturnValue) == 0x000200, "Member 'BP_CharacterData_C_ReplaceItemInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ReplaceItemInstanceInSlot
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CharacterData_C_ReplaceItemInstanceInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0070(0x0010)()
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_ReplaceItemInstanceInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_ReplaceItemInstanceInSlot");
static_assert(sizeof(BP_CharacterData_C_ReplaceItemInstanceInSlot) == 0x0000F0, "Wrong size on BP_CharacterData_C_ReplaceItemInstanceInSlot");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, Item) == 0x000008, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000070, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, CallFunc_IsSlotUsed_ReturnValue) == 0x000080, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, K2Node_MakeArray_Array) == 0x0000D0, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_ReplaceItemInstanceInSlot, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_CharacterData_C_ReplaceItemInstanceInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.ResetAssignedAttributePoints
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_ResetAssignedAttributePoints final
{
public:
	TMap<ECharacterAttribute, int32>              K2Node_MakeMap_Map;                                // 0x0000(0x0050)()
};
static_assert(alignof(BP_CharacterData_C_ResetAssignedAttributePoints) == 0x000008, "Wrong alignment on BP_CharacterData_C_ResetAssignedAttributePoints");
static_assert(sizeof(BP_CharacterData_C_ResetAssignedAttributePoints) == 0x000050, "Wrong size on BP_CharacterData_C_ResetAssignedAttributePoints");
static_assert(offsetof(BP_CharacterData_C_ResetAssignedAttributePoints, K2Node_MakeMap_Map) == 0x000000, "Member 'BP_CharacterData_C_ResetAssignedAttributePoints::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.SaveCharacterState
// 0x0690 (0x0690 - 0x0000)
struct BP_CharacterData_C_SaveCharacterState final
{
public:
	struct FS_jRPG_CharacterSaveState             OutState;                                          // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FS_jRPG_CharacterSaveState             StructOut;                                         // 0x01C0(0x01C0)(Parm, OutParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0380(0x0048)(HasGetValueTypeHash)
	TMap<class FName, struct FFPassiveEffectProgression> K2Node_MakeMap_Map;                         // 0x03C8(0x0050)()
	bool                                          CallFunc_GetIsExcluded_Excluded;                   // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetEquippedSkillsSaveData_EquippedSkillIDs; // 0x0420(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetUnlockedSkillSaveData_UnlockedSkillIDs; // 0x0430(0x0010)(ReferenceParm)
	TMap<struct FFEquipmentSlot, class FName>     CallFunc_GetEquipmentSaveData_local_equipmentPerSlotSave1; // 0x0440(0x0050)()
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0498(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x04E8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0530(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0588(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x05D0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0628(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0670(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0680(0x0010)()
};
static_assert(alignof(BP_CharacterData_C_SaveCharacterState) == 0x000008, "Wrong alignment on BP_CharacterData_C_SaveCharacterState");
static_assert(sizeof(BP_CharacterData_C_SaveCharacterState) == 0x000690, "Wrong size on BP_CharacterData_C_SaveCharacterState");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, OutState) == 0x000000, "Member 'BP_CharacterData_C_SaveCharacterState::OutState' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, StructOut) == 0x0001C0, "Member 'BP_CharacterData_C_SaveCharacterState::StructOut' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeStruct_FormatArgumentData) == 0x000380, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeMap_Map) == 0x0003C8, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_GetIsExcluded_Excluded) == 0x000418, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_GetIsExcluded_Excluded' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_GetEquippedSkillsSaveData_EquippedSkillIDs) == 0x000420, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_GetEquippedSkillsSaveData_EquippedSkillIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_GetUnlockedSkillSaveData_UnlockedSkillIDs) == 0x000430, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_GetUnlockedSkillSaveData_UnlockedSkillIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_GetEquipmentSaveData_local_equipmentPerSlotSave1) == 0x000440, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_GetEquipmentSaveData_local_equipmentPerSlotSave1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_Map_Length_ReturnValue) == 0x000490, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeStruct_FormatArgumentData_1) == 0x000498, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0004E0, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeStruct_FormatArgumentData_2) == 0x0004E8, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeStruct_FormatArgumentData_3) == 0x000530, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000578, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000580, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeStruct_FormatArgumentData_4) == 0x000588, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeStruct_FormatArgumentData_5) == 0x0005D0, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_Array_Length_ReturnValue) == 0x000618, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000620, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeStruct_FormatArgumentData_6) == 0x000628, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, K2Node_MakeArray_Array) == 0x000670, "Member 'BP_CharacterData_C_SaveCharacterState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SaveCharacterState, CallFunc_Format_ReturnValue) == 0x000680, "Member 'BP_CharacterData_C_SaveCharacterState::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.SetCharacterCustomizationItemData
// 0x0014 (0x0014 - 0x0000)
struct BP_CharacterData_C_SetCharacterCustomizationItemData final
{
public:
	struct FS_CharacterCustomizationItemData      CharacterCustomizationItemData_0;                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_SetCharacterCustomizationItemData) == 0x000004, "Wrong alignment on BP_CharacterData_C_SetCharacterCustomizationItemData");
static_assert(sizeof(BP_CharacterData_C_SetCharacterCustomizationItemData) == 0x000014, "Wrong size on BP_CharacterData_C_SetCharacterCustomizationItemData");
static_assert(offsetof(BP_CharacterData_C_SetCharacterCustomizationItemData, CharacterCustomizationItemData_0) == 0x000000, "Member 'BP_CharacterData_C_SetCharacterCustomizationItemData::CharacterCustomizationItemData_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetCharacterCustomizationItemData, CallFunc_NotEqual_NameName_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_SetCharacterCustomizationItemData::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetCharacterCustomizationItemData, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000011, "Member 'BP_CharacterData_C_SetCharacterCustomizationItemData::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.SetEquippedSkillOverrides
// 0x0010 (0x0010 - 0x0000)
struct BP_CharacterData_C_SetEquippedSkillOverrides final
{
public:
	TArray<class UBP_DataAsset_Skill_C*>          EquippedSkills_0;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CharacterData_C_SetEquippedSkillOverrides) == 0x000008, "Wrong alignment on BP_CharacterData_C_SetEquippedSkillOverrides");
static_assert(sizeof(BP_CharacterData_C_SetEquippedSkillOverrides) == 0x000010, "Wrong size on BP_CharacterData_C_SetEquippedSkillOverrides");
static_assert(offsetof(BP_CharacterData_C_SetEquippedSkillOverrides, EquippedSkills_0) == 0x000000, "Member 'BP_CharacterData_C_SetEquippedSkillOverrides::EquippedSkills_0' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.SetIsExcluded
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterData_C_SetIsExcluded final
{
public:
	bool                                          Excluded;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_SetIsExcluded) == 0x000001, "Wrong alignment on BP_CharacterData_C_SetIsExcluded");
static_assert(sizeof(BP_CharacterData_C_SetIsExcluded) == 0x000001, "Wrong size on BP_CharacterData_C_SetIsExcluded");
static_assert(offsetof(BP_CharacterData_C_SetIsExcluded, Excluded) == 0x000000, "Member 'BP_CharacterData_C_SetIsExcluded::Excluded' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.SetLevel
// 0x0028 (0x0028 - 0x0000)
struct BP_CharacterData_C_SetLevel final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Characters                                  CallFunc_GetCharacterEnum_FromID_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_SetLevel) == 0x000008, "Wrong alignment on BP_CharacterData_C_SetLevel");
static_assert(sizeof(BP_CharacterData_C_SetLevel) == 0x000028, "Wrong size on BP_CharacterData_C_SetLevel");
static_assert(offsetof(BP_CharacterData_C_SetLevel, NewLevel) == 0x000000, "Member 'BP_CharacterData_C_SetLevel::NewLevel' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetLevel, CallFunc_GetCharacterEnum_FromID_ReturnValue) == 0x000004, "Member 'BP_CharacterData_C_SetLevel::CallFunc_GetCharacterEnum_FromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetLevel, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000005, "Member 'BP_CharacterData_C_SetLevel::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetLevel, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_SetLevel::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetLevel, CallFunc_GetCustomGI_ReturnValue_1) == 0x000010, "Member 'BP_CharacterData_C_SetLevel::CallFunc_GetCustomGI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetLevel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_SetLevel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetLevel, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CharacterData_C_SetLevel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_SetLevel, CallFunc_Multiply_IntInt_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_SetLevel::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.SetShouldDispatchModifications
// 0x0001 (0x0001 - 0x0000)
struct BP_CharacterData_C_SetShouldDispatchModifications final
{
public:
	bool                                          ShouldDispatchModifications_0;                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_SetShouldDispatchModifications) == 0x000001, "Wrong alignment on BP_CharacterData_C_SetShouldDispatchModifications");
static_assert(sizeof(BP_CharacterData_C_SetShouldDispatchModifications) == 0x000001, "Wrong size on BP_CharacterData_C_SetShouldDispatchModifications");
static_assert(offsetof(BP_CharacterData_C_SetShouldDispatchModifications, ShouldDispatchModifications_0) == 0x000000, "Member 'BP_CharacterData_C_SetShouldDispatchModifications::ShouldDispatchModifications_0' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.TryEquipLuminaPassive
// 0x0070 (0x0070 - 0x0000)
struct BP_CharacterData_C_TryEquipLuminaPassive final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Successful;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetLuminaInfoFromName_Definition;         // 0x0010(0x0048)(HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_GetLuminaInfoFromName_Progression;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEffectiveLuminaCost_ReturnValue;       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordLuminaCost_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_TryEquipLuminaPassive) == 0x000008, "Wrong alignment on BP_CharacterData_C_TryEquipLuminaPassive");
static_assert(sizeof(BP_CharacterData_C_TryEquipLuminaPassive) == 0x000070, "Wrong size on BP_CharacterData_C_TryEquipLuminaPassive");
static_assert(offsetof(BP_CharacterData_C_TryEquipLuminaPassive, Name_0) == 0x000000, "Member 'BP_CharacterData_C_TryEquipLuminaPassive::Name_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryEquipLuminaPassive, Successful) == 0x000008, "Member 'BP_CharacterData_C_TryEquipLuminaPassive::Successful' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryEquipLuminaPassive, CallFunc_GetLuminaInfoFromName_Definition) == 0x000010, "Member 'BP_CharacterData_C_TryEquipLuminaPassive::CallFunc_GetLuminaInfoFromName_Definition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryEquipLuminaPassive, CallFunc_GetLuminaInfoFromName_Progression) == 0x000058, "Member 'BP_CharacterData_C_TryEquipLuminaPassive::CallFunc_GetLuminaInfoFromName_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryEquipLuminaPassive, CallFunc_GetEffectiveLuminaCost_ReturnValue) == 0x000068, "Member 'BP_CharacterData_C_TryEquipLuminaPassive::CallFunc_GetEffectiveLuminaCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryEquipLuminaPassive, CallFunc_CanAffordLuminaCost_ReturnValue) == 0x00006C, "Member 'BP_CharacterData_C_TryEquipLuminaPassive::CallFunc_CanAffordLuminaCost_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.TryUnlockLevelUpAchievements
// 0x0050 (0x0050 - 0x0000)
struct BP_CharacterData_C_TryUnlockLevelUpAchievements final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_TryUnlockLevelUpAchievements) == 0x000008, "Wrong alignment on BP_CharacterData_C_TryUnlockLevelUpAchievements");
static_assert(sizeof(BP_CharacterData_C_TryUnlockLevelUpAchievements) == 0x000050, "Wrong size on BP_CharacterData_C_TryUnlockLevelUpAchievements");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, Temp_int_Variable) == 0x000000, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, Temp_name_Variable) == 0x000004, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, Temp_name_Variable_1) == 0x00000C, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, Temp_name_Variable_2) == 0x000014, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, CallFunc_FMod_Remainder) == 0x000028, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, CallFunc_FMod_ReturnValue) == 0x000030, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, CallFunc_GetAchievementManager_ReturnValue) == 0x000038, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockLevelUpAchievements, K2Node_Select_Default) == 0x000048, "Member 'BP_CharacterData_C_TryUnlockLevelUpAchievements::K2Node_Select_Default' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.TryUnlockSkill
// 0x0040 (0x0040 - 0x0000)
struct BP_CharacterData_C_TryUnlockSkill final
{
public:
	class UBP_DataAsset_Skill_C*                  Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSkillUnlockData                      local_unlockCondition;                             // 0x0010(0x0028)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUnlockSkill_Success;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_TryUnlockSkill) == 0x000008, "Wrong alignment on BP_CharacterData_C_TryUnlockSkill");
static_assert(sizeof(BP_CharacterData_C_TryUnlockSkill) == 0x000040, "Wrong size on BP_CharacterData_C_TryUnlockSkill");
static_assert(offsetof(BP_CharacterData_C_TryUnlockSkill, Skill) == 0x000000, "Member 'BP_CharacterData_C_TryUnlockSkill::Skill' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockSkill, Success) == 0x000008, "Member 'BP_CharacterData_C_TryUnlockSkill::Success' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockSkill, local_unlockCondition) == 0x000010, "Member 'BP_CharacterData_C_TryUnlockSkill::local_unlockCondition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_TryUnlockSkill, CallFunc_TryUnlockSkill_Success) == 0x000038, "Member 'BP_CharacterData_C_TryUnlockSkill::CallFunc_TryUnlockSkill_Success' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipItem
// 0x0140 (0x0140 - 0x0000)
struct BP_CharacterData_C_UnequipItem final
{
public:
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetSlotForItem_Found;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        CallFunc_GetSlotForItem_Slot;                      // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UnequipItem) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipItem");
static_assert(sizeof(BP_CharacterData_C_UnequipItem) == 0x000140, "Wrong size on BP_CharacterData_C_UnequipItem");
static_assert(offsetof(BP_CharacterData_C_UnequipItem, Item) == 0x000000, "Member 'BP_CharacterData_C_UnequipItem::Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItem, CallFunc_GetSlotForItem_Found) == 0x000130, "Member 'BP_CharacterData_C_UnequipItem::CallFunc_GetSlotForItem_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItem, CallFunc_GetSlotForItem_Slot) == 0x000134, "Member 'BP_CharacterData_C_UnequipItem::CallFunc_GetSlotForItem_Slot' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipItemFromInstance
// 0x0020 (0x0020 - 0x0000)
struct BP_CharacterData_C_UnequipItemFromInstance final
{
public:
	class UBP_ItemInstance_Gear_C*                GearInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSlotForItem_Found;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        CallFunc_GetSlotForItem_Slot;                      // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UnequipItemFromInstance) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipItemFromInstance");
static_assert(sizeof(BP_CharacterData_C_UnequipItemFromInstance) == 0x000020, "Wrong size on BP_CharacterData_C_UnequipItemFromInstance");
static_assert(offsetof(BP_CharacterData_C_UnequipItemFromInstance, GearInstance) == 0x000000, "Member 'BP_CharacterData_C_UnequipItemFromInstance::GearInstance' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemFromInstance, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000008, "Member 'BP_CharacterData_C_UnequipItemFromInstance::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemFromInstance, CallFunc_GetSlotForItem_Found) == 0x000010, "Member 'BP_CharacterData_C_UnequipItemFromInstance::CallFunc_GetSlotForItem_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemFromInstance, CallFunc_GetSlotForItem_Slot) == 0x000014, "Member 'BP_CharacterData_C_UnequipItemFromInstance::CallFunc_GetSlotForItem_Slot' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipItemInSlot
// 0x02A8 (0x02A8 - 0x0000)
struct BP_CharacterData_C_UnequipItemInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_unequipedItemID;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0018(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_EquipmentSlotToString_Result_1;           // 0x00A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0110(0x0010)()
	TArray<class FName>                           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0120(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0130(0x0010)(ConstParm, ReferenceParm)
	struct FS_jRPG_Item_StaticData                CallFunc_Map_Find_Value;                           // 0x0140(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetPictosUnlockedPassiveEffects_PassiveEffects; // 0x0278(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect; // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UnequipItemInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipItemInSlot");
static_assert(sizeof(BP_CharacterData_C_UnequipItemInSlot) == 0x0002A8, "Wrong size on BP_CharacterData_C_UnequipItemInSlot");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_UnequipItemInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, local_unequipedItemID) == 0x000008, "Member 'BP_CharacterData_C_UnequipItemInSlot::local_unequipedItemID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_CharacterData_C_UnequipItemInSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000018, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_CharacterData_C_UnequipItemInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_CharacterData_C_UnequipItemInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_IsSlotUsed_ReturnValue) == 0x000098, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_EquipmentSlotToString_Result_1) == 0x0000A0, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_EquipmentSlotToString_Result_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BP_CharacterData_C_UnequipItemInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'BP_CharacterData_C_UnequipItemInSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, K2Node_MakeArray_Array_1) == 0x000100, "Member 'BP_CharacterData_C_UnequipItemInSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Format_ReturnValue_1) == 0x000110, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000120, "Member 'BP_CharacterData_C_UnequipItemInSlot::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, Temp_wildcard_Temp_buffer_array_Variable) == 0x000130, "Member 'BP_CharacterData_C_UnequipItemInSlot::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Map_Find_Value) == 0x000140, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Map_Find_ReturnValue) == 0x000270, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_GetPictosUnlockedPassiveEffects_PassiveEffects) == 0x000278, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_GetPictosUnlockedPassiveEffects_PassiveEffects' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Array_Get_Item) == 0x000288, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Map_Remove_ReturnValue) == 0x000290, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Array_Add_ReturnValue) == 0x000294, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect) == 0x000298, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Array_Length_ReturnValue) == 0x00029C, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Not_PreBool_ReturnValue) == 0x0002A0, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInSlot, CallFunc_Less_IntInt_ReturnValue) == 0x0002A1, "Member 'BP_CharacterData_C_UnequipItemInSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipItemInstanceInSlot
// 0x0180 (0x0180 - 0x0000)
struct BP_CharacterData_C_UnequipItemInstanceInSlot final
{
public:
	struct FFEquipmentSlot                        Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                local_unequipedItem;                               // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_unequipedItemID;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_EquipmentSlotToString_Result;             // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
	class FText                                   CallFunc_EquipmentSlotToString_Result_1;           // 0x00A8(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0120(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetGearPassiveEffects_PassiveEffectIDs;   // 0x0138(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect; // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                CallFunc_Map_Find_Value;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0168(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UnequipItemInstanceInSlot) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipItemInstanceInSlot");
static_assert(sizeof(BP_CharacterData_C_UnequipItemInstanceInSlot) == 0x000180, "Wrong size on BP_CharacterData_C_UnequipItemInstanceInSlot");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, Slot) == 0x000000, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, local_unequipedItem) == 0x000008, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::local_unequipedItem' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, local_unequipedItemID) == 0x000010, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::local_unequipedItemID' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000018, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_EquipmentSlotToString_Result) == 0x000028, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_EquipmentSlotToString_Result' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_IsSlotUsed_ReturnValue) == 0x000090, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_EquipmentSlotToString_Result_1) == 0x0000A8, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_EquipmentSlotToString_Result_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, K2Node_MakeArray_Array_1) == 0x000110, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Format_ReturnValue_1) == 0x000120, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_GetGearPassiveEffects_PassiveEffectIDs) == 0x000138, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_GetGearPassiveEffects_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect) == 0x000154, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_DoEquippedItemsGivePassiveEffect_GivePassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000155, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000156, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Map_Remove_ReturnValue) == 0x000157, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Map_Find_Value) == 0x000158, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, Temp_wildcard_Temp_buffer_array_Variable) == 0x000168, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipItemInstanceInSlot, CallFunc_Array_Add_ReturnValue) == 0x000178, "Member 'BP_CharacterData_C_UnequipItemInstanceInSlot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipLuminaPassive
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterData_C_UnequipLuminaPassive final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_CharacterData_C_UnequipLuminaPassive) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipLuminaPassive");
static_assert(sizeof(BP_CharacterData_C_UnequipLuminaPassive) == 0x000018, "Wrong size on BP_CharacterData_C_UnequipLuminaPassive");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassive, Name_0) == 0x000000, "Member 'BP_CharacterData_C_UnequipLuminaPassive::Name_0' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassive, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_CharacterData_C_UnequipLuminaPassive::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipLuminaPassiveList
// 0x0018 (0x0018 - 0x0000)
struct BP_CharacterData_C_UnequipLuminaPassiveList final
{
public:
	TArray<class FName>                           PassiveIDs;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UnequipLuminaPassiveList) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipLuminaPassiveList");
static_assert(sizeof(BP_CharacterData_C_UnequipLuminaPassiveList) == 0x000018, "Wrong size on BP_CharacterData_C_UnequipLuminaPassiveList");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveList, PassiveIDs) == 0x000000, "Member 'BP_CharacterData_C_UnequipLuminaPassiveList::PassiveIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveList, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000010, "Member 'BP_CharacterData_C_UnequipLuminaPassiveList::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipLuminaPassiveListInternal
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CharacterData_C_UnequipLuminaPassiveListInternal final
{
public:
	TArray<class FName>                           PassiveIDs;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0020(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UnequipLuminaPassiveListInternal) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipLuminaPassiveListInternal");
static_assert(sizeof(BP_CharacterData_C_UnequipLuminaPassiveListInternal) == 0x0000B0, "Wrong size on BP_CharacterData_C_UnequipLuminaPassiveListInternal");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, PassiveIDs) == 0x000000, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::PassiveIDs' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, CallFunc_Conv_NameToText_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UnequipLuminaPassiveListInternal, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000AC, "Member 'BP_CharacterData_C_UnequipLuminaPassiveListInternal::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UnequipSkill
// 0x0008 (0x0008 - 0x0000)
struct BP_CharacterData_C_UnequipSkill final
{
public:
	class UBP_DataAsset_Skill_C*                  SkillID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UnequipSkill) == 0x000008, "Wrong alignment on BP_CharacterData_C_UnequipSkill");
static_assert(sizeof(BP_CharacterData_C_UnequipSkill) == 0x000008, "Wrong size on BP_CharacterData_C_UnequipSkill");
static_assert(offsetof(BP_CharacterData_C_UnequipSkill, SkillID) == 0x000000, "Member 'BP_CharacterData_C_UnequipSkill::SkillID' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.Update Attribute Stats
// 0x0138 (0x0138 - 0x0000)
struct BP_CharacterData_C_Update_Attribute_Stats final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpdateInternals_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ECharacterAttribute>                   K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_jRPG_StatType>                       K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               CallFunc_Array_Get_Item_1;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_Map_Find_Value_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Stats_AttributesScaling             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys;                            // 0x00F0(0x0010)(ReferenceParm)
	E_jRPG_StatType                               CallFunc_Array_Get_Item_2;                         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_2;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_3;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_Update_Attribute_Stats) == 0x000008, "Wrong alignment on BP_CharacterData_C_Update_Attribute_Stats");
static_assert(sizeof(BP_CharacterData_C_Update_Attribute_Stats) == 0x000138, "Wrong size on BP_CharacterData_C_Update_Attribute_Stats");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CharacterData_C_Update_Attribute_Stats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, Temp_real_Variable) == 0x000008, "Member 'BP_CharacterData_C_Update_Attribute_Stats::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_CharacterData_C_Update_Attribute_Stats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_CanUpdateInternals_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_CanUpdateInternals_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_CharacterData_C_Update_Attribute_Stats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_CharacterData_C_Update_Attribute_Stats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, Temp_int_Loop_Counter_Variable_2) == 0x000028, "Member 'BP_CharacterData_C_Update_Attribute_Stats::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_CharacterData_C_Update_Attribute_Stats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Add_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'BP_CharacterData_C_Update_Attribute_Stats::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, K2Node_MakeArray_Array_1) == 0x000050, "Member 'BP_CharacterData_C_Update_Attribute_Stats::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Array_Get_Item_1) == 0x000061, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_Value) == 0x000064, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_Value_1) == 0x000070, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_ReturnValue_1) == 0x000078, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000080, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E8, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Keys_Keys) == 0x0000F0, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_Value_2) == 0x000108, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_ReturnValue_2) == 0x000110, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_Value_3) == 0x000118, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Map_Find_ReturnValue_3) == 0x000120, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Array_Length_ReturnValue_2) == 0x000124, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000128, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_Update_Attribute_Stats, CallFunc_Less_IntInt_ReturnValue_2) == 0x000130, "Member 'BP_CharacterData_C_Update_Attribute_Stats::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UpdateEquipmentStats
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CharacterData_C_UpdateEquipmentStats final
{
public:
	TMap<E_jRPG_StatType, double>                 local_EquipmentBonus;                              // 0x0000(0x0050)(Edit, BlueprintVisible)
	bool                                          CallFunc_CanUpdateInternals_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_jRPG_StatType, double>                 CallFunc_ComputeEquipmentStats_EquipmentStats;     // 0x0058(0x0050)()
};
static_assert(alignof(BP_CharacterData_C_UpdateEquipmentStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_UpdateEquipmentStats");
static_assert(sizeof(BP_CharacterData_C_UpdateEquipmentStats) == 0x0000A8, "Wrong size on BP_CharacterData_C_UpdateEquipmentStats");
static_assert(offsetof(BP_CharacterData_C_UpdateEquipmentStats, local_EquipmentBonus) == 0x000000, "Member 'BP_CharacterData_C_UpdateEquipmentStats::local_EquipmentBonus' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateEquipmentStats, CallFunc_CanUpdateInternals_ReturnValue) == 0x000050, "Member 'BP_CharacterData_C_UpdateEquipmentStats::CallFunc_CanUpdateInternals_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateEquipmentStats, CallFunc_ComputeEquipmentStats_EquipmentStats) == 0x000058, "Member 'BP_CharacterData_C_UpdateEquipmentStats::CallFunc_ComputeEquipmentStats_EquipmentStats' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UpdateLevelingStats
// 0x0150 (0x0150 - 0x0000)
struct BP_CharacterData_C_UpdateLevelingStats final
{
public:
	int32                                         local_levelToFetch;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpdateInternals_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Stats_LevelScaling                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UpdateLevelingStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_UpdateLevelingStats");
static_assert(sizeof(BP_CharacterData_C_UpdateLevelingStats) == 0x000150, "Wrong size on BP_CharacterData_C_UpdateLevelingStats");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, local_levelToFetch) == 0x000000, "Member 'BP_CharacterData_C_UpdateLevelingStats::local_levelToFetch' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000008, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_CharacterData_C_UpdateLevelingStats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000078, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_CharacterData_C_UpdateLevelingStats::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_CharacterData_C_UpdateLevelingStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_CanUpdateInternals_ReturnValue) == 0x0000E8, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_CanUpdateInternals_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLevelingStats, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000148, "Member 'BP_CharacterData_C_UpdateLevelingStats::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UpdateLuminaSystem
// 0x0270 (0x0270 - 0x0000)
struct BP_CharacterData_C_UpdateLuminaSystem final
{
public:
	TArray<class FName>                           local_sortedEquipment;                             // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           local_equipmentPassiveEffects;                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           local_manuallyEquippedPassiveEffects;              // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         local_remainingLuminaPoints;                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           local_passiveEffectsToUnequip;                     // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUpdateInternals_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0078(0x0010)()
	struct FFPassiveEffect                        CallFunc_GetLuminaInfoFromName_Definition;         // 0x0088(0x0048)(HasGetValueTypeHash)
	struct FFPassiveEffectProgression             CallFunc_GetLuminaInfoFromName_Progression;        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_GetEffectiveLuminaCost_ReturnValue;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0138(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxLuminaPoints_ReturnValue;           // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x01C8(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0238(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0254(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_IsUnlocked;       // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_BecauseLearnt;    // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPassiveEffectUnlocked_BecauseEquipment; // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x026F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UpdateLuminaSystem) == 0x000008, "Wrong alignment on BP_CharacterData_C_UpdateLuminaSystem");
static_assert(sizeof(BP_CharacterData_C_UpdateLuminaSystem) == 0x000270, "Wrong size on BP_CharacterData_C_UpdateLuminaSystem");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, local_sortedEquipment) == 0x000000, "Member 'BP_CharacterData_C_UpdateLuminaSystem::local_sortedEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, local_equipmentPassiveEffects) == 0x000010, "Member 'BP_CharacterData_C_UpdateLuminaSystem::local_equipmentPassiveEffects' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, local_manuallyEquippedPassiveEffects) == 0x000020, "Member 'BP_CharacterData_C_UpdateLuminaSystem::local_manuallyEquippedPassiveEffects' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, local_remainingLuminaPoints) == 0x000030, "Member 'BP_CharacterData_C_UpdateLuminaSystem::local_remainingLuminaPoints' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, local_passiveEffectsToUnequip) == 0x000038, "Member 'BP_CharacterData_C_UpdateLuminaSystem::local_passiveEffectsToUnequip' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_CharacterData_C_UpdateLuminaSystem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_CharacterData_C_UpdateLuminaSystem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_CharacterData_C_UpdateLuminaSystem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_CharacterData_C_UpdateLuminaSystem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, Temp_int_Array_Index_Variable_2) == 0x000060, "Member 'BP_CharacterData_C_UpdateLuminaSystem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_CanUpdateInternals_ReturnValue) == 0x000064, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_CanUpdateInternals_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Conv_NameToText_ReturnValue) == 0x000078, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_GetLuminaInfoFromName_Definition) == 0x000088, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_GetLuminaInfoFromName_Definition' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_GetLuminaInfoFromName_Progression) == 0x0000D0, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_GetLuminaInfoFromName_Progression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'BP_CharacterData_C_UpdateLuminaSystem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_GetEffectiveLuminaCost_ReturnValue) == 0x000128, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_GetEffectiveLuminaCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000130, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, K2Node_MakeStruct_FormatArgumentData_1) == 0x000138, "Member 'BP_CharacterData_C_UpdateLuminaSystem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000180, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, K2Node_MakeArray_Array) == 0x000188, "Member 'BP_CharacterData_C_UpdateLuminaSystem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Format_ReturnValue) == 0x000198, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_GetMaxLuminaPoints_ReturnValue) == 0x0001A8, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_GetMaxLuminaPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, Temp_int_Loop_Counter_Variable_2) == 0x0001B4, "Member 'BP_CharacterData_C_UpdateLuminaSystem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Get_Item_1) == 0x0001B8, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0001C8, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Less_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001E0, "Member 'BP_CharacterData_C_UpdateLuminaSystem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, K2Node_MakeArray_Array_1) == 0x000228, "Member 'BP_CharacterData_C_UpdateLuminaSystem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Format_ReturnValue_1) == 0x000238, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000248, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Add_IntInt_ReturnValue_2) == 0x00024C, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Length_ReturnValue_2) == 0x000250, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Get_Item_2) == 0x000254, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Less_IntInt_ReturnValue_2) == 0x00025C, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Add_ReturnValue_1) == 0x000260, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Add_ReturnValue_2) == 0x000264, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Array_Add_ReturnValue_3) == 0x000268, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_IsPassiveEffectUnlocked_IsUnlocked) == 0x00026C, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_IsPassiveEffectUnlocked_IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_IsPassiveEffectUnlocked_BecauseLearnt) == 0x00026D, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_IsPassiveEffectUnlocked_BecauseLearnt' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_IsPassiveEffectUnlocked_BecauseEquipment) == 0x00026E, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_IsPassiveEffectUnlocked_BecauseEquipment' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateLuminaSystem, CallFunc_Not_PreBool_ReturnValue) == 0x00026F, "Member 'BP_CharacterData_C_UpdateLuminaSystem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UpdatePassiveEffectProgression
// 0x0080 (0x0080 - 0x0000)
struct BP_CharacterData_C_UpdatePassiveEffectProgression final
{
public:
	struct FFPassiveEffectProgression             DirtyProgression;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffectProgression             UpdatedProgression;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x0020(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffectProgression             K2Node_SetFieldsInStruct_StructOut;                // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CharacterData_C_UpdatePassiveEffectProgression) == 0x000008, "Wrong alignment on BP_CharacterData_C_UpdatePassiveEffectProgression");
static_assert(sizeof(BP_CharacterData_C_UpdatePassiveEffectProgression) == 0x000080, "Wrong size on BP_CharacterData_C_UpdatePassiveEffectProgression");
static_assert(offsetof(BP_CharacterData_C_UpdatePassiveEffectProgression, DirtyProgression) == 0x000000, "Member 'BP_CharacterData_C_UpdatePassiveEffectProgression::DirtyProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdatePassiveEffectProgression, UpdatedProgression) == 0x000010, "Member 'BP_CharacterData_C_UpdatePassiveEffectProgression::UpdatedProgression' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdatePassiveEffectProgression, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x000020, "Member 'BP_CharacterData_C_UpdatePassiveEffectProgression::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdatePassiveEffectProgression, CallFunc_GetPassiveEffectDefinition_Found) == 0x000068, "Member 'BP_CharacterData_C_UpdatePassiveEffectProgression::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdatePassiveEffectProgression, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000069, "Member 'BP_CharacterData_C_UpdatePassiveEffectProgression::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdatePassiveEffectProgression, K2Node_SetFieldsInStruct_StructOut) == 0x00006C, "Member 'BP_CharacterData_C_UpdatePassiveEffectProgression::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_CharacterData.BP_CharacterData_C.UpdateStats
// 0x0148 (0x0148 - 0x0000)
struct BP_CharacterData_C_UpdateStats final
{
public:
	double                                        local_currentHP_Percentage;                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_StatType, double>                 local_ComputedStats;                               // 0x0008(0x0050)(Edit, BlueprintVisible)
	bool                                          CallFunc_CanUpdateInternals_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetHPPercent_HPPercent;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBattleStartAP_Count_AP_Count;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_StatType, double>                 CallFunc_GetBaseStats_CharacterStats;              // 0x0090(0x0050)()
	double                                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_StatType, double>                 CallFunc_ComputeStatsFromParts_ComputedStats;      // 0x00F8(0x0050)()
};
static_assert(alignof(BP_CharacterData_C_UpdateStats) == 0x000008, "Wrong alignment on BP_CharacterData_C_UpdateStats");
static_assert(sizeof(BP_CharacterData_C_UpdateStats) == 0x000148, "Wrong size on BP_CharacterData_C_UpdateStats");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, local_currentHP_Percentage) == 0x000000, "Member 'BP_CharacterData_C_UpdateStats::local_currentHP_Percentage' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, local_ComputedStats) == 0x000008, "Member 'BP_CharacterData_C_UpdateStats::local_ComputedStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_CanUpdateInternals_ReturnValue) == 0x000058, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_CanUpdateInternals_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, Temp_bool_Variable) == 0x000059, "Member 'BP_CharacterData_C_UpdateStats::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_GetHPPercent_HPPercent) == 0x000060, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_GetHPPercent_HPPercent' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_GetBattleStartAP_Count_AP_Count) == 0x00006C, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_GetBattleStartAP_Count_AP_Count' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_GetMaxHP_MaxHP) == 0x000070, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_FMax_ReturnValue) == 0x000088, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_GetBaseStats_CharacterStats) == 0x000090, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_GetBaseStats_CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, K2Node_Select_Default) == 0x0000E0, "Member 'BP_CharacterData_C_UpdateStats::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_Round_ReturnValue) == 0x0000E8, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CharacterData_C_UpdateStats, CallFunc_ComputeStatsFromParts_ComputedStats) == 0x0000F8, "Member 'BP_CharacterData_C_UpdateStats::CallFunc_ComputeStatsFromParts_ComputedStats' has a wrong offset!");

}

