#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponAttributeScaling

#include "Basic.hpp"

#include "EAttributeScalingGrade_structs.hpp"
#include "Engine_structs.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_WeaponAttributeScaling.WBP_WeaponAttributeScaling_C
// 0x0028 (0x0330 - 0x0308)
class UWBP_WeaponAttributeScaling_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_WrappingText_C*                    AttributeLabelText;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       AttributeScaling;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PowerValue;                                        // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ECharacterAttribute                           AttributeType;                                     // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EAttributeScalingGrade                        PreviewScaling;                                    // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_WeaponAttributeScaling(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetAttributeScaling(EAttributeScalingGrade InAttributeScaling);
	void SetAttributeType(ECharacterAttribute InAttribute);
	void SetPowerValue(int32 InPower);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_WeaponAttributeScaling_C">();
	}
	static class UWBP_WeaponAttributeScaling_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_WeaponAttributeScaling_C>();
	}
};
static_assert(alignof(UWBP_WeaponAttributeScaling_C) == 0x000008, "Wrong alignment on UWBP_WeaponAttributeScaling_C");
static_assert(sizeof(UWBP_WeaponAttributeScaling_C) == 0x000330, "Wrong size on UWBP_WeaponAttributeScaling_C");
static_assert(offsetof(UWBP_WeaponAttributeScaling_C, UberGraphFrame) == 0x000308, "Member 'UWBP_WeaponAttributeScaling_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponAttributeScaling_C, AttributeLabelText) == 0x000310, "Member 'UWBP_WeaponAttributeScaling_C::AttributeLabelText' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponAttributeScaling_C, AttributeScaling) == 0x000318, "Member 'UWBP_WeaponAttributeScaling_C::AttributeScaling' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponAttributeScaling_C, PowerValue) == 0x000320, "Member 'UWBP_WeaponAttributeScaling_C::PowerValue' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponAttributeScaling_C, AttributeType) == 0x000328, "Member 'UWBP_WeaponAttributeScaling_C::AttributeType' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponAttributeScaling_C, PreviewScaling) == 0x000329, "Member 'UWBP_WeaponAttributeScaling_C::PreviewScaling' has a wrong offset!");

}

