#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Document

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FLevelDataEntry_structs.hpp"


namespace SDK::Params
{

// Function WBP_Document.WBP_Document_C.BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature final
{
public:
	bool                                          IsOwned;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AssociatedLevel;                                   // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature");
static_assert(sizeof(WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature) == 0x00000C, "Wrong size on WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature");
static_assert(offsetof(WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature, IsOwned) == 0x000000, "Member 'WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature::IsOwned' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature, AssociatedLevel) == 0x000004, "Member 'WBP_Document_C_BndEvt__WBP_Document_JournalPanel_K2Node_ComponentBoundEvent_1_OnJournalItemNavigated__DelegateSignature::AssociatedLevel' has a wrong offset!");

// Function WBP_Document.WBP_Document_C.ExecuteUbergraph_WBP_Document
// 0x0028 (0x0028 - 0x0000)
struct WBP_Document_C_ExecuteUbergraph_WBP_Document final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ReadingCube_C*                      K2Node_DynamicCast_AsBP_Reading_Cube;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsOwned;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_AssociatedLevel;        // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Document_C_ExecuteUbergraph_WBP_Document) == 0x000008, "Wrong alignment on WBP_Document_C_ExecuteUbergraph_WBP_Document");
static_assert(sizeof(WBP_Document_C_ExecuteUbergraph_WBP_Document) == 0x000028, "Wrong size on WBP_Document_C_ExecuteUbergraph_WBP_Document");
static_assert(offsetof(WBP_Document_C_ExecuteUbergraph_WBP_Document, EntryPoint) == 0x000000, "Member 'WBP_Document_C_ExecuteUbergraph_WBP_Document::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_ExecuteUbergraph_WBP_Document, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'WBP_Document_C_ExecuteUbergraph_WBP_Document::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_ExecuteUbergraph_WBP_Document, K2Node_DynamicCast_AsBP_Reading_Cube) == 0x000010, "Member 'WBP_Document_C_ExecuteUbergraph_WBP_Document::K2Node_DynamicCast_AsBP_Reading_Cube' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_ExecuteUbergraph_WBP_Document, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Document_C_ExecuteUbergraph_WBP_Document::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_ExecuteUbergraph_WBP_Document, K2Node_ComponentBoundEvent_IsOwned) == 0x000019, "Member 'WBP_Document_C_ExecuteUbergraph_WBP_Document::K2Node_ComponentBoundEvent_IsOwned' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_ExecuteUbergraph_WBP_Document, K2Node_ComponentBoundEvent_AssociatedLevel) == 0x00001C, "Member 'WBP_Document_C_ExecuteUbergraph_WBP_Document::K2Node_ComponentBoundEvent_AssociatedLevel' has a wrong offset!");

// Function WBP_Document.WBP_Document_C.SwitchActiveBackground
// 0x01C8 (0x01C8 - 0x0000)
struct WBP_Document_C_SwitchActiveBackground final
{
public:
	bool                                          IsLevelDisplayed;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LevelName;                                         // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelData_Found;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_GetLevelData_LevelData;                   // 0x0010(0x01B0)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Document_C_SwitchActiveBackground) == 0x000008, "Wrong alignment on WBP_Document_C_SwitchActiveBackground");
static_assert(sizeof(WBP_Document_C_SwitchActiveBackground) == 0x0001C8, "Wrong size on WBP_Document_C_SwitchActiveBackground");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, IsLevelDisplayed) == 0x000000, "Member 'WBP_Document_C_SwitchActiveBackground::IsLevelDisplayed' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, LevelName) == 0x000004, "Member 'WBP_Document_C_SwitchActiveBackground::LevelName' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, Temp_byte_Variable) == 0x00000C, "Member 'WBP_Document_C_SwitchActiveBackground::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, CallFunc_GetLevelData_Found) == 0x00000D, "Member 'WBP_Document_C_SwitchActiveBackground::CallFunc_GetLevelData_Found' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, CallFunc_GetLevelData_LevelData) == 0x000010, "Member 'WBP_Document_C_SwitchActiveBackground::CallFunc_GetLevelData_LevelData' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, Temp_byte_Variable_1) == 0x0001C0, "Member 'WBP_Document_C_SwitchActiveBackground::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, Temp_bool_Variable) == 0x0001C1, "Member 'WBP_Document_C_SwitchActiveBackground::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Document_C_SwitchActiveBackground, K2Node_Select_Default) == 0x0001C2, "Member 'WBP_Document_C_SwitchActiveBackground::K2Node_Select_Default' has a wrong offset!");

}

