#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AttributesWheel

#include "Basic.hpp"

#include "EAttributeScalingGrade_structs.hpp"
#include "Engine_structs.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AttributesWheel.WBP_AttributesWheel_C
// 0x0140 (0x0448 - 0x0308)
class UWBP_AttributesWheel_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Pentagon;                                     // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_AttributeStat_C*                   AgilityStat;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AttributeStat_C*                   DefenseStat;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AttributeStat_C*                   LuckStat;                                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AttributeStat_C*                   MightStat;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Pentagon;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AttributeStat_C*                   VitalityStat;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<ECharacterAttribute, class UWBP_AttributeStat_C*> AttributeWidgetsMap;                      // 0x0348(0x0050)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference)
	double                                        PentagonAnimProgress;                              // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterAttribute, double>             NewValues;                                         // 0x03A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<ECharacterAttribute, double>             OldValues;                                         // 0x03F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsInit;                                            // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_AttributesWheel(int32 EntryPoint);
	void LoadCharacterData(class UBP_CharacterData_C* InCharacterData);
	void LoadPreviewCharacterData(class UBP_CharacterData_C* InCharacterData);
	void PreConstruct(bool IsDesignTime);
	void SetPentagonAnimProgress(double PentagonAnimProgress_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AttributesWheel_C">();
	}
	static class UWBP_AttributesWheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AttributesWheel_C>();
	}
};
static_assert(alignof(UWBP_AttributesWheel_C) == 0x000008, "Wrong alignment on UWBP_AttributesWheel_C");
static_assert(sizeof(UWBP_AttributesWheel_C) == 0x000448, "Wrong size on UWBP_AttributesWheel_C");
static_assert(offsetof(UWBP_AttributesWheel_C, UberGraphFrame) == 0x000308, "Member 'UWBP_AttributesWheel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, Anim_Pentagon) == 0x000310, "Member 'UWBP_AttributesWheel_C::Anim_Pentagon' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, AgilityStat) == 0x000318, "Member 'UWBP_AttributesWheel_C::AgilityStat' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, DefenseStat) == 0x000320, "Member 'UWBP_AttributesWheel_C::DefenseStat' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, LuckStat) == 0x000328, "Member 'UWBP_AttributesWheel_C::LuckStat' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, MightStat) == 0x000330, "Member 'UWBP_AttributesWheel_C::MightStat' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, Pentagon) == 0x000338, "Member 'UWBP_AttributesWheel_C::Pentagon' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, VitalityStat) == 0x000340, "Member 'UWBP_AttributesWheel_C::VitalityStat' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, AttributeWidgetsMap) == 0x000348, "Member 'UWBP_AttributesWheel_C::AttributeWidgetsMap' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, PentagonAnimProgress) == 0x000398, "Member 'UWBP_AttributesWheel_C::PentagonAnimProgress' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, NewValues) == 0x0003A0, "Member 'UWBP_AttributesWheel_C::NewValues' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, OldValues) == 0x0003F0, "Member 'UWBP_AttributesWheel_C::OldValues' has a wrong offset!");
static_assert(offsetof(UWBP_AttributesWheel_C, IsInit) == 0x000440, "Member 'UWBP_AttributesWheel_C::IsInit' has a wrong offset!");

}

