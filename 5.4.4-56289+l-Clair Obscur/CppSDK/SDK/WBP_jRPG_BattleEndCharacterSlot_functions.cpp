#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_jRPG_BattleEndCharacterSlot

#include "Basic.hpp"

#include "WBP_jRPG_BattleEndCharacterSlot_classes.hpp"
#include "WBP_jRPG_BattleEndCharacterSlot_parameters.hpp"


namespace SDK
{

// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.ActivateTimer
// (BlueprintCallable, BlueprintEvent)

void UWBP_jRPG_BattleEndCharacterSlot_C::ActivateTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "ActivateTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.CheckForLevelUp
// (BlueprintCallable, BlueprintEvent)

void UWBP_jRPG_BattleEndCharacterSlot_C::CheckForLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "CheckForLevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_jRPG_BattleEndCharacterSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.ExecuteUbergraph_WBP_jRPG_BattleEndCharacterSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_jRPG_BattleEndCharacterSlot_C::ExecuteUbergraph_WBP_jRPG_BattleEndCharacterSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "ExecuteUbergraph_WBP_jRPG_BattleEndCharacterSlot");

	Params::WBP_jRPG_BattleEndCharacterSlot_C_ExecuteUbergraph_WBP_jRPG_BattleEndCharacterSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.InterpolateGainedXP
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TargetLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TargetXP                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_jRPG_BattleEndCharacterSlot_C::InterpolateGainedXP(int32 TargetLevel, int32 TargetXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "InterpolateGainedXP");

	Params::WBP_jRPG_BattleEndCharacterSlot_C_InterpolateGainedXP Parms{};

	Parms.TargetLevel = TargetLevel;
	Parms.TargetXP = TargetXP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.ShowLevelUpStatsComparison
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_jRPG_BattleEndCharacterSlot_C::ShowLevelUpStatsComparison()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "ShowLevelUpStatsComparison");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_jRPG_BattleEndCharacterSlot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "Tick");

	Params::WBP_jRPG_BattleEndCharacterSlot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.UpdateCharacterImage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       CharacterIcon                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_jRPG_BattleEndCharacterSlot_C::UpdateCharacterImage(class UTexture2D* CharacterIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "UpdateCharacterImage");

	Params::WBP_jRPG_BattleEndCharacterSlot_C_UpdateCharacterImage Parms{};

	Parms.CharacterIcon = CharacterIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.UpdateCharacterStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<E_jRPG_StatType, double>&    CharacterStats                                         (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_jRPG_BattleEndCharacterSlot_C::UpdateCharacterStats(const TMap<E_jRPG_StatType, double>& CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "UpdateCharacterStats");

	Params::WBP_jRPG_BattleEndCharacterSlot_C_UpdateCharacterStats Parms{};

	Parms.CharacterStats = std::move(CharacterStats);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.UpdateDataIncludingLevelUp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentExperience                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_jRPG_BattleEndCharacterSlot_C::UpdateDataIncludingLevelUp(int32 CurrentLevel, int32 CurrentExperience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "UpdateDataIncludingLevelUp");

	Params::WBP_jRPG_BattleEndCharacterSlot_C_UpdateDataIncludingLevelUp Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.CurrentExperience = CurrentExperience;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_jRPG_BattleEndCharacterSlot.WBP_jRPG_BattleEndCharacterSlot_C.UpdateLevelAndXP
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentXP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_jRPG_BattleEndCharacterSlot_C::UpdateLevelAndXP(int32 CurrentLevel, int32 CurrentXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_jRPG_BattleEndCharacterSlot_C", "UpdateLevelAndXP");

	Params::WBP_jRPG_BattleEndCharacterSlot_C_UpdateLevelAndXP Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.CurrentXP = CurrentXP;

	UObject::ProcessEvent(Func, &Parms);
}

}

