#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_UpdateDesiredGait

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_UpdateDesiredGait.BTService_UpdateDesiredGait_C
// 0x0078 (0x0110 - 0x0098)
class UBTService_UpdateDesiredGait_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_Pawn_AICompanion_C*                 CompanionPawn;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 ActorBlackboardKeySelector;                        // 0x00A8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 DistanceToDestinationBlackboardKeySelector;        // 0x00D0(0x0028)(Edit, BlueprintVisible)
	double                                        DistanceToRun;                                     // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToSprint;                                  // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceToWalk;                                    // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTService_UpdateDesiredGait(int32 EntryPoint);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void UpdateMovementGait();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_UpdateDesiredGait_C">();
	}
	static class UBTService_UpdateDesiredGait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_UpdateDesiredGait_C>();
	}
};
static_assert(alignof(UBTService_UpdateDesiredGait_C) == 0x000008, "Wrong alignment on UBTService_UpdateDesiredGait_C");
static_assert(sizeof(UBTService_UpdateDesiredGait_C) == 0x000110, "Wrong size on UBTService_UpdateDesiredGait_C");
static_assert(offsetof(UBTService_UpdateDesiredGait_C, UberGraphFrame) == 0x000098, "Member 'UBTService_UpdateDesiredGait_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateDesiredGait_C, CompanionPawn) == 0x0000A0, "Member 'UBTService_UpdateDesiredGait_C::CompanionPawn' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateDesiredGait_C, ActorBlackboardKeySelector) == 0x0000A8, "Member 'UBTService_UpdateDesiredGait_C::ActorBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateDesiredGait_C, DistanceToDestinationBlackboardKeySelector) == 0x0000D0, "Member 'UBTService_UpdateDesiredGait_C::DistanceToDestinationBlackboardKeySelector' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateDesiredGait_C, DistanceToRun) == 0x0000F8, "Member 'UBTService_UpdateDesiredGait_C::DistanceToRun' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateDesiredGait_C, DistanceToSprint) == 0x000100, "Member 'UBTService_UpdateDesiredGait_C::DistanceToSprint' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateDesiredGait_C, DistanceToWalk) == 0x000108, "Member 'UBTService_UpdateDesiredGait_C::DistanceToWalk' has a wrong offset!");

}

