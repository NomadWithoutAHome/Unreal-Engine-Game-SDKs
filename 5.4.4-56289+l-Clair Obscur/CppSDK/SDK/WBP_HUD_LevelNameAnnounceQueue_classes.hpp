#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_LevelNameAnnounceQueue

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_LevelNameAnnounceQueue.WBP_HUD_LevelNameAnnounceQueue_C
// 0x0038 (0x0340 - 0x0308)
class UWBP_HUD_LevelNameAnnounceQueue_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonActivatableWidgetQueue*          LevelNameQueue;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnQueuePaused;                                     // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnQueueResumed;                                    // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsPaused;                                          // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WBP_HUD_LevelNameAnnounceQueue(int32 EntryPoint);
	void GetIsPaused(bool* IsPaused_0);
	void OnChangeMapProcessFinished(class FName LevelDestination);
	void PauseQueue();
	void ResumeQueue();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_LevelNameAnnounceQueue_C">();
	}
	static class UWBP_HUD_LevelNameAnnounceQueue_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_LevelNameAnnounceQueue_C>();
	}
};
static_assert(alignof(UWBP_HUD_LevelNameAnnounceQueue_C) == 0x000008, "Wrong alignment on UWBP_HUD_LevelNameAnnounceQueue_C");
static_assert(sizeof(UWBP_HUD_LevelNameAnnounceQueue_C) == 0x000340, "Wrong size on UWBP_HUD_LevelNameAnnounceQueue_C");
static_assert(offsetof(UWBP_HUD_LevelNameAnnounceQueue_C, UberGraphFrame) == 0x000308, "Member 'UWBP_HUD_LevelNameAnnounceQueue_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_LevelNameAnnounceQueue_C, LevelNameQueue) == 0x000310, "Member 'UWBP_HUD_LevelNameAnnounceQueue_C::LevelNameQueue' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_LevelNameAnnounceQueue_C, OnQueuePaused) == 0x000318, "Member 'UWBP_HUD_LevelNameAnnounceQueue_C::OnQueuePaused' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_LevelNameAnnounceQueue_C, OnQueueResumed) == 0x000328, "Member 'UWBP_HUD_LevelNameAnnounceQueue_C::OnQueueResumed' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_LevelNameAnnounceQueue_C, IsPaused) == 0x000338, "Member 'UWBP_HUD_LevelNameAnnounceQueue_C::IsPaused' has a wrong offset!");

}

