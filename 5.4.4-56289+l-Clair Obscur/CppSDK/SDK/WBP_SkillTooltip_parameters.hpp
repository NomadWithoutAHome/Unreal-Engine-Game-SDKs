#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillTooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_SkillIconsDataRow_structs.hpp"


namespace SDK::Params
{

// Function WBP_SkillTooltip.WBP_SkillTooltip_C.CreateAdditionalEffect
// 0x0028 (0x0028 - 0x0000)
struct WBP_SkillTooltip_C_CreateAdditionalEffect final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOvercharged;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowBackground;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Size;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_BattleCard_EffectBox_C*            CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_SetContent_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTooltip_C_CreateAdditionalEffect) == 0x000008, "Wrong alignment on WBP_SkillTooltip_C_CreateAdditionalEffect");
static_assert(sizeof(WBP_SkillTooltip_C_CreateAdditionalEffect) == 0x000028, "Wrong size on WBP_SkillTooltip_C_CreateAdditionalEffect");
static_assert(offsetof(WBP_SkillTooltip_C_CreateAdditionalEffect, Content) == 0x000000, "Member 'WBP_SkillTooltip_C_CreateAdditionalEffect::Content' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_CreateAdditionalEffect, IsOvercharged) == 0x000008, "Member 'WBP_SkillTooltip_C_CreateAdditionalEffect::IsOvercharged' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_CreateAdditionalEffect, bShowBackground) == 0x000009, "Member 'WBP_SkillTooltip_C_CreateAdditionalEffect::bShowBackground' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_CreateAdditionalEffect, Size) == 0x000010, "Member 'WBP_SkillTooltip_C_CreateAdditionalEffect::Size' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_CreateAdditionalEffect, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000018, "Member 'WBP_SkillTooltip_C_CreateAdditionalEffect::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_CreateAdditionalEffect, CallFunc_SetContent_ReturnValue) == 0x000020, "Member 'WBP_SkillTooltip_C_CreateAdditionalEffect::CallFunc_SetContent_ReturnValue' has a wrong offset!");

// Function WBP_SkillTooltip.WBP_SkillTooltip_C.SetSkillUnlockData
// 0x0018 (0x0018 - 0x0000)
struct WBP_SkillTooltip_C_SetSkillUnlockData final
{
public:
	class UBP_DataAsset_Skill_C*                  SkillData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSecretLocked;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTooltip_C_SetSkillUnlockData) == 0x000008, "Wrong alignment on WBP_SkillTooltip_C_SetSkillUnlockData");
static_assert(sizeof(WBP_SkillTooltip_C_SetSkillUnlockData) == 0x000018, "Wrong size on WBP_SkillTooltip_C_SetSkillUnlockData");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, SkillData) == 0x000000, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::SkillData' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, IsSecretLocked) == 0x000008, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::IsSecretLocked' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, Temp_byte_Variable) == 0x000009, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, Temp_bool_Variable) == 0x00000B, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, Temp_byte_Variable_2) == 0x00000C, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, Temp_byte_Variable_3) == 0x00000D, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, Temp_bool_Variable_1) == 0x00000E, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, K2Node_Select_Default) == 0x00000F, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_SetSkillUnlockData, K2Node_Select_Default_1) == 0x000010, "Member 'WBP_SkillTooltip_C_SetSkillUnlockData::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_SkillTooltip.WBP_SkillTooltip_C.Set Skill Data
// 0x0110 (0x0110 - 0x0000)
struct WBP_SkillTooltip_C_Set_Skill_Data final
{
public:
	class UBP_DataAsset_Skill_C*                  InSkillData;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ParseSkillDescriptionText_ParsedText;     // 0x0010(0x0010)()
	int32                                         CallFunc_GetSkillBaseCost_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillDataComponent_Base_C*>  CallFunc_GetSkillComponentsAsBP_Array;             // 0x0068(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponent_Base_C*          CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0098(0x0010)()
	struct FS_SkillIconsDataRow                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00D8(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x00E8(0x0010)()
	bool                                          Temp_bool_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0100(0x0010)()
};
static_assert(alignof(WBP_SkillTooltip_C_Set_Skill_Data) == 0x000008, "Wrong alignment on WBP_SkillTooltip_C_Set_Skill_Data");
static_assert(sizeof(WBP_SkillTooltip_C_Set_Skill_Data) == 0x000110, "Wrong size on WBP_SkillTooltip_C_Set_Skill_Data");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, InSkillData) == 0x000000, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::InSkillData' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_byte_Variable) == 0x000008, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_ParseSkillDescriptionText_ParsedText) == 0x000010, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_ParseSkillDescriptionText_ParsedText' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_GetSkillBaseCost_ReturnValue) == 0x000020, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_GetSkillBaseCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_byte_Variable_1) == 0x00002C, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_GetDesiredSize_ReturnValue) == 0x000030, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_BreakVector2D_X) == 0x000040, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_bool_Variable) == 0x000050, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, K2Node_Select_Default) == 0x000060, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_GetSkillComponentsAsBP_Array) == 0x000068, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_GetSkillComponentsAsBP_Array' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_text_Variable) == 0x000098, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D0, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_bool_Variable_1) == 0x0000D1, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, K2Node_Select_Default_1) == 0x0000D8, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_text_Variable_1) == 0x0000E8, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, Temp_bool_Variable_2) == 0x0000F8, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SkillTooltip_C_Set_Skill_Data, K2Node_Select_Default_2) == 0x000100, "Member 'WBP_SkillTooltip_C_Set_Skill_Data::K2Node_Select_Default_2' has a wrong offset!");

}

