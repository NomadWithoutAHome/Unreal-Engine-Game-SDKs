#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutoLinkerPlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct AutoLinkerPlugin.ALTLinkReduced
// 0x0030 (0x0030 - 0x0000)
struct FALTLinkReduced final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FALTLinkReduced) == 0x000008, "Wrong alignment on FALTLinkReduced");
static_assert(sizeof(FALTLinkReduced) == 0x000030, "Wrong size on FALTLinkReduced");
static_assert(offsetof(FALTLinkReduced, Start) == 0x000000, "Member 'FALTLinkReduced::Start' has a wrong offset!");
static_assert(offsetof(FALTLinkReduced, End) == 0x000018, "Member 'FALTLinkReduced::End' has a wrong offset!");

// ScriptStruct AutoLinkerPlugin.ALTColliderPath
// 0x0058 (0x0058 - 0x0000)
struct FALTColliderPath final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0018(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Direction;                                         // 0x0030(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FALTLinkReduced>                linkInside;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FALTColliderPath) == 0x000008, "Wrong alignment on FALTColliderPath");
static_assert(sizeof(FALTColliderPath) == 0x000058, "Wrong size on FALTColliderPath");
static_assert(offsetof(FALTColliderPath, Start) == 0x000000, "Member 'FALTColliderPath::Start' has a wrong offset!");
static_assert(offsetof(FALTColliderPath, End) == 0x000018, "Member 'FALTColliderPath::End' has a wrong offset!");
static_assert(offsetof(FALTColliderPath, Direction) == 0x000030, "Member 'FALTColliderPath::Direction' has a wrong offset!");
static_assert(offsetof(FALTColliderPath, linkInside) == 0x000048, "Member 'FALTColliderPath::linkInside' has a wrong offset!");

// ScriptStruct AutoLinkerPlugin.ALTLinkCapsuleMaker
// 0x0040 (0x0040 - 0x0000)
struct FALTLinkCapsuleMaker final
{
public:
	TArray<struct FVector>                        allPoints;                                         // 0x0000(0x0010)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                _a;                                                // 0x0010(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                _b;                                                // 0x0028(0x0018)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FALTLinkCapsuleMaker) == 0x000008, "Wrong alignment on FALTLinkCapsuleMaker");
static_assert(sizeof(FALTLinkCapsuleMaker) == 0x000040, "Wrong size on FALTLinkCapsuleMaker");
static_assert(offsetof(FALTLinkCapsuleMaker, allPoints) == 0x000000, "Member 'FALTLinkCapsuleMaker::allPoints' has a wrong offset!");
static_assert(offsetof(FALTLinkCapsuleMaker, _a) == 0x000010, "Member 'FALTLinkCapsuleMaker::_a' has a wrong offset!");
static_assert(offsetof(FALTLinkCapsuleMaker, _b) == 0x000028, "Member 'FALTLinkCapsuleMaker::_b' has a wrong offset!");

}

