#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_UpdateDesiredGait

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTService_UpdateDesiredGait.BTService_UpdateDesiredGait_C.ExecuteUbergraph_BTService_UpdateDesiredGait
// 0x0040 (0x0040 - 0x0000)
struct BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Pawn_AICompanion_C*                 K2Node_DynamicCast_AsBP_Pawn_AICompanion;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait) == 0x000008, "Wrong alignment on BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait");
static_assert(sizeof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait) == 0x000040, "Wrong size on BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, EntryPoint) == 0x000000, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, K2Node_Event_OwnerController) == 0x000020, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, K2Node_Event_ControlledPawn) == 0x000028, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, K2Node_DynamicCast_AsBP_Pawn_AICompanion) == 0x000030, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::K2Node_DynamicCast_AsBP_Pawn_AICompanion' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTService_UpdateDesiredGait_C_ExecuteUbergraph_BTService_UpdateDesiredGait::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTService_UpdateDesiredGait.BTService_UpdateDesiredGait_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTService_UpdateDesiredGait_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateDesiredGait_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTService_UpdateDesiredGait_C_ReceiveActivationAI");
static_assert(sizeof(BTService_UpdateDesiredGait_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTService_UpdateDesiredGait_C_ReceiveActivationAI");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTService_UpdateDesiredGait_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTService_UpdateDesiredGait_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTService_UpdateDesiredGait.BTService_UpdateDesiredGait_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTService_UpdateDesiredGait_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateDesiredGait_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTService_UpdateDesiredGait_C_ReceiveTickAI");
static_assert(sizeof(BTService_UpdateDesiredGait_C_ReceiveTickAI) == 0x000018, "Wrong size on BTService_UpdateDesiredGait_C_ReceiveTickAI");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTService_UpdateDesiredGait_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTService_UpdateDesiredGait_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTService_UpdateDesiredGait_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTService_UpdateDesiredGait.BTService_UpdateDesiredGait_C.UpdateMovementGait
// 0x0030 (0x0030 - 0x0000)
struct BTService_UpdateDesiredGait_C_UpdateMovementGait final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_1;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateDesiredGait_C_UpdateMovementGait) == 0x000008, "Wrong alignment on BTService_UpdateDesiredGait_C_UpdateMovementGait");
static_assert(sizeof(BTService_UpdateDesiredGait_C_UpdateMovementGait) == 0x000030, "Wrong size on BTService_UpdateDesiredGait_C_UpdateMovementGait");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000004, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000009, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00000A, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00000B, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000018, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000020, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateDesiredGait_C_UpdateMovementGait, CallFunc_Greater_DoubleDouble_B_ImplicitCast_1) == 0x000028, "Member 'BTService_UpdateDesiredGait_C_UpdateMovementGait::CallFunc_Greater_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

}

