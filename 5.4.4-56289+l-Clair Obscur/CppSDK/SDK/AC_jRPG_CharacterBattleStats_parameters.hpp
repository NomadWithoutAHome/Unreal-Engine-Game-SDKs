#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_CharacterBattleStats

#include "Basic.hpp"

#include "E_jRPG_StatType_structs.hpp"
#include "EDamageReason_structs.hpp"
#include "SandFall_structs.hpp"
#include "ECharacterTeamSelector_structs.hpp"
#include "S_jRPG_Enemy_structs.hpp"
#include "S_jRPG_OverdriveSource_structs.hpp"
#include "Engine_structs.hpp"
#include "E_BreakStunReason_structs.hpp"
#include "S_ResurrectParameters_structs.hpp"
#include "EAttackType_structs.hpp"
#include "EElementalAffinity_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FDamageModifier_structs.hpp"
#include "ERuntimeBattleStatType_structs.hpp"
#include "EBuffApplicationProbability_structs.hpp"
#include "FPassiveEffect_structs.hpp"
#include "EAPChangeReason_structs.hpp"
#include "S_WeaponDefinition_structs.hpp"
#include "StatMultiplier_structs.hpp"
#include "EHealReason_structs.hpp"
#include "FCharacterStats_structs.hpp"


namespace SDK::Params
{

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetDamageSourceCharacter
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter, CharacterStats_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter::CharacterStats_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetDamageSourceCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetDamageSourceType
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetDamageSourceType final
{
public:
	EDamageReason                                 DamageSourceType;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetDamageSourceType) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetDamageSourceType");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetDamageSourceType) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetDamageSourceType");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDamageSourceType, DamageSourceType) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetDamageSourceType::DamageSourceType' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.NotifySkillStatesAvailable
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuffInstanceWrapper_C*        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable, CallFunc_Array_Get_Item) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_NotifySkillStatesAvailable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CanCounterAttackCurrentEnemySkill
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CanCounterAttackCurrentEnemySkill final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CanCounterAttackCurrentEnemySkill) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CanCounterAttackCurrentEnemySkill");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CanCounterAttackCurrentEnemySkill) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_CanCounterAttackCurrentEnemySkill");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanCounterAttackCurrentEnemySkill, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CanCounterAttackCurrentEnemySkill::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsDeathQueuedForTurnEnd
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsDeathQueuedForTurnEnd final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsDeathQueuedForTurnEnd) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsDeathQueuedForTurnEnd");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsDeathQueuedForTurnEnd) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsDeathQueuedForTurnEnd");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsDeathQueuedForTurnEnd, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsDeathQueuedForTurnEnd::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ClearSkillStates
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ClearSkillStates final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillState_C*>               CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillState_C*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ClearSkillStates");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_ClearSkillStates");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ClearSkillStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_ClearSkillStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ClearSkillStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates, CallFunc_Map_Values_Values) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ClearSkillStates::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ClearSkillStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ClearSkillStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ClearSkillStates, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_ClearSkillStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetDead_Internal
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetDead_Internal final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetDead_Internal) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetDead_Internal");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetDead_Internal) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetDead_Internal");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetDead_Internal, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetDead_Internal::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetDead_Internal, CallFunc_GetCharacterBattleBase_IsValid) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetDead_Internal::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsPreparedForBattle
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsPreparedForBattle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsPreparedForBattle) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsPreparedForBattle");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsPreparedForBattle) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsPreparedForBattle");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsPreparedForBattle, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsPreparedForBattle::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetGenderTag
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetGenderTag final
{
public:
	ETextGender                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetGenderTag) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetGenderTag");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetGenderTag) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetGenderTag");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetGenderTag, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetGenderTag::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.TryDodgeHitFromCharacter
// 0x0058 (0x0058 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        AttackingCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Successful;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPerfectDodge;                                    // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartDodge_Success;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_Console_AutoDodge_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetParryImmuneDuration_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter) == 0x000058, "Wrong size on AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, AttackingCharacter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::AttackingCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, Successful) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::Successful' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, IsPerfectDodge) == 0x000009, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::IsPerfectDodge' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_TryStartDodge_Success) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_TryStartDodge_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00001A, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_DEBUG_Console_AutoDodge_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_DEBUG_Console_AutoDodge_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_GetParryImmuneDuration_ReturnValue) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_GetParryImmuneDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_TryDodgeHitFromCharacter::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.TryParryHitFromCharacter
// 0x0050 (0x0050 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        AttackingCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Successful;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartGradientParry_Success;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_2;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartParry_Success;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_Console_AutoGradientParry_ReturnValue; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_3;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_Console_AutoParry_ReturnValue;      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter) == 0x000050, "Wrong size on AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, AttackingCharacter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::AttackingCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, Successful) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::Successful' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000009, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_TryStartGradientParry_Success) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_TryStartGradientParry_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x00001A, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_IsValid_2) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_IsValid_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_TryStartParry_Success) == 0x000039, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_TryStartParry_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_DEBUG_Console_AutoGradientParry_ReturnValue) == 0x00003A, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_DEBUG_Console_AutoGradientParry_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_GetCharacterBattleBase_IsValid_3) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_GetCharacterBattleBase_IsValid_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter, CallFunc_DEBUG_Console_AutoParry_ReturnValue) == 0x000049, "Member 'AC_jRPG_CharacterBattleStats_C_TryParryHitFromCharacter::CallFunc_DEBUG_Console_AutoParry_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetParryWindowModifier
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetParryWindowModifier final
{
public:
	class UModifierStack_Float*                   Stack;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetParryWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetParryWindowModifier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetParryWindowModifier) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetParryWindowModifier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetParryWindowModifier, Stack) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetParryWindowModifier::Stack' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveParryWindowModifier
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveParryWindowModifier final
{
public:
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveParryWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveParryWindowModifier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveParryWindowModifier) == 0x000030, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveParryWindowModifier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveParryWindowModifier, OutModifierHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveParryWindowModifier::OutModifierHandle' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddParryWindowModifier
// 0x0048 (0x0048 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugName;                                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier) == 0x000048, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier, Percent) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier::Percent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier, OutModifierHandle) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier::OutModifierHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier, DebugName) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_AddParryWindowModifier::DebugName' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetDodgeWindowModifier
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetDodgeWindowModifier final
{
public:
	class UModifierStack_Float*                   Stack;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetDodgeWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetDodgeWindowModifier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetDodgeWindowModifier) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetDodgeWindowModifier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDodgeWindowModifier, Stack) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetDodgeWindowModifier::Stack' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveDodgeWindowModifier
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveDodgeWindowModifier final
{
public:
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveDodgeWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveDodgeWindowModifier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveDodgeWindowModifier) == 0x000030, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveDodgeWindowModifier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveDodgeWindowModifier, OutModifierHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveDodgeWindowModifier::OutModifierHandle' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddDodgeWindowModifier
// 0x0048 (0x0048 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugName;                                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier) == 0x000048, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier, Percent) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier::Percent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier, OutModifierHandle) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier::OutModifierHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier, DebugName) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_AddDodgeWindowModifier::DebugName' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveParryLock
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveParryLock final
{
public:
	struct FSF_ReferenceCounterHandle             LockHandle;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_RemoveReference_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveParryLock) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveParryLock");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveParryLock) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveParryLock");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveParryLock, LockHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveParryLock::LockHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveParryLock, CallFunc_RemoveReference_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveParryLock::CallFunc_RemoveReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddParryLock
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddParryLock final
{
public:
	struct FSF_ReferenceCounterHandle             LockHandle;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugReason;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddReference_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddParryLock) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddParryLock");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddParryLock) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddParryLock");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddParryLock, LockHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddParryLock::LockHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddParryLock, DebugReason) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddParryLock::DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddParryLock, CallFunc_AddReference_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_AddParryLock::CallFunc_AddReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsParryLocked
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsParryLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferenceCounterState_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsParryLocked) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsParryLocked");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsParryLocked) == 0x000002, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsParryLocked");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsParryLocked, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsParryLocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsParryLocked, CallFunc_GetReferenceCounterState_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_IsParryLocked::CallFunc_GetReferenceCounterState_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentSkillScript
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript final
{
public:
	class ABP_Battle_SkillScript_C*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSkillScript::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsOfArchetype
// 0x0068 (0x0068 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsOfArchetype final
{
public:
	TSoftObjectPtr<class UBP_DataAsset_EnemyBattleArchetype_C> Archetype;                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_EnemyBattleArchetype_C*   CallFunc_GetArchetype_Archetype;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UBP_DataAsset_EnemyBattleArchetype_C> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsOfArchetype) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsOfArchetype");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsOfArchetype) == 0x000068, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsOfArchetype");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsOfArchetype, Archetype) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsOfArchetype::Archetype' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsOfArchetype, ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_IsOfArchetype::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsOfArchetype, CallFunc_GetArchetype_Archetype) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_IsOfArchetype::CallFunc_GetArchetype_Archetype' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsOfArchetype, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_IsOfArchetype::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsOfArchetype, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_IsOfArchetype::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetArchetype
// 0x0218 (0x0218 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetArchetype final
{
public:
	class UBP_DataAsset_EnemyBattleArchetype_C*   Archetype;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnemyDataTableRow_Found;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetEnemyDataTableRow_EnemyData;           // 0x0010(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_DataAsset_EnemyBattleArchetype_C*   CallFunc_GetEnemyArchetypeAsset_ReturnValue;       // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetArchetype) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetArchetype");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetArchetype) == 0x000218, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetArchetype");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetArchetype, Archetype) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetArchetype::Archetype' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetArchetype, CallFunc_GetEnemyDataTableRow_Found) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetArchetype::CallFunc_GetEnemyDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetArchetype, CallFunc_GetEnemyDataTableRow_EnemyData) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetArchetype::CallFunc_GetEnemyDataTableRow_EnemyData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetArchetype, CallFunc_GetEnemyArchetypeAsset_ReturnValue) == 0x000210, "Member 'AC_jRPG_CharacterBattleStats_C_GetArchetype::CallFunc_GetEnemyArchetypeAsset_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetForcedSkillOnNextTurn
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetForcedSkillOnNextTurn final
{
public:
	class ABP_Battle_SkillScript_C*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetForcedSkillOnNextTurn) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetForcedSkillOnNextTurn");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetForcedSkillOnNextTurn) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetForcedSkillOnNextTurn");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetForcedSkillOnNextTurn, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetForcedSkillOnNextTurn::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.TryProcessForcedSkill
// 0x00C8 (0x00C8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill final
{
public:
	bool                                          PreventPlayerChoice;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_allowTurnChoice;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Battle_SkillScript_C*               Temp_wildcard_Variable;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesForcedSkillAllowPlayerChoice_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetForcedSkillPreviousTargets_ReturnValue; // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill) == 0x0000C8, "Wrong size on AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, PreventPlayerChoice) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::PreventPlayerChoice' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, local_allowTurnChoice) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::local_allowTurnChoice' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, Temp_wildcard_Variable) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_DoesForcedSkillAllowPlayerChoice_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_DoesForcedSkillAllowPlayerChoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_GetForcedSkillPreviousTargets_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_GetForcedSkillPreviousTargets_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, K2Node_MakeArray_Array) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_TryProcessForcedSkill::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ForceSkillOnNextTurn
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ForceSkillOnNextTurn final
{
public:
	class ABP_Battle_SkillScript_C*               SkillScript;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ForceSkillOnNextTurn) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ForceSkillOnNextTurn");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ForceSkillOnNextTurn) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_ForceSkillOnNextTurn");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ForceSkillOnNextTurn, SkillScript) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ForceSkillOnNextTurn::SkillScript' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsSameCharacterStats
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats, CharacterStats_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats::CharacterStats_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats, ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'AC_jRPG_CharacterBattleStats_C_IsSameCharacterStats::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.TryPerformBreakStun
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_BreakStunReason                             Reason;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPerformBreakStun_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun, SourceCharacter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun, Reason) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun, Success) == 0x000009, "Member 'AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun::Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun, CallFunc_GetAchievementManager_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun, CallFunc_CanPerformBreakStun_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_TryPerformBreakStun::CallFunc_CanPerformBreakStun_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CanPerformBreakStun
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue_1;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun) == 0x000004, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun, CallFunc_Conv_Int64ToInt_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun::CallFunc_Conv_Int64ToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'AC_jRPG_CharacterBattleStats_C_CanPerformBreakStun::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.PerformBreakStun
// 0x02D8 (0x02D8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_PerformBreakStun final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_BreakStunReason                             Reason;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class UBP_SkillDataComponent_Base_C*          CallFunc_GetSkillComponentFromObject_SkillComponent; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetStunBuffClass_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnemyDataTableRow_Found;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetEnemyDataTableRow_EnemyData;           // 0x00D8(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_PerformBreakStun");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun) == 0x0002D8, "Wrong size on AC_jRPG_CharacterBattleStats_C_PerformBreakStun");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, SourceCharacter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, Reason) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000009, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000C, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_Not_PreBool_ReturnValue_1) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, K2Node_MakeArray_Array) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetSkillComponentFromObject_SkillComponent) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetSkillComponentFromObject_SkillComponent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_Format_ReturnValue) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A9, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_IsValid_ReturnValue_1) == 0x0000AA, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetStunBuffClass_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetStunBuffClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_SpawnObject_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_ActivateBuff_Success) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetEnemyDataTableRow_Found) == 0x0000D1, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetEnemyDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PerformBreakStun, CallFunc_GetEnemyDataTableRow_EnemyData) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_PerformBreakStun::CallFunc_GetEnemyDataTableRow_EnemyData' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetIsCharacterFlying
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetIsCharacterFlying final
{
public:
	bool                                          IsFlying_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetIsCharacterFlying) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetIsCharacterFlying");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetIsCharacterFlying) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetIsCharacterFlying");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetIsCharacterFlying, IsFlying_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetIsCharacterFlying::IsFlying_0' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CanPerformAction
// 0x0003 (0x0003 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CanPerformAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurnSkipActive_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CanPerformAction) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CanPerformAction");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CanPerformAction) == 0x000003, "Wrong size on AC_jRPG_CharacterBattleStats_C_CanPerformAction");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanPerformAction, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CanPerformAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanPerformAction, CallFunc_IsTurnSkipActive_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_CanPerformAction::CallFunc_IsTurnSkipActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanPerformAction, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_CanPerformAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.HasForcedAutoAttack
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferenceCounterState_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack) == 0x000002, "Wrong size on AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack, CallFunc_GetReferenceCounterState_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_HasForcedAutoAttack::CallFunc_GetReferenceCounterState_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveForcedAutoAttack
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack final
{
public:
	struct FSF_ReferenceCounterHandle             ReferenceHandle;                                   // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_RemoveReference_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack, ReferenceHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack::ReferenceHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack, CallFunc_RemoveReference_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveForcedAutoAttack::CallFunc_RemoveReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddForcedAutoAttack
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack final
{
public:
	struct FSF_ReferenceCounterHandle             ReferenceHandle;                                   // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugName;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddReference_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack, ReferenceHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack::ReferenceHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack, DebugName) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack::DebugName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack, CallFunc_AddReference_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_AddForcedAutoAttack::CallFunc_AddReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsFlyingCharacter
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0001(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTeam_ReturnValue;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, Temp_byte_Variable) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, CallFunc_IsInTeam_ReturnValue) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::CallFunc_IsInTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, CallFunc_Map_Find_Value) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'AC_jRPG_CharacterBattleStats_C_IsFlyingCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsDead
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsDead final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsDead) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsDead");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsDead) == 0x000002, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsDead");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsDead, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsDead::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsDead, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_IsDead::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCharacterData
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCharacterData final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCharacterData) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCharacterData");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCharacterData) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCharacterData");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterData, CharacterData) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterData::CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterData, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterData::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterData, CallFunc_GetCharacterByID_CharacterData) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterData::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsInTeam
// 0x0006 (0x0006 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsInTeam final
{
public:
	ECharacterTeamSelector                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsInTeam) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsInTeam");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsInTeam) == 0x000006, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsInTeam");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsInTeam, Team) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsInTeam::Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsInTeam, ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_IsInTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsInTeam, CallFunc_GetTeam_Team) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_IsInTeam::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsInTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_IsInTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsInTeam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_IsInTeam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsInTeam, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'AC_jRPG_CharacterBattleStats_C_IsInTeam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetCurrentBreakBarDamage
// 0x00F8 (0x00F8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage final
{
public:
	int64                                         NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int64                                         local_previousValue;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_ClampInt64_ReturnValue;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage) == 0x0000F8, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, NewValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::NewValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, SourceCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, Reason) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, local_previousValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::local_previousValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, K2Node_MakeArray_Array) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage, CallFunc_ClampInt64_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentBreakBarDamage::CallFunc_ClampInt64_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetStunBuffClass
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetStunBuffClass final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetStunBuffClass) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetStunBuffClass");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetStunBuffClass) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetStunBuffClass");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetStunBuffClass, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetStunBuffClass::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetBreakBarDamagePercentage
// 0x0100 (0x0100 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage final
{
public:
	double                                        Percentage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Multiply_Int64Int64_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_FFloor64_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage) == 0x000100, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, Percentage) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::Percentage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, SourceCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, Reason) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, CallFunc_Conv_DoubleToInt64_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::CallFunc_Conv_DoubleToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, CallFunc_Multiply_Int64Int64_ReturnValue) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::CallFunc_Multiply_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, CallFunc_FFloor64_ReturnValue) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::CallFunc_FFloor64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, K2Node_MakeArray_Array) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_SetBreakBarDamagePercentage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddBreakBarDamagePercentage
// 0x0100 (0x0100 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage final
{
public:
	double                                        Percentage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Multiply_Int64Int64_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_FCeil64_ReturnValue;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage) == 0x000100, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, Percentage) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::Percentage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, SourceCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, Reason) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, CallFunc_Conv_DoubleToInt64_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::CallFunc_Conv_DoubleToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, CallFunc_Multiply_Int64Int64_ReturnValue) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::CallFunc_Multiply_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, CallFunc_FCeil64_ReturnValue) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::CallFunc_FCeil64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, K2Node_MakeArray_Array) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamagePercentage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddBreakBarDamage
// 0x0168 (0x0168 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage final
{
public:
	int64                                         DamageValue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         local_previousValue;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ReferenceParm)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferenceCounterState_ReturnValue;     // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_Int64Int64_ReturnValue;              // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Add_Int64Int64_ReturnValue;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage) == 0x000168, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, DamageValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::DamageValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, SourceCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, Reason) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, local_previousValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::local_previousValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, K2Node_MakeArray_Array) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000140, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Format_ReturnValue) == 0x000148, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Greater_IntInt_ReturnValue) == 0x000158, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_GetReferenceCounterState_ReturnValue) == 0x000159, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_GetReferenceCounterState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Not_PreBool_ReturnValue) == 0x00015A, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Less_Int64Int64_ReturnValue) == 0x00015B, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Less_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage, CallFunc_Add_Int64Int64_ReturnValue) == 0x000160, "Member 'AC_jRPG_CharacterBattleStats_C_AddBreakBarDamage::CallFunc_Add_Int64Int64_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentBreakBarPercent
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent, CallFunc_Conv_Int64ToDouble_ReturnValue_1) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent::CallFunc_Conv_Int64ToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent, CallFunc_SafeDivide_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentBreakBarPercent::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.InitBreakBar
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_InitBreakBar final
{
public:
	int32                                         BreakBarHPPercentage;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_FCeil64_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_InitBreakBar) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_InitBreakBar");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_InitBreakBar) == 0x000030, "Wrong size on AC_jRPG_CharacterBattleStats_C_InitBreakBar");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBreakBar, BreakBarHPPercentage) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_InitBreakBar::BreakBarHPPercentage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBreakBar, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_InitBreakBar::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBreakBar, CallFunc_GetMaxHP_MaxHP) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_InitBreakBar::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBreakBar, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_InitBreakBar::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBreakBar, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_InitBreakBar::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBreakBar, CallFunc_FCeil64_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_InitBreakBar::CallFunc_FCeil64_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.HasPendingResurrect
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_HasPendingResurrect final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_HasPendingResurrect) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_HasPendingResurrect");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_HasPendingResurrect) == 0x000002, "Wrong size on AC_jRPG_CharacterBattleStats_C_HasPendingResurrect");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_HasPendingResurrect, Enabled) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_HasPendingResurrect::Enabled' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_HasPendingResurrect, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_HasPendingResurrect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ResurrectInternal
// 0x0120 (0x0120 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ResurrectInternal final
{
public:
	struct FS_ResurrectParameters                 local_resurrectParameters;                         // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAtInitialLocation_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0040(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterReactionSystem_C*          CallFunc_GetCharacterReactionSystem_ReturnValue;   // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanResurrect_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCommunication_C> K2Node_DynamicCast_AsBPI_Battle_Communication; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ResurrectInternal");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal) == 0x000120, "Wrong size on AC_jRPG_CharacterBattleStats_C_ResurrectInternal");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, local_resurrectParameters) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::local_resurrectParameters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, Temp_byte_Variable) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_GetCharacterBattleBase_IsValid) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_IsAtInitialLocation_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_IsAtInitialLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, K2Node_MakeArray_Array) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_GetCharacterReactionSystem_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_GetCharacterReactionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_CheckCanResurrect_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_CheckCanResurrect_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_GetOwner_ReturnValue_1) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, K2Node_DynamicCast_AsBPI_Battle_Communication) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::K2Node_DynamicCast_AsBPI_Battle_Communication' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_Map_Find_Value) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_Map_Find_ReturnValue) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_FClamp_ReturnValue) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_FCeil_ReturnValue) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ResurrectInternal, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000118, "Member 'AC_jRPG_CharacterBattleStats_C_ResurrectInternal::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetFreeAimDamageType
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetFreeAimDamageType final
{
public:
	EAttackType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetFreeAimDamageType) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetFreeAimDamageType");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetFreeAimDamageType) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetFreeAimDamageType");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetFreeAimDamageType, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetFreeAimDamageType::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetBaseDamageType
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetBaseDamageType final
{
public:
	EAttackType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetBaseDamageType) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetBaseDamageType");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetBaseDamageType) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetBaseDamageType");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetBaseDamageType, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetBaseDamageType::ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.StopInterceptingAttacksAgainstCharacter
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter, CharacterStats_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter::CharacterStats_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_StopInterceptingAttacksAgainstCharacter::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.StartInterceptingAttacksAgainstCharacter
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter, CharacterStats_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter::CharacterStats_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_StartInterceptingAttacksAgainstCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CanInterceptAttack
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CanInterceptAttack final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetedCharacter;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        AttackerCharacter;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDefenseLockActive_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team_1;                           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CanInterceptAttack");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_CanInterceptAttack");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, TargetedCharacter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::TargetedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, AttackerCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::AttackerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_IsDefenseLockActive_ReturnValue) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_IsDefenseLockActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_EqualsObjects_ReturnValue) == 0x000013, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_Not_PreBool_ReturnValue_1) == 0x000015, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000016, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_BooleanOR_ReturnValue) == 0x000017, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_BooleanAND_ReturnValue_2) == 0x00001B, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_Array_Contains_ReturnValue) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_GetTeam_Team) == 0x00001D, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_GetTeam_Team_1) == 0x00001E, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_GetTeam_Team_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanInterceptAttack, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001F, "Member 'AC_jRPG_CharacterBattleStats_C_CanInterceptAttack::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsDodgeLockActive
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferenceCounterState_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive) == 0x000002, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive, CallFunc_GetReferenceCounterState_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_IsDodgeLockActive::CallFunc_GetReferenceCounterState_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveDodgeLock
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock final
{
public:
	struct FSF_ReferenceCounterHandle             LockHandle;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_RemoveReference_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock, LockHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock::LockHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock, CallFunc_RemoveReference_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveDodgeLock::CallFunc_RemoveReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddDodgeLock
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddDodgeLock final
{
public:
	struct FSF_ReferenceCounterHandle             LockHandle;                                        // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugReason;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddReference_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddDodgeLock) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddDodgeLock");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddDodgeLock) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddDodgeLock");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDodgeLock, LockHandle) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddDodgeLock::LockHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDodgeLock, DebugReason) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddDodgeLock::DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDodgeLock, CallFunc_AddReference_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_AddDodgeLock::CallFunc_AddReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetTeam
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetTeam final
{
public:
	ECharacterTeamSelector                        Team;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        K2Node_Select_Default;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetTeam) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetTeam");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetTeam) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetTeam");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, Team) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, Temp_bool_Variable) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, Temp_byte_Variable) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, Temp_byte_Variable_1) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTeam, K2Node_Select_Default) == 0x000012, "Member 'AC_jRPG_CharacterBattleStats_C_GetTeam::K2Node_Select_Default' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ReceiveDamageFromObject
// 0x09B8 (0x09B8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject final
{
public:
	double                                        Straight_Damage__ignores_calculation_;             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamageBuilder_C*              DamageBuilder;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DamageDealt;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHit;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DodgeSuccess;                                      // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParrySuccess;                                      // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   local_DummyCharacterClass;                         // 0x0028(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class UBP_BattleDamageBuilder_C*              local_DamageBuilder;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        local_FinalDamageMultiplierInput;                  // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   local_InputAttackType;                             // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_hasHitReached;                               // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isParrySuccessful;                           // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isDodgeSuccess;                              // 0x0063(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_CriticalRoll;                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 local_CounterSkillToTrigger;                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> local_IDamageSourceCharacter;                     // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_ActualDamageDealtOnShield;                   // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_newHPValue;                                  // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_shieldDamageMultiplier;                      // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_DEPRECATED_newShield;                        // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        loocal_DamagesBeforeClamp;                         // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_InputAttackPowerMultiplier;                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 local_DamageReason;                                // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_StraightDamage;                              // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                local_DamageLocation;                              // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_AttackTypeMultiplier_Base;                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   local_LockedAttackType;                            // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    local_BattleDamages;                               // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        local_DamageSourceCharacter;                       // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          local_Critical_;                                   // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_Damage;                                      // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_JRPG_Missed_C*                     CallFunc_Create_ReturnValue;                       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetFinalBaseElement_AttackElement;        // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_JRPG_Countered_C*                  CallFunc_Create_ReturnValue_1;                     // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x01E8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_SoftClassReference_ReturnValue;  // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryDodgeHitFromCharacter_Successful;      // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryDodgeHitFromCharacter_IsPerfectDodge;  // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentShieldPoints_ShieldPoints;      // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryParryHitFromCharacter_Successful;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIgnoreShields_ReturnValue;             // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_JRPG_Missed_C*                     CallFunc_Create_ReturnValue_2;                     // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetStraightDamage_ReturnValue;            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetSourceCharacter_SourceCharacter;       // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetFinalBreakBarDamageAmount_ReturnValue; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EDamageReason>                         K2Node_MakeArray_Array;                            // 0x02B8(0x0010)(ConstParm, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02C8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0310(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0328(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2; // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_2;         // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0350(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0360(0x0048)(HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetDamageSourceCharacter_CharacterStats;  // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3[0x5];                                      // 0x03B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRollEnemyDodgeFromStats_ReturnValue;   // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x03E0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03F0(0x0048)(HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_GetDamageSource_DamageSource;            // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetAttackElement_AttackElement;           // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 CallFunc_GetDamageReason_DamageReason;             // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFinalDamageMultiplier_ReturnValue;     // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAttackPowerMultiplier_ReturnValue;     // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInputDamages_RawDamages;               // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0468(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x04B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x04C0(0x0010)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x04D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0520(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0538(0x0010)()
	struct FFDamageModifier                       K2Node_MakeStruct_FDamageModifier;                 // 0x0548(0x0028)(HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team_1;                           // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_572[0x6];                                      // 0x0572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3; // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_3;         // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0581(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0582(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583[0x5];                                      // 0x0583(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ReceiveDamageFromObject_DamageDealt;      // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamageFromObject_HasHit;           // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamageFromObject_DodgeSuccess;     // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamageFromObject_ParrySuccess;     // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593[0x5];                                      // 0x0593(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamageFromObject_BattleDamages;    // 0x0598(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryConsumeShieldPoints_Success;           // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFinalDamages_FinalDamages;             // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReduceHP_NewHPValue;                      // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReduceHP_EffectiveDamage;                 // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugModeEnabled_ReturnValue;           // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue_1;                // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x05C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C4[0x4];                                      // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_4; // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_4;         // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_5; // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_5;         // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInImmunityPhase_ReturnValue;            // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E2[0x6];                                      // 0x05E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x05F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0600(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0610(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0658(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetInputDamages_RawDamages_1;             // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ApplyCriticalHitModifiers_IsCriticalHit;  // 0x06AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AE[0x2];                                      // 0x06AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetTargetCharacter_NewParam;              // 0x06B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_6; // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_6;         // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C1[0x7];                                      // 0x06C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x3];                                      // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue_1;     // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RollCriticalHit_IsCriticalHit;            // 0x071A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71B[0x5];                                      // 0x071B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0720(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0730(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0740(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0788(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x07A0(0x0010)()
	class UBP_CharacterReactionSystem_C*          CallFunc_GetCharacterReactionSystem_ReturnValue;   // 0x07B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetSourceCharacter_SourceCharacter_1;     // 0x07B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_JRPG_Jumped_C*                     CallFunc_Create_ReturnValue_3;                     // 0x07C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_7; // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_7;         // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFinalDamages_FinalDamages_1;           // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_8; // 0x07F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_8;         // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0801(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0802(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0803(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_9; // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_9;         // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_10; // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_10;        // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0828(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0840(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_11; // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_11;        // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_12; // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_12;        // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team_2;                           // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x08A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A3[0x5];                                      // 0x08A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x08A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_13; // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_13;        // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x7];                                      // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_9;                   // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetTargetedAllies_Valid;               // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_TryGetTargetedAllies_TargetedHeroes;    // 0x08D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x08E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x08E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E3[0x5];                                      // 0x08E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFinalDamages_FinalDamages_2;           // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x08F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x08F8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0908(0x0048)(HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0958(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0968(0x0010)()
	class UWBP_JRPG_Nullified_C*                  CallFunc_Create_ReturnValue_4;                     // 0x0978(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0989(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98A[0x6];                                      // 0x098A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject) == 0x0009B8, "Wrong size on AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, Straight_Damage__ignores_calculation_) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::Straight_Damage__ignores_calculation_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, DamageBuilder) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::DamageBuilder' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, DamageDealt) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::DamageDealt' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, HasHit) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::HasHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, DodgeSuccess) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::DodgeSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, ParrySuccess) == 0x00001A, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::ParrySuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, BattleDamages) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_DummyCharacterClass) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_DummyCharacterClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_DamageBuilder) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_DamageBuilder' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_FinalDamageMultiplierInput) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_FinalDamageMultiplierInput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_InputAttackType) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_InputAttackType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_hasHitReached) == 0x000061, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_hasHitReached' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_isParrySuccessful) == 0x000062, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_isParrySuccessful' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_isDodgeSuccess) == 0x000063, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_isDodgeSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_CriticalRoll) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_CriticalRoll' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_CounterSkillToTrigger) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_CounterSkillToTrigger' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_IDamageSourceCharacter) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_IDamageSourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_ActualDamageDealtOnShield) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_ActualDamageDealtOnShield' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_newHPValue) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_newHPValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_shieldDamageMultiplier) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_shieldDamageMultiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_DEPRECATED_newShield) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_DEPRECATED_newShield' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, loocal_DamagesBeforeClamp) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::loocal_DamagesBeforeClamp' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_InputAttackPowerMultiplier) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_InputAttackPowerMultiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_DamageReason) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_DamageReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_StraightDamage) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_StraightDamage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_DamageLocation) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_DamageLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_AttackTypeMultiplier_Base) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_AttackTypeMultiplier_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_LockedAttackType) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_LockedAttackType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_BattleDamages) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_DamageSourceCharacter) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_DamageSourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_Critical_) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_Critical_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, local_Damage) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::local_Damage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Create_ReturnValue) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000118, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_PlayAnimation_ReturnValue) == 0x000120, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue) == 0x000128, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, Temp_bool_Variable) == 0x000129, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00012A, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_1) == 0x000138, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000140, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetFinalBaseElement_AttackElement) == 0x000149, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetFinalBaseElement_AttackElement' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000150, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000178, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000190, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000198, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_MakeRotator_ReturnValue) == 0x0001B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Create_ReturnValue_1) == 0x0001D0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_2) == 0x0001D8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetObjectClass_ReturnValue) == 0x0001E0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_PlayAnimation_ReturnValue_1) == 0x000210, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_NotEqual_SoftClassReference_ReturnValue) == 0x000218, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_NotEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetBattleManager_ReturnValue) == 0x000220, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsBattleEnding_ReturnValue) == 0x000228, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue_1) == 0x000229, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_TryDodgeHitFromCharacter_Successful) == 0x00022A, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_TryDodgeHitFromCharacter_Successful' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_TryDodgeHitFromCharacter_IsPerfectDodge) == 0x00022B, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_TryDodgeHitFromCharacter_IsPerfectDodge' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000230, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid) == 0x000238, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCurrentShieldPoints_ShieldPoints) == 0x00023C, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCurrentShieldPoints_ShieldPoints' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_TryParryHitFromCharacter_Successful) == 0x000240, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_TryParryHitFromCharacter_Successful' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000241, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000248, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x000250, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetIgnoreShields_ReturnValue) == 0x000251, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetIgnoreShields_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000258, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue_2) == 0x000270, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Create_ReturnValue_2) == 0x000278, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_PlayAnimation_ReturnValue_2) == 0x000280, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_3) == 0x000288, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_RandomFloatInRange_ReturnValue) == 0x000290, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetBoolCVar_ReturnValue) == 0x000298, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetStraightDamage_ReturnValue) == 0x0002A0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetStraightDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetSourceCharacter_SourceCharacter) == 0x0002A8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetSourceCharacter_SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetFinalBreakBarDamageAmount_ReturnValue) == 0x0002B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetFinalBreakBarDamageAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeArray_Array) == 0x0002B8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData) == 0x0002C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeArray_Array_1) == 0x000310, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Array_Contains_ReturnValue) == 0x000320, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Format_ReturnValue) == 0x000328, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue_3) == 0x000338, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2) == 0x000340, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_2) == 0x000348, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_StringToText_ReturnValue) == 0x000350, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_1) == 0x000360, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetDamageSourceCharacter_CharacterStats) == 0x0003A8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetDamageSourceCharacter_CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetTeam_Team) == 0x0003B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003B1, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsValid_ReturnValue) == 0x0003B2, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0003B8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsValid_ReturnValue_1) == 0x0003C0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_TryRollEnemyDodgeFromStats_ReturnValue) == 0x0003C1, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_TryRollEnemyDodgeFromStats_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_SpawnObject_ReturnValue) == 0x0003C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0003D0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0003E0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003F0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetDamageSource_DamageSource) == 0x000438, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetDamageSource_DamageSource' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetAttackElement_AttackElement) == 0x000448, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetAttackElement_AttackElement' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetDamageReason_DamageReason) == 0x000449, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetDamageReason_DamageReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetFinalDamageMultiplier_ReturnValue) == 0x000450, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetFinalDamageMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetAttackPowerMultiplier_ReturnValue) == 0x000458, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetAttackPowerMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetInputDamages_RawDamages) == 0x000460, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetInputDamages_RawDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_3) == 0x000468, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeArray_Array_2) == 0x0004B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Format_ReturnValue_1) == 0x0004C0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0004D0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_4) == 0x0004D8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeArray_Array_3) == 0x000520, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000530, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Format_ReturnValue_2) == 0x000538, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FDamageModifier) == 0x000548, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FDamageModifier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetTeam_Team_1) == 0x000570, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetTeam_Team_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000571, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3) == 0x000578, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_3) == 0x000580, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000581, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsValid_ReturnValue_2) == 0x000582, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ReceiveDamageFromObject_DamageDealt) == 0x000588, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ReceiveDamageFromObject_DamageDealt' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ReceiveDamageFromObject_HasHit) == 0x000590, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ReceiveDamageFromObject_HasHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ReceiveDamageFromObject_DodgeSuccess) == 0x000591, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ReceiveDamageFromObject_DodgeSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ReceiveDamageFromObject_ParrySuccess) == 0x000592, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ReceiveDamageFromObject_ParrySuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ReceiveDamageFromObject_BattleDamages) == 0x000598, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ReceiveDamageFromObject_BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_TryConsumeShieldPoints_Success) == 0x0005A0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_TryConsumeShieldPoints_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetFinalDamages_FinalDamages) == 0x0005A8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetFinalDamages_FinalDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ReduceHP_NewHPValue) == 0x0005B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ReduceHP_NewHPValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ReduceHP_EffectiveDamage) == 0x0005B8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ReduceHP_EffectiveDamage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsDebugModeEnabled_ReturnValue) == 0x0005C0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsDebugModeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetBoolCVar_ReturnValue_1) == 0x0005C1, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetBoolCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_BooleanAND_ReturnValue) == 0x0005C2, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue_4) == 0x0005C3, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_4) == 0x0005C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_4) == 0x0005D0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_5) == 0x0005D8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_5) == 0x0005E0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsInImmunityPhase_ReturnValue) == 0x0005E1, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsInImmunityPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_4) == 0x0005E8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetDisplayName_ReturnValue) == 0x0005F0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000600, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_5) == 0x000610, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_6) == 0x000658, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetInputDamages_RawDamages_1) == 0x0006A0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetInputDamages_RawDamages_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Round_ReturnValue) == 0x0006A8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_SwitchEnum_CmpSuccess) == 0x0006AC, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_ApplyCriticalHitModifiers_IsCriticalHit) == 0x0006AD, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_ApplyCriticalHitModifiers_IsCriticalHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetTargetCharacter_NewParam) == 0x0006B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetTargetCharacter_NewParam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_6) == 0x0006B8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_6) == 0x0006C0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_5) == 0x0006C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_DynamicCast_AsCharacter) == 0x0006D0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_DynamicCast_bSuccess_1) == 0x0006D8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_6) == 0x0006E0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_DynamicCast_AsCharacter_1) == 0x0006E8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_DynamicCast_bSuccess_2) == 0x0006F0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x0006F4, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetDistanceTo_ReturnValue) == 0x0006F8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetScaledCapsuleRadius_ReturnValue_1) == 0x0006FC, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetScaledCapsuleRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000700, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000708, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000710, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000718, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_IsValidClass_ReturnValue) == 0x000719, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_RollCriticalHit_IsCriticalHit) == 0x00071A, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_RollCriticalHit_IsCriticalHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000720, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000730, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_7) == 0x000740, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeArray_Array_4) == 0x000788, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_7) == 0x000798, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Format_ReturnValue_3) == 0x0007A0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterReactionSystem_ReturnValue) == 0x0007B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterReactionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetSourceCharacter_SourceCharacter_1) == 0x0007B8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetSourceCharacter_SourceCharacter_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Create_ReturnValue_3) == 0x0007C0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_PlayAnimation_ReturnValue_3) == 0x0007C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0007D0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, Temp_object_Variable) == 0x0007D8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_7) == 0x0007E0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_7) == 0x0007E8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetFinalDamages_FinalDamages_1) == 0x0007F0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetFinalDamages_FinalDamages_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_8) == 0x0007F8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_8) == 0x000800, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000801, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue_5) == 0x000802, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_BooleanAND_ReturnValue_1) == 0x000803, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_9) == 0x000808, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_9) == 0x000810, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_10) == 0x000818, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_10) == 0x000820, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000828, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue_6) == 0x000838, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_8) == 0x000840, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_11) == 0x000888, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_11) == 0x000890, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_12) == 0x000898, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_12) == 0x0008A0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetTeam_Team_2) == 0x0008A1, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetTeam_Team_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0008A2, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_8) == 0x0008A8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_13) == 0x0008B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetCharacterBattleBase_IsValid_13) == 0x0008B8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetCharacterBattleBase_IsValid_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetOwner_ReturnValue_9) == 0x0008C0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetOwner_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_TryGetTargetedAllies_Valid) == 0x0008C8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_TryGetTargetedAllies_Valid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_TryGetTargetedAllies_TargetedHeroes) == 0x0008D0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_TryGetTargetedAllies_TargetedHeroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Array_Contains_ReturnValue_1) == 0x0008E0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Not_PreBool_ReturnValue_7) == 0x0008E1, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_BooleanAND_ReturnValue_2) == 0x0008E2, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_GetFinalDamages_FinalDamages_2) == 0x0008E8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_GetFinalDamages_FinalDamages_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, Temp_object_Variable_1) == 0x0008F0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Conv_NameToText_ReturnValue) == 0x0008F8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeStruct_FormatArgumentData_9) == 0x000908, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_Select_Default) == 0x000950, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, K2Node_MakeArray_Array_5) == 0x000958, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Format_ReturnValue_4) == 0x000968, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Create_ReturnValue_4) == 0x000978, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_PlayAnimation_ReturnValue_4) == 0x000980, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_BooleanOR_ReturnValue) == 0x000988, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000989, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000990, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000998, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0009A0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0009A8, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0009B0, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamageFromObject::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsSkillOvercharged
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged final
{
public:
	class UBP_DataAsset_Skill_C*                  Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillState_C*                       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged, Skill) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged::Skill' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged, ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged, CallFunc_Map_Find_Value) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_IsSkillOvercharged::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetSkillScriptByTurnStartEventCriteria
// 0x00B8 (0x00B8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria final
{
public:
	TArray<class UBP_SkillDataComponentScript_C*> HasStartEvent;                                     // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UBP_SkillDataComponentScript_C*> HasNoStartEvent;                                   // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UBP_SkillDataComponentScript_C*> local_withoutEvent;                                // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_SkillDataComponentScript_C*> local_withEvent;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillState_C*>               CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillState_C*                       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillDataComponentScript_C*> CallFunc_Map_Values_Values_1;                      // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponentScript_C*         CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTurnStartEvent_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria) == 0x0000B8, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, HasStartEvent) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::HasStartEvent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, HasNoStartEvent) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::HasNoStartEvent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, local_withoutEvent) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::local_withoutEvent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, local_withEvent) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::local_withEvent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, Temp_int_Array_Index_Variable) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Map_Values_Values) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Array_Get_Item) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Map_Values_Values_1) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Array_Add_ReturnValue_1) == 0x0000A4, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_HasTurnStartEvent_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_HasTurnStartEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillScriptByTurnStartEventCriteria::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentAPPercentage01
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01 final
{
public:
	double                                        Percent01;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxAP_MaxMP;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01, Percent01) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01::Percent01' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01, CallFunc_GetMaxAP_MaxMP) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01::CallFunc_GetMaxAP_MaxMP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentAPPercentage01::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetRuntimeStatValue
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue final
{
public:
	ERuntimeBattleStatType                        StatType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentAPPercentage01_Percent01;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue, StatType) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue::StatType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue, Value) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue::Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue, CallFunc_GetCurrentAPPercentage01_Percent01) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue::CallFunc_GetCurrentAPPercentage01_Percent01' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetRuntimeStatValue::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.Force Play Again
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_Force_Play_Again final
{
public:
	bool                                          ShouldPlayTooltip;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreventChainedPlayAgain;                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAppliedForcePlayAgain;                          // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuff_RemoveItselfAtAnotherCharacterTurn_C* CallFunc_SpawnObject_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UAC_jRPG_CharacterBattleStats_C*  Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBuffOfClass_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_Force_Play_Again");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_Force_Play_Again");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, ShouldPlayTooltip) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::ShouldPlayTooltip' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, PreventChainedPlayAgain) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::PreventChainedPlayAgain' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, HasAppliedForcePlayAgain) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::HasAppliedForcePlayAgain' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, Temp_object_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, CallFunc_HasBuffOfClass_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::CallFunc_HasBuffOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, CallFunc_ActivateBuff_Success) == 0x00001A, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Force_Play_Again, CallFunc_MakeLiteralInt_ReturnValue) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_Force_Play_Again::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.TryDisableGradientPostProcess
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess final
{
public:
	bool                                          DuringCounter;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GradientCenterLocation;                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess) == 0x000030, "Wrong size on AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess, DuringCounter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess::DuringCounter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess, GradientCenterLocation) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess::GradientCenterLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess, CallFunc_GetCharacterBattleBase_IsValid) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_TryDisableGradientPostProcess::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RegisterSkillChecks
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks final
{
public:
	class UBP_DataAsset_Skill_C*                  Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_SkillDataComponent_Base_C*>  CallFunc_GetSkillComponentsAsBP_Array;             // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillDataComponent_Base_C*          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, Skill) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::Skill' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, CallFunc_GetSkillComponentsAsBP_Array) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::CallFunc_GetSkillComponentsAsBP_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_RegisterSkillChecks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.DrainAP
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_DrainAP final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacterStats;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_DrainAP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_DrainAP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_DrainAP) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_DrainAP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DrainAP, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_DrainAP::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DrainAP, SourceCharacterStats) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_DrainAP::SourceCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DrainAP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_DrainAP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.Drain_AP_FromTarget
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget, TargetCharacter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget::TargetCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget, Amount) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_Drain_AP_FromTarget::Amount' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CheckForDeath
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CheckForDeath final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CheckForDeath) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CheckForDeath");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CheckForDeath) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_CheckForDeath");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckForDeath, BattleDamages) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CheckForDeath::BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckForDeath, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CheckForDeath::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetDead
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetDead final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetDead) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetDead");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetDead) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetDead");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetDead, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetDead::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetDead, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_SetDead::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetDead, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetDead::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetCharacterFleeing
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing final
{
public:
	bool                                          IsFleeing_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAC_jRPG_CharacterBattleStats_C*  Temp_object_Variable;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing, IsFleeing_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing::IsFleeing_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing, Temp_object_Variable) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing, CallFunc_GetBattleManager_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterFleeing::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentShieldPoints
// 0x000C (0x000C - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints final
{
public:
	int32                                         ShieldPoints;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentShieldPoints_ShieldPoints;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints) == 0x000004, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints) == 0x00000C, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints, ShieldPoints) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints::ShieldPoints' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints, CallFunc_GetCurrentShieldPoints_ShieldPoints) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentShieldPoints::CallFunc_GetCurrentShieldPoints_ShieldPoints' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetCurrentShieldPoints
// 0x01E0 (0x01E0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_wildcard_Variable;                            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D0(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints) == 0x0001E0, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, NewValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::NewValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, DebugReason) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_IsEmpty_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, K2Node_MakeArray_Array) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Clamp_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, Temp_wildcard_Variable) == 0x000150, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_GetBattleManager_ReturnValue) == 0x000158, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Greater_IntInt_ReturnValue) == 0x000160, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_IsValid_ReturnValue) == 0x000161, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000168, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001B8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, K2Node_MakeArray_Array_1) == 0x0001C0, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints, CallFunc_Format_ReturnValue_1) == 0x0001D0, "Member 'AC_jRPG_CharacterBattleStats_C_SetCurrentShieldPoints::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddShieldPoints
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddShieldPoints final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddShieldPoints");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddShieldPoints");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddShieldPoints::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints, DebugReason) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddShieldPoints::DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_AddShieldPoints::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints, CallFunc_GetCharacterBattleBase_IsValid) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddShieldPoints::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'AC_jRPG_CharacterBattleStats_C_AddShieldPoints::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'AC_jRPG_CharacterBattleStats_C_AddShieldPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddShieldPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AC_jRPG_CharacterBattleStats_C_AddShieldPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.TryConsumeShieldPoints
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryConsumeShieldPoints_Success;           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, DebugReason) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, Success) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, CallFunc_TryConsumeShieldPoints_Success) == 0x00001B, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::CallFunc_TryConsumeShieldPoints_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_TryConsumeShieldPoints::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.NotifyDeath
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_NotifyDeath final
{
public:
	bool                                          DeathCounter;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_NotifyDeath) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_NotifyDeath");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_NotifyDeath) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_NotifyDeath");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifyDeath, DeathCounter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_NotifyDeath::DeathCounter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifyDeath, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_NotifyDeath::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_NotifyDeath, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_NotifyDeath::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.FindEquippedSkillByID
// 0x0118 (0x0118 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID final
{
public:
	class FName                                   SkillID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  Skill;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
	class UBP_DataAsset_Skill_C*                  CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID) == 0x000118, "Wrong size on AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, SkillID) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::SkillID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, Skill) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::Skill' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, Temp_int_Array_Index_Variable) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, K2Node_MakeArray_Array) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_Array_Get_Item) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000109, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_FindEquippedSkillByID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.TriggerSkill
// 0x01F0 (0x01F0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_TriggerSkill final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedCharacters_0;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 SkillClass;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Battle_SkillScript_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x00D0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_2;         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_3;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0118(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0128(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0138(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0180(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0010)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_TriggerSkill) == 0x000010, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_TriggerSkill");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_TriggerSkill) == 0x0001F0, "Wrong size on AC_jRPG_CharacterBattleStats_C_TriggerSkill");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, TargetedCharacters_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::TargetedCharacters_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, SkillClass) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::SkillClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_IsValid) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetTeam_Team) == 0x000041, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Acquire_Targets_AcquiredTargets) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetBattleManager_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_IsValid_2) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_IsValid_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_GetCharacterBattleBase_IsValid_3) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_GetCharacterBattleBase_IsValid_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000118, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000128, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, K2Node_MakeStruct_FormatArgumentData) == 0x000138, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, K2Node_MakeStruct_FormatArgumentData_1) == 0x000180, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, K2Node_MakeArray_Array) == 0x0001C8, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_IsValid_ReturnValue) == 0x0001E9, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_TriggerSkill, CallFunc_Not_PreBool_ReturnValue) == 0x0001EA, "Member 'AC_jRPG_CharacterBattleStats_C_TriggerSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.UpdateSkillStates
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_UpdateSkillStates final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillState_C*>               CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillState_C*                       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_UpdateSkillStates");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_UpdateSkillStates");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_UpdateSkillStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_UpdateSkillStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_UpdateSkillStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates, CallFunc_Map_Values_Values) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_UpdateSkillStates::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_UpdateSkillStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_UpdateSkillStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_UpdateSkillStates, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_UpdateSkillStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetAllSkillStatesForUI
// 0x0050 (0x0050 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetAllSkillStatesForUI final
{
public:
	TMap<class UBP_DataAsset_Skill_C*, class UBP_SkillState_C*> SkillStates_0;                       // 0x0000(0x0050)(Parm, OutParm)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetAllSkillStatesForUI) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetAllSkillStatesForUI");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetAllSkillStatesForUI) == 0x000050, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetAllSkillStatesForUI");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAllSkillStatesForUI, SkillStates_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetAllSkillStatesForUI::SkillStates_0' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetSkillState
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetSkillState final
{
public:
	const class UBP_DataAsset_Skill_C*            SkillData;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillState_C*                       Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillState_C*                       CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetSkillState) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetSkillState");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetSkillState) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetSkillState");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillState, SkillData) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillState::SkillData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillState, Value) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillState::Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillState, CallFunc_Map_Find_Value) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetSkillState, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetSkillState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetProbabilityToReceiveBuff
// 0x00F8 (0x00F8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EBuffApplicationProbability                   StatusEffectProbability;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               BuffInstance;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_ratio;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x00B0(0x0010)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBuffApplicationProbability                   Temp_byte_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff) == 0x0000F8, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, SourceCharacter) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, StatusEffectProbability) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::StatusEffectProbability' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, BuffInstance) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::BuffInstance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, local_ratio) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::local_ratio' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, Temp_real_Variable) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, K2Node_MakeArray_Array) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, CallFunc_AppendStack__Content__Result) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::CallFunc_AppendStack__Content__Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, Temp_real_Variable_1) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, Temp_real_Variable_2) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, Temp_real_Variable_3) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, Temp_real_Variable_4) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, Temp_byte_Variable) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff, K2Node_Select_Default) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_GetProbabilityToReceiveBuff::K2Node_Select_Default' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.DeinitBattleGear
// 0x00C0 (0x00C0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_DeinitBattleGear final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleBuffInstance_C*>       CallFunc_GetBuffInstancesByType_Array;             // 0x0010(0x0010)(ReferenceParm)
	class UBP_BattleBuffInstance_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_DeinitBattleGear");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear) == 0x0000C0, "Wrong size on AC_jRPG_CharacterBattleStats_C_DeinitBattleGear");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_GetBuffInstancesByType_Array) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_GetBuffInstancesByType_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Map_Remove_ReturnValue) == 0x00002D, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Map_Remove_ReturnValue_1) == 0x00002E, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, K2Node_MakeArray_Array) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DeinitBattleGear, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_DeinitBattleGear::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetDefenseAgainstElement
// 0x00A8 (0x00A8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement final
{
public:
	EAttackType                                   AttackElement;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Defense;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement) == 0x0000A8, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, AttackElement) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::AttackElement' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, Defense) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::Defense' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, Temp_byte_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, CallFunc_Map_Find_Value) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, K2Node_MakeArray_Array) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement, CallFunc_Format_ReturnValue) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_GetDefenseAgainstElement::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.PrepareForActionAsSkillCaster
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0000(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster, K2Node_MakeArray_Array) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_PrepareForActionAsSkillCaster::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.InitSkillStates
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_InitSkillStates final
{
public:
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillState_C*                       CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_InitSkillStates) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_InitSkillStates");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_InitSkillStates) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_InitSkillStates");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitSkillStates, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'AC_jRPG_CharacterBattleStats_C_InitSkillStates::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.DEBUG_Console_AutoGradientParry
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry) == 0x000004, "Wrong size on AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry, CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry::CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoGradientParry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetAttackPowerForType
// 0x00A8 (0x00A8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType final
{
public:
	EAttackType                                   AttackElement;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Power;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType) == 0x0000A8, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, AttackElement) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::AttackElement' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, Power) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::Power' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, Temp_byte_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, CallFunc_Map_Find_Value) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, K2Node_MakeArray_Array) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType, CallFunc_Format_ReturnValue) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_GetAttackPowerForType::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsDefenseLockActive
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive) == 0x000002, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_IsDefenseLockActive::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveDefenseLock
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock) == 0x000004, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock, Temp_int_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveDefenseLock::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddDefenseLock
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddDefenseLock final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddDefenseLock) == 0x000004, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddDefenseLock");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddDefenseLock) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddDefenseLock");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDefenseLock, Temp_int_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddDefenseLock::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddDefenseLock, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_AddDefenseLock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.IsTurnSkipActive
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive) == 0x000002, "Wrong size on AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive, CallFunc_Greater_IntInt_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_IsTurnSkipActive::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveTurnSkip
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip) == 0x000004, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip, Temp_int_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveTurnSkip::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddTurnSkip
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddTurnSkip final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddTurnSkip) == 0x000004, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddTurnSkip");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddTurnSkip) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddTurnSkip");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddTurnSkip, Temp_int_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddTurnSkip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddTurnSkip, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_AddTurnSkip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetPassiveFromBuff
// 0x00B8 (0x00B8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff final
{
public:
	const class UBP_BattleBuffInstance_C*         Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FFPassiveEffect                        PassiveEffect;                                     // 0x0008(0x0048)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   PassiveID;                                         // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_Map_Find_Value_1;                         // 0x0068(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff) == 0x0000B8, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, Key) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::Key' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, PassiveEffect) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::PassiveEffect' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, PassiveID) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::PassiveID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, Found) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, CallFunc_Map_Find_Value) == 0x00005C, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, CallFunc_Map_Find_ReturnValue) == 0x000064, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, CallFunc_Map_Find_Value_1) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff, CallFunc_Map_Find_ReturnValue_1) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_GetPassiveFromBuff::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentSpeedSimulate
// 0x0068 (0x0068 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate final
{
public:
	bool                                          HasEngagementBonus_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDebugModeEnabled_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate) == 0x000068, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, HasEngagementBonus_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::HasEngagementBonus_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, Temp_bool_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, Temp_real_Variable) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, Temp_real_Variable_1) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, Temp_byte_Variable) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, K2Node_Select_Default) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_GetCharacterBattleBase_IsValid) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_IsDebugModeEnabled_ReturnValue) == 0x000041, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_IsDebugModeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000042, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_Not_PreBool_ReturnValue) == 0x000043, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_GetBoolCVar_ReturnValue) == 0x000044, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_Map_Find_Value) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeedSimulate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentSpeed
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentSpeedSimulate_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed, CallFunc_GetCurrentSpeedSimulate_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentSpeed::CallFunc_GetCurrentSpeedSimulate_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentHPPercentage
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage final
{
public:
	double                                        Percent01;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage, Percent01) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage::Percent01' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage, CallFunc_GetMaxHP_MaxHP) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage, CallFunc_SafeDivide_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentHPPercentage::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.OnKilledByDamage
// 0x00E0 (0x00E0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_OnKilledByDamage final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Battle_SkillScript_C*               CallFunc_GetCurrentSkillScript_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	TArray<EDamageReason>                         K2Node_MakeArray_Array_1;                          // 0x0090(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryLastStand_HasLastStand;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_OnKilledByDamage");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage) == 0x0000E0, "Wrong size on AC_jRPG_CharacterBattleStats_C_OnKilledByDamage");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, BattleDamages) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_GetCurrentSkillScript_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_GetCurrentSkillScript_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, K2Node_MakeArray_Array) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, K2Node_MakeArray_Array_1) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_Array_Contains_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_GetCharacterBattleBase_IsValid) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_GetBattleManager_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_TryLastStand_HasLastStand) == 0x0000D9, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_TryLastStand_HasLastStand' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000DA, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnKilledByDamage, CallFunc_BooleanAND_ReturnValue) == 0x0000DB, "Member 'AC_jRPG_CharacterBattleStats_C_OnKilledByDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CanSpendAP
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CanSpendAP final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CanSpendAP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CanSpendAP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CanSpendAP) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_CanSpendAP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanSpendAP, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CanSpendAP::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanSpendAP, ReturnValue) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_CanSpendAP::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanSpendAP, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000005, "Member 'AC_jRPG_CharacterBattleStats_C_CanSpendAP::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanSpendAP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CanSpendAP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanSpendAP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CanSpendAP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanSpendAP, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_CanSpendAP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetAP
// 0x0220 (0x0220 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetAP final
{
public:
	int32                                         NewAP;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAPChangeReason                               ChangeReason;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_previousAP_float;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxAP_MaxMP;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleEvent_APChange_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0110(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0010)()
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_4;                     // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCommunication_C> K2Node_DynamicCast_AsBPI_Battle_Communication; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCommunication_C> K2Node_DynamicCast_AsBPI_Battle_Communication_1; // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxAP_MaxMP_1;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_5;                     // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_6;                     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ProcessAPChange_ProcessedNewAP;           // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetAP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetAP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetAP) == 0x000220, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetAP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, NewAP) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::NewAP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, ChangeReason) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::ChangeReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, local_previousAP_float) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::local_previousAP_float' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FTrunc_ReturnValue_1) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetBattleManager_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetMaxAP_MaxMP) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetMaxAP_MaxMP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FTrunc_ReturnValue_2) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F4, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_SpawnObject_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetCharacterBattleBase_IsValid) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000168, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_MakeArray_Array) == 0x000170, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FTrunc_ReturnValue_3) == 0x000180, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Format_ReturnValue) == 0x000188, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x000198, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x0001A0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001A8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FTrunc_ReturnValue_4) == 0x0001B0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FTrunc_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001B4, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetOwner_ReturnValue) == 0x0001B8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_DynamicCast_AsBPI_Battle_Communication) == 0x0001C0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_DynamicCast_AsBPI_Battle_Communication' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_DynamicCast_AsBPI_Battle_Communication_1) == 0x0001D8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_DynamicCast_AsBPI_Battle_Communication_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, K2Node_DynamicCast_bSuccess_1) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_GetMaxAP_MaxMP_1) == 0x0001F0, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_GetMaxAP_MaxMP_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FClamp_ReturnValue) == 0x0001F8, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FTrunc_ReturnValue_5) == 0x000200, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FTrunc_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_FTrunc_ReturnValue_6) == 0x000204, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_FTrunc_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_ProcessAPChange_ProcessedNewAP) == 0x000208, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_ProcessAPChange_ProcessedNewAP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00020C, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Clamp_ReturnValue) == 0x000210, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetAP, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000218, "Member 'AC_jRPG_CharacterBattleStats_C_SetAP::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CheckIsAlive2
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CheckIsAlive2 final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleCheckContext_C*               NewParam;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CheckIsAlive2");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_CheckIsAlive2");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2, CheckMode) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive2::CheckMode' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2, NewParam) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive2::NewParam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2, Value) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive2::Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive2::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2, CallFunc_GetCharacterBattleBase_IsValid) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive2::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive2, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CheckCanResurrect
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CheckCanResurrect final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CheckCanResurrect) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CheckCanResurrect");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CheckCanResurrect) == 0x000004, "Wrong size on AC_jRPG_CharacterBattleStats_C_CheckCanResurrect");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanResurrect, CheckMode) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanResurrect::CheckMode' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanResurrect, ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanResurrect::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanResurrect, CallFunc_CheckIsAlive_Value) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanResurrect::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanResurrect, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanResurrect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CheckCanRecoverHP
// 0x0158 (0x0158 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanRecover;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecauseDead;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecauseMaxHP;                                      // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0018(0x0010)()
	bool                                          CallFunc_CheckIsMaxed_Value;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0080(0x0010)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP) == 0x000158, "Wrong size on AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CheckMode) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CheckMode' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CanRecover) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CanRecover' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, BecauseDead) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::BecauseDead' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, BecauseMaxHP) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::BecauseMaxHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_CheckIsMaxed_Value) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_CheckIsMaxed_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_CheckIsAlive_Value) == 0x000079, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007A, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_Not_PreBool_ReturnValue_2) == 0x00007B, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_Conv_BoolToText_ReturnValue) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_BooleanAND_ReturnValue) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, K2Node_MakeArray_Array) == 0x000138, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP, CallFunc_Format_ReturnValue) == 0x000148, "Member 'AC_jRPG_CharacterBattleStats_C_CheckCanRecoverHP::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CheckIsMaxed
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CheckIsMaxed final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CheckIsMaxed) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CheckIsMaxed");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CheckIsMaxed) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_CheckIsMaxed");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsMaxed, CheckMode) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsMaxed::CheckMode' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsMaxed, Value) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsMaxed::Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsMaxed, CallFunc_GetMaxHP_MaxHP) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsMaxed::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsMaxed, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsMaxed::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CheckIsAlive
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CheckIsAlive final
{
public:
	bool                                          CheckMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CheckIsAlive");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_CheckIsAlive");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive, CheckMode) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive::CheckMode' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive, Value) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive::Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CheckIsAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_CheckIsAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.InvalidateCheck
// 0x000C (0x000C - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_InvalidateCheck final
{
public:
	class FName                                   CheckName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_InvalidateCheck) == 0x000004, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_InvalidateCheck");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_InvalidateCheck) == 0x00000C, "Wrong size on AC_jRPG_CharacterBattleStats_C_InvalidateCheck");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InvalidateCheck, CheckName) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_InvalidateCheck::CheckName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InvalidateCheck, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_InvalidateCheck::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddCheckStack
// 0x00E0 (0x00E0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddCheckStack final
{
public:
	class FName                                   CheckConstant;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckMode;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0058(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0010)()
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddCheckStack) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddCheckStack");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddCheckStack) == 0x0000E0, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddCheckStack");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, CheckConstant) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::CheckConstant' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, CheckMode) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::CheckMode' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, CallFunc_Conv_NameToText_ReturnValue) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, CallFunc_Array_AddUnique_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, K2Node_MakeArray_Array) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, CallFunc_Array_Find_ReturnValue) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddCheckStack, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'AC_jRPG_CharacterBattleStats_C_AddCheckStack::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.Assert Check
// 0x00F0 (0x00F0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_Assert_Check final
{
public:
	class FName                                   CheckConstant;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 OperationName;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_Assert_Check) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_Assert_Check");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_Assert_Check) == 0x0000F0, "Wrong size on AC_jRPG_CharacterBattleStats_C_Assert_Check");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, CheckConstant) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::CheckConstant' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, OperationName) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::OperationName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, CallFunc_Conv_NameToText_ReturnValue) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, K2Node_MakeArray_Array) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Assert_Check, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_Assert_Check::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CanRecoverHP
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CanRecoverHP final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BecauseDead;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CanRecoverHP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CanRecoverHP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CanRecoverHP) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_CanRecoverHP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanRecoverHP, Valid) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CanRecoverHP::Valid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanRecoverHP, BecauseDead) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_CanRecoverHP::BecauseDead' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanRecoverHP, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CanRecoverHP::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanRecoverHP, CallFunc_GetCharacterBattleBase_IsValid) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CanRecoverHP::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CanRecoverHP, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_CanRecoverHP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.OnParryPerfectFail
// 0x00E0 (0x00E0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail final
{
public:
	class FText                                   Reason;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0068(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail) == 0x0000E0, "Wrong size on AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, Reason) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, K2Node_MakeArray_Array) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_OnParryPerfectFail::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.DEBUG_Console_AutoDodge
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge) == 0x000004, "Wrong size on AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge, CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge::CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoDodge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.DEBUG_Console_AutoParry
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam;  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry) == 0x000004, "Wrong size on AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry, ReturnValue) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry, CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry::CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'AC_jRPG_CharacterBattleStats_C_DEBUG_Console_AutoParry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ComputeNewInitiativeAfterTimeSimulate
// 0x0198 (0x0198 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate final
{
public:
	double                                        CurrentInitiative_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasEngagementBonus_0;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DEBUG_Verbose;                                     // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewInitiative;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentSpeedSimulate_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x00D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0130(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate) == 0x000198, "Wrong size on AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CurrentInitiative_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CurrentInitiative_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, Time) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, HasEngagementBonus_0) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::HasEngagementBonus_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, DEBUG_Verbose) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::DEBUG_Verbose' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, NewInitiative) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::NewInitiative' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CallFunc_GetCurrentSpeedSimulate_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CallFunc_GetCurrentSpeedSimulate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, K2Node_MakeStruct_FormatArgumentData_3) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, K2Node_MakeArray_Array) == 0x000178, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate, CallFunc_Format_ReturnValue) == 0x000188, "Member 'AC_jRPG_CharacterBattleStats_C_ComputeNewInitiativeAfterTimeSimulate::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AdvanceInitiativeByTime
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DEBUG_Verbose;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ComputeNewInitiativeAfterTimeSimulate_NewInitiative; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime, Time) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime::Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime, DEBUG_Verbose) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime::DEBUG_Verbose' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime, CallFunc_ComputeNewInitiativeAfterTimeSimulate_NewInitiative) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_AdvanceInitiativeByTime::CallFunc_ComputeNewInitiativeAfterTimeSimulate_NewInitiative' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetTimeToFullInitiativeSimulate
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate final
{
public:
	double                                        CurrentInitiative_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasEngagementBonus_0;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentSpeedSimulate_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate) == 0x000030, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate, CurrentInitiative_0) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate::CurrentInitiative_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate, HasEngagementBonus_0) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate::HasEngagementBonus_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate, Time) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate::Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate, CallFunc_GetCurrentSpeedSimulate_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate::CallFunc_GetCurrentSpeedSimulate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiativeSimulate::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetTimeToFullInitiative
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeToFullInitiativeSimulate_Time;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative, Time) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative::Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative, CallFunc_GetTimeToFullInitiativeSimulate_Time) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetTimeToFullInitiative::CallFunc_GetTimeToFullInitiativeSimulate_Time' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetMaxAP
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetMaxAP final
{
public:
	double                                        MaxMP;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetMaxAP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetMaxAP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetMaxAP) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetMaxAP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxAP, MaxMP) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxAP::MaxMP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxAP, Temp_byte_Variable) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxAP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxAP, CallFunc_Map_Find_Value) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxAP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxAP, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxAP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetMaxHP
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetMaxHP final
{
public:
	double                                        MaxHP;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetMaxHP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetMaxHP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetMaxHP) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetMaxHP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxHP, MaxHP) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxHP::MaxHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxHP, Temp_byte_Variable) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxHP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxHP, CallFunc_Map_Find_Value) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxHP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetMaxHP, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetMaxHP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.InitBattleGear
// 0x03B8 (0x03B8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_InitBattleGear final
{
public:
	TArray<class FName>                           local_sortedPassiveEffects;                        // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNarrativeBattle_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0038(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	struct FFPassiveEffect                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item_1;                         // 0x0108(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0160(0x0010)()
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance_1; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0180(0x0048)(HasGetValueTypeHash)
	class UObject*                                CallFunc_GetClassDefaultObject_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01D0(0x0010)(ReferenceParm)
	class UBP_BattleBuffInstance_C*               K2Node_DynamicCast_AsBP_Battle_Buff_Instance;      // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedWeaponItemInstance_Valid;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetEquippedWeaponItemInstance_ReturnValue; // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0250(0x0010)()
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_WeaponDefinition;     // 0x0260(0x00F0)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0350(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0398(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03A8(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_InitBattleGear) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_InitBattleGear");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_InitBattleGear) == 0x0003B8, "Wrong size on AC_jRPG_CharacterBattleStats_C_InitBattleGear");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, local_sortedPassiveEffects) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::local_sortedPassiveEffects' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetBattleManager_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_IsNarrativeBattle_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_IsNarrativeBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Array_Get_Item) == 0x00002C, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Conv_NameToText_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_MakeArray_Array) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000138, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000140, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance) == 0x000150, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_ClassDynamicCast_bSuccess) == 0x000158, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Conv_StringToText_ReturnValue) == 0x000160, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance_1) == 0x000170, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_ClassDynamicCast_bSuccess_1) == 0x000178, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_MakeStruct_FormatArgumentData_1) == 0x000180, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetClassDefaultObject_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetClassDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_MakeArray_Array_1) == 0x0001D0, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_DynamicCast_AsBP_Battle_Buff_Instance) == 0x0001E0, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_DynamicCast_AsBP_Battle_Buff_Instance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_DynamicCast_bSuccess) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Format_ReturnValue_1) == 0x0001F0, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Not_PreBool_ReturnValue) == 0x000200, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_IsValidClass_ReturnValue) == 0x000201, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_SpawnObject_ReturnValue) == 0x000208, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_ActivateBuff_Success) == 0x000210, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, Temp_int_Loop_Counter_Variable_1) == 0x000214, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Less_IntInt_ReturnValue_1) == 0x000218, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Add_IntInt_ReturnValue_1) == 0x00021C, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetOwner_ReturnValue) == 0x000220, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetCharacterByID_CharacterData) == 0x000228, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetDisplayName_ReturnValue) == 0x000230, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetEquippedWeaponItemInstance_Valid) == 0x000240, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetEquippedWeaponItemInstance_Valid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetEquippedWeaponItemInstance_ReturnValue) == 0x000248, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetEquippedWeaponItemInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000250, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_GetWeaponDefinition_WeaponDefinition) == 0x000260, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_GetWeaponDefinition_WeaponDefinition' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_MakeStruct_FormatArgumentData_2) == 0x000350, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, K2Node_MakeArray_Array_2) == 0x000398, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_InitBattleGear, CallFunc_Format_ReturnValue_2) == 0x0003A8, "Member 'AC_jRPG_CharacterBattleStats_C_InitBattleGear::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetOtherElementalAffinity
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterBattleStats;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   AttackType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            Affinity;                                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            CallFunc_GetElementalAffinity_Value;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity) == 0x000028, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, CharacterBattleStats) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::CharacterBattleStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, AttackType) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::AttackType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, Affinity) == 0x000009, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::Affinity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity, CallFunc_GetElementalAffinity_Value) == 0x000021, "Member 'AC_jRPG_CharacterBattleStats_C_GetOtherElementalAffinity::CallFunc_GetElementalAffinity_Value' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetElementalAffinity
// 0x0003 (0x0003 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetElementalAffinity final
{
public:
	EAttackType                                   AttackType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            Affinity;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EElementalAffinity                            CallFunc_GetOtherElementalAffinity_Affinity;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetElementalAffinity) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetElementalAffinity");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetElementalAffinity) == 0x000003, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetElementalAffinity");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetElementalAffinity, AttackType) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetElementalAffinity::AttackType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetElementalAffinity, Affinity) == 0x000001, "Member 'AC_jRPG_CharacterBattleStats_C_GetElementalAffinity::Affinity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetElementalAffinity, CallFunc_GetOtherElementalAffinity_Affinity) == 0x000002, "Member 'AC_jRPG_CharacterBattleStats_C_GetElementalAffinity::CallFunc_GetOtherElementalAffinity_Affinity' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.MaxHP
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_MaxHP final
{
public:
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_MaxHP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_MaxHP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_MaxHP) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_MaxHP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_MaxHP, Temp_byte_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_MaxHP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_MaxHP, CallFunc_Map_Find_Value) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_MaxHP::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_MaxHP, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_MaxHP::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_MaxHP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_MaxHP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetHP
// 0x0280 (0x0280 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetHP final
{
public:
	double                                        HP_Value;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_PreviousHP;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0128(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0218(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0270(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetHP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetHP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetHP) == 0x000280, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetHP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, HP_Value) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::HP_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, local_PreviousHP) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::local_PreviousHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeStruct_FormatArgumentData_3) == 0x000128, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeArray_Array) == 0x000170, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_FTrunc_ReturnValue) == 0x000180, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Format_ReturnValue) == 0x000188, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000198, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001A0, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeArray_Array_1) == 0x0001F0, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Format_ReturnValue_1) == 0x000200, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000210, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeStruct_FormatArgumentData_5) == 0x000218, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, K2Node_MakeArray_Array_2) == 0x000260, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetHP, CallFunc_Format_ReturnValue_2) == 0x000270, "Member 'AC_jRPG_CharacterBattleStats_C_SetHP::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddOverdrive
// 0x00E0 (0x00E0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddOverdrive final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddOverdrive) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddOverdrive");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddOverdrive) == 0x0000E0, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddOverdrive");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, Reason) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, K2Node_MakeStruct_FormatArgumentData_1) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, K2Node_MakeArray_Array) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C9, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddOverdrive, CallFunc_FClamp_ReturnValue) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_AddOverdrive::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.OnBuffDeactivated
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_OnBuffDeactivated final
{
public:
	class UBP_BattleBuffInstanceWrapper_C*        BuffInstanceWrapper;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_OnBuffDeactivated) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_OnBuffDeactivated");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_OnBuffDeactivated) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_OnBuffDeactivated");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnBuffDeactivated, BuffInstanceWrapper) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_OnBuffDeactivated::BuffInstanceWrapper' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.OnCharacterTurnStart
// 0x00E0 (0x00E0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterTurn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0068(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0078(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart) == 0x0000E0, "Wrong size on AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, CharacterTurn) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::CharacterTurn' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, K2Node_MakeStruct_FormatArgumentData_1) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, K2Node_MakeArray_Array) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_OnCharacterTurnStart::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RecalculateStats
// 0x0228 (0x0228 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RecalculateStats final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0010(0x0010)()
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	E_jRPG_StatType                               CallFunc_Array_Get_Item;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_StatTypeToText_Text;                      // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStatMultiplier>                CallFunc_Map_Values_Values;                        // 0x0160(0x0010)(ReferenceParm)
	struct FStatMultiplier                        CallFunc_Array_Get_Item_1;                         // 0x0170(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_StatTypeToText_Text_1;                    // 0x0188(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0198(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value_1;                         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0200(0x0010)()
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RecalculateStats) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RecalculateStats");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RecalculateStats) == 0x000228, "Wrong size on AC_jRPG_CharacterBattleStats_C_RecalculateStats");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Conv_NameToText_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Array_Get_Item) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Map_Find_Value) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_StatTypeToText_Text) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_StatTypeToText_Text' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, Temp_int_Loop_Counter_Variable_1) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, K2Node_MakeArray_Array) == 0x000138, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Format_ReturnValue) == 0x000148, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x00015C, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Map_Values_Values) == 0x000160, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_StatTypeToText_Text_1) == 0x000188, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_StatTypeToText_Text_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, K2Node_MakeStruct_FormatArgumentData_3) == 0x000198, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Map_Find_Value_1) == 0x0001E0, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Map_Find_ReturnValue_1) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, K2Node_MakeArray_Array_1) == 0x0001F0, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Format_ReturnValue_1) == 0x000200, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000210, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Round_ReturnValue) == 0x000218, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecalculateStats, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000220, "Member 'AC_jRPG_CharacterBattleStats_C_RecalculateStats::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveStatMultiplier
// 0x0120 (0x0120 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier final
{
public:
	struct FGuid                                  StatMultiplierUID;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0090(0x0010)()
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier) == 0x000120, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, StatMultiplierUID) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::StatMultiplierUID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, Temp_bool_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, CallFunc_Conv_GuidToString_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, Temp_text_Variable) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, Temp_text_Variable_1) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, CallFunc_Map_Remove_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, K2Node_Select_Default) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, K2Node_MakeArray_Array) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier, CallFunc_Format_ReturnValue) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveStatMultiplier::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddStatMultiplier
// 0x01D8 (0x01D8 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddStatMultiplier final
{
public:
	E_jRPG_StatType                               StatType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Multiplier;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  StatMultiplierUID;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  UID;                                               // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatMultiplier                        K2Node_MakeStruct_StatMultiplier;                  // 0x0030(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_StatTypeToText_Text;                      // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0160(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B8(0x0010)()
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddStatMultiplier");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier) == 0x0001D8, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddStatMultiplier");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, StatType) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::StatType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, Multiplier) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, StatMultiplierUID) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::StatMultiplierUID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, UID) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::UID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, K2Node_MakeStruct_StatMultiplier) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::K2Node_MakeStruct_StatMultiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, CallFunc_StatTypeToText_Text) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::CallFunc_StatTypeToText_Text' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, CallFunc_Conv_GuidToString_ReturnValue) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, CallFunc_Conv_NameToText_ReturnValue) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, K2Node_MakeStruct_FormatArgumentData_3) == 0x000160, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, K2Node_MakeArray_Array) == 0x0001A8, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, CallFunc_Format_ReturnValue) == 0x0001B8, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddStatMultiplier, CallFunc_NewGuid_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_CharacterBattleStats_C_AddStatMultiplier::CallFunc_NewGuid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ActivateBuff
// 0x0358 (0x0358 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ActivateBuff final
{
public:
	class UBP_BattleBuffInstance_C*               BuffInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBuffApplicationProbability                   StatusEffectProbability;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_maxValidRoll;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_buffRoll;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        LOCAL_SourceCharacter;                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAction_AddBuff_C*                      CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0180(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D8(0x0010)()
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x01E8(0x0010)()
	double                                        CallFunc_GetProbabilityToReceiveBuff_ReturnValue;  // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0200(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0210(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0258(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0268(0x0010)()
	class UAction_AddBuff_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AppendStack__Content__Result_1;           // 0x0280(0x0010)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasPrevented_RawDamages;                  // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item_1;                         // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE[0x2];                                      // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_BattleBuffInstanceWrapper_C* BattleBuffInstanceWrapper)> K2Node_CreateDelegate_OutputDelegate; // 0x02C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x02D0(0x0010)()
	class UBP_BattleBuffInstanceWrapper_C*        CallFunc_ActivateBuff_BuffInstanceWrapper;         // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success_1;                   // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02F0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0338(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0348(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ActivateBuff) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ActivateBuff");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ActivateBuff) == 0x000358, "Wrong size on AC_jRPG_CharacterBattleStats_C_ActivateBuff");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, BuffInstance) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::BuffInstance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, StatusEffectProbability) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::StatusEffectProbability' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, SourceCharacter) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, Success) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, local_maxValidRoll) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::local_maxValidRoll' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, local_buffRoll) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::local_buffRoll' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, LOCAL_SourceCharacter) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::LOCAL_SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000039, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_GetObjectClass_ReturnValue) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Array_LastIndex_ReturnValue) == 0x000118, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00011C, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Array_Get_Item) == 0x000120, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_IsValid_ReturnValue_1) == 0x000128, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_ActivateBuff_Success) == 0x000178, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeStruct_FormatArgumentData_3) == 0x000180, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeArray_Array) == 0x0001C8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_AppendStack__Content__Result) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_AppendStack__Content__Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_GetProbabilityToReceiveBuff_ReturnValue) == 0x0001F8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_GetProbabilityToReceiveBuff_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Conv_NameToText_ReturnValue) == 0x000200, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeStruct_FormatArgumentData_4) == 0x000210, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeArray_Array_1) == 0x000258, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Format_ReturnValue_1) == 0x000268, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_SpawnObject_ReturnValue) == 0x000278, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_AppendStack__Content__Result_1) == 0x000280, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_AppendStack__Content__Result_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Array_RemoveItem_ReturnValue) == 0x000290, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Array_Add_ReturnValue) == 0x000294, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_WasPrevented_RawDamages) == 0x000298, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_WasPrevented_RawDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Not_PreBool_ReturnValue) == 0x000299, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_RandomFloatInRange_ReturnValue) == 0x0002A0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Array_Get_Item_1) == 0x0002A8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Array_Length_ReturnValue) == 0x0002B8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Less_IntInt_ReturnValue) == 0x0002BC, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002BD, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_CreateDelegate_OutputDelegate) == 0x0002C0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0002D0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_ActivateBuff_BuffInstanceWrapper) == 0x0002E0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_ActivateBuff_BuffInstanceWrapper' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_ActivateBuff_Success_1) == 0x0002E8, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_ActivateBuff_Success_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002F0, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, K2Node_MakeArray_Array_2) == 0x000338, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ActivateBuff, CallFunc_Format_ReturnValue_2) == 0x000348, "Member 'AC_jRPG_CharacterBattleStats_C_ActivateBuff::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.Resurrect
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_Resurrect final
{
public:
	double                                        HP_Amount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UAC_jRPG_CharacterBattleStats_C*  Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UAC_jRPG_CharacterBattleStats_C*  Temp_object_Variable_1;                            // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldQueueRevive_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_ResurrectParameters                 K2Node_MakeStruct_S_ResurrectParameters;           // 0x0048(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_Resurrect) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_Resurrect");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_Resurrect) == 0x000060, "Wrong size on AC_jRPG_CharacterBattleStats_C_Resurrect");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, HP_Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::HP_Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, SourceCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, Temp_object_Variable) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, Temp_object_Variable_1) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, CallFunc_GetBattleManager_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, CallFunc_ShouldQueueRevive_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::CallFunc_ShouldQueueRevive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, CallFunc_GetBattleManager_ReturnValue_1) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, CallFunc_GetBattleManager_ReturnValue_2) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::CallFunc_GetBattleManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_Resurrect, K2Node_MakeStruct_S_ResurrectParameters) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_Resurrect::K2Node_MakeStruct_S_ResurrectParameters' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ReduceAP
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ReduceAP final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAPChangeReason                               ChangeReason;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_previousAP;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ReduceAP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ReduceAP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ReduceAP) == 0x000030, "Wrong size on AC_jRPG_CharacterBattleStats_C_ReduceAP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, ChangeReason) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::ChangeReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, local_previousAP) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::local_previousAP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x00001A, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceAP, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceAP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GainAP
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GainAP final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAPChangeReason                               ChangeReason;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GainAP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GainAP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GainAP) == 0x000060, "Wrong size on AC_jRPG_CharacterBattleStats_C_GainAP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, ChangeReason) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::ChangeReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, Temp_int_Variable) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, Temp_bool_Variable) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, K2Node_Select_Default) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GainAP, CallFunc_FTrunc_ReturnValue) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_GainAP::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCurrentAP
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCurrentAP final
{
public:
	double                                        AP;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCurrentAP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCurrentAP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCurrentAP) == 0x000008, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCurrentAP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCurrentAP, AP) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCurrentAP::AP' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ReduceHP
// 0x0068 (0x0068 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ReduceHP final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewHPValue;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectiveDamage;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_PreviousHP;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_newHPValue;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0038(0x0010)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferenceCounterState_ReturnValue;     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ReduceHP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ReduceHP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ReduceHP) == 0x000068, "Wrong size on AC_jRPG_CharacterBattleStats_C_ReduceHP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, NewHPValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::NewHPValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, EffectiveDamage) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::EffectiveDamage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, local_PreviousHP) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::local_PreviousHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, local_newHPValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::local_newHPValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, K2Node_MakeArray_Array) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_Format_ReturnValue) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_GetCharacterBattleBase_IsValid) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_GetReferenceCounterState_ReturnValue) == 0x000061, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_GetReferenceCounterState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000062, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceHP, CallFunc_BooleanAND_ReturnValue) == 0x000063, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceHP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ReduceInitiative
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ReduceInitiative final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCommunication_C> K2Node_DynamicCast_AsBPI_Battle_Communication; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ReduceInitiative");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative) == 0x000038, "Wrong size on AC_jRPG_CharacterBattleStats_C_ReduceInitiative");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceInitiative::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceInitiative::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative, K2Node_DynamicCast_AsBPI_Battle_Communication) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceInitiative::K2Node_DynamicCast_AsBPI_Battle_Communication' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceInitiative::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceInitiative::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReduceInitiative, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_ReduceInitiative::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CalculateDefendStanceDamageReduction
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction final
{
public:
	double                                        DamageInput;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DamageOutput;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction) == 0x000018, "Wrong size on AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction, DamageInput) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction::DamageInput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction, DamageOutput) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction::DamageOutput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_CalculateDefendStanceDamageReduction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RemoveInitiative
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RemoveInitiative final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RemoveInitiative) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RemoveInitiative");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RemoveInitiative) == 0x000020, "Wrong size on AC_jRPG_CharacterBattleStats_C_RemoveInitiative");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveInitiative, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveInitiative::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveInitiative, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveInitiative::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveInitiative, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveInitiative::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RemoveInitiative, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_RemoveInitiative::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ReceiveDamage
// 0x0098 (0x0098 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ReceiveDamage final
{
public:
	double                                        FinalDamageMultiplier;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> DamageSourceCharacter;                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   AttackType;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Simulated_Damage__No_Damage_will_be_dealt_;        // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Straight_Damage__ignores_calculation_;             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCounterDamage;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 DamageReason;                                      // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DamageLocation;                                    // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugReason;                                       // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        DamageDealt;                                       // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHit;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DodgeSuccess;                                      // 0x0061(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParrySuccess;                                      // 0x0062(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QTESuccess_;                                       // 0x0063(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamageBuilder_C*              CallFunc_MakeDamageBuilder_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamageFromObject_DamageDealt;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamageFromObject_HasHit;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamageFromObject_DodgeSuccess;     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamageFromObject_ParrySuccess;     // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamageFromObject_BattleDamages;    // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ReceiveDamage");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage) == 0x000098, "Wrong size on AC_jRPG_CharacterBattleStats_C_ReceiveDamage");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, FinalDamageMultiplier) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::FinalDamageMultiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, DamageSourceCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::DamageSourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, AttackType) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::AttackType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, Simulated_Damage__No_Damage_will_be_dealt_) == 0x000019, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::Simulated_Damage__No_Damage_will_be_dealt_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, Straight_Damage__ignores_calculation_) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::Straight_Damage__ignores_calculation_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, IsCounterDamage) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::IsCounterDamage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, DamageReason) == 0x000029, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::DamageReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, DamageLocation) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::DamageLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, DebugReason) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, DamageDealt) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::DamageDealt' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, HasHit) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::HasHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, DodgeSuccess) == 0x000061, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::DodgeSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, ParrySuccess) == 0x000062, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::ParrySuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, QTESuccess_) == 0x000063, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::QTESuccess_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, BattleDamages) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, CallFunc_MakeDamageBuilder_ReturnValue) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::CallFunc_MakeDamageBuilder_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, CallFunc_ReceiveDamageFromObject_DamageDealt) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::CallFunc_ReceiveDamageFromObject_DamageDealt' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, CallFunc_ReceiveDamageFromObject_HasHit) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::CallFunc_ReceiveDamageFromObject_HasHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, CallFunc_ReceiveDamageFromObject_DodgeSuccess) == 0x000089, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::CallFunc_ReceiveDamageFromObject_DodgeSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, CallFunc_ReceiveDamageFromObject_ParrySuccess) == 0x00008A, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::CallFunc_ReceiveDamageFromObject_ParrySuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveDamage, CallFunc_ReceiveDamageFromObject_BattleDamages) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveDamage::CallFunc_ReceiveDamageFromObject_BattleDamages' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.RecoverHP
// 0x0290 (0x0290 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_RecoverHP final
{
public:
	double                                        RecoveryAmount;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayVFX;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHealReason                                   Reason;                                            // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugReason;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UBP_BattleHeal_C*                       local_heal;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        local_ActualRecoveredHP;                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_PreviousHP;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Today_ReturnValue;                        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Debug_BattleListener_C> K2Node_DynamicCast_AsBPI_Debug_Battle_Listener; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentAmount_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleHeal_C*                       CallFunc_SpawnObject_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanRecoverHP_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanRecoverHP_BecauseDead;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0150(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHP_MaxHP_1;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x01E8(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0200(0x0048)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCommunication_C> K2Node_DynamicCast_AsBPI_Battle_Communication; // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0270(0x0010)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_RecoverHP) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_RecoverHP");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_RecoverHP) == 0x000290, "Wrong size on AC_jRPG_CharacterBattleStats_C_RecoverHP");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, RecoveryAmount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::RecoveryAmount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, SourceCharacter) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, PlayVFX) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::PlayVFX' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, Reason) == 0x000011, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, DebugReason) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, local_heal) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::local_heal' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, local_ActualRecoveredHP) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::local_ActualRecoveredHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, local_PreviousHP) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::local_PreviousHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000041, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_IsValid_ReturnValue) == 0x000043, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_GetBattleManager_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000051, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_MakeDateTime_ReturnValue) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Today_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Today_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Greater_DateTimeDateTime_ReturnValue) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Greater_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_GetBattleManager_ReturnValue_1) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_GetOwner_ReturnValue) == 0x0000C0, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_DynamicCast_AsBPI_Debug_Battle_Listener) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_DynamicCast_AsBPI_Debug_Battle_Listener' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000100, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_GetMaxHP_MaxHP) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_GetCurrentAmount_ReturnValue) == 0x000118, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_GetCurrentAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000120, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Round_ReturnValue) == 0x000124, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000128, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_BooleanAND_ReturnValue) == 0x000131, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_SpawnObject_ReturnValue) == 0x000138, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000140, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_CheckCanRecoverHP_ReturnValue) == 0x000148, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_CheckCanRecoverHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_CheckCanRecoverHP_BecauseDead) == 0x000149, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_CheckCanRecoverHP_BecauseDead' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_MakeStruct_FormatArgumentData_1) == 0x000150, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_GetMaxHP_MaxHP_1) == 0x000198, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_GetMaxHP_MaxHP_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001A0, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Conv_NameToText_ReturnValue) == 0x0001E8, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_GetOwner_ReturnValue_1) == 0x0001F8, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_MakeStruct_FormatArgumentData_3) == 0x000200, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_DynamicCast_AsBPI_Battle_Communication) == 0x000248, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_DynamicCast_AsBPI_Battle_Communication' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, K2Node_MakeArray_Array) == 0x000260, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Format_ReturnValue) == 0x000270, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000280, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_RecoverHP, CallFunc_FClamp_ReturnValue) == 0x000288, "Member 'AC_jRPG_CharacterBattleStats_C_RecoverHP::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.AddInitiative
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_AddInitiative final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_AddInitiative) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_AddInitiative");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_AddInitiative) == 0x000040, "Wrong size on AC_jRPG_CharacterBattleStats_C_AddInitiative");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, Amount) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, Temp_byte_Variable) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000009, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, CallFunc_Map_Find_Value) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_AddInitiative, CallFunc_FClamp_ReturnValue_1) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_AddInitiative::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.CreateCharacterBattleSlotUI
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI final
{
public:
	bool                                          SpotAlreadyExists;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_HUD_Battle_CharacterPortrait_C*    CallFunc_AddCharacter_CreatedWidget;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI, SpotAlreadyExists) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI::SpotAlreadyExists' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI, CallFunc_AddCharacter_CreatedWidget) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_CreateCharacterBattleSlotUI::CallFunc_AddCharacter_CreatedWidget' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetCharacterDataFromHero
// 0x0118 (0x0118 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero final
{
public:
	class UBP_CharacterData_C*                    HeroCharacterData;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<EAttackType, EElementalAffinity>         K2Node_MakeMap_Map;                                // 0x0008(0x0050)()
	ETextGender                                   CallFunc_GetCharacterGenderTag_GenderTag;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetAllAvailableEquippedSkills_ReturnValue; // 0x0060(0x0010)(ReferenceParm)
	struct FS_jRPG_OverdriveSource                CallFunc_GetOverdriveSources_OverdriveSources;     // 0x0070(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetCharacterDisplayName_CharacterDisplayName; // 0x0080(0x0010)()
	TMap<E_jRPG_StatType, double>                 CallFunc_GetCharacterStats_Stats;                  // 0x0090(0x0050)()
	class UTexture2D*                             CallFunc_GetBattleIcon_CharacterIconBattle;        // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFCharacterStats                       CallFunc_GetCommonBattleStats_CommonStats;         // 0x00E8(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero) == 0x000118, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, HeroCharacterData) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::HeroCharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, K2Node_MakeMap_Map) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, CallFunc_GetCharacterGenderTag_GenderTag) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::CallFunc_GetCharacterGenderTag_GenderTag' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, CallFunc_GetAllAvailableEquippedSkills_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::CallFunc_GetAllAvailableEquippedSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, CallFunc_GetOverdriveSources_OverdriveSources) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::CallFunc_GetOverdriveSources_OverdriveSources' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, CallFunc_GetCharacterDisplayName_CharacterDisplayName) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::CallFunc_GetCharacterDisplayName_CharacterDisplayName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, CallFunc_GetCharacterStats_Stats) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::CallFunc_GetCharacterStats_Stats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, CallFunc_GetBattleIcon_CharacterIconBattle) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::CallFunc_GetBattleIcon_CharacterIconBattle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero, CallFunc_GetCommonBattleStats_CommonStats) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterDataFromHero::CallFunc_GetCommonBattleStats_CommonStats' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.SetCharacterData
// 0x03E0 (0x03E0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_SetCharacterData final
{
public:
	class FName                                   HardcodedID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CharacterDisplayName_0;                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextGender                                   GenderTag_0;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_jRPG_StatType, double>                 CharacterStats_0;                                  // 0x0020(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        CurrentHealth;                                     // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMana;                                       // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_OverdriveSource                OverdriveSources_0;                                // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CharacterBattleIcon_0;                             // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFCharacterStats                       CommonCharacterStats;                              // 0x0098(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBoss_0;                                          // 0x00C8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFlying_0;                                        // 0x00C9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EAttackType, EElementalAffinity>         ElementalAffinities;                               // 0x00D0(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_jRPG_StatType>                       CallFunc_Map_Keys_Keys;                            // 0x0130(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               CallFunc_Array_Get_Item;                           // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnemyDataTableRow_Found;               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetEnemyDataTableRow_EnemyData;           // 0x0160(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0360(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0370(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03C8(0x0010)()
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x03DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_SetCharacterData) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_SetCharacterData");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_SetCharacterData) == 0x0003E0, "Wrong size on AC_jRPG_CharacterBattleStats_C_SetCharacterData");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, HardcodedID) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::HardcodedID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CharacterDisplayName_0) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CharacterDisplayName_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, GenderTag_0) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::GenderTag_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CharacterStats_0) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CharacterStats_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CurrentHealth) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CurrentHealth' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CurrentMana) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CurrentMana' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, OverdriveSources_0) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::OverdriveSources_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CharacterBattleIcon_0) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CharacterBattleIcon_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CommonCharacterStats) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CommonCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, IsBoss_0) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::IsBoss_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, IsFlying_0) == 0x0000C9, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::IsFlying_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, ElementalAffinities) == 0x0000D0, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::ElementalAffinities' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, Temp_int_Loop_Counter_Variable) == 0x000120, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x000124, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Map_Keys_Keys) == 0x000130, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Less_IntInt_ReturnValue) == 0x000144, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, Temp_int_Array_Index_Variable) == 0x000148, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Array_Get_Item) == 0x00014C, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00014D, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000150, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_GetCharacterBattleBase_IsValid) == 0x000158, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_GetEnemyDataTableRow_Found) == 0x000159, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_GetEnemyDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_GetEnemyDataTableRow_EnemyData) == 0x000160, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_GetEnemyDataTableRow_EnemyData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Conv_NameToText_ReturnValue) == 0x000360, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, K2Node_MakeStruct_FormatArgumentData) == 0x000370, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, K2Node_MakeArray_Array) == 0x0003B8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Format_ReturnValue) == 0x0003C8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_MakeLiteralInt_ReturnValue) == 0x0003D8, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Conv_IntToByte_ReturnValue) == 0x0003DC, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_SetCharacterData, CallFunc_Less_ByteByte_ReturnValue) == 0x0003DD, "Member 'AC_jRPG_CharacterBattleStats_C_SetCharacterData::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ProcessSkillComponentStartEvents
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents final
{
public:
	const class USF_BlueprintLatentAction*        LatentAction;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceInstant;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents) == 0x000010, "Wrong size on AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents, LatentAction) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents::LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents, ForceInstant) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ProcessSkillComponentStartEvents::ForceInstant' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ReceiveEndPlay");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ReceiveEndPlay) == 0x000001, "Wrong size on AC_jRPG_CharacterBattleStats_C_ReceiveEndPlay");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.ExecuteUbergraph_AC_jRPG_CharacterBattleStats
// 0x0138 (0x0138 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponentScript_C*         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffComponent_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleCheckContext_C*               CallFunc_SpawnObject_ReturnValue_1;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleCheckContext_C*               CallFunc_SpawnObject_ReturnValue_2;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class USF_BlueprintLatentAction*        K2Node_CustomEvent_LatentAction;                   // 0x0078(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ForceInstant;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponentScript_C*         CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_SkillDataComponentScript_C*> CallFunc_GetSkillScriptByTurnStartEventCriteria_HasStartEvent; // 0x0098(0x0010)(ReferenceParm)
	TArray<class UBP_SkillDataComponentScript_C*> CallFunc_GetSkillScriptByTurnStartEventCriteria_HasNoStartEvent; // 0x00A8(0x0010)(ReferenceParm)
	TArray<class UBP_SkillDataComponentScript_C*> CallFunc_GetSkillScriptByTurnStartEventCriteria_HasStartEvent_1; // 0x00B8(0x0010)(ReferenceParm)
	TArray<class UBP_SkillDataComponentScript_C*> CallFunc_GetSkillScriptByTurnStartEventCriteria_HasNoStartEvent_1; // 0x00C8(0x0010)(ReferenceParm)
	class UBP_SkillDataComponentScript_C*         CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DependencyRefCounter_C*             CallFunc_SpawnObject_ReturnValue_3;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  CallFunc_Array_Get_Item_3;                         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_SkillDataComponent_Base_C*>  CallFunc_GetSkillComponentsAsBP_Array;             // 0x00F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SkillDataComponent_Base_C*          CallFunc_Array_Get_Item_4;                         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0124(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0135(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats) == 0x000138, "Wrong size on AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, EntryPoint) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Array_Index_Variable) == 0x000014, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Loop_Counter_Variable_2) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, Temp_int_Array_Index_Variable_3) == 0x000030, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Get_Item) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom) == 0x000050, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_SpawnObject_ReturnValue) == 0x000060, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_SpawnObject_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_SpawnObject_ReturnValue_2) == 0x000070, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, K2Node_CustomEvent_LatentAction) == 0x000078, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::K2Node_CustomEvent_LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, K2Node_CustomEvent_ForceInstant) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::K2Node_CustomEvent_ForceInstant' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_IsValid_ReturnValue) == 0x000082, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_GetSkillScriptByTurnStartEventCriteria_HasStartEvent) == 0x000098, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_GetSkillScriptByTurnStartEventCriteria_HasStartEvent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_GetSkillScriptByTurnStartEventCriteria_HasNoStartEvent) == 0x0000A8, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_GetSkillScriptByTurnStartEventCriteria_HasNoStartEvent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_GetSkillScriptByTurnStartEventCriteria_HasStartEvent_1) == 0x0000B8, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_GetSkillScriptByTurnStartEventCriteria_HasStartEvent_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_GetSkillScriptByTurnStartEventCriteria_HasNoStartEvent_1) == 0x0000C8, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_GetSkillScriptByTurnStartEventCriteria_HasNoStartEvent_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E4, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_SpawnObject_ReturnValue_3) == 0x0000E8, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_SpawnObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Get_Item_3) == 0x0000F0, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_GetSkillComponentsAsBP_Array) == 0x0000F8, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_GetSkillComponentsAsBP_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Get_Item_4) == 0x000110, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Array_Length_ReturnValue_3) == 0x00011C, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Less_IntInt_ReturnValue_2) == 0x000120, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_Less_IntInt_ReturnValue_3) == 0x000121, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, K2Node_CreateDelegate_OutputDelegate) == 0x000124, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, K2Node_Event_EndPlayReason) == 0x000134, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000135, "Member 'AC_jRPG_CharacterBattleStats_C_ExecuteUbergraph_AC_jRPG_CharacterBattleStats::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CharacterBattleStats.AC_jRPG_CharacterBattleStats_C.GetCharacterBattleBase
// 0x00A0 (0x00A0 - 0x0000)
struct AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       jRPG_CharacterBattleBase;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
};
static_assert(alignof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase) == 0x000008, "Wrong alignment on AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase");
static_assert(sizeof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase) == 0x0000A0, "Wrong size on AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, jRPG_CharacterBattleBase) == 0x000000, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, IsValid) == 0x000008, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000018, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000028, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, K2Node_MakeArray_Array) == 0x000080, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase, CallFunc_Format_ReturnValue) == 0x000090, "Member 'AC_jRPG_CharacterBattleStats_C_GetCharacterBattleBase::CallFunc_Format_ReturnValue' has a wrong offset!");

}

