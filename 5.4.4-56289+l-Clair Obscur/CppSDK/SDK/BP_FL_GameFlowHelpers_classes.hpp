#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FL_GameFlowHelpers

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FL_GameFlowHelpers.BP_FL_GameFlowHelpers_C
// 0x0000 (0x0028 - 0x0028)
class UBP_FL_GameFlowHelpers_C final : public UBlueprintFunctionLibrary
{
public:
	static void ReleaseAndWaitGameFlowTransitionFadeOut(double OverrideFadeOutTransition, class UObject* __WorldContext, class USF_BlueprintLatentAction** LatentAction);
	static void ReleaseAndWaitGameFlowTransition(double OverrideFadeOutTransition, class UObject* __WorldContext, class USF_BlueprintLatentAction** LatentAction);
	static void ReleaseGameFlowTransition(double OverrideFadeOutTransition, class UObject* __WorldContext);
	static void HoldGameFlowTransition(class UObject* __WorldContext);
	static void RequestGameFlowTransition(const struct FS_GameFlowTransitionRequest& TransitionRequest, class UObject* __WorldContext);
	static void GetGameFlowTransitionSystem(class UObject* __WorldContext, class UBP_GameFlowTransitionSystem_C** GameFlowTransitionSystem);
	static class UBP_DataAsset_ProjectConfiguration_C* GetProjectConfiguration(class UObject* __WorldContext);
	static void GetDemoLevelData(class UObject* __WorldContext, TSoftObjectPtr<class UWorld>* LevelDestination, struct FGameplayTag* SpawnPointTag);

	void IsInWorldMap(class UObject* __WorldContext, bool* Result);
	void IsTransitionRequestValid(const struct FS_GameFlowTransitionRequest& GameFlowTransitionRequest, class UObject* __WorldContext, bool* IsValid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FL_GameFlowHelpers_C">();
	}
	static class UBP_FL_GameFlowHelpers_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FL_GameFlowHelpers_C>();
	}
};
static_assert(alignof(UBP_FL_GameFlowHelpers_C) == 0x000008, "Wrong alignment on UBP_FL_GameFlowHelpers_C");
static_assert(sizeof(UBP_FL_GameFlowHelpers_C) == 0x000028, "Wrong size on UBP_FL_GameFlowHelpers_C");

}

