#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GroupInstance_Skill_Base

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GroupInstance_Skill_Base.BP_GroupInstance_Skill_Base_C.DoesObjectMatch
// 0x0020 (0x0020 - 0x0000)
struct BP_GroupInstance_Skill_Base_C_DoesObjectMatch final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          MatchesGroup;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  K2Node_DynamicCast_AsBP_Data_Asset_Skill;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSkillMatch_MatchesGroup;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupInstance_Skill_Base_C_DoesObjectMatch) == 0x000008, "Wrong alignment on BP_GroupInstance_Skill_Base_C_DoesObjectMatch");
static_assert(sizeof(BP_GroupInstance_Skill_Base_C_DoesObjectMatch) == 0x000020, "Wrong size on BP_GroupInstance_Skill_Base_C_DoesObjectMatch");
static_assert(offsetof(BP_GroupInstance_Skill_Base_C_DoesObjectMatch, Object) == 0x000000, "Member 'BP_GroupInstance_Skill_Base_C_DoesObjectMatch::Object' has a wrong offset!");
static_assert(offsetof(BP_GroupInstance_Skill_Base_C_DoesObjectMatch, MatchesGroup) == 0x000008, "Member 'BP_GroupInstance_Skill_Base_C_DoesObjectMatch::MatchesGroup' has a wrong offset!");
static_assert(offsetof(BP_GroupInstance_Skill_Base_C_DoesObjectMatch, K2Node_DynamicCast_AsBP_Data_Asset_Skill) == 0x000010, "Member 'BP_GroupInstance_Skill_Base_C_DoesObjectMatch::K2Node_DynamicCast_AsBP_Data_Asset_Skill' has a wrong offset!");
static_assert(offsetof(BP_GroupInstance_Skill_Base_C_DoesObjectMatch, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GroupInstance_Skill_Base_C_DoesObjectMatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GroupInstance_Skill_Base_C_DoesObjectMatch, CallFunc_DoesSkillMatch_MatchesGroup) == 0x000019, "Member 'BP_GroupInstance_Skill_Base_C_DoesObjectMatch::CallFunc_DoesSkillMatch_MatchesGroup' has a wrong offset!");

// Function BP_GroupInstance_Skill_Base.BP_GroupInstance_Skill_Base_C.DoesSkillMatch
// 0x0010 (0x0010 - 0x0000)
struct BP_GroupInstance_Skill_Base_C_DoesSkillMatch final
{
public:
	class UBP_DataAsset_Skill_C*                  SkillData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          MatchesGroup;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroupInstance_Skill_Base_C_DoesSkillMatch) == 0x000008, "Wrong alignment on BP_GroupInstance_Skill_Base_C_DoesSkillMatch");
static_assert(sizeof(BP_GroupInstance_Skill_Base_C_DoesSkillMatch) == 0x000010, "Wrong size on BP_GroupInstance_Skill_Base_C_DoesSkillMatch");
static_assert(offsetof(BP_GroupInstance_Skill_Base_C_DoesSkillMatch, SkillData) == 0x000000, "Member 'BP_GroupInstance_Skill_Base_C_DoesSkillMatch::SkillData' has a wrong offset!");
static_assert(offsetof(BP_GroupInstance_Skill_Base_C_DoesSkillMatch, MatchesGroup) == 0x000008, "Member 'BP_GroupInstance_Skill_Base_C_DoesSkillMatch::MatchesGroup' has a wrong offset!");

}

