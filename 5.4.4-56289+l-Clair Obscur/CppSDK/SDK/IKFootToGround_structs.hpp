#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IKFootToGround

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// Enum IKFootToGround.EFootIKType
// NumValues: 0x0004
enum class EFootIKType : uint8
{
	NoIK                                     = 0,
	TwoBoneIK                                = 1,
	IKFoot2Ground                            = 2,
	EFootIKType_MAX                          = 3,
};

// Enum IKFootToGround.EFootSide
// NumValues: 0x0003
enum class EFootSide : uint8
{
	Right                                    = 0,
	Left                                     = 1,
	EFootSide_MAX                            = 2,
};

// Enum IKFootToGround.EAxisDirection
// NumValues: 0x0007
enum class EAxisDirection : uint8
{
	AD_XPositive                             = 0,
	AD_XNegative                             = 1,
	AD_YPositive                             = 2,
	AD_YNegative                             = 3,
	AD_ZPositive                             = 4,
	AD_ZNegative                             = 5,
	AD_Max                                   = 6,
};

// ScriptStruct IKFootToGround.AnimNode_AdjustFootToGround
// 0x0028 (0x00F0 - 0x00C8)
struct FAnimNode_AdjustFootToGround final : public FAnimNode_SkeletalControlBase
{
public:
	struct FBoneReference                         IKBone;                                            // 0x00C8(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          IgnoreGroundBelowFoot;                             // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroundLevelZ;                                      // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLimitKneeDirection;                               // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBackBendedKnees;                                  // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E2[0xE];                                       // 0x00E2(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimNode_AdjustFootToGround) == 0x000008, "Wrong alignment on FAnimNode_AdjustFootToGround");
static_assert(sizeof(FAnimNode_AdjustFootToGround) == 0x0000F0, "Wrong size on FAnimNode_AdjustFootToGround");
static_assert(offsetof(FAnimNode_AdjustFootToGround, IKBone) == 0x0000C8, "Member 'FAnimNode_AdjustFootToGround::IKBone' has a wrong offset!");
static_assert(offsetof(FAnimNode_AdjustFootToGround, IgnoreGroundBelowFoot) == 0x0000D8, "Member 'FAnimNode_AdjustFootToGround::IgnoreGroundBelowFoot' has a wrong offset!");
static_assert(offsetof(FAnimNode_AdjustFootToGround, GroundLevelZ) == 0x0000DC, "Member 'FAnimNode_AdjustFootToGround::GroundLevelZ' has a wrong offset!");
static_assert(offsetof(FAnimNode_AdjustFootToGround, bLimitKneeDirection) == 0x0000E0, "Member 'FAnimNode_AdjustFootToGround::bLimitKneeDirection' has a wrong offset!");
static_assert(offsetof(FAnimNode_AdjustFootToGround, bBackBendedKnees) == 0x0000E1, "Member 'FAnimNode_AdjustFootToGround::bBackBendedKnees' has a wrong offset!");

// ScriptStruct IKFootToGround.AnimNode_BlendLegs
// 0x0310 (0x0320 - 0x0010)
struct alignas(0x10) FAnimNode_BlendLegs final : public FAnimNode_Base
{
public:
	struct FPoseLink                              SourcePose;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FPoseLink                              DestinationPose;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         FootRight;                                         // 0x0030(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         FootLeft;                                          // 0x0040(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bRightLegFirst;                                    // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FootstepAnimNotify;                                // 0x0054(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseIK;                                            // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAxisDirection                                CharacterForwardAxis;                              // 0x005D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootMaxLift;                                       // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootStepPitch;                                     // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bApplyToRotation;                                  // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SourceAlpha;                                       // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0x2B0];                                     // 0x0070(0x02B0)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimNode_BlendLegs) == 0x000010, "Wrong alignment on FAnimNode_BlendLegs");
static_assert(sizeof(FAnimNode_BlendLegs) == 0x000320, "Wrong size on FAnimNode_BlendLegs");
static_assert(offsetof(FAnimNode_BlendLegs, SourcePose) == 0x000010, "Member 'FAnimNode_BlendLegs::SourcePose' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, DestinationPose) == 0x000020, "Member 'FAnimNode_BlendLegs::DestinationPose' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, FootRight) == 0x000030, "Member 'FAnimNode_BlendLegs::FootRight' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, FootLeft) == 0x000040, "Member 'FAnimNode_BlendLegs::FootLeft' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, bRightLegFirst) == 0x000050, "Member 'FAnimNode_BlendLegs::bRightLegFirst' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, FootstepAnimNotify) == 0x000054, "Member 'FAnimNode_BlendLegs::FootstepAnimNotify' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, bUseIK) == 0x00005C, "Member 'FAnimNode_BlendLegs::bUseIK' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, CharacterForwardAxis) == 0x00005D, "Member 'FAnimNode_BlendLegs::CharacterForwardAxis' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, FootMaxLift) == 0x000060, "Member 'FAnimNode_BlendLegs::FootMaxLift' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, FootStepPitch) == 0x000064, "Member 'FAnimNode_BlendLegs::FootStepPitch' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, bApplyToRotation) == 0x000068, "Member 'FAnimNode_BlendLegs::bApplyToRotation' has a wrong offset!");
static_assert(offsetof(FAnimNode_BlendLegs, SourceAlpha) == 0x00006C, "Member 'FAnimNode_BlendLegs::SourceAlpha' has a wrong offset!");

// ScriptStruct IKFootToGround.AnimNode_FeetToGround
// 0x0420 (0x0430 - 0x0010)
struct alignas(0x10) FAnimNode_FeetToGround final : public FAnimNode_Base
{
public:
	struct FPoseLink                              Pose;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         Pelvis;                                            // 0x0020(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         FootRight;                                         // 0x0030(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         FootLeft;                                          // 0x0040(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoneReference                         IkRootBone;                                        // 0x0050(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	EAxisDirection                                CharacterForwardAxis;                              // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootVerticalOffset;                                // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceDistance;                                     // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TraceRadius;                                       // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECollisionChannel                             CollisionChannel;                                  // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraceAsObjectType;                                // 0x0071(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0072(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceRightLegToGround;                            // 0x0073(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForceLeftLegToGround;                             // 0x0074(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PelvisInterpolationSpeed;                          // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootInterpolationSpeed;                            // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KneeForwardOffset;                                 // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         KneeUpOffset;                                      // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CharacterVelocityOverride;                         // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A0[0x390];                                     // 0x00A0(0x0390)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimNode_FeetToGround) == 0x000010, "Wrong alignment on FAnimNode_FeetToGround");
static_assert(sizeof(FAnimNode_FeetToGround) == 0x000430, "Wrong size on FAnimNode_FeetToGround");
static_assert(offsetof(FAnimNode_FeetToGround, Pose) == 0x000010, "Member 'FAnimNode_FeetToGround::Pose' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, Pelvis) == 0x000020, "Member 'FAnimNode_FeetToGround::Pelvis' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, FootRight) == 0x000030, "Member 'FAnimNode_FeetToGround::FootRight' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, FootLeft) == 0x000040, "Member 'FAnimNode_FeetToGround::FootLeft' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, IkRootBone) == 0x000050, "Member 'FAnimNode_FeetToGround::IkRootBone' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, CharacterForwardAxis) == 0x000060, "Member 'FAnimNode_FeetToGround::CharacterForwardAxis' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, FootVerticalOffset) == 0x000064, "Member 'FAnimNode_FeetToGround::FootVerticalOffset' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, TraceDistance) == 0x000068, "Member 'FAnimNode_FeetToGround::TraceDistance' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, TraceRadius) == 0x00006C, "Member 'FAnimNode_FeetToGround::TraceRadius' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, CollisionChannel) == 0x000070, "Member 'FAnimNode_FeetToGround::CollisionChannel' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, bTraceAsObjectType) == 0x000071, "Member 'FAnimNode_FeetToGround::bTraceAsObjectType' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, bEnabled) == 0x000072, "Member 'FAnimNode_FeetToGround::bEnabled' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, bForceRightLegToGround) == 0x000073, "Member 'FAnimNode_FeetToGround::bForceRightLegToGround' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, bForceLeftLegToGround) == 0x000074, "Member 'FAnimNode_FeetToGround::bForceLeftLegToGround' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, PelvisInterpolationSpeed) == 0x000078, "Member 'FAnimNode_FeetToGround::PelvisInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, FootInterpolationSpeed) == 0x00007C, "Member 'FAnimNode_FeetToGround::FootInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, KneeForwardOffset) == 0x000080, "Member 'FAnimNode_FeetToGround::KneeForwardOffset' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, KneeUpOffset) == 0x000084, "Member 'FAnimNode_FeetToGround::KneeUpOffset' has a wrong offset!");
static_assert(offsetof(FAnimNode_FeetToGround, CharacterVelocityOverride) == 0x000088, "Member 'FAnimNode_FeetToGround::CharacterVelocityOverride' has a wrong offset!");

// ScriptStruct IKFootToGround.FootCollider
// 0x0070 (0x0070 - 0x0000)
struct FFootCollider final
{
public:
	struct FTransform                             RelativeTransform;                                 // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HalfHeight;                                        // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFootCollider) == 0x000010, "Wrong alignment on FFootCollider");
static_assert(sizeof(FFootCollider) == 0x000070, "Wrong size on FFootCollider");
static_assert(offsetof(FFootCollider, RelativeTransform) == 0x000000, "Member 'FFootCollider::RelativeTransform' has a wrong offset!");
static_assert(offsetof(FFootCollider, HalfHeight) == 0x000060, "Member 'FFootCollider::HalfHeight' has a wrong offset!");
static_assert(offsetof(FFootCollider, Radius) == 0x000064, "Member 'FFootCollider::Radius' has a wrong offset!");

// ScriptStruct IKFootToGround.LegSetupInfo
// 0x0090 (0x0090 - 0x0000)
struct FLegSetupInfo final
{
public:
	class FName                                   ThighBoneName;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CalfBoneName;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FootBoneName;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootSide                                     Side;                                              // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFootCollider                          FootCollider;                                      // 0x0020(0x0070)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLegSetupInfo) == 0x000010, "Wrong alignment on FLegSetupInfo");
static_assert(sizeof(FLegSetupInfo) == 0x000090, "Wrong size on FLegSetupInfo");
static_assert(offsetof(FLegSetupInfo, ThighBoneName) == 0x000000, "Member 'FLegSetupInfo::ThighBoneName' has a wrong offset!");
static_assert(offsetof(FLegSetupInfo, CalfBoneName) == 0x000008, "Member 'FLegSetupInfo::CalfBoneName' has a wrong offset!");
static_assert(offsetof(FLegSetupInfo, FootBoneName) == 0x000010, "Member 'FLegSetupInfo::FootBoneName' has a wrong offset!");
static_assert(offsetof(FLegSetupInfo, Side) == 0x000018, "Member 'FLegSetupInfo::Side' has a wrong offset!");
static_assert(offsetof(FLegSetupInfo, FootCollider) == 0x000020, "Member 'FLegSetupInfo::FootCollider' has a wrong offset!");

// ScriptStruct IKFootToGround.LegInfo
// 0x00E0 (0x00E0 - 0x0000)
struct FLegInfo final
{
public:
	class FName                                   FootBoneName;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RootBoneName;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LengthSquared;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LengthUnscaled;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OffsetToGround;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x8];                                       // 0x001C(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AxisMultiplier;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootSide                                     Side;                                              // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFootCollider                          FootCollider;                                      // 0x0030(0x0070)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                CurrentFootLocation;                               // 0x00A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentFootZ;                                      // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentGroundZ;                                    // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TickTargetZ;                                       // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFootIKType                                   IKType;                                            // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootRotation;                                      // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x00CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponent;                                      // 0x00D0(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLegInfo) == 0x000010, "Wrong alignment on FLegInfo");
static_assert(sizeof(FLegInfo) == 0x0000E0, "Wrong size on FLegInfo");
static_assert(offsetof(FLegInfo, FootBoneName) == 0x000000, "Member 'FLegInfo::FootBoneName' has a wrong offset!");
static_assert(offsetof(FLegInfo, RootBoneName) == 0x000008, "Member 'FLegInfo::RootBoneName' has a wrong offset!");
static_assert(offsetof(FLegInfo, LengthSquared) == 0x000010, "Member 'FLegInfo::LengthSquared' has a wrong offset!");
static_assert(offsetof(FLegInfo, LengthUnscaled) == 0x000014, "Member 'FLegInfo::LengthUnscaled' has a wrong offset!");
static_assert(offsetof(FLegInfo, OffsetToGround) == 0x000018, "Member 'FLegInfo::OffsetToGround' has a wrong offset!");
static_assert(offsetof(FLegInfo, AxisMultiplier) == 0x000024, "Member 'FLegInfo::AxisMultiplier' has a wrong offset!");
static_assert(offsetof(FLegInfo, Side) == 0x000028, "Member 'FLegInfo::Side' has a wrong offset!");
static_assert(offsetof(FLegInfo, FootCollider) == 0x000030, "Member 'FLegInfo::FootCollider' has a wrong offset!");
static_assert(offsetof(FLegInfo, CurrentFootLocation) == 0x0000A0, "Member 'FLegInfo::CurrentFootLocation' has a wrong offset!");
static_assert(offsetof(FLegInfo, CurrentFootZ) == 0x0000B8, "Member 'FLegInfo::CurrentFootZ' has a wrong offset!");
static_assert(offsetof(FLegInfo, CurrentGroundZ) == 0x0000BC, "Member 'FLegInfo::CurrentGroundZ' has a wrong offset!");
static_assert(offsetof(FLegInfo, TickTargetZ) == 0x0000C0, "Member 'FLegInfo::TickTargetZ' has a wrong offset!");
static_assert(offsetof(FLegInfo, IKType) == 0x0000C4, "Member 'FLegInfo::IKType' has a wrong offset!");
static_assert(offsetof(FLegInfo, FootRotation) == 0x0000C8, "Member 'FLegInfo::FootRotation' has a wrong offset!");
static_assert(offsetof(FLegInfo, bEnabled) == 0x0000CC, "Member 'FLegInfo::bEnabled' has a wrong offset!");
static_assert(offsetof(FLegInfo, HitComponent) == 0x0000D0, "Member 'FLegInfo::HitComponent' has a wrong offset!");

// ScriptStruct IKFootToGround.LegInfoArray
// 0x00F0 (0x00F0 - 0x0000)
struct FLegInfoArray final
{
public:
	class FName                                   LegName;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLegInfo                               Data;                                              // 0x0010(0x00E0)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLegInfoArray) == 0x000010, "Wrong alignment on FLegInfoArray");
static_assert(sizeof(FLegInfoArray) == 0x0000F0, "Wrong size on FLegInfoArray");
static_assert(offsetof(FLegInfoArray, LegName) == 0x000000, "Member 'FLegInfoArray::LegName' has a wrong offset!");
static_assert(offsetof(FLegInfoArray, Data) == 0x000010, "Member 'FLegInfoArray::Data' has a wrong offset!");

// ScriptStruct IKFootToGround.BoneOrientationTransform
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x04) FBoneOrientationTransform final
{
public:
	uint8                                         Pad_0[0x18];                                       // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBoneOrientationTransform) == 0x000004, "Wrong alignment on FBoneOrientationTransform");
static_assert(sizeof(FBoneOrientationTransform) == 0x000018, "Wrong size on FBoneOrientationTransform");

// ScriptStruct IKFootToGround.LegIKSetup
// 0x0140 (0x0140 - 0x0000)
struct FLegIKSetup final
{
public:
	struct FTransform                             LegOrientationConverter;                           // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             JointTargetOffset;                                 // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C0[0x4];                                       // 0x00C0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoneOrientationTransform              FootOrientation;                                   // 0x00C4(0x0018)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootOrientationFix;                                // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLegIKSetup) == 0x000010, "Wrong alignment on FLegIKSetup");
static_assert(sizeof(FLegIKSetup) == 0x000140, "Wrong size on FLegIKSetup");
static_assert(offsetof(FLegIKSetup, LegOrientationConverter) == 0x000000, "Member 'FLegIKSetup::LegOrientationConverter' has a wrong offset!");
static_assert(offsetof(FLegIKSetup, JointTargetOffset) == 0x000060, "Member 'FLegIKSetup::JointTargetOffset' has a wrong offset!");
static_assert(offsetof(FLegIKSetup, FootOrientation) == 0x0000C4, "Member 'FLegIKSetup::FootOrientation' has a wrong offset!");
static_assert(offsetof(FLegIKSetup, FootOrientationFix) == 0x0000E0, "Member 'FLegIKSetup::FootOrientationFix' has a wrong offset!");

// ScriptStruct IKFootToGround.FootTraceData
// 0x0060 (0x0060 - 0x0000)
struct FFootTraceData final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurrentVerticalOffset;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraced;                                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FootOffsetFrom;                                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FootOffsetTo;                                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RotationCS;                                        // 0x0020(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                TracedRotation;                                    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFootTraceData) == 0x000010, "Wrong alignment on FFootTraceData");
static_assert(sizeof(FFootTraceData) == 0x000060, "Wrong size on FFootTraceData");
static_assert(offsetof(FFootTraceData, Alpha) == 0x000000, "Member 'FFootTraceData::Alpha' has a wrong offset!");
static_assert(offsetof(FFootTraceData, CurrentVerticalOffset) == 0x000004, "Member 'FFootTraceData::CurrentVerticalOffset' has a wrong offset!");
static_assert(offsetof(FFootTraceData, bTraced) == 0x000008, "Member 'FFootTraceData::bTraced' has a wrong offset!");
static_assert(offsetof(FFootTraceData, FootOffsetFrom) == 0x00000C, "Member 'FFootTraceData::FootOffsetFrom' has a wrong offset!");
static_assert(offsetof(FFootTraceData, FootOffsetTo) == 0x000010, "Member 'FFootTraceData::FootOffsetTo' has a wrong offset!");
static_assert(offsetof(FFootTraceData, RotationCS) == 0x000020, "Member 'FFootTraceData::RotationCS' has a wrong offset!");
static_assert(offsetof(FFootTraceData, TracedRotation) == 0x000040, "Member 'FFootTraceData::TracedRotation' has a wrong offset!");

// ScriptStruct IKFootToGround.LowerBodyIKResult
// 0x0250 (0x0250 - 0x0000)
struct FLowerBodyIKResult final
{
public:
	struct FVector                                PelvisLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PelvisRelativeLocation;                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               PelvisRelativeRotation;                            // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FootRightTransform;                                // 0x0050(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             FootLeftTransform;                                 // 0x00B0(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             FootRightTransform_CS;                             // 0x0110(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             FootLeftTransform_CS;                              // 0x0170(0x0060)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                UpperBodyOffset;                                   // 0x01D0(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                KneeRightJointTarget;                              // 0x01E8(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                KneeLeftJointTarget;                               // 0x0200(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                KneeRightJointTarget_CS;                           // 0x0218(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                KneeLeftJointTarget_CS;                            // 0x0230(0x0018)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_248[0x8];                                      // 0x0248(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLowerBodyIKResult) == 0x000010, "Wrong alignment on FLowerBodyIKResult");
static_assert(sizeof(FLowerBodyIKResult) == 0x000250, "Wrong size on FLowerBodyIKResult");
static_assert(offsetof(FLowerBodyIKResult, PelvisLocation) == 0x000000, "Member 'FLowerBodyIKResult::PelvisLocation' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, PelvisRelativeLocation) == 0x000018, "Member 'FLowerBodyIKResult::PelvisRelativeLocation' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, PelvisRelativeRotation) == 0x000030, "Member 'FLowerBodyIKResult::PelvisRelativeRotation' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, FootRightTransform) == 0x000050, "Member 'FLowerBodyIKResult::FootRightTransform' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, FootLeftTransform) == 0x0000B0, "Member 'FLowerBodyIKResult::FootLeftTransform' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, FootRightTransform_CS) == 0x000110, "Member 'FLowerBodyIKResult::FootRightTransform_CS' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, FootLeftTransform_CS) == 0x000170, "Member 'FLowerBodyIKResult::FootLeftTransform_CS' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, UpperBodyOffset) == 0x0001D0, "Member 'FLowerBodyIKResult::UpperBodyOffset' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, KneeRightJointTarget) == 0x0001E8, "Member 'FLowerBodyIKResult::KneeRightJointTarget' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, KneeLeftJointTarget) == 0x000200, "Member 'FLowerBodyIKResult::KneeLeftJointTarget' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, KneeRightJointTarget_CS) == 0x000218, "Member 'FLowerBodyIKResult::KneeRightJointTarget_CS' has a wrong offset!");
static_assert(offsetof(FLowerBodyIKResult, KneeLeftJointTarget_CS) == 0x000230, "Member 'FLowerBodyIKResult::KneeLeftJointTarget_CS' has a wrong offset!");

}

