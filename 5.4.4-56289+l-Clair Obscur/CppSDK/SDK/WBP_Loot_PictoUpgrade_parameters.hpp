#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Loot_PictoUpgrade

#include "Basic.hpp"

#include "S_MerchantItemQueueData_structs.hpp"
#include "S_LootContext_structs.hpp"


namespace SDK::Params
{

// Function WBP_Loot_PictoUpgrade.WBP_Loot_PictoUpgrade_C.SetBoughtItemData
// 0x0140 (0x0140 - 0x0000)
struct WBP_Loot_PictoUpgrade_C_SetBoughtItemData final
{
public:
	struct FS_MerchantItemQueueData               BoughtItem;                                        // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0138(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Loot_PictoUpgrade_C_SetBoughtItemData) == 0x000008, "Wrong alignment on WBP_Loot_PictoUpgrade_C_SetBoughtItemData");
static_assert(sizeof(WBP_Loot_PictoUpgrade_C_SetBoughtItemData) == 0x000140, "Wrong size on WBP_Loot_PictoUpgrade_C_SetBoughtItemData");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetBoughtItemData, BoughtItem) == 0x000000, "Member 'WBP_Loot_PictoUpgrade_C_SetBoughtItemData::BoughtItem' has a wrong offset!");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetBoughtItemData, Quantity) == 0x000138, "Member 'WBP_Loot_PictoUpgrade_C_SetBoughtItemData::Quantity' has a wrong offset!");

// Function WBP_Loot_PictoUpgrade.WBP_Loot_PictoUpgrade_C.SetItemData
// 0x0038 (0x0038 - 0x0000)
struct WBP_Loot_PictoUpgrade_C_SetItemData final
{
public:
	class UBP_GeneratedItemInfo_Base_C*           GeneratedItemInfo;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         LootContext;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GeneratedItemInfo_UpgradableItem_C* K2Node_DynamicCast_AsBP_Generated_Item_Info_Upgradable_Item; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_CurrentLevel;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPreviousLevel_CurrentLevel;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemDisplayText_ReturnValue;           // 0x0028(0x0010)()
};
static_assert(alignof(WBP_Loot_PictoUpgrade_C_SetItemData) == 0x000008, "Wrong alignment on WBP_Loot_PictoUpgrade_C_SetItemData");
static_assert(sizeof(WBP_Loot_PictoUpgrade_C_SetItemData) == 0x000038, "Wrong size on WBP_Loot_PictoUpgrade_C_SetItemData");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetItemData, GeneratedItemInfo) == 0x000000, "Member 'WBP_Loot_PictoUpgrade_C_SetItemData::GeneratedItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetItemData, LootContext) == 0x000008, "Member 'WBP_Loot_PictoUpgrade_C_SetItemData::LootContext' has a wrong offset!");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetItemData, K2Node_DynamicCast_AsBP_Generated_Item_Info_Upgradable_Item) == 0x000010, "Member 'WBP_Loot_PictoUpgrade_C_SetItemData::K2Node_DynamicCast_AsBP_Generated_Item_Info_Upgradable_Item' has a wrong offset!");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetItemData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Loot_PictoUpgrade_C_SetItemData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetItemData, CallFunc_GetCurrentLevel_CurrentLevel) == 0x00001C, "Member 'WBP_Loot_PictoUpgrade_C_SetItemData::CallFunc_GetCurrentLevel_CurrentLevel' has a wrong offset!");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetItemData, CallFunc_GetPreviousLevel_CurrentLevel) == 0x000020, "Member 'WBP_Loot_PictoUpgrade_C_SetItemData::CallFunc_GetPreviousLevel_CurrentLevel' has a wrong offset!");
static_assert(offsetof(WBP_Loot_PictoUpgrade_C_SetItemData, CallFunc_GetItemDisplayText_ReturnValue) == 0x000028, "Member 'WBP_Loot_PictoUpgrade_C_SetItemData::CallFunc_GetItemDisplayText_ReturnValue' has a wrong offset!");

}

