#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_TargetingManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_BlockedActionFeedback_structs.hpp"
#include "E_jRPG_TargetingType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.AddSingleCharacterTargetingGroup
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_TargetingGroup_C*>           TargetGroups_0;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_TargetingGroup_C*                   TargetingGroup;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0020(0x0010)(ReferenceParm)
	class UBP_TargetingGroup_C*                   CallFunc_AddTargetingGroup_TargetingGroup;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup");
static_assert(sizeof(AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup) == 0x000038, "Wrong size on AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup, Character) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup, TargetGroups_0) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup::TargetGroups_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup, TargetingGroup) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup::TargetingGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup, K2Node_MakeArray_Array) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup, CallFunc_AddTargetingGroup_TargetingGroup) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup::CallFunc_AddTargetingGroup_TargetingGroup' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.AddTargetingGroup
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_TargetingManager_C_AddTargetingGroup final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Characters;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UBP_TargetingGroup_C*>           TargetGroups_0;                                    // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_TargetingGroup_C*                   TargetingGroup;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_TargetingGroup_C*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_AddTargetingGroup) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_AddTargetingGroup");
static_assert(sizeof(AC_jRPG_TargetingManager_C_AddTargetingGroup) == 0x000040, "Wrong size on AC_jRPG_TargetingManager_C_AddTargetingGroup");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddTargetingGroup, Characters) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_AddTargetingGroup::Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddTargetingGroup, TargetGroups_0) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_AddTargetingGroup::TargetGroups_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddTargetingGroup, TargetingGroup) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_AddTargetingGroup::TargetingGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddTargetingGroup, CallFunc_GetBattleManager_ReturnValue) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_AddTargetingGroup::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddTargetingGroup, CallFunc_SpawnObject_ReturnValue) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_AddTargetingGroup::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_AddTargetingGroup, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_AddTargetingGroup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.CancelTargeting
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_TargetingManager_C_CancelTargeting final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_CancelTargeting) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_CancelTargeting");
static_assert(sizeof(AC_jRPG_TargetingManager_C_CancelTargeting) == 0x000028, "Wrong size on AC_jRPG_TargetingManager_C_CancelTargeting");
static_assert(offsetof(AC_jRPG_TargetingManager_C_CancelTargeting, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_CancelTargeting::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_CancelTargeting, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_CancelTargeting::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_CancelTargeting, CallFunc_Array_Get_Item) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_CancelTargeting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_CancelTargeting, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_CancelTargeting::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_CancelTargeting, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_CancelTargeting::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ComputeTargetGroups
// 0x03C0 (0x03C0 - 0x0000)
struct AC_jRPG_TargetingManager_C_ComputeTargetGroups final
{
public:
	E_jRPG_TargetingType                          TargetingType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BypassChecks;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlly;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_TargetingGroup_C*>           TargetGroups_0;                                    // 0x0008(0x0010)(Parm, OutParm)
	class ABP_jRPG_Character_Battle_Base_C*       PreferedNextInitialTarget_0;                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       local_PreferedNextInitialTarget;                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_TargetingGroup_C*>           local_TargetGroups;                                // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_TargetingGroup_C*>           local_TargetGroupsBeforeSort;                      // 0x0038(0x0010)(Edit, BlueprintVisible)
	TMap<int32, int32>                            local_EnemyIndexToBattleSpotOrder;                 // 0x0048(0x0050)(Edit, BlueprintVisible)
	bool                                          local_MustBeSelf;                                  // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllMatchingTargets;                        // 0x00A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          local_AllInSingleGroup;                            // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeEnemy;                                 // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeAlly;                                  // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeDead;                                  // 0x00B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeAlive;                                 // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntVector>                     local_GroupBounds;                                 // 0x00B8(0x0010)(Edit, BlueprintVisible)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_Result;                                    // 0x00C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetingTypeAlly_ReturnValue;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_TargetingType                          Temp_byte_Variable;                                // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_TargetingType                          Temp_byte_Variable_1;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_28;                             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_29;                             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_30;                             // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_31;                             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_32;                             // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_TargetingType                          Temp_byte_Variable_2;                              // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_33;                             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_NextIndex_Variable;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Temp_wildcard_Original_index_Variable;             // 0x0118(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_34;                             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            Temp_wildcard_RemapTable_Variable;                 // 0x0130(0x0050)(ConstParm)
	bool                                          Temp_bool_Variable_35;                             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_36;                             // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_37;                             // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_183[0x1];                                      // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Temp_real_Variable;                                // 0x0190(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_38;                             // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x01B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_39;                             // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_TargetingGroup_C*>           Temp_wildcard_Result_array_Variable;               // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_TargetingType                          Temp_byte_Variable_3;                              // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters;         // 0x0218(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam;   // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_AddSingleCharacterTargetingGroup_TargetingGroup; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_TargetingGroup_C*                   CallFunc_Array_Get_Item_2;                         // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0248(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0260(0x0048)(HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetCharacters_Characters;               // 0x02A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ConcatenateDisplayNames_Result;           // 0x02C0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02D0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0318(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0328(0x0010)()
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value_1;                     // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_40;                             // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_41;                             // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_TargetingGroup_C*>           CallFunc_Array_Remap_ResultArray;                  // 0x0340(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetCharacters_Characters_1;             // 0x0350(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_3;                         // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleSpotIndexLeftToRight__WhenFacingCharacters__ReturnValue; // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_42;                             // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_43;                             // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_44;                             // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_45;                             // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395[0x3];                                      // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_AddTargetingGroup_TargetingGroup;         // 0x0398(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_46;                             // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_47;                             // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_48;                             // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_49;                             // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_4;                           // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_5;                           // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_6;                           // 0x03AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE[0x2];                                      // 0x03AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x03B0(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_ComputeTargetGroups) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_ComputeTargetGroups");
static_assert(sizeof(AC_jRPG_TargetingManager_C_ComputeTargetGroups) == 0x0003C0, "Wrong size on AC_jRPG_TargetingManager_C_ComputeTargetGroups");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, TargetingType) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::TargetingType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, BypassChecks) == 0x000001, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::BypassChecks' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, IsAlly) == 0x000002, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::IsAlly' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, TargetGroups_0) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::TargetGroups_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, PreferedNextInitialTarget_0) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::PreferedNextInitialTarget_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_PreferedNextInitialTarget) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_PreferedNextInitialTarget' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_TargetGroups) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_TargetGroups' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_TargetGroupsBeforeSort) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_TargetGroupsBeforeSort' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_EnemyIndexToBattleSpotOrder) == 0x000048, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_EnemyIndexToBattleSpotOrder' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_MustBeSelf) == 0x000098, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_MustBeSelf' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_AllMatchingTargets) == 0x0000A0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_AllMatchingTargets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_AllInSingleGroup) == 0x0000B0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_AllInSingleGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_MustBeEnemy) == 0x0000B1, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_MustBeEnemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_MustBeAlly) == 0x0000B2, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_MustBeAlly' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_MustBeDead) == 0x0000B3, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_MustBeDead' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_MustBeAlive) == 0x0000B4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_MustBeAlive' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_GroupBounds) == 0x0000B8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_GroupBounds' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, local_Result) == 0x0000C8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::local_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable) == 0x0000D8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D9, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_IsTargetingTypeAlly_ReturnValue) == 0x0000DA, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_IsTargetingTypeAlly_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_1) == 0x0000DB, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_2) == 0x0000DC, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_3) == 0x0000DD, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_4) == 0x0000DE, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_5) == 0x0000DF, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_6) == 0x0000E0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_7) == 0x0000E1, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_8) == 0x0000E2, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_9) == 0x0000E3, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_10) == 0x0000E4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_byte_Variable) == 0x0000E5, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_11) == 0x0000E6, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_12) == 0x0000E7, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_13) == 0x0000E8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_14) == 0x0000E9, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_15) == 0x0000EA, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_16) == 0x0000EB, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_17) == 0x0000EC, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_18) == 0x0000ED, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_19) == 0x0000EE, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_20) == 0x0000EF, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_21) == 0x0000F0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_byte_Variable_1) == 0x0000F1, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_Select_Default) == 0x0000F2, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_22) == 0x0000F3, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_23) == 0x0000F4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_24) == 0x0000F5, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_25) == 0x0000F6, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_26) == 0x0000F7, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_27) == 0x0000F8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_28) == 0x0000F9, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_29) == 0x0000FA, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_30) == 0x0000FB, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_31) == 0x0000FC, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_32) == 0x0000FD, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_32' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_byte_Variable_2) == 0x0000FE, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_Select_Default_1) == 0x0000FF, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_Select_Default_2) == 0x000100, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_33) == 0x000101, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_33' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_int_Variable) == 0x000104, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_int_NextIndex_Variable) == 0x000108, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_int_NextIndex_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Add_IntInt_ReturnValue) == 0x00010C, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_wildcard_Original_index_Variable) == 0x000118, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_wildcard_Original_index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_34) == 0x00012C, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_34' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_wildcard_RemapTable_Variable) == 0x000130, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_wildcard_RemapTable_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_35) == 0x000180, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_35' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_36) == 0x000181, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_36' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_37) == 0x000182, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_37' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_int_Loop_Counter_Variable) == 0x000184, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Add_IntInt_ReturnValue_2) == 0x000188, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_int_Array_Index_Variable) == 0x00018C, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_real_Variable) == 0x000190, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Length_ReturnValue) == 0x0001A0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x0001A4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_MinOfFloatArray_MinValue) == 0x0001A8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Greater_IntInt_ReturnValue) == 0x0001AC, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_38) == 0x0001B4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_38' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_wildcard_Variable) == 0x0001B8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Length_ReturnValue_1) == 0x0001C8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_39) == 0x0001CC, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_39' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_wildcard_Result_array_Variable) == 0x0001D0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_wildcard_Result_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0001E0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_int_Loop_Counter_Variable_1) == 0x0001E4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001EC, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_int_Array_Index_Variable_1) == 0x0001F0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_byte_Variable_3) == 0x0001F4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Get_Item_1) == 0x0001F8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000200, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_GetBattleManager_ReturnValue) == 0x000208, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_GetBattleManager_ReturnValue_1) == 0x000210, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_GetAllCharacters_AllCharacters) == 0x000218, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_GetAllCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000228, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam) == 0x000229, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Not_PreBool_ReturnValue) == 0x00022A, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_AddSingleCharacterTargetingGroup_TargetingGroup) == 0x000230, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_AddSingleCharacterTargetingGroup_TargetingGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Get_Item_2) == 0x000238, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Length_ReturnValue_2) == 0x000240, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000248, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Less_IntInt_ReturnValue_1) == 0x000258, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_MakeStruct_FormatArgumentData) == 0x000260, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_GetCharacters_Characters) == 0x0002A8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_GetCharacters_Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_IsValid_ReturnValue) == 0x0002B8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_ConcatenateDisplayNames_Result) == 0x0002C0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_ConcatenateDisplayNames_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002D0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_MakeArray_Array) == 0x000318, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Format_ReturnValue) == 0x000328, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_CheckIsAlive_Value) == 0x000338, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Not_PreBool_ReturnValue_1) == 0x000339, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_CheckIsAlive_Value_1) == 0x00033A, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_CheckIsAlive_Value_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_40) == 0x00033B, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_40' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_41) == 0x00033C, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_41' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Remap_ResultArray) == 0x000340, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Remap_ResultArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_GetCharacters_Characters_1) == 0x000350, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_GetCharacters_Characters_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Add_ReturnValue_1) == 0x000360, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Get_Item_3) == 0x000368, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_LastIndex_ReturnValue) == 0x000370, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_GetBattleSpotIndexLeftToRight__WhenFacingCharacters__ReturnValue) == 0x000374, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_GetBattleSpotIndexLeftToRight__WhenFacingCharacters__ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000378, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000380, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Add_ReturnValue_2) == 0x000388, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Length_ReturnValue_3) == 0x00038C, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_42) == 0x000390, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_42' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_43) == 0x000391, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_43' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_44) == 0x000392, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_44' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_Select_Default_3) == 0x000393, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_45) == 0x000394, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_45' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_AddTargetingGroup_TargetingGroup) == 0x000398, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_AddTargetingGroup_TargetingGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_46) == 0x0003A0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_46' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_Array_Add_ReturnValue_3) == 0x0003A4, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_47) == 0x0003A8, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_47' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_48) == 0x0003A9, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_48' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, Temp_bool_Variable_49) == 0x0003AA, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::Temp_bool_Variable_49' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_Select_Default_4) == 0x0003AB, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_Select_Default_5) == 0x0003AC, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, K2Node_Select_Default_6) == 0x0003AD, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ComputeTargetGroups, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x0003B0, "Member 'AC_jRPG_TargetingManager_C_ComputeTargetGroups::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ConfirmTarget
// 0x0150 (0x0150 - 0x0000)
struct AC_jRPG_TargetingManager_C_ConfirmTarget final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0028(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateTargetCandidates_Validated;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BlockedActionFeedback               CallFunc_ValidateTargetCandidates_BlockedReason;   // 0x0040(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_Temp_buffer_array_Variable;         // 0x0070(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0138(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_ConfirmTarget) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_ConfirmTarget");
static_assert(sizeof(AC_jRPG_TargetingManager_C_ConfirmTarget) == 0x000150, "Wrong size on AC_jRPG_TargetingManager_C_ConfirmTarget");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_bool_Variable) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_text_Variable) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_ValidateTargetCandidates_Validated) == 0x00003C, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_ValidateTargetCandidates_Validated' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_ValidateTargetCandidates_BlockedReason) == 0x000040, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_ValidateTargetCandidates_BlockedReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_GetBattleManager_ReturnValue) == 0x000068, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, Temp_wildcard_Temp_buffer_array_Variable) == 0x000070, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Array_Get_Item) == 0x000080, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B0, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, K2Node_MakeArray_Array) == 0x000100, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Format_ReturnValue) == 0x000118, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x000128, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Array_Length_ReturnValue_2) == 0x00012C, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Greater_IntInt_ReturnValue) == 0x000130, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Array_Length_ReturnValue_3) == 0x000134, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, K2Node_Select_Default) == 0x000138, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ConfirmTarget, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000148, "Member 'AC_jRPG_TargetingManager_C_ConfirmTarget::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.DEPRECATED_GetTargetsWithGamepad
// 0x00F0 (0x00F0 - 0x0000)
struct AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad final
{
public:
	E_jRPG_TargetingType                          TargetingType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedTargetIndex;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectDescendingForSingleAllyType_;                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Targets;                                         // 0x0010(0x0010)(Parm, OutParm)
	int32                                         SelectedTargetIndexOutput;                         // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DescendSelectingLOCAL;                             // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedCharactersLOCAL;                         // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         TargetIndexLOCAL;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_2;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_3;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_4;        // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad");
static_assert(sizeof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad) == 0x0000F0, "Wrong size on AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, TargetingType) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::TargetingType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, SelectedTargetIndex) == 0x000004, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::SelectedTargetIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, SelectDescendingForSingleAllyType_) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::SelectDescendingForSingleAllyType_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, Targets) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::Targets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, SelectedTargetIndexOutput) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::SelectedTargetIndexOutput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, DescendSelectingLOCAL) == 0x000024, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::DescendSelectingLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, TargetedCharactersLOCAL) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::TargetedCharactersLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, TargetIndexLOCAL) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::TargetIndexLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, Temp_int_Array_Index_Variable) == 0x000050, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetOwner_ReturnValue_1) == 0x000060, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Get_Item) == 0x000070, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00007C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, Temp_bool_Variable) == 0x000085, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_SelectInt_ReturnValue) == 0x000088, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Not_PreBool_ReturnValue) == 0x00008C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetOwner_ReturnValue_2) == 0x000098, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0000A0, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetOwner_ReturnValue_3) == 0x0000A8, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetComponentByClass_ReturnValue_3) == 0x0000B0, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Add_ReturnValue_1) == 0x0000C8, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_IsValid_ReturnValue) == 0x0000CC, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Add_ReturnValue_2) == 0x0000D0, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0000D4, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D5, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetOwner_ReturnValue_4) == 0x0000D8, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_GetComponentByClass_ReturnValue_4) == 0x0000E0, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad, CallFunc_Array_Add_ReturnValue_3) == 0x0000E8, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.DEPRECATED_ShowTargets
// 0x0088 (0x0088 - 0x0000)
struct AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       IndicatedCharacter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       IndicatedCharacterLOCAL;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UBP_TargetingGroup_C*                   CallFunc_GetTargetingGroupForCharacter_Array_Element; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value_1;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsAlive_Value_2;                     // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets");
static_assert(sizeof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets) == 0x000088, "Wrong size on AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, IndicatedCharacter) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::IndicatedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, IndicatedCharacterLOCAL) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::IndicatedCharacterLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_GetTargetingGroupForCharacter_Array_Element) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_GetTargetingGroupForCharacter_Array_Element' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Not_PreBool_ReturnValue) == 0x00001C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_CheckIsAlive_Value) == 0x00001D, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001E, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Not_PreBool_ReturnValue_2) == 0x00001F, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_CheckIsAlive_Value_1) == 0x000034, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_CheckIsAlive_Value_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, Temp_int_Array_Index_Variable) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_CheckIsAlive_Value_2) == 0x00003C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_CheckIsAlive_Value_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Get_Item) == 0x000040, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00004C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Add_ReturnValue_2) == 0x000060, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000064, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Add_ReturnValue_3) == 0x000074, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Not_PreBool_ReturnValue_3) == 0x000079, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Add_ReturnValue_4) == 0x00007C, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, CallFunc_Array_Add_ReturnValue_5) == 0x000080, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets, K2Node_SwitchEnum_CmpSuccess) == 0x000084, "Member 'AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.DisableTargeting
// 0x00B0 (0x00B0 - 0x0000)
struct AC_jRPG_TargetingManager_C_DisableTargeting final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_DisableTargeting) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_DisableTargeting");
static_assert(sizeof(AC_jRPG_TargetingManager_C_DisableTargeting) == 0x0000B0, "Wrong size on AC_jRPG_TargetingManager_C_DisableTargeting");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, Temp_bool_Variable) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, Temp_text_Variable) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, Temp_text_Variable_1) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, K2Node_Select_Default) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, K2Node_MakeArray_Array) == 0x000080, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, CallFunc_Format_ReturnValue) == 0x000090, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_DisableTargeting, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_TargetingManager_C_DisableTargeting::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.EnableTargeting
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_TargetingManager_C_EnableTargeting final
{
public:
	E_jRPG_TargetingType                          TargetingType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_migrateFromPreTargeting;                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_EnableTargeting) == 0x000001, "Wrong alignment on AC_jRPG_TargetingManager_C_EnableTargeting");
static_assert(sizeof(AC_jRPG_TargetingManager_C_EnableTargeting) == 0x000002, "Wrong size on AC_jRPG_TargetingManager_C_EnableTargeting");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargeting, TargetingType) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_EnableTargeting::TargetingType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargeting, local_migrateFromPreTargeting) == 0x000001, "Member 'AC_jRPG_TargetingManager_C_EnableTargeting::local_migrateFromPreTargeting' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.EnableTargetingInternal
// 0x01A0 (0x01A0 - 0x0000)
struct AC_jRPG_TargetingManager_C_EnableTargetingInternal final
{
public:
	E_jRPG_TargetingType                          TargetingType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartPreTargeting;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_teamChanged;                                 // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_useFirstTarget;                              // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       local_preferedInitial;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          local_migrateFromPreviousTargetingMode;            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0048(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x0130(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0167(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateTargetGroups_IsAlly;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x2];                                      // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_EnableTargetingInternal) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_EnableTargetingInternal");
static_assert(sizeof(AC_jRPG_TargetingManager_C_EnableTargetingInternal) == 0x0001A0, "Wrong size on AC_jRPG_TargetingManager_C_EnableTargetingInternal");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, TargetingType) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::TargetingType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, StartPreTargeting) == 0x000001, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::StartPreTargeting' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, local_teamChanged) == 0x000002, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::local_teamChanged' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, local_useFirstTarget) == 0x000003, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::local_useFirstTarget' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, local_preferedInitial) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::local_preferedInitial' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, local_migrateFromPreviousTargetingMode) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::local_migrateFromPreviousTargetingMode' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_SelectString_ReturnValue) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000048, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, K2Node_MakeArray_Array) == 0x0000E8, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Format_ReturnValue) == 0x000100, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, Temp_bool_Variable) == 0x000114, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Not_PreBool_ReturnValue) == 0x000115, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, Temp_int_Array_Index_Variable_1) == 0x00011C, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetBattleManager_ReturnValue) == 0x000120, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetBattleManager_ReturnValue_1) == 0x000128, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x000130, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Array_Get_Item) == 0x000140, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Not_PreBool_ReturnValue_1) == 0x00014D, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Not_PreBool_ReturnValue_2) == 0x00014E, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_BooleanAND_ReturnValue) == 0x00014F, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_BooleanOR_ReturnValue) == 0x000150, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_BooleanAND_ReturnValue_1) == 0x000151, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000152, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_BooleanAND_ReturnValue_2) == 0x000153, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Array_Length_ReturnValue_1) == 0x000160, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Not_PreBool_ReturnValue_3) == 0x000164, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000165, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Not_PreBool_ReturnValue_4) == 0x000166, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_BooleanOR_ReturnValue_1) == 0x000167, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_UpdateTargetGroups_IsAlly) == 0x000168, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_UpdateTargetGroups_IsAlly' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x000169, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, Temp_int_Loop_Counter_Variable_1) == 0x00016C, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Less_IntInt_ReturnValue_1) == 0x000170, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000174, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetOwner_ReturnValue) == 0x000178, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetOwner_ReturnValue_1) == 0x000180, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetComponentByClass_ReturnValue) == 0x000188, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000190, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_EnableTargetingInternal, K2Node_SwitchEnum_CmpSuccess) == 0x000198, "Member 'AC_jRPG_TargetingManager_C_EnableTargetingInternal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ExecuteUbergraph_AC_jRPG_TargetingManager
// 0x0258 (0x0258 - 0x0000)
struct AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0030(0x0010)()
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ConcatenateDisplayNames_Result;           // 0x0048(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0108(0x0010)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0118(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_Identical_ReturnValue;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0178(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0188(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0198(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0240(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager");
static_assert(sizeof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager) == 0x000258, "Wrong size on AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, EntryPoint) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue) == 0x000004, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, Temp_bool_Variable) == 0x000005, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, Temp_text_Variable) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, Temp_text_Variable_1) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, Temp_bool_Variable_1) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, Temp_text_Variable_2) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_ConcatenateDisplayNames_Result) == 0x000048, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_ConcatenateDisplayNames_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000058, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_Select_Default) == 0x000108, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_Select_Default_1) == 0x000118, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Array_Identical_ReturnValue) == 0x000170, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Array_Identical_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Not_PreBool_ReturnValue) == 0x000171, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000178, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000188, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_MakeStruct_FormatArgumentData_3) == 0x000198, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001E0, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, K2Node_MakeArray_Array) == 0x000228, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Array_Get_Item) == 0x000238, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Format_ReturnValue) == 0x000240, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Array_Length_ReturnValue) == 0x000250, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager, CallFunc_Greater_IntInt_ReturnValue) == 0x000254, "Member 'AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.GetBattleManager
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_TargetingManager_C_GetBattleManager final
{
public:
	class UAC_jRPG_BattleManager_C*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_GetBattleManager) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_GetBattleManager");
static_assert(sizeof(AC_jRPG_TargetingManager_C_GetBattleManager) == 0x000018, "Wrong size on AC_jRPG_TargetingManager_C_GetBattleManager");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetBattleManager, ReturnValue) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_GetBattleManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetBattleManager, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_GetBattleManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetBattleManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_GetBattleManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.GetTargetingGroupForCharacter
// 0x0048 (0x0048 - 0x0000)
struct AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TargetingGroup_C*                   Array_Element;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TargetingGroup_C*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetCharacters_Characters;               // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter");
static_assert(sizeof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter) == 0x000048, "Wrong size on AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, Character) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, Array_Element) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::Array_Element' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, CallFunc_GetCharacters_Characters) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::CallFunc_GetCharacters_Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter, CallFunc_Array_Contains_ReturnValue) == 0x000040, "Member 'AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.HideTargets
// 0x0118 (0x0118 - 0x0000)
struct AC_jRPG_TargetingManager_C_HideTargets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UINavigationComponent_C*            CallFunc_GetUINavigationComponent_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0010)()
};
static_assert(alignof(AC_jRPG_TargetingManager_C_HideTargets) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_HideTargets");
static_assert(sizeof(AC_jRPG_TargetingManager_C_HideTargets) == 0x000118, "Wrong size on AC_jRPG_TargetingManager_C_HideTargets");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_HideTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_GetUINavigationComponent_ReturnValue) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_GetUINavigationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AC_jRPG_TargetingManager_C_HideTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_HideTargets::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, K2Node_MakeArray_Array) == 0x000070, "Member 'AC_jRPG_TargetingManager_C_HideTargets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Format_ReturnValue) == 0x000080, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Array_Get_Item) == 0x000090, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000A8, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'AC_jRPG_TargetingManager_C_HideTargets::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'AC_jRPG_TargetingManager_C_HideTargets::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_HideTargets, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'AC_jRPG_TargetingManager_C_HideTargets::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.IsCurrentlyTargetingAllies
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTargetingTypeAlly_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies) == 0x000001, "Wrong alignment on AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies");
static_assert(sizeof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies) == 0x000002, "Wrong size on AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies, ReturnValue) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies, CallFunc_IsTargetingTypeAlly_ReturnValue) == 0x000001, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies::CallFunc_IsTargetingTypeAlly_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.IsCurrentlyTargetingEnemies
// 0x000E (0x000E - 0x0000)
struct AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_TargetingType                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies) == 0x000001, "Wrong alignment on AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies");
static_assert(sizeof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies) == 0x00000E, "Wrong size on AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, ReturnValue) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_byte_Variable) == 0x000001, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable) == 0x000002, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_1) == 0x000003, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_2) == 0x000004, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_3) == 0x000005, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_4) == 0x000006, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_5) == 0x000007, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_6) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_7) == 0x000009, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_8) == 0x00000A, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_9) == 0x00000B, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, Temp_bool_Variable_10) == 0x00000C, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies, K2Node_Select_Default) == 0x00000D, "Member 'AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies::K2Node_Select_Default' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.NotifyTargetChange
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_TargetingManager_C_NotifyTargetChange final
{
public:
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_NotifyTargetChange) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_NotifyTargetChange");
static_assert(sizeof(AC_jRPG_TargetingManager_C_NotifyTargetChange) == 0x000008, "Wrong size on AC_jRPG_TargetingManager_C_NotifyTargetChange");
static_assert(offsetof(AC_jRPG_TargetingManager_C_NotifyTargetChange, CallFunc_GetBattleManager_ReturnValue) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_NotifyTargetChange::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_TargetingManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_ReceiveTick) == 0x000004, "Wrong alignment on AC_jRPG_TargetingManager_C_ReceiveTick");
static_assert(sizeof(AC_jRPG_TargetingManager_C_ReceiveTick) == 0x000004, "Wrong size on AC_jRPG_TargetingManager_C_ReceiveTick");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.RegisterTargetingGroupsInUINavigation
// 0x00B0 (0x00B0 - 0x0000)
struct AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       PreferedInitialTarget;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_TargetingGroup_C*                   local_preferedTargetingGroup;                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UINavigationElement_C> local_initialTargetingGroup;                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class UBP_TargetingGroup_C*                   CallFunc_GetTargetingGroupForCharacter_Array_Element; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation");
static_assert(sizeof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation) == 0x0000B0, "Wrong size on AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, PreferedInitialTarget) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::PreferedInitialTarget' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, local_preferedTargetingGroup) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::local_preferedTargetingGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, local_initialTargetingGroup) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::local_initialTargetingGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, CallFunc_GetTargetingGroupForCharacter_Array_Element) == 0x000078, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::CallFunc_GetTargetingGroupForCharacter_Array_Element' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, K2Node_MakeArray_Array) == 0x000080, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, CallFunc_Format_ReturnValue) == 0x000090, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation::CallFunc_Array_Get_Item' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ResetTargetingSystem
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_TargetingManager_C_ResetTargetingSystem final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_ResetTargetingSystem) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_ResetTargetingSystem");
static_assert(sizeof(AC_jRPG_TargetingManager_C_ResetTargetingSystem) == 0x000020, "Wrong size on AC_jRPG_TargetingManager_C_ResetTargetingSystem");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ResetTargetingSystem, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_ResetTargetingSystem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ResetTargetingSystem, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_TargetingManager_C_ResetTargetingSystem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ResetTargetingSystem, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_ResetTargetingSystem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ResetTargetingSystem, CallFunc_Array_Get_Item) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_ResetTargetingSystem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ResetTargetingSystem, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_ResetTargetingSystem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ResetTargetingSystem, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'AC_jRPG_TargetingManager_C_ResetTargetingSystem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.SetFocusedTargetingGroup
// 0x0070 (0x0070 - 0x0000)
struct AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup final
{
public:
	class UBP_TargetingGroup_C*                   TargetingGroup;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetCharacters_Characters;               // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetCharacters_Characters_1;             // 0x0050(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup");
static_assert(sizeof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup) == 0x000070, "Wrong size on AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, TargetingGroup) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::TargetingGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00001C, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_GetCharacters_Characters) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_GetCharacters_Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Array_Get_Item) == 0x000040, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_GetCharacters_Characters_1) == 0x000050, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_GetCharacters_Characters_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup, CallFunc_Array_RemoveItem_ReturnValue) == 0x00006D, "Member 'AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ShiftTargetingGroup
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_TargetingManager_C_ShiftTargetingGroup final
{
public:
	int32                                         Offset;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_newIndex;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_TargetingGroup_C*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_ShiftTargetingGroup");
static_assert(sizeof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup) == 0x000030, "Wrong size on AC_jRPG_TargetingManager_C_ShiftTargetingGroup");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, Offset) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::Offset' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, local_newIndex) == 0x000004, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::local_newIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, CallFunc_Array_Get_Item) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, CallFunc_Array_Find_ReturnValue) == 0x00001C, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ShiftTargetingGroup, CallFunc_Clamp_ReturnValue) == 0x000028, "Member 'AC_jRPG_TargetingManager_C_ShiftTargetingGroup::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.TryFocusTargetGroup
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_TargetingManager_C_TryFocusTargetGroup final
{
public:
	class UBP_TargetingGroup_C*                   TargetGroup;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UINavigationComponent_C*            CallFunc_GetUINavigationComponent_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UINavigationElement_C> CallFunc_FocusNavigableElement_NavElement_CastInput; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_TryFocusTargetGroup");
static_assert(sizeof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup) == 0x000028, "Wrong size on AC_jRPG_TargetingManager_C_TryFocusTargetGroup");
static_assert(offsetof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup, TargetGroup) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_TryFocusTargetGroup::TargetGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_TryFocusTargetGroup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'AC_jRPG_TargetingManager_C_TryFocusTargetGroup::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'AC_jRPG_TargetingManager_C_TryFocusTargetGroup::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup, CallFunc_GetUINavigationComponent_ReturnValue) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_TryFocusTargetGroup::CallFunc_GetUINavigationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_TryFocusTargetGroup, CallFunc_FocusNavigableElement_NavElement_CastInput) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_TryFocusTargetGroup::CallFunc_FocusNavigableElement_NavElement_CastInput' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.TryUnfocusTargetGroup
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup final
{
public:
	class UBP_TargetingGroup_C*                   TargetGroup;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup");
static_assert(sizeof(AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup) == 0x000008, "Wrong size on AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup");
static_assert(offsetof(AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup, TargetGroup) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup::TargetGroup' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.UpdateTargetGroups
// 0x00C8 (0x00C8 - 0x0000)
struct AC_jRPG_TargetingManager_C_UpdateTargetGroups final
{
public:
	E_jRPG_TargetingType                          TargetingType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlly;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_TargetingGroup_C*>           local_TargetGroupsBeforeSort;                      // 0x0008(0x0010)(Edit, BlueprintVisible)
	TMap<int32, int32>                            local_EnemyIndexToBattleSpotOrder;                 // 0x0018(0x0050)(Edit, BlueprintVisible)
	bool                                          local_MustBeSelf;                                  // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllMatchingTargets;                        // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          local_AllInSingleGroup;                            // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeEnemy;                                 // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeAlly;                                  // 0x0082(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeDead;                                  // 0x0083(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_MustBeAlive;                                 // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntVector>                     local_GroupBounds;                                 // 0x0088(0x0010)(Edit, BlueprintVisible)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_Result;                                    // 0x0098(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_ComputeTargetGroups_IsAlly;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_TargetingGroup_C*>           CallFunc_ComputeTargetGroups_TargetGroups;         // 0x00B0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_ComputeTargetGroups_PreferedNextInitialTarget; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_UpdateTargetGroups) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_UpdateTargetGroups");
static_assert(sizeof(AC_jRPG_TargetingManager_C_UpdateTargetGroups) == 0x0000C8, "Wrong size on AC_jRPG_TargetingManager_C_UpdateTargetGroups");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, TargetingType) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::TargetingType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, IsAlly) == 0x000001, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::IsAlly' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_TargetGroupsBeforeSort) == 0x000008, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_TargetGroupsBeforeSort' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_EnemyIndexToBattleSpotOrder) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_EnemyIndexToBattleSpotOrder' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_MustBeSelf) == 0x000068, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_MustBeSelf' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_AllMatchingTargets) == 0x000070, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_AllMatchingTargets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_AllInSingleGroup) == 0x000080, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_AllInSingleGroup' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_MustBeEnemy) == 0x000081, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_MustBeEnemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_MustBeAlly) == 0x000082, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_MustBeAlly' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_MustBeDead) == 0x000083, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_MustBeDead' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_MustBeAlive) == 0x000084, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_MustBeAlive' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_GroupBounds) == 0x000088, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_GroupBounds' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, local_Result) == 0x000098, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::local_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, CallFunc_ComputeTargetGroups_IsAlly) == 0x0000A8, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::CallFunc_ComputeTargetGroups_IsAlly' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, CallFunc_ComputeTargetGroups_TargetGroups) == 0x0000B0, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::CallFunc_ComputeTargetGroups_TargetGroups' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_UpdateTargetGroups, CallFunc_ComputeTargetGroups_PreferedNextInitialTarget) == 0x0000C0, "Member 'AC_jRPG_TargetingManager_C_UpdateTargetGroups::CallFunc_ComputeTargetGroups_PreferedNextInitialTarget' has a wrong offset!");

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ValidateTargetCandidates
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_TargetingManager_C_ValidateTargetCandidates final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> TargetCharacterStats;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Validated;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BlockedActionFeedback               BlockedReason;                                     // 0x0018(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillState_C*                       CallFunc_GetCurrentlyTargetingSkillState_SkillState; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateSkillTargets_ValidTargets;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BlockedActionFeedback               CallFunc_ValidateSkillTargets_BlockedReason;       // 0x0048(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates) == 0x000008, "Wrong alignment on AC_jRPG_TargetingManager_C_ValidateTargetCandidates");
static_assert(sizeof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates) == 0x000060, "Wrong size on AC_jRPG_TargetingManager_C_ValidateTargetCandidates");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, TargetCharacterStats) == 0x000000, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::TargetCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, Validated) == 0x000010, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::Validated' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, BlockedReason) == 0x000018, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::BlockedReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, CallFunc_GetBattleManager_ReturnValue) == 0x000030, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, CallFunc_GetCurrentlyTargetingSkillState_SkillState) == 0x000038, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::CallFunc_GetCurrentlyTargetingSkillState_SkillState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, CallFunc_ValidateSkillTargets_ValidTargets) == 0x000041, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::CallFunc_ValidateSkillTargets_ValidTargets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_TargetingManager_C_ValidateTargetCandidates, CallFunc_ValidateSkillTargets_BlockedReason) == 0x000048, "Member 'AC_jRPG_TargetingManager_C_ValidateTargetCandidates::CallFunc_ValidateSkillTargets_BlockedReason' has a wrong offset!");

}

