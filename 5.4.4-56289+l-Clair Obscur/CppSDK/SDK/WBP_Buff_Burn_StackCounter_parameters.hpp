#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Buff_Burn_StackCounter

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Buff_Burn_StackCounter.WBP_Buff_Burn_StackCounter_C.UpdateCount
// 0x0020 (0x0020 - 0x0000)
struct WBP_Buff_Burn_StackCounter_C_UpdateCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Buff_Burn_StackCounter_C_UpdateCount) == 0x000008, "Wrong alignment on WBP_Buff_Burn_StackCounter_C_UpdateCount");
static_assert(sizeof(WBP_Buff_Burn_StackCounter_C_UpdateCount) == 0x000020, "Wrong size on WBP_Buff_Burn_StackCounter_C_UpdateCount");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, Count) == 0x000000, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::Count' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, Temp_byte_Variable) == 0x000004, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000006, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, Temp_bool_Variable) == 0x000018, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, Temp_byte_Variable_1) == 0x000019, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, Temp_byte_Variable_2) == 0x00001A, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, Temp_byte_Variable_3) == 0x00001B, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, K2Node_Select_Default) == 0x00001C, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, Temp_bool_Variable_1) == 0x00001D, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Buff_Burn_StackCounter_C_UpdateCount, K2Node_Select_Default_1) == 0x00001E, "Member 'WBP_Buff_Burn_StackCounter_C_UpdateCount::K2Node_Select_Default_1' has a wrong offset!");

}

