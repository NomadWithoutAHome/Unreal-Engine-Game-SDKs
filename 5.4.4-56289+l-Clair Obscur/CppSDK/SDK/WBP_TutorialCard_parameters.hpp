#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TutorialCard

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "S_TutorialCardContentData_structs.hpp"
#include "Engine_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_TutorialCardParameters_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_TutorialCardWidgetPosition_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function WBP_TutorialCard.WBP_TutorialCard_C.BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature");
static_assert(sizeof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong size on WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature");
static_assert(offsetof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature, Progress) == 0x000000, "Member 'WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_DiscardButton_K2Node_ComponentBoundEvent_2_OnButtonBaseActionProgress__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature");
static_assert(sizeof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong size on WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature");
static_assert(offsetof(WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature, Progress) == 0x000000, "Member 'WBP_TutorialCard_C_BndEvt__WBP_TutorialCard_InvisibleHealPartyTutorialButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.ExecuteUbergraph_WBP_TutorialCard
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate_1;          // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0024(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Progress_1;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Progress;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard");
static_assert(sizeof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard) == 0x0000B0, "Wrong size on WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, EntryPoint) == 0x000000, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_Event_MyGeometry) == 0x000024, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_Event_InDeltaTime) == 0x00005C, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_ComponentBoundEvent_Button) == 0x000060, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_ComponentBoundEvent_Progress_1) == 0x000068, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_ComponentBoundEvent_Progress_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_ComponentBoundEvent_Progress) == 0x000070, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_ComponentBoundEvent_Progress' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000088, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, K2Node_CreateDelegate_OutputDelegate_2) == 0x000094, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, CallFunc_IsActivated_ReturnValue) == 0x0000A4, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x0000A8, "Member 'WBP_TutorialCard_C_ExecuteUbergraph_WBP_TutorialCard::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.GetTutorialCardRow
// 0x0010 (0x0010 - 0x0000)
struct WBP_TutorialCard_C_GetTutorialCardRow final
{
public:
	struct FDataTableRowHandle                    TutorialCardRow;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(WBP_TutorialCard_C_GetTutorialCardRow) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_GetTutorialCardRow");
static_assert(sizeof(WBP_TutorialCard_C_GetTutorialCardRow) == 0x000010, "Wrong size on WBP_TutorialCard_C_GetTutorialCardRow");
static_assert(offsetof(WBP_TutorialCard_C_GetTutorialCardRow, TutorialCardRow) == 0x000000, "Member 'WBP_TutorialCard_C_GetTutorialCardRow::TutorialCardRow' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.LoadTutorialCardParameters
// 0x0028 (0x0028 - 0x0000)
struct WBP_TutorialCard_C_LoadTutorialCardParameters final
{
public:
	struct FS_TutorialCardParameters              TutorialCardParameters_0;                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_LoadTutorialCardParameters) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_LoadTutorialCardParameters");
static_assert(sizeof(WBP_TutorialCard_C_LoadTutorialCardParameters) == 0x000028, "Wrong size on WBP_TutorialCard_C_LoadTutorialCardParameters");
static_assert(offsetof(WBP_TutorialCard_C_LoadTutorialCardParameters, TutorialCardParameters_0) == 0x000000, "Member 'WBP_TutorialCard_C_LoadTutorialCardParameters::TutorialCardParameters_0' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_LoadTutorialCardParameters, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000020, "Member 'WBP_TutorialCard_C_LoadTutorialCardParameters::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_TutorialCard_C_OnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_OnInputMethodChanged) == 0x000001, "Wrong alignment on WBP_TutorialCard_C_OnInputMethodChanged");
static_assert(sizeof(WBP_TutorialCard_C_OnInputMethodChanged) == 0x000001, "Wrong size on WBP_TutorialCard_C_OnInputMethodChanged");
static_assert(offsetof(WBP_TutorialCard_C_OnInputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_TutorialCard_C_OnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.PlayAppearAnimation
// 0x0018 (0x0018 - 0x0000)
struct WBP_TutorialCard_C_PlayAppearAnimation final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_PlayAppearAnimation) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_PlayAppearAnimation");
static_assert(sizeof(WBP_TutorialCard_C_PlayAppearAnimation) == 0x000018, "Wrong size on WBP_TutorialCard_C_PlayAppearAnimation");
static_assert(offsetof(WBP_TutorialCard_C_PlayAppearAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000000, "Member 'WBP_TutorialCard_C_PlayAppearAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_PlayAppearAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WBP_TutorialCard_C_PlayAppearAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_PlayAppearAnimation, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000010, "Member 'WBP_TutorialCard_C_PlayAppearAnimation::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.SetupHealPartyTutorialBehavior
// 0x0020 (0x0020 - 0x0000)
struct WBP_TutorialCard_C_SetupHealPartyTutorialBehavior final
{
public:
	bool                                          IsHealPartyTutorial_0;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_SetupHealPartyTutorialBehavior");
static_assert(sizeof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior) == 0x000020, "Wrong size on WBP_TutorialCard_C_SetupHealPartyTutorialBehavior");
static_assert(offsetof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior, IsHealPartyTutorial_0) == 0x000000, "Member 'WBP_TutorialCard_C_SetupHealPartyTutorialBehavior::IsHealPartyTutorial_0' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_TutorialCard_C_SetupHealPartyTutorialBehavior::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000010, "Member 'WBP_TutorialCard_C_SetupHealPartyTutorialBehavior::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_TutorialCard_C_SetupHealPartyTutorialBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior, CallFunc_IsActivated_ReturnValue) == 0x000019, "Member 'WBP_TutorialCard_C_SetupHealPartyTutorialBehavior::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupHealPartyTutorialBehavior, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WBP_TutorialCard_C_SetupHealPartyTutorialBehavior::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.SetupWaitForKeyIfNeeded
// 0x0006 (0x0006 - 0x0000)
struct WBP_TutorialCard_C_SetupWaitForKeyIfNeeded final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded) == 0x000001, "Wrong alignment on WBP_TutorialCard_C_SetupWaitForKeyIfNeeded");
static_assert(sizeof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded) == 0x000006, "Wrong size on WBP_TutorialCard_C_SetupWaitForKeyIfNeeded");
static_assert(offsetof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded, Temp_bool_Variable) == 0x000000, "Member 'WBP_TutorialCard_C_SetupWaitForKeyIfNeeded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded, Temp_byte_Variable) == 0x000001, "Member 'WBP_TutorialCard_C_SetupWaitForKeyIfNeeded::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_TutorialCard_C_SetupWaitForKeyIfNeeded::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WBP_TutorialCard_C_SetupWaitForKeyIfNeeded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded, K2Node_Select_Default) == 0x000004, "Member 'WBP_TutorialCard_C_SetupWaitForKeyIfNeeded::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_SetupWaitForKeyIfNeeded, CallFunc_IsNameValid_ReturnValue) == 0x000005, "Member 'WBP_TutorialCard_C_SetupWaitForKeyIfNeeded::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_TutorialCard_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_Tick) == 0x000004, "Wrong alignment on WBP_TutorialCard_C_Tick");
static_assert(sizeof(WBP_TutorialCard_C_Tick) == 0x00003C, "Wrong size on WBP_TutorialCard_C_Tick");
static_assert(offsetof(WBP_TutorialCard_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_TutorialCard_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_TutorialCard_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.UpdateAnchorsForAnimation
// 0x0038 (0x0038 - 0x0000)
struct WBP_TutorialCard_C_UpdateAnchorsForAnimation final
{
public:
	struct FAnchors                               Anchors;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FVector2D                              Alignment;                                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_UpdateAnchorsForAnimation) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_UpdateAnchorsForAnimation");
static_assert(sizeof(WBP_TutorialCard_C_UpdateAnchorsForAnimation) == 0x000038, "Wrong size on WBP_TutorialCard_C_UpdateAnchorsForAnimation");
static_assert(offsetof(WBP_TutorialCard_C_UpdateAnchorsForAnimation, Anchors) == 0x000000, "Member 'WBP_TutorialCard_C_UpdateAnchorsForAnimation::Anchors' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateAnchorsForAnimation, Alignment) == 0x000020, "Member 'WBP_TutorialCard_C_UpdateAnchorsForAnimation::Alignment' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateAnchorsForAnimation, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'WBP_TutorialCard_C_UpdateAnchorsForAnimation::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.UpdateContent
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_TutorialCard_C_UpdateContent final
{
public:
	struct FDataTableRowHandle                    CallFunc_GetTutorialCardRow_TutorialCardRow;       // 0x0000(0x0010)(NoDestructor)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0010(0x0010)()
	struct FS_TutorialCardContentData             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_UpdateContent) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_UpdateContent");
static_assert(sizeof(WBP_TutorialCard_C_UpdateContent) == 0x0000F0, "Wrong size on WBP_TutorialCard_C_UpdateContent");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, CallFunc_GetTutorialCardRow_TutorialCardRow) == 0x000000, "Member 'WBP_TutorialCard_C_UpdateContent::CallFunc_GetTutorialCardRow_TutorialCardRow' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, CallFunc_Conv_NameToText_ReturnValue) == 0x000010, "Member 'WBP_TutorialCard_C_UpdateContent::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'WBP_TutorialCard_C_UpdateContent::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'WBP_TutorialCard_C_UpdateContent::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'WBP_TutorialCard_C_UpdateContent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WBP_TutorialCard_C_UpdateContent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_TutorialCard_C_UpdateContent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateContent, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0000E8, "Member 'WBP_TutorialCard_C_UpdateContent::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.UpdateMedia
// 0x0030 (0x0030 - 0x0000)
struct WBP_TutorialCard_C_UpdateMedia final
{
public:
	TSoftObjectPtr<class UTexture2D>              SoftTexture;                                       // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_UpdateMedia) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_UpdateMedia");
static_assert(sizeof(WBP_TutorialCard_C_UpdateMedia) == 0x000030, "Wrong size on WBP_TutorialCard_C_UpdateMedia");
static_assert(offsetof(WBP_TutorialCard_C_UpdateMedia, SoftTexture) == 0x000000, "Member 'WBP_TutorialCard_C_UpdateMedia::SoftTexture' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateMedia, Temp_byte_Variable) == 0x000028, "Member 'WBP_TutorialCard_C_UpdateMedia::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateMedia, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000029, "Member 'WBP_TutorialCard_C_UpdateMedia::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateMedia, Temp_byte_Variable_1) == 0x00002A, "Member 'WBP_TutorialCard_C_UpdateMedia::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateMedia, Temp_bool_Variable) == 0x00002B, "Member 'WBP_TutorialCard_C_UpdateMedia::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateMedia, K2Node_Select_Default) == 0x00002C, "Member 'WBP_TutorialCard_C_UpdateMedia::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.UpdateSide
// 0x0120 (0x0120 - 0x0000)
struct WBP_TutorialCard_C_UpdateSide final
{
public:
	struct FVector2D                              Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TutorialCardWidgetPosition                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TutorialCardWidgetPosition                  Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TutorialCardWidgetPosition                  Temp_byte_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_4;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TutorialCardWidgetPosition                  Temp_byte_Variable_5;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable_5;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USafeZoneSlot*                          CallFunc_SlotAsSafeBoxSlot_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_TutorialCardWidgetPosition                  Temp_byte_Variable_6;                              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0088(0x0020)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x00A8(0x0020)(NoDestructor)
	struct FAnchors                               K2Node_Select_Default;                             // 0x00C8(0x0020)(NoDestructor)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_2;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_UpdateSide) == 0x000008, "Wrong alignment on WBP_TutorialCard_C_UpdateSide");
static_assert(sizeof(WBP_TutorialCard_C_UpdateSide) == 0x000120, "Wrong size on WBP_TutorialCard_C_UpdateSide");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_struct_Variable) == 0x000000, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_byte_Variable) == 0x000010, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_byte_Variable_1) == 0x000011, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_byte_Variable_2) == 0x000012, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_byte_Variable_3) == 0x000013, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_struct_Variable_2) == 0x000028, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_byte_Variable_4) == 0x000038, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_struct_Variable_3) == 0x000040, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_struct_Variable_4) == 0x000050, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_byte_Variable_5) == 0x000060, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_struct_Variable_5) == 0x000068, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, CallFunc_SlotAsSafeBoxSlot_ReturnValue) == 0x000078, "Member 'WBP_TutorialCard_C_UpdateSide::CallFunc_SlotAsSafeBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, Temp_byte_Variable_6) == 0x000080, "Member 'WBP_TutorialCard_C_UpdateSide::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, K2Node_MakeStruct_Anchors) == 0x000088, "Member 'WBP_TutorialCard_C_UpdateSide::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, K2Node_MakeStruct_Anchors_1) == 0x0000A8, "Member 'WBP_TutorialCard_C_UpdateSide::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_TutorialCard_C_UpdateSide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, K2Node_Select_Default_1) == 0x0000E8, "Member 'WBP_TutorialCard_C_UpdateSide::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, K2Node_Select_Default_2) == 0x0000F8, "Member 'WBP_TutorialCard_C_UpdateSide::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, K2Node_Select_Default_3) == 0x000100, "Member 'WBP_TutorialCard_C_UpdateSide::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_UpdateSide, K2Node_Select_Default_4) == 0x000110, "Member 'WBP_TutorialCard_C_UpdateSide::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_TutorialCard.WBP_TutorialCard_C.VerifySpecificInputActionState
// 0x0007 (0x0007 - 0x0000)
struct WBP_TutorialCard_C_VerifySpecificInputActionState final
{
public:
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputActionTriggered_Triggered;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialCard_C_VerifySpecificInputActionState) == 0x000001, "Wrong alignment on WBP_TutorialCard_C_VerifySpecificInputActionState");
static_assert(sizeof(WBP_TutorialCard_C_VerifySpecificInputActionState) == 0x000007, "Wrong size on WBP_TutorialCard_C_VerifySpecificInputActionState");
static_assert(offsetof(WBP_TutorialCard_C_VerifySpecificInputActionState, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000000, "Member 'WBP_TutorialCard_C_VerifySpecificInputActionState::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_VerifySpecificInputActionState, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000001, "Member 'WBP_TutorialCard_C_VerifySpecificInputActionState::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_VerifySpecificInputActionState, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WBP_TutorialCard_C_VerifySpecificInputActionState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_VerifySpecificInputActionState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'WBP_TutorialCard_C_VerifySpecificInputActionState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_VerifySpecificInputActionState, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_TutorialCard_C_VerifySpecificInputActionState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_VerifySpecificInputActionState, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'WBP_TutorialCard_C_VerifySpecificInputActionState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TutorialCard_C_VerifySpecificInputActionState, CallFunc_IsInputActionTriggered_Triggered) == 0x000006, "Member 'WBP_TutorialCard_C_VerifySpecificInputActionState::CallFunc_IsInputActionTriggered_Triggered' has a wrong offset!");

}

