#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PictoViewItem

#include "Basic.hpp"

#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PictoViewItem.BP_PictoViewItem_C
// 0x0158 (0x0180 - 0x0028)
class UBP_PictoViewItem_C final : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FS_jRPG_Item_DynamicData               ItemDynamicData;                                   // 0x0030(0x0138)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, ExposeOnSpawn, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CurrentCharacterData;                              // 0x0168(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            InventoryManager;                                  // 0x0170(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UBP_ItemUpgradeSystem_C*                ItemUpgradeSystem;                                 // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PictoViewItem(int32 EntryPoint);
	void GetCurrentCharacterData(class UBP_CharacterData_C** CurrentCharacterData_0);
	void GetGearPictosInstance(class UBP_ItemInstance_Gear_Pictos_C** AsBP_Item_Instance_Gear_Pictos);
	void GetItemDynamicData(struct FS_jRPG_Item_DynamicData* ItemDynamicData_0);
	void GetOwnerData(class UBP_CharacterData_C** OwnerData);
	void IsEquippedByCurrentCharacter(bool* IsEquipped);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PictoViewItem_C">();
	}
	static class UBP_PictoViewItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PictoViewItem_C>();
	}
};
static_assert(alignof(UBP_PictoViewItem_C) == 0x000008, "Wrong alignment on UBP_PictoViewItem_C");
static_assert(sizeof(UBP_PictoViewItem_C) == 0x000180, "Wrong size on UBP_PictoViewItem_C");
static_assert(offsetof(UBP_PictoViewItem_C, UberGraphFrame) == 0x000028, "Member 'UBP_PictoViewItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PictoViewItem_C, ItemDynamicData) == 0x000030, "Member 'UBP_PictoViewItem_C::ItemDynamicData' has a wrong offset!");
static_assert(offsetof(UBP_PictoViewItem_C, CurrentCharacterData) == 0x000168, "Member 'UBP_PictoViewItem_C::CurrentCharacterData' has a wrong offset!");
static_assert(offsetof(UBP_PictoViewItem_C, InventoryManager) == 0x000170, "Member 'UBP_PictoViewItem_C::InventoryManager' has a wrong offset!");
static_assert(offsetof(UBP_PictoViewItem_C, ItemUpgradeSystem) == 0x000178, "Member 'UBP_PictoViewItem_C::ItemUpgradeSystem' has a wrong offset!");

}

