#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioControlSystem_Battle

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "SandFall_classes.hpp"
#include "ECharacterTeamSelector_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AudioControlSystem_Battle.BP_AudioControlSystem_Battle_C
// 0x0038 (0x0060 - 0x0028)
class UBP_AudioControlSystem_Battle_C final : public UExtendedObject
{
public:
	ECharacterTeamSelector                        LastTurnStartTeam;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SoundEvent_TurnStart_Ally;                         // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SoundEvent_TurnStart_Enemy;                        // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SoundEvent_BattleStart;                            // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void OnBattleEnd();
	void OnBattleStart();
	void OnCharacterActionEnd(class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void OnCharacterActionStart(class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void OnCharacterTurnStart(class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void OnCounterAttackEnd();
	void OnCounterAttackStart();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioControlSystem_Battle_C">();
	}
	static class UBP_AudioControlSystem_Battle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AudioControlSystem_Battle_C>();
	}
};
static_assert(alignof(UBP_AudioControlSystem_Battle_C) == 0x000008, "Wrong alignment on UBP_AudioControlSystem_Battle_C");
static_assert(sizeof(UBP_AudioControlSystem_Battle_C) == 0x000060, "Wrong size on UBP_AudioControlSystem_Battle_C");
static_assert(offsetof(UBP_AudioControlSystem_Battle_C, LastTurnStartTeam) == 0x000028, "Member 'UBP_AudioControlSystem_Battle_C::LastTurnStartTeam' has a wrong offset!");
static_assert(offsetof(UBP_AudioControlSystem_Battle_C, SoundEvent_TurnStart_Ally) == 0x000030, "Member 'UBP_AudioControlSystem_Battle_C::SoundEvent_TurnStart_Ally' has a wrong offset!");
static_assert(offsetof(UBP_AudioControlSystem_Battle_C, SoundEvent_TurnStart_Enemy) == 0x000040, "Member 'UBP_AudioControlSystem_Battle_C::SoundEvent_TurnStart_Enemy' has a wrong offset!");
static_assert(offsetof(UBP_AudioControlSystem_Battle_C, SoundEvent_BattleStart) == 0x000050, "Member 'UBP_AudioControlSystem_Battle_C::SoundEvent_BattleStart' has a wrong offset!");

}

