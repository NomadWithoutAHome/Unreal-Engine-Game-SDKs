#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioCharacter_Manager

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "EFootstepsType_structs.hpp"
#include "ESfxType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.GetFootStepToPlay
// 0x0030 (0x0030 - 0x0000)
struct BP_AudioCharacter_Manager_C_GetFootStepToPlay final
{
public:
	EPhysicalSurface                              SurfaceType;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_wildcard_Variable;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_GetFootStepToPlay) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_GetFootStepToPlay");
static_assert(sizeof(BP_AudioCharacter_Manager_C_GetFootStepToPlay) == 0x000030, "Wrong size on BP_AudioCharacter_Manager_C_GetFootStepToPlay");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, SurfaceType) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, Value) == 0x000008, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::Value' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, Temp_wildcard_Variable) == 0x000010, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, CallFunc_GetBoolCVar_ReturnValue) == 0x00001A, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, CallFunc_IsValid_ReturnValue_1) == 0x00001B, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, CallFunc_IsValid_ReturnValue_2) == 0x00001C, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_GetFootStepToPlay, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_AudioCharacter_Manager_C_GetFootStepToPlay::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.SetupDefaultFootstep
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_Manager_C_SetupDefaultFootstep final
{
public:
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0000(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_SetupDefaultFootstep) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_SetupDefaultFootstep");
static_assert(sizeof(BP_AudioCharacter_Manager_C_SetupDefaultFootstep) == 0x000018, "Wrong size on BP_AudioCharacter_Manager_C_SetupDefaultFootstep");
static_assert(offsetof(BP_AudioCharacter_Manager_C_SetupDefaultFootstep, Temp_byte_Variable) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_SetupDefaultFootstep::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_SetupDefaultFootstep, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AudioCharacter_Manager_C_SetupDefaultFootstep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_SetupDefaultFootstep, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_AudioCharacter_Manager_C_SetupDefaultFootstep::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_SetupDefaultFootstep, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_AudioCharacter_Manager_C_SetupDefaultFootstep::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.HandleFootsteps
// 0x0088 (0x0088 - 0x0000)
struct BP_AudioCharacter_Manager_C_HandleFootsteps final
{
public:
	EFootstepsType                                FootstepsType_0;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetFootStepToPlay_Value;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFoleyAudioValuesFromOwner_FoleyLowCut; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetFoleyAudioValuesFromOwner_FoleyVolume; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast;   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InFloat_ImplicitCast_1; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_HandleFootsteps) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_HandleFootsteps");
static_assert(sizeof(BP_AudioCharacter_Manager_C_HandleFootsteps) == 0x000088, "Wrong size on BP_AudioCharacter_Manager_C_HandleFootsteps");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, FootstepsType_0) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::FootstepsType_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, Location) == 0x000008, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::Location' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, SurfaceType) == 0x000020, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_GetFootStepToPlay_Value) == 0x000038, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_GetFootStepToPlay_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000050, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface) == 0x000058, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_GetFoleyAudioValuesFromOwner_FoleyLowCut) == 0x000070, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_GetFoleyAudioValuesFromOwner_FoleyLowCut' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_GetFoleyAudioValuesFromOwner_FoleyVolume) == 0x000078, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_GetFoleyAudioValuesFromOwner_FoleyVolume' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_SetFloatParameter_InFloat_ImplicitCast) == 0x000080, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_SetFloatParameter_InFloat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleFootsteps, CallFunc_SetFloatParameter_InFloat_ImplicitCast_1) == 0x000084, "Member 'BP_AudioCharacter_Manager_C_HandleFootsteps::CallFunc_SetFloatParameter_InFloat_ImplicitCast_1' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.OnCharacterSwitch
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_Manager_C_OnCharacterSwitch final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_CharacterExplorationAudioProfile_C* CallFunc_GetExplorationAudioProfile_AudioProfileAsset; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_OnCharacterSwitch) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_OnCharacterSwitch");
static_assert(sizeof(BP_AudioCharacter_Manager_C_OnCharacterSwitch) == 0x000010, "Wrong size on BP_AudioCharacter_Manager_C_OnCharacterSwitch");
static_assert(offsetof(BP_AudioCharacter_Manager_C_OnCharacterSwitch, CharacterData) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_OnCharacterSwitch::CharacterData' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_OnCharacterSwitch, CallFunc_GetExplorationAudioProfile_AudioProfileAsset) == 0x000008, "Member 'BP_AudioCharacter_Manager_C_OnCharacterSwitch::CallFunc_GetExplorationAudioProfile_AudioProfileAsset' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.Initialize
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AudioCharacter_Manager_C_Initialize final
{
public:
	TScriptInterface<class IBPI_AudioCharacter_GetComponents_C> K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_SFX_01;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Foleys_01;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_FT_L;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Vocals_01;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_SFX_02;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Foleys_02;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_FT_R;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Vocals_02;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Idle;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Weapon_L_01;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Weapon_L_02;        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Weapon_R_01;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Hand_L_01;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_GetAudioComponents_AC_Hand_R_01;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_Initialize) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_Initialize");
static_assert(sizeof(BP_AudioCharacter_Manager_C_Initialize) == 0x0000A0, "Wrong size on BP_AudioCharacter_Manager_C_Initialize");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_Initialize::K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AudioCharacter_Manager_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_SFX_01) == 0x000018, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_SFX_01' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Foleys_01) == 0x000020, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Foleys_01' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_FT_L) == 0x000028, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_FT_L' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Vocals_01) == 0x000030, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Vocals_01' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_SFX_02) == 0x000038, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_SFX_02' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Foleys_02) == 0x000040, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Foleys_02' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_FT_R) == 0x000048, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_FT_R' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Vocals_02) == 0x000050, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Vocals_02' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Idle) == 0x000058, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Idle' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Weapon_L_01) == 0x000060, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Weapon_L_01' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Weapon_L_02) == 0x000068, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Weapon_L_02' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Weapon_R_01) == 0x000070, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Weapon_R_01' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Hand_L_01) == 0x000078, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Hand_L_01' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetAudioComponents_AC_Hand_R_01) == 0x000080, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetAudioComponents_AC_Hand_R_01' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000088, "Member 'BP_AudioCharacter_Manager_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000090, "Member 'BP_AudioCharacter_Manager_C_Initialize::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_Initialize, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_AudioCharacter_Manager_C_Initialize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.HandleSFX
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioCharacter_Manager_C_HandleSFX final
{
public:
	ESfxType                                      SfxType_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESfxType                                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_HandleSFX) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_HandleSFX");
static_assert(sizeof(BP_AudioCharacter_Manager_C_HandleSFX) == 0x000028, "Wrong size on BP_AudioCharacter_Manager_C_HandleSFX");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, SfxType_0) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::SfxType_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, Temp_byte_Variable) == 0x000001, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, CallFunc_IsPlaying_ReturnValue) == 0x000018, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, CallFunc_IsValid_ReturnValue_2) == 0x00001B, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_HandleSFX, K2Node_Select_Default) == 0x000020, "Member 'BP_AudioCharacter_Manager_C_HandleSFX::K2Node_Select_Default' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.PlaySFXEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioCharacter_Manager_C_PlaySFXEvent final
{
public:
	ESfxType                                      SfxType_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_PlaySFXEvent) == 0x000001, "Wrong alignment on BP_AudioCharacter_Manager_C_PlaySFXEvent");
static_assert(sizeof(BP_AudioCharacter_Manager_C_PlaySFXEvent) == 0x000001, "Wrong size on BP_AudioCharacter_Manager_C_PlaySFXEvent");
static_assert(offsetof(BP_AudioCharacter_Manager_C_PlaySFXEvent, SfxType_0) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_PlaySFXEvent::SfxType_0' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.PlayFootstepEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioCharacter_Manager_C_PlayFootstepEvent final
{
public:
	EFootstepsType                                FootstepsType_0;                                   // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_PlayFootstepEvent) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_PlayFootstepEvent");
static_assert(sizeof(BP_AudioCharacter_Manager_C_PlayFootstepEvent) == 0x000028, "Wrong size on BP_AudioCharacter_Manager_C_PlayFootstepEvent");
static_assert(offsetof(BP_AudioCharacter_Manager_C_PlayFootstepEvent, FootstepsType_0) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_PlayFootstepEvent::FootstepsType_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_PlayFootstepEvent, Location) == 0x000008, "Member 'BP_AudioCharacter_Manager_C_PlayFootstepEvent::Location' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_PlayFootstepEvent, SurfaceType) == 0x000020, "Member 'BP_AudioCharacter_Manager_C_PlayFootstepEvent::SurfaceType' has a wrong offset!");

// Function BP_AudioCharacter_Manager.BP_AudioCharacter_Manager_C.ExecuteUbergraph_BP_AudioCharacter_Manager
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESfxType                                      K2Node_Event_SfxType;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootstepsType                                K2Node_Event_FootstepsType;                        // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0008(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_SurfaceType;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager) == 0x000008, "Wrong alignment on BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager");
static_assert(sizeof(BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager) == 0x000028, "Wrong size on BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager");
static_assert(offsetof(BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager, EntryPoint) == 0x000000, "Member 'BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager, K2Node_Event_SfxType) == 0x000004, "Member 'BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager::K2Node_Event_SfxType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager, K2Node_Event_FootstepsType) == 0x000005, "Member 'BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager::K2Node_Event_FootstepsType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager, K2Node_Event_Location) == 0x000008, "Member 'BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager, K2Node_Event_SurfaceType) == 0x000020, "Member 'BP_AudioCharacter_Manager_C_ExecuteUbergraph_BP_AudioCharacter_Manager::K2Node_Event_SurfaceType' has a wrong offset!");

}

