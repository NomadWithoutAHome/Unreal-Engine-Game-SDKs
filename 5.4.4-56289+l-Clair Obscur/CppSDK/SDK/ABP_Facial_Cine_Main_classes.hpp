#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Facial_Cine_Main

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "SandFall_structs.hpp"
#include "ABP_Facial_Cine_Main_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Expressions_Metahuman_structs.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Facial_Cine_Main.ABP_Facial_Cine_Main_C
// 0x2CF0 (0x3060 - 0x0370)
class UABP_Facial_Cine_Main_C : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Facial_Cine_Main::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;         // 0x0378(0x0040)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03B8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03C0(0x0008)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0x03C8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_69;                   // 0x0490(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x04D8(0x00C8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x05A0(0x0118)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x06B8(0x00F0)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x07A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_68;                   // 0x07F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_67;                   // 0x0838(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_66;                   // 0x0880(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_65;                   // 0x08C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_64;                   // 0x0910(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_63;                   // 0x0958(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_62;                   // 0x09A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_61;                   // 0x09E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_60;                   // 0x0A30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_59;                   // 0x0A78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_58;                   // 0x0AC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_57;                   // 0x0B08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_56;                   // 0x0B50(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_55;                   // 0x0B98(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_54;                   // 0x0BE0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_53;                   // 0x0C28(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_52;                   // 0x0C70(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_51;                   // 0x0CB8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_50;                   // 0x0D00(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_49;                   // 0x0D48(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_48;                   // 0x0D90(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_47;                   // 0x0DD8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x0E20(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0EA0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_46;                   // 0x0EE8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x0F30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x0F78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x0FC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x1008(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x1050(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x1098(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x10E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x1128(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x1170(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x11B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x1200(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x1248(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x1290(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x12D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x1320(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x1368(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x13B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x13F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x1440(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x1488(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x14D0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x1518(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x15E0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x1608(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x1650(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x1718(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x1760(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x17A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x17F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x1838(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x1880(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x18C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x1910(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x1958(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x19A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x19E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1A30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1A78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x1AC0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1B08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1B50(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1B98(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x1BE0(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1C60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1C88(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1CB0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1CF8(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1D18(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1D38(0x00C8)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x1E00(0x0158)(ContainsInstancedReference)
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1F58(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1F80(0x0048)()
	struct FAnimNode_CurveBlend                   AnimGraphNode_CurveBlend;                          // 0x1FC8(0x0038)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x2000(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x2048(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x20C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x20F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x2118(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2140(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2168(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x2190(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x2258(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x2280(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x22C8(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x22E8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x23B0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x23D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2420(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2440(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x2508(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2588(0x0028)()
	struct FAnimNode_ModifyCurve                  AnimGraphNode_ModifyCurve;                         // 0x25B0(0x0120)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x26D0(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2798(0x0048)()
	struct FAnimNode_CurveModifyIntensity         AnimGraphNode_CurveModifyIntensity;                // 0x27E0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2808(0x0080)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2888(0x0020)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x28A8(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x2D78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2DC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2E08(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2E50(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2E98(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x2F18(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2F40(0x0048)()
	uint8                                         Pad_2F88[0x8];                                     // 0x2F88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  __CustomProperty_OffsetTransform_Rotation_2F764CB54776461C3381AD85CB8FF976; // 0x2F90(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyesLookAt_Horizontal;                             // 0x2FB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         EyesLookAt_Vertical;                               // 0x2FB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         EyesLookAt_Alpha;                                  // 0x2FB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBC[0x4];                                     // 0x2FBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CineCharacter_Main_C*               As_BP_Cine_Character_Main;                         // 0x2FC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        VectorLength;                                      // 0x2FC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Expressions_Metahuman                       Expression_1;                                      // 0x2FD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD1[0x7];                                     // 0x2FD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Expression_1_Strength;                             // 0x2FD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	E_Expressions_Metahuman                       Expression_2;                                      // 0x2FE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE1[0x7];                                     // 0x2FE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Expression_2_Strength;                             // 0x2FE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         ExpressionsBlendTime;                              // 0x2FF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF4[0x4];                                     // 0x2FF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            RemapFloatFacialAngle;                             // 0x2FF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ManualFacialAnimAlpha;                             // 0x3000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         OpenEyes;                                          // 0x3004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          UseFishlouth;                                      // 0x3008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3009[0x3];                                     // 0x3009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpperLipRemoveAlpha;                               // 0x300C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Head_LeftRight;                                    // 0x3010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Head_UpDown;                                       // 0x3018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Eyes_Shaking_Alpha;                                // 0x3020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3024[0x4];                                     // 0x3024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        JawOpenAlpha;                                      // 0x3028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         EyeLeftRight;                                      // 0x3030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeUpDown;                                         // 0x3034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveBlendingProfile*                  LipSyncCurveBlendProfile;                          // 0x3038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveModifyIntensityProfile*           CurveIntensityProfile;                             // 0x3040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         EyesUp_Dev;                                        // 0x3048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyesDown_Dev;                                      // 0x304C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeLeft_Dev;                                       // 0x3050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeRight_Dev;                                      // 0x3054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenMouth;                                         // 0x3058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableAnimProfile;                                // 0x305C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Facial_Cine_Main_AnimGraphNode_ApplyAdditive_6FA1E2D64747806B9CF6018EC191510D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Facial_Cine_Main_AnimGraphNode_ApplyAdditive_70E53600412B315A9290E48CB82F8D73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Facial_Cine_Main_AnimGraphNode_BlendListByBool_928BF04C4FBD0FE75105A0A19F716CC3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Facial_Cine_Main_AnimGraphNode_ControlRig_2F764CB54776461C3381AD85CB8FF976();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Facial_Cine_Main_AnimGraphNode_TransitionResult_09D0F12D43EE55E3398A2E9FD396BFEF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Facial_Cine_Main_AnimGraphNode_TransitionResult_CF427A1E446F040EFF4F74943400FCE8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Facial_Cine_Main_AnimGraphNode_TwoWayBlend_A97D81FC402DEE3DA7E63EA0A091F936();
	void ExecuteUbergraph_ABP_Facial_Cine_Main(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Facial_Cine_Main_C">();
	}
	static class UABP_Facial_Cine_Main_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Facial_Cine_Main_C>();
	}
};
static_assert(alignof(UABP_Facial_Cine_Main_C) == 0x000010, "Wrong alignment on UABP_Facial_Cine_Main_C");
static_assert(sizeof(UABP_Facial_Cine_Main_C) == 0x003060, "Wrong size on UABP_Facial_Cine_Main_C");
static_assert(offsetof(UABP_Facial_Cine_Main_C, UberGraphFrame) == 0x000370, "Member 'UABP_Facial_Cine_Main_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_Facial_Cine_Main_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimBlueprintExtension_PropertyAccess) == 0x0003B8, "Member 'UABP_Facial_Cine_Main_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimBlueprintExtension_Base) == 0x0003C0, "Member 'UABP_Facial_Cine_Main_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ApplyAdditive_5) == 0x0003C8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_69) == 0x000490, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_69' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ApplyAdditive_4) == 0x0004D8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0005A0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_LayeredBoneBlend) == 0x0006B8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_BlendListByEnum_1) == 0x0007A8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_68) == 0x0007F0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_68' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_67) == 0x000838, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_67' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_66) == 0x000880, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_66' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_65) == 0x0008C8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_65' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_64) == 0x000910, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_64' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_63) == 0x000958, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_63' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_62) == 0x0009A0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_62' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_61) == 0x0009E8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_61' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_60) == 0x000A30, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_60' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_59) == 0x000A78, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_59' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_58) == 0x000AC0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_58' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_57) == 0x000B08, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_57' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_56) == 0x000B50, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_56' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_55) == 0x000B98, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_55' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_54) == 0x000BE0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_54' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_53) == 0x000C28, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_53' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_52) == 0x000C70, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_52' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_51) == 0x000CB8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_51' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_50) == 0x000D00, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_50' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_49) == 0x000D48, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_49' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_48) == 0x000D90, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_48' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_47) == 0x000DD8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_47' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SaveCachedPose_5) == 0x000E20, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_BlendListByEnum) == 0x000EA0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_46) == 0x000EE8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_46' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_45) == 0x000F30, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_44) == 0x000F78, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_43) == 0x000FC0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_42) == 0x001008, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_41) == 0x001050, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_40) == 0x001098, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_39) == 0x0010E0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_38) == 0x001128, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_37) == 0x001170, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_36) == 0x0011B8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_35) == 0x001200, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_34) == 0x001248, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_33) == 0x001290, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_32) == 0x0012D8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_31) == 0x001320, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_30) == 0x001368, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_29) == 0x0013B0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_28) == 0x0013F8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_27) == 0x001440, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_26) == 0x001488, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_25) == 0x0014D0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ApplyAdditive_3) == 0x001518, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_8) == 0x0015E0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_24) == 0x001608, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_TwoWayBlend) == 0x001650, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_23) == 0x001718, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_22) == 0x001760, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_21) == 0x0017A8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_20) == 0x0017F0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_19) == 0x001838, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_18) == 0x001880, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_17) == 0x0018C8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_16) == 0x001910, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_15) == 0x001958, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_14) == 0x0019A0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_13) == 0x0019E8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_12) == 0x001A30, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_11) == 0x001A78, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_10) == 0x001AC0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_Slot_1) == 0x001B08, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_9) == 0x001B50, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_8) == 0x001B98, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SaveCachedPose_4) == 0x001BE0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_TransitionResult_3) == 0x001C60, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_TransitionResult_2) == 0x001C88, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_7) == 0x001CB0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_StateResult_3) == 0x001CF8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_StateResult_2) == 0x001D18, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_StateMachine_1) == 0x001D38, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_CopyPoseFromMesh) == 0x001E00, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_7) == 0x001F58, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_Slot) == 0x001F80, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_CurveBlend) == 0x001FC8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_CurveBlend' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_BlendListByBool_1) == 0x002000, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SaveCachedPose_3) == 0x002048, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_6) == 0x0020C8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_5) == 0x0020F0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_4) == 0x002118, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_TransitionResult_1) == 0x002140, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_TransitionResult) == 0x002168, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ApplyAdditive_2) == 0x002190, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_3) == 0x002258, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_6) == 0x002280, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_StateResult_1) == 0x0022C8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ApplyAdditive_1) == 0x0022E8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_2) == 0x0023B0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_5) == 0x0023D8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_StateResult) == 0x002420, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_StateMachine) == 0x002440, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SaveCachedPose_2) == 0x002508, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose_1) == 0x002588, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ModifyCurve) == 0x0025B0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ModifyCurve' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ApplyAdditive) == 0x0026D0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_4) == 0x002798, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_CurveModifyIntensity) == 0x0027E0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_CurveModifyIntensity' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SaveCachedPose_1) == 0x002808, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_Root) == 0x002888, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_ControlRig) == 0x0028A8, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_3) == 0x002D78, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_2) == 0x002DC0, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer_1) == 0x002E08, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SequencePlayer) == 0x002E50, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_SaveCachedPose) == 0x002E98, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_UseCachedPose) == 0x002F18, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, AnimGraphNode_BlendListByBool) == 0x002F40, "Member 'UABP_Facial_Cine_Main_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, __CustomProperty_OffsetTransform_Rotation_2F764CB54776461C3381AD85CB8FF976) == 0x002F90, "Member 'UABP_Facial_Cine_Main_C::__CustomProperty_OffsetTransform_Rotation_2F764CB54776461C3381AD85CB8FF976' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyesLookAt_Horizontal) == 0x002FB0, "Member 'UABP_Facial_Cine_Main_C::EyesLookAt_Horizontal' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyesLookAt_Vertical) == 0x002FB4, "Member 'UABP_Facial_Cine_Main_C::EyesLookAt_Vertical' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyesLookAt_Alpha) == 0x002FB8, "Member 'UABP_Facial_Cine_Main_C::EyesLookAt_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, As_BP_Cine_Character_Main) == 0x002FC0, "Member 'UABP_Facial_Cine_Main_C::As_BP_Cine_Character_Main' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, VectorLength) == 0x002FC8, "Member 'UABP_Facial_Cine_Main_C::VectorLength' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, Expression_1) == 0x002FD0, "Member 'UABP_Facial_Cine_Main_C::Expression_1' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, Expression_1_Strength) == 0x002FD8, "Member 'UABP_Facial_Cine_Main_C::Expression_1_Strength' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, Expression_2) == 0x002FE0, "Member 'UABP_Facial_Cine_Main_C::Expression_2' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, Expression_2_Strength) == 0x002FE8, "Member 'UABP_Facial_Cine_Main_C::Expression_2_Strength' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, ExpressionsBlendTime) == 0x002FF0, "Member 'UABP_Facial_Cine_Main_C::ExpressionsBlendTime' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, RemapFloatFacialAngle) == 0x002FF8, "Member 'UABP_Facial_Cine_Main_C::RemapFloatFacialAngle' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, ManualFacialAnimAlpha) == 0x003000, "Member 'UABP_Facial_Cine_Main_C::ManualFacialAnimAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, OpenEyes) == 0x003004, "Member 'UABP_Facial_Cine_Main_C::OpenEyes' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, UseFishlouth) == 0x003008, "Member 'UABP_Facial_Cine_Main_C::UseFishlouth' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, UpperLipRemoveAlpha) == 0x00300C, "Member 'UABP_Facial_Cine_Main_C::UpperLipRemoveAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, Head_LeftRight) == 0x003010, "Member 'UABP_Facial_Cine_Main_C::Head_LeftRight' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, Head_UpDown) == 0x003018, "Member 'UABP_Facial_Cine_Main_C::Head_UpDown' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, Eyes_Shaking_Alpha) == 0x003020, "Member 'UABP_Facial_Cine_Main_C::Eyes_Shaking_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, JawOpenAlpha) == 0x003028, "Member 'UABP_Facial_Cine_Main_C::JawOpenAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyeLeftRight) == 0x003030, "Member 'UABP_Facial_Cine_Main_C::EyeLeftRight' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyeUpDown) == 0x003034, "Member 'UABP_Facial_Cine_Main_C::EyeUpDown' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, LipSyncCurveBlendProfile) == 0x003038, "Member 'UABP_Facial_Cine_Main_C::LipSyncCurveBlendProfile' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, CurveIntensityProfile) == 0x003040, "Member 'UABP_Facial_Cine_Main_C::CurveIntensityProfile' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyesUp_Dev) == 0x003048, "Member 'UABP_Facial_Cine_Main_C::EyesUp_Dev' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyesDown_Dev) == 0x00304C, "Member 'UABP_Facial_Cine_Main_C::EyesDown_Dev' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyeLeft_Dev) == 0x003050, "Member 'UABP_Facial_Cine_Main_C::EyeLeft_Dev' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, EyeRight_Dev) == 0x003054, "Member 'UABP_Facial_Cine_Main_C::EyeRight_Dev' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, OpenMouth) == 0x003058, "Member 'UABP_Facial_Cine_Main_C::OpenMouth' has a wrong offset!");
static_assert(offsetof(UABP_Facial_Cine_Main_C, DisableAnimProfile) == 0x00305C, "Member 'UABP_Facial_Cine_Main_C::DisableAnimProfile' has a wrong offset!");

}

