#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameFlowTransitionSystem

#include "Basic.hpp"

#include "S_InputLockParameters_structs.hpp"
#include "S_GameplayPauseParameters_structs.hpp"
#include "Engine_structs.hpp"
#include "E_GameFlowTransitionPhase_structs.hpp"
#include "S_GameFlowTransitionType_structs.hpp"
#include "S_GameFlowTransitionRequest_structs.hpp"


namespace SDK::Params
{

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ExecuteUbergraph_BP_GameFlowTransitionSystem
// 0x0010 (0x0010 - 0x0000)
struct BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateTransitionSystem_DeltaSeconds_ImplicitCast; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem) == 0x000010, "Wrong size on BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem, EntryPoint) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem, CallFunc_UpdateTransitionSystem_DeltaSeconds_ImplicitCast) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_ExecuteUbergraph_BP_GameFlowTransitionSystem::CallFunc_UpdateTransitionSystem_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.GetFadeAmountDuringFadeOut
// 0x0030 (0x0030 - 0x0000)
struct BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut) == 0x000030, "Wrong size on BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut, ReturnValue) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000009, "Member 'BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'BP_GameFlowTransitionSystem_C_GetFadeAmountDuringFadeOut::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.GetTransitionPhase
// 0x0001 (0x0001 - 0x0000)
struct BP_GameFlowTransitionSystem_C_GetTransitionPhase final
{
public:
	E_GameFlowTransitionPhase                     Phase;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_GetTransitionPhase) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_GetTransitionPhase");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_GetTransitionPhase) == 0x000001, "Wrong size on BP_GameFlowTransitionSystem_C_GetTransitionPhase");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_GetTransitionPhase, Phase) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_GetTransitionPhase::Phase' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.IsTransitionStateValid
// 0x0002 (0x0002 - 0x0000)
struct BP_GameFlowTransitionSystem_C_IsTransitionStateValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_IsTransitionStateValid) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_IsTransitionStateValid");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_IsTransitionStateValid) == 0x000002, "Wrong size on BP_GameFlowTransitionSystem_C_IsTransitionStateValid");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_IsTransitionStateValid, ReturnValue) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_IsTransitionStateValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_IsTransitionStateValid, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_GameFlowTransitionSystem_C_IsTransitionStateValid::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.OnTransitionPhaseChange
// 0x0001 (0x0001 - 0x0000)
struct BP_GameFlowTransitionSystem_C_OnTransitionPhaseChange final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_OnTransitionPhaseChange) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_OnTransitionPhaseChange");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_OnTransitionPhaseChange) == 0x000001, "Wrong size on BP_GameFlowTransitionSystem_C_OnTransitionPhaseChange");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_OnTransitionPhaseChange, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_OnTransitionPhaseChange::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameFlowTransitionSystem_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameFlowTransitionSystem_C_ReceiveTick");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameFlowTransitionSystem_C_ReceiveTick");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ReleaseTransition
// 0x0008 (0x0008 - 0x0000)
struct BP_GameFlowTransitionSystem_C_ReleaseTransition final
{
public:
	double                                        OverrideFadeOutTransition;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_ReleaseTransition) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_ReleaseTransition");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_ReleaseTransition) == 0x000008, "Wrong size on BP_GameFlowTransitionSystem_C_ReleaseTransition");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_ReleaseTransition, OverrideFadeOutTransition) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_ReleaseTransition::OverrideFadeOutTransition' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.RequestTransition
// 0x0018 (0x0018 - 0x0000)
struct BP_GameFlowTransitionSystem_C_RequestTransition final
{
public:
	struct FS_GameFlowTransitionRequest           TransitionRequest;                                 // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitionStateValid_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitionRequestValid_IsValid;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_RequestTransition) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_RequestTransition");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_RequestTransition) == 0x000018, "Wrong size on BP_GameFlowTransitionSystem_C_RequestTransition");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_RequestTransition, TransitionRequest) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_RequestTransition::TransitionRequest' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_RequestTransition, CallFunc_IsTransitionStateValid_ReturnValue) == 0x000010, "Member 'BP_GameFlowTransitionSystem_C_RequestTransition::CallFunc_IsTransitionStateValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_RequestTransition, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_GameFlowTransitionSystem_C_RequestTransition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_RequestTransition, CallFunc_IsTransitionRequestValid_IsValid) == 0x000012, "Member 'BP_GameFlowTransitionSystem_C_RequestTransition::CallFunc_IsTransitionRequestValid_IsValid' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_RequestTransition, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BP_GameFlowTransitionSystem_C_RequestTransition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.SetGameplayPaused
// 0x0068 (0x0068 - 0x0000)
struct BP_GameFlowTransitionSystem_C_SetGameplayPaused final
{
public:
	bool                                          Paused;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InputLockParameters                 K2Node_MakeStruct_S_InputLockParameters;           // 0x0001(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputLockComponent_C*               CallFunc_GetInputLockSystem_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GameplayPauseParameters             K2Node_MakeStruct_S_GameplayPauseParameters;       // 0x0020(0x0030)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_SetGameplayPaused) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_SetGameplayPaused");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_SetGameplayPaused) == 0x000068, "Wrong size on BP_GameFlowTransitionSystem_C_SetGameplayPaused");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, Paused) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::Paused' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, K2Node_MakeStruct_S_InputLockParameters) == 0x000001, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::K2Node_MakeStruct_S_InputLockParameters' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, CallFunc_GetInputLockSystem_ReturnValue) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::CallFunc_GetInputLockSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, CallFunc_GetInteractionSystem_ReturnValue) == 0x000010, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, K2Node_MakeStruct_S_GameplayPauseParameters) == 0x000020, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::K2Node_MakeStruct_S_GameplayPauseParameters' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000058, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetGameplayPaused, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_GameFlowTransitionSystem_C_SetGameplayPaused::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.SetIsTransitionInHold
// 0x0001 (0x0001 - 0x0000)
struct BP_GameFlowTransitionSystem_C_SetIsTransitionInHold final
{
public:
	bool                                          Hold;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_SetIsTransitionInHold) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_SetIsTransitionInHold");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_SetIsTransitionInHold) == 0x000001, "Wrong size on BP_GameFlowTransitionSystem_C_SetIsTransitionInHold");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetIsTransitionInHold, Hold) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_SetIsTransitionInHold::Hold' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.SetTransitionPhase
// 0x0098 (0x0098 - 0x0000)
struct BP_GameFlowTransitionSystem_C_SetTransitionPhase final
{
public:
	E_GameFlowTransitionPhase                     Phase;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_SetTransitionPhase) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_SetTransitionPhase");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_SetTransitionPhase) == 0x000098, "Wrong size on BP_GameFlowTransitionSystem_C_SetTransitionPhase");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetTransitionPhase, Phase) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_SetTransitionPhase::Phase' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetTransitionPhase, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_SetTransitionPhase::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetTransitionPhase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_GameFlowTransitionSystem_C_SetTransitionPhase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetTransitionPhase, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_GameFlowTransitionSystem_C_SetTransitionPhase::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetTransitionPhase, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_GameFlowTransitionSystem_C_SetTransitionPhase::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetTransitionPhase, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_GameFlowTransitionSystem_C_SetTransitionPhase::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_SetTransitionPhase, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_GameFlowTransitionSystem_C_SetTransitionPhase::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.StartNewTransition
// 0x0020 (0x0020 - 0x0000)
struct BP_GameFlowTransitionSystem_C_StartNewTransition final
{
public:
	struct FS_GameFlowTransitionRequest           TransitionRequest;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_GameFlowTransitionRequest           local_Request;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_StartNewTransition) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_StartNewTransition");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_StartNewTransition) == 0x000020, "Wrong size on BP_GameFlowTransitionSystem_C_StartNewTransition");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_StartNewTransition, TransitionRequest) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_StartNewTransition::TransitionRequest' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_StartNewTransition, local_Request) == 0x000010, "Member 'BP_GameFlowTransitionSystem_C_StartNewTransition::local_Request' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.StopBlackScreenTransition
// 0x0008 (0x0008 - 0x0000)
struct BP_GameFlowTransitionSystem_C_StopBlackScreenTransition final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_StopBlackScreenTransition) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_StopBlackScreenTransition");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_StopBlackScreenTransition) == 0x000008, "Wrong size on BP_GameFlowTransitionSystem_C_StopBlackScreenTransition");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_StopBlackScreenTransition, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_StopBlackScreenTransition::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.StopTransitionOfType
// 0x0002 (0x0002 - 0x0000)
struct BP_GameFlowTransitionSystem_C_StopTransitionOfType final
{
public:
	ES_GameFlowTransitionType                     TransitionType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_StopTransitionOfType) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_StopTransitionOfType");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_StopTransitionOfType) == 0x000002, "Wrong size on BP_GameFlowTransitionSystem_C_StopTransitionOfType");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_StopTransitionOfType, TransitionType) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_StopTransitionOfType::TransitionType' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_StopTransitionOfType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_GameFlowTransitionSystem_C_StopTransitionOfType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateBlackScreenFadeIn
// 0x0040 (0x0040 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn final
{
public:
	double                                        Temp_wildcard_Variable;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetManualCameraFade_InFadeAmount_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn) == 0x000040, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, Temp_wildcard_Variable) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, CallFunc_FMin_ReturnValue) == 0x000028, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn, CallFunc_SetManualCameraFade_InFadeAmount_ImplicitCast) == 0x000038, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeIn::CallFunc_SetManualCameraFade_InFadeAmount_ImplicitCast' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateBlackScreenFadeOut
// 0x0020 (0x0020 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut final
{
public:
	double                                        CallFunc_GetFadeAmountDuringFadeOut_ReturnValue;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_wildcard_Variable;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetManualCameraFade_InFadeAmount_ImplicitCast; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut) == 0x000020, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut, CallFunc_GetFadeAmountDuringFadeOut_ReturnValue) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut::CallFunc_GetFadeAmountDuringFadeOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut, Temp_wildcard_Variable) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut, CallFunc_SetManualCameraFade_InFadeAmount_ImplicitCast) == 0x00001C, "Member 'BP_GameFlowTransitionSystem_C_UpdateBlackScreenFadeOut::CallFunc_SetManualCameraFade_InFadeAmount_ImplicitCast' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateCurrentTransition
// 0x0010 (0x0010 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateCurrentTransition final
{
public:
	double                                        ElapsedSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateCurrentTransition) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateCurrentTransition");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateCurrentTransition) == 0x000010, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateCurrentTransition");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateCurrentTransition, ElapsedSeconds) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateCurrentTransition::ElapsedSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateCurrentTransition, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_UpdateCurrentTransition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateElapsedTime
// 0x0010 (0x0010 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateElapsedTime final
{
public:
	double                                        ElapsedSeconds;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateElapsedTime) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateElapsedTime");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateElapsedTime) == 0x000010, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateElapsedTime");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateElapsedTime, ElapsedSeconds) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateElapsedTime::ElapsedSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateElapsedTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_UpdateElapsedTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateFadeInOfType
// 0x0002 (0x0002 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateFadeInOfType final
{
public:
	ES_GameFlowTransitionType                     TransitionType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateFadeInOfType) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateFadeInOfType");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateFadeInOfType) == 0x000002, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateFadeInOfType");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateFadeInOfType, TransitionType) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateFadeInOfType::TransitionType' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateFadeInOfType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_GameFlowTransitionSystem_C_UpdateFadeInOfType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateFadeOutOfType
// 0x0002 (0x0002 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType final
{
public:
	ES_GameFlowTransitionType                     TransitionType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType) == 0x000002, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType, TransitionType) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType::TransitionType' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_GameFlowTransitionSystem_C_UpdateFadeOutOfType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateFadeOutTransitionOfType
// 0x0002 (0x0002 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType final
{
public:
	ES_GameFlowTransitionType                     TransitionType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType) == 0x000002, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType, TransitionType) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType::TransitionType' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_GameFlowTransitionSystem_C_UpdateFadeOutTransitionOfType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateTransitionSystem
// 0x0010 (0x0010 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateTransitionSystem final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransitionStateValid_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateTransitionSystem) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateTransitionSystem");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateTransitionSystem) == 0x000010, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateTransitionSystem");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateTransitionSystem, DeltaSeconds) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateTransitionSystem::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateTransitionSystem, CallFunc_IsTransitionStateValid_ReturnValue) == 0x000008, "Member 'BP_GameFlowTransitionSystem_C_UpdateTransitionSystem::CallFunc_IsTransitionStateValid_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.UpdateWait
// 0x0002 (0x0002 - 0x0000)
struct BP_GameFlowTransitionSystem_C_UpdateWait final
{
public:
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_UpdateWait) == 0x000001, "Wrong alignment on BP_GameFlowTransitionSystem_C_UpdateWait");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_UpdateWait) == 0x000002, "Wrong size on BP_GameFlowTransitionSystem_C_UpdateWait");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateWait, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_UpdateWait::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_UpdateWait, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_GameFlowTransitionSystem_C_UpdateWait::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GameFlowTransitionSystem.BP_GameFlowTransitionSystem_C.ValidateTransitionRequest
// 0x0010 (0x0010 - 0x0000)
struct BP_GameFlowTransitionSystem_C_ValidateTransitionRequest final
{
public:
	struct FS_GameFlowTransitionRequest           TransitionRequest;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameFlowTransitionSystem_C_ValidateTransitionRequest) == 0x000008, "Wrong alignment on BP_GameFlowTransitionSystem_C_ValidateTransitionRequest");
static_assert(sizeof(BP_GameFlowTransitionSystem_C_ValidateTransitionRequest) == 0x000010, "Wrong size on BP_GameFlowTransitionSystem_C_ValidateTransitionRequest");
static_assert(offsetof(BP_GameFlowTransitionSystem_C_ValidateTransitionRequest, TransitionRequest) == 0x000000, "Member 'BP_GameFlowTransitionSystem_C_ValidateTransitionRequest::TransitionRequest' has a wrong offset!");

}

