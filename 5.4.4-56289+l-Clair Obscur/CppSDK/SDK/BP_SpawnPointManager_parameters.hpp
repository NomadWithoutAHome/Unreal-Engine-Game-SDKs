#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SpawnPointManager

#include "Basic.hpp"

#include "FLevelDataEntry_structs.hpp"
#include "S_ChangeLevelParameters_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_AreaAudioParameters_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.ComputeChangeLevelParameters
// 0x0003 (0x0003 - 0x0000)
struct BP_SpawnPointManager_C_ComputeChangeLevelParameters final
{
public:
	struct FS_ChangeLevelParameters               S_ChangeLevelParameters;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingDynamicSpawnPoint_ReturnValue;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ChangeLevelParameters               K2Node_MakeStruct_S_ChangeLevelParameters;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_ComputeChangeLevelParameters) == 0x000001, "Wrong alignment on BP_SpawnPointManager_C_ComputeChangeLevelParameters");
static_assert(sizeof(BP_SpawnPointManager_C_ComputeChangeLevelParameters) == 0x000003, "Wrong size on BP_SpawnPointManager_C_ComputeChangeLevelParameters");
static_assert(offsetof(BP_SpawnPointManager_C_ComputeChangeLevelParameters, S_ChangeLevelParameters) == 0x000000, "Member 'BP_SpawnPointManager_C_ComputeChangeLevelParameters::S_ChangeLevelParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_ComputeChangeLevelParameters, CallFunc_IsUsingDynamicSpawnPoint_ReturnValue) == 0x000001, "Member 'BP_SpawnPointManager_C_ComputeChangeLevelParameters::CallFunc_IsUsingDynamicSpawnPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_ComputeChangeLevelParameters, K2Node_MakeStruct_S_ChangeLevelParameters) == 0x000002, "Member 'BP_SpawnPointManager_C_ComputeChangeLevelParameters::K2Node_MakeStruct_S_ChangeLevelParameters' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.DEBUG_ActivateLightingScenarioForSpawnPoint
// 0x0130 (0x0130 - 0x0000)
struct BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint final
{
public:
	struct FGameplayTag                           SpawnPointTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetSpawnPointByTag_SpawnPoint;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpawnPointByTag_Found;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LightingScenarioReference_C*        K2Node_DynamicCast_AsBP_Lighting_Scenario_Reference; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint) == 0x000008, "Wrong alignment on BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint");
static_assert(sizeof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint) == 0x000130, "Wrong size on BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, SpawnPointTag) == 0x000000, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::SpawnPointTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_GetSpawnPointByTag_SpawnPoint) == 0x000008, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_GetSpawnPointByTag_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_GetSpawnPointByTag_Found) == 0x000010, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_GetSpawnPointByTag_Found' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000018, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000038, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000118, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, K2Node_DynamicCast_AsBP_Lighting_Scenario_Reference) == 0x000120, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::K2Node_DynamicCast_AsBP_Lighting_Scenario_Reference' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint, CallFunc_IsValid_ReturnValue) == 0x000129, "Member 'BP_SpawnPointManager_C_DEBUG_ActivateLightingScenarioForSpawnPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.GetOnLoadMapTransform
// 0x05D0 (0x05D0 - 0x0000)
struct BP_SpawnPointManager_C_GetOnLoadMapTransform final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               SpawnPoint;                                        // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LightingScenario;                          // 0x0080(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 AreaAudioParameters;                               // 0x00A8(0x0038)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultCameraRotation;                             // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DefaultTransform;                                  // 0x0100(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetOnLoadMapTransformRegular_SpawnTransform; // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetOnLoadMapTransformRegular_CameraRotation; // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetOnLoadMapTransformRegular_SpawnPoint;  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> CallFunc_GetOnLoadMapTransformRegular_LightingScenario; // 0x01E0(0x0028)(HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 CallFunc_GetOnLoadMapTransformRegular_AreaAudioParameters; // 0x0208(0x0038)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelData_Found;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_GetLevelData_LevelData;                   // 0x0248(0x01B0)(HasGetValueTypeHash)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOnLoadMapTransformForWorldMap_SpawnTransform; // 0x0400(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetOnLoadMapTransformForWorldMap_CameraRotation; // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetOnLoadMapTransformForWorldMap_SpawnPoint; // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> CallFunc_GetOnLoadMapTransformForWorldMap_LightingScenario; // 0x0480(0x0028)(HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 CallFunc_GetOnLoadMapTransformForWorldMap_AreaAudioParameters; // 0x04A8(0x0038)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0xF];                                      // 0x04E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOnLoadMapTransformAfterBattle_SpawnTransform; // 0x04F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetOnLoadMapTransformAfterBattle_CameraRotation; // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetOnLoadMapTransformAfterBattle_SpawnPoint; // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> CallFunc_GetOnLoadMapTransformAfterBattle_LightingScenario; // 0x0570(0x0028)(HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 CallFunc_GetOnLoadMapTransformAfterBattle_AreaAudioParameters; // 0x0598(0x0038)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_GetOnLoadMapTransform) == 0x000010, "Wrong alignment on BP_SpawnPointManager_C_GetOnLoadMapTransform");
static_assert(sizeof(BP_SpawnPointManager_C_GetOnLoadMapTransform) == 0x0005D0, "Wrong size on BP_SpawnPointManager_C_GetOnLoadMapTransform");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, SpawnTransform) == 0x000000, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CameraRotation) == 0x000060, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, SpawnPoint) == 0x000078, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, LightingScenario) == 0x000080, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, AreaAudioParameters) == 0x0000A8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, DefaultCameraRotation) == 0x0000E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::DefaultCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, DefaultTransform) == 0x000100, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::DefaultTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformRegular_SpawnTransform) == 0x000160, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformRegular_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformRegular_CameraRotation) == 0x0001C0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformRegular_CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformRegular_SpawnPoint) == 0x0001D8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformRegular_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformRegular_LightingScenario) == 0x0001E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformRegular_LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformRegular_AreaAudioParameters) == 0x000208, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformRegular_AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetLevelData_Found) == 0x000240, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetLevelData_Found' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetLevelData_LevelData) == 0x000248, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetLevelData_LevelData' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformForWorldMap_SpawnTransform) == 0x000400, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformForWorldMap_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformForWorldMap_CameraRotation) == 0x000460, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformForWorldMap_CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformForWorldMap_SpawnPoint) == 0x000478, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformForWorldMap_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformForWorldMap_LightingScenario) == 0x000480, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformForWorldMap_LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformForWorldMap_AreaAudioParameters) == 0x0004A8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformForWorldMap_AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0004E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformAfterBattle_SpawnTransform) == 0x0004F0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformAfterBattle_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformAfterBattle_CameraRotation) == 0x000550, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformAfterBattle_CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformAfterBattle_SpawnPoint) == 0x000568, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformAfterBattle_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformAfterBattle_LightingScenario) == 0x000570, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformAfterBattle_LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransform, CallFunc_GetOnLoadMapTransformAfterBattle_AreaAudioParameters) == 0x000598, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransform::CallFunc_GetOnLoadMapTransformAfterBattle_AreaAudioParameters' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.GetOnLoadMapTransformAfterBattle
// 0x0160 (0x0160 - 0x0000)
struct BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               SpawnPoint;                                        // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LightingScenario;                          // 0x0080(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 AreaAudioParameters;                               // 0x00A8(0x0038)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultCameraRotation;                             // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DefaultTransform;                                  // 0x0100(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle) == 0x000010, "Wrong alignment on BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle");
static_assert(sizeof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle) == 0x000160, "Wrong size on BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle, SpawnTransform) == 0x000000, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle, CameraRotation) == 0x000060, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle, SpawnPoint) == 0x000078, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle, LightingScenario) == 0x000080, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle::LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle, AreaAudioParameters) == 0x0000A8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle::AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle, DefaultCameraRotation) == 0x0000E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle::DefaultCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle, DefaultTransform) == 0x000100, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformAfterBattle::DefaultTransform' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.GetOnLoadMapTransformForWorldMap
// 0x02D0 (0x02D0 - 0x0000)
struct BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               SpawnPoint;                                        // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LightingScenario;                          // 0x0080(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 AreaAudioParameters;                               // 0x00A8(0x0038)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultCameraRotation;                             // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DefaultTransform;                                  // 0x0100(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_FindMapSpawnPointWithTag_SpawnPoint;      // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8[0x8];                                      // 0x01E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetOnLoadMapTransformRegular_SpawnTransform; // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetOnLoadMapTransformRegular_CameraRotation; // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetOnLoadMapTransformRegular_SpawnPoint;  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> CallFunc_GetOnLoadMapTransformRegular_LightingScenario; // 0x0270(0x0028)(HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 CallFunc_GetOnLoadMapTransformRegular_AreaAudioParameters; // 0x0298(0x0038)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap) == 0x000010, "Wrong alignment on BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap");
static_assert(sizeof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap) == 0x0002D0, "Wrong size on BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, SpawnTransform) == 0x000000, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CameraRotation) == 0x000060, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, SpawnPoint) == 0x000078, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, LightingScenario) == 0x000080, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, AreaAudioParameters) == 0x0000A8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, DefaultCameraRotation) == 0x0000E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::DefaultCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, DefaultTransform) == 0x000100, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::DefaultTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_FindMapSpawnPointWithTag_SpawnPoint) == 0x000160, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_FindMapSpawnPointWithTag_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000168, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_BreakTransform_Location) == 0x000170, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_BreakTransform_Rotation) == 0x000188, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_BreakTransform_Scale) == 0x0001A0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x0001B8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, K2Node_MakeArray_Array) == 0x0001C0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_Not_PreBool_ReturnValue) == 0x0001D0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_Format_ReturnValue) == 0x0001D8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_GetOnLoadMapTransformRegular_SpawnTransform) == 0x0001F0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_GetOnLoadMapTransformRegular_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_GetOnLoadMapTransformRegular_CameraRotation) == 0x000250, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_GetOnLoadMapTransformRegular_CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_GetOnLoadMapTransformRegular_SpawnPoint) == 0x000268, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_GetOnLoadMapTransformRegular_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_GetOnLoadMapTransformRegular_LightingScenario) == 0x000270, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_GetOnLoadMapTransformRegular_LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap, CallFunc_GetOnLoadMapTransformRegular_AreaAudioParameters) == 0x000298, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformForWorldMap::CallFunc_GetOnLoadMapTransformRegular_AreaAudioParameters' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.GetOnLoadMapTransformRegular
// 0x0290 (0x0290 - 0x0000)
struct BP_SpawnPointManager_C_GetOnLoadMapTransformRegular final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               SpawnPoint;                                        // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LightingScenario;                          // 0x0080(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 AreaAudioParameters;                               // 0x00A8(0x0038)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultCameraRotation;                             // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DefaultTransform;                                  // 0x0100(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_SpawnTransform; // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_CameraRotation; // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_SpawnPoint; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_LightingScenario; // 0x01E0(0x0028)(HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_AreaAudioParameters; // 0x0208(0x0038)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular) == 0x000010, "Wrong alignment on BP_SpawnPointManager_C_GetOnLoadMapTransformRegular");
static_assert(sizeof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular) == 0x000290, "Wrong size on BP_SpawnPointManager_C_GetOnLoadMapTransformRegular");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, SpawnTransform) == 0x000000, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CameraRotation) == 0x000060, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, SpawnPoint) == 0x000078, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, LightingScenario) == 0x000080, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, AreaAudioParameters) == 0x0000A8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, DefaultCameraRotation) == 0x0000E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::DefaultCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, DefaultTransform) == 0x000100, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::DefaultTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_SpawnTransform) == 0x000160, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_CameraRotation) == 0x0001C0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_SpawnPoint) == 0x0001D8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_LightingScenario) == 0x0001E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_AreaAudioParameters) == 0x000208, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_GetOnLoadMapTransformWithStaticSpawnPoint_AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000240, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_BreakTransform_Location) == 0x000248, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_BreakTransform_Rotation) == 0x000260, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformRegular, CallFunc_BreakTransform_Scale) == 0x000278, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformRegular::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.GetOnLoadMapTransformWithStaticSpawnPoint
// 0x02B0 (0x02B0 - 0x0000)
struct BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CameraRotation;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_jRPG_MapSpawnPoint_C*               SpawnPoint;                                        // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LightingScenario;                          // 0x0080(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 AreaAudioParameters;                               // 0x00A8(0x0038)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DefaultCameraRotation;                             // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DefaultTransform;                                  // 0x0100(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetStaticSpawnPointTag_SpawnPointTag;     // 0x0160(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_FindMapSpawnPointWithTag_SpawnPoint;      // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0180(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0190(0x0048)(HasGetValueTypeHash)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSpawnTransfrom_SpawnTransform;         // 0x01E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0240(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint) == 0x000010, "Wrong alignment on BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint");
static_assert(sizeof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint) == 0x0002B0, "Wrong size on BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, SpawnTransform) == 0x000000, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CameraRotation) == 0x000060, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, SpawnPoint) == 0x000078, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, LightingScenario) == 0x000080, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::LightingScenario' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, AreaAudioParameters) == 0x0000A8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::AreaAudioParameters' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, DefaultCameraRotation) == 0x0000E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::DefaultCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, DefaultTransform) == 0x000100, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::DefaultTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_GetStaticSpawnPointTag_SpawnPointTag) == 0x000160, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_GetStaticSpawnPointTag_SpawnPointTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_FindMapSpawnPointWithTag_SpawnPoint) == 0x000168, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_FindMapSpawnPointWithTag_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000170, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_Conv_StringToText_ReturnValue) == 0x000180, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000190, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_GetSpawnTransfrom_SpawnTransform) == 0x0001E0, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_GetSpawnTransfrom_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, K2Node_MakeArray_Array) == 0x000240, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_BreakTransform_Location) == 0x000250, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_BreakTransform_Rotation) == 0x000268, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_BreakTransform_Scale) == 0x000280, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_Format_ReturnValue) == 0x000298, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint, CallFunc_IsValid_ReturnValue) == 0x0002A8, "Member 'BP_SpawnPointManager_C_GetOnLoadMapTransformWithStaticSpawnPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.GetSpawnPointByTag
// 0x0028 (0x0028 - 0x0000)
struct BP_SpawnPointManager_C_GetSpawnPointByTag final
{
public:
	struct FGameplayTag                           SpawnPointTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_MapSpawnPoint_C*               SpawnPoint;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_GetSpawnPointByTag) == 0x000008, "Wrong alignment on BP_SpawnPointManager_C_GetSpawnPointByTag");
static_assert(sizeof(BP_SpawnPointManager_C_GetSpawnPointByTag) == 0x000028, "Wrong size on BP_SpawnPointManager_C_GetSpawnPointByTag");
static_assert(offsetof(BP_SpawnPointManager_C_GetSpawnPointByTag, SpawnPointTag) == 0x000000, "Member 'BP_SpawnPointManager_C_GetSpawnPointByTag::SpawnPointTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetSpawnPointByTag, SpawnPoint) == 0x000008, "Member 'BP_SpawnPointManager_C_GetSpawnPointByTag::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetSpawnPointByTag, Found) == 0x000010, "Member 'BP_SpawnPointManager_C_GetSpawnPointByTag::Found' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetSpawnPointByTag, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_SpawnPointManager_C_GetSpawnPointByTag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetSpawnPointByTag, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'BP_SpawnPointManager_C_GetSpawnPointByTag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.GetStaticSpawnPointTag
// 0x000C (0x000C - 0x0000)
struct BP_SpawnPointManager_C_GetStaticSpawnPointTag final
{
public:
	struct FGameplayTag                           SpawnPointTag;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_GetStaticSpawnPointTag) == 0x000004, "Wrong alignment on BP_SpawnPointManager_C_GetStaticSpawnPointTag");
static_assert(sizeof(BP_SpawnPointManager_C_GetStaticSpawnPointTag) == 0x00000C, "Wrong size on BP_SpawnPointManager_C_GetStaticSpawnPointTag");
static_assert(offsetof(BP_SpawnPointManager_C_GetStaticSpawnPointTag, SpawnPointTag) == 0x000000, "Member 'BP_SpawnPointManager_C_GetStaticSpawnPointTag::SpawnPointTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_GetStaticSpawnPointTag, CallFunc_MatchesTag_ReturnValue) == 0x000008, "Member 'BP_SpawnPointManager_C_GetStaticSpawnPointTag::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.IsSpawnPointLoaded
// 0x0020 (0x0020 - 0x0000)
struct BP_SpawnPointManager_C_IsSpawnPointLoaded final
{
public:
	struct FGameplayTag                           SpawnPointTag;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoaded;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetSpawnPointByTag_SpawnPoint;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpawnPointByTag_Found;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_IsSpawnPointLoaded) == 0x000008, "Wrong alignment on BP_SpawnPointManager_C_IsSpawnPointLoaded");
static_assert(sizeof(BP_SpawnPointManager_C_IsSpawnPointLoaded) == 0x000020, "Wrong size on BP_SpawnPointManager_C_IsSpawnPointLoaded");
static_assert(offsetof(BP_SpawnPointManager_C_IsSpawnPointLoaded, SpawnPointTag) == 0x000000, "Member 'BP_SpawnPointManager_C_IsSpawnPointLoaded::SpawnPointTag' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_IsSpawnPointLoaded, IsLoaded) == 0x000008, "Member 'BP_SpawnPointManager_C_IsSpawnPointLoaded::IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_IsSpawnPointLoaded, CallFunc_GetSpawnPointByTag_SpawnPoint) == 0x000010, "Member 'BP_SpawnPointManager_C_IsSpawnPointLoaded::CallFunc_GetSpawnPointByTag_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_IsSpawnPointLoaded, CallFunc_GetSpawnPointByTag_Found) == 0x000018, "Member 'BP_SpawnPointManager_C_IsSpawnPointLoaded::CallFunc_GetSpawnPointByTag_Found' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.IsUsingDynamicSpawnPoint
// 0x0018 (0x0018 - 0x0000)
struct BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint) == 0x000008, "Wrong alignment on BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint");
static_assert(sizeof(BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint) == 0x000018, "Wrong size on BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint");
static_assert(offsetof(BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint, ReturnValue) == 0x000000, "Member 'BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000010, "Member 'BP_SpawnPointManager_C_IsUsingDynamicSpawnPoint::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BP_SpawnPointManager.BP_SpawnPointManager_C.RegisterSpawnPoint
// 0x01A0 (0x01A0 - 0x0000)
struct BP_SpawnPointManager_C_RegisterSpawnPoint final
{
public:
	class ABP_jRPG_MapSpawnPoint_C*               SpawnPoint;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_MapSpawnPoint_C*               CallFunc_GetSpawnPointByTag_SpawnPoint;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSpawnPointByTag_Found;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C0(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSpawnPointLoaded_IsLoaded;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SpawnPointManager_C_RegisterSpawnPoint) == 0x000008, "Wrong alignment on BP_SpawnPointManager_C_RegisterSpawnPoint");
static_assert(sizeof(BP_SpawnPointManager_C_RegisterSpawnPoint) == 0x0001A0, "Wrong size on BP_SpawnPointManager_C_RegisterSpawnPoint");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, SpawnPoint) == 0x000000, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_Format_ReturnValue) == 0x000018, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_GetSpawnPointByTag_SpawnPoint) == 0x000090, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_GetSpawnPointByTag_SpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_GetSpawnPointByTag_Found) == 0x000098, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_GetSpawnPointByTag_Found' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x0000A0, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000B0, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C0, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000D0, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_IsSpawnPointLoaded_IsLoaded) == 0x000170, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_IsSpawnPointLoaded_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, K2Node_MakeArray_Array_1) == 0x000178, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_Format_ReturnValue_1) == 0x000188, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SpawnPointManager_C_RegisterSpawnPoint, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'BP_SpawnPointManager_C_RegisterSpawnPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

