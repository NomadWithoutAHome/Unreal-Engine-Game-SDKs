#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimTarget_Parent

#include "Basic.hpp"

#include "BP_FreeAimTarget_Parent_classes.hpp"
#include "BP_FreeAimTarget_Parent_parameters.hpp"


namespace SDK
{

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FreeAimTarget_Parent_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.QA_TraceLinesOfSight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class FText>&              OutMessages                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   DrawTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Parent_C::QA_TraceLinesOfSight(const TArray<class FText>& OutMessages, float DrawTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "QA_TraceLinesOfSight");

	Params::BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight Parms{};

	Parms.OutMessages = std::move(OutMessages);
	Parms.DrawTime = DrawTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.IsFreeAimTargetDisabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsDisabled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Parent_C::IsFreeAimTargetDisabled(bool* IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "IsFreeAimTargetDisabled");

	Params::BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDisabled != nullptr)
		*IsDisabled = Parms.IsDisabled;
}


// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.FreeAimHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       PlayerCharacterWorld                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Parent_C::FreeAimHit(class ABP_jRPG_Character_World_C* PlayerCharacterWorld, const struct FVector& HitLocation, bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "FreeAimHit");

	Params::BP_FreeAimTarget_Parent_C_FreeAimHit Parms{};

	Parms.PlayerCharacterWorld = PlayerCharacterWorld;
	Parms.HitLocation = std::move(HitLocation);
	Parms.IsDisabled = IsDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.ExplorationAttacked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       PlayerCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   ImpactPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Parent_C::ExplorationAttacked(class ABP_jRPG_Character_World_C* PlayerCharacter, const struct FVector& ImpactPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "ExplorationAttacked");

	Params::BP_FreeAimTarget_Parent_C_ExplorationAttacked Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.ImpactPoint = std::move(ImpactPoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.ExecuteUbergraph_BP_FreeAimTarget_Parent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Parent_C::ExecuteUbergraph_BP_FreeAimTarget_Parent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "ExecuteUbergraph_BP_FreeAimTarget_Parent");

	Params::BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.EDITOR_ShowLinesOfSights
// (BlueprintCallable, BlueprintEvent)

void ABP_FreeAimTarget_Parent_C::EDITOR_ShowLinesOfSights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "EDITOR_ShowLinesOfSights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.CheckForErrors
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_FreeAimTarget_Parent_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Parent_C", "CheckForErrors");

	Params::BP_FreeAimTarget_Parent_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}

}

