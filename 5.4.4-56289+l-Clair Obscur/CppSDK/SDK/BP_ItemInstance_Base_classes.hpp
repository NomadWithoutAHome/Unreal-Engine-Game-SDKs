#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemInstance_Base

#include "Basic.hpp"

#include "SandFall_classes.hpp"
#include "Engine_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "E_jRPG_ItemType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemInstance_Base.BP_ItemInstance_Base_C
// 0x0150 (0x0178 - 0x0028)
class UBP_ItemInstance_Base_C : public UExtendedObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   ItemDefinitionID;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0038(0x0130)(Edit, BlueprintVisible, ContainsInstancedReference, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AcquiredPlayTime;                                  // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GenerateItem(struct FS_jRPG_Item_StaticData& ItemStaticItem, struct FS_LootContext& LootContext, class UBP_GeneratedItemInfo_Base_C** GeneratedItemInfo);
	int32 GetChromaValue();
	void LoadItemDefinition();
	void MergeItem(class UBP_ItemInstance_Base_C* OtherItemInstance);
	void BPI_ShouldShowNotification(bool* bShouldShow);
	void SetQuantity(int32 Quantity_0);
	double GetAcquiredPlayTime();
	void GetItemStaticData(struct FS_jRPG_Item_StaticData* ItemStaticData_0);
	void Initialize();
	int32 GetQuantity();
	class FName GetItemDefinitionID();
	void BPI_OnMarkNotificationAsRead(class UUserWidget* MarkCaller);
	void ExecuteUbergraph_BP_ItemInstance_Base(int32 EntryPoint);

	void GetItemType(E_jRPG_ItemType* Item_Type) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemInstance_Base_C">();
	}
	static class UBP_ItemInstance_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ItemInstance_Base_C>();
	}
};
static_assert(alignof(UBP_ItemInstance_Base_C) == 0x000008, "Wrong alignment on UBP_ItemInstance_Base_C");
static_assert(sizeof(UBP_ItemInstance_Base_C) == 0x000178, "Wrong size on UBP_ItemInstance_Base_C");
static_assert(offsetof(UBP_ItemInstance_Base_C, UberGraphFrame) == 0x000028, "Member 'UBP_ItemInstance_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ItemInstance_Base_C, ItemDefinitionID) == 0x000030, "Member 'UBP_ItemInstance_Base_C::ItemDefinitionID' has a wrong offset!");
static_assert(offsetof(UBP_ItemInstance_Base_C, ItemStaticData) == 0x000038, "Member 'UBP_ItemInstance_Base_C::ItemStaticData' has a wrong offset!");
static_assert(offsetof(UBP_ItemInstance_Base_C, Quantity) == 0x000168, "Member 'UBP_ItemInstance_Base_C::Quantity' has a wrong offset!");
static_assert(offsetof(UBP_ItemInstance_Base_C, AcquiredPlayTime) == 0x000170, "Member 'UBP_ItemInstance_Base_C::AcquiredPlayTime' has a wrong offset!");

}

