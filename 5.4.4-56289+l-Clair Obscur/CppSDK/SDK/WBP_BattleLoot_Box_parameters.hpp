#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BattleLoot_Box

#include "Basic.hpp"

#include "S_RolledLootEntry_structs.hpp"
#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "S_BattleRewards_structs.hpp"


namespace SDK::Params
{

// Function WBP_BattleLoot_Box.WBP_BattleLoot_Box_C.AddLootedCustomization
// 0x0140 (0x0140 - 0x0000)
struct WBP_BattleLoot_Box_C_AddLootedCustomization final
{
public:
	struct FS_jRPG_Item_DynamicData               Item;                                              // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_BattleLoot_Customization_C*        CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Box_C_AddLootedCustomization) == 0x000008, "Wrong alignment on WBP_BattleLoot_Box_C_AddLootedCustomization");
static_assert(sizeof(WBP_BattleLoot_Box_C_AddLootedCustomization) == 0x000140, "Wrong size on WBP_BattleLoot_Box_C_AddLootedCustomization");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedCustomization, Item) == 0x000000, "Member 'WBP_BattleLoot_Box_C_AddLootedCustomization::Item' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedCustomization, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000138, "Member 'WBP_BattleLoot_Box_C_AddLootedCustomization::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");

// Function WBP_BattleLoot_Box.WBP_BattleLoot_Box_C.AddLootedItem
// 0x0140 (0x0140 - 0x0000)
struct WBP_BattleLoot_Box_C_AddLootedItem final
{
public:
	struct FS_jRPG_Item_DynamicData               Item;                                              // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Box_C_AddLootedItem) == 0x000008, "Wrong alignment on WBP_BattleLoot_Box_C_AddLootedItem");
static_assert(sizeof(WBP_BattleLoot_Box_C_AddLootedItem) == 0x000140, "Wrong size on WBP_BattleLoot_Box_C_AddLootedItem");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedItem, Item) == 0x000000, "Member 'WBP_BattleLoot_Box_C_AddLootedItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedItem, CallFunc_Not_PreBool_ReturnValue) == 0x000138, "Member 'WBP_BattleLoot_Box_C_AddLootedItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000139, "Member 'WBP_BattleLoot_Box_C_AddLootedItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedItem, K2Node_SwitchEnum_CmpSuccess) == 0x00013A, "Member 'WBP_BattleLoot_Box_C_AddLootedItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedItem, CallFunc_BooleanOR_ReturnValue) == 0x00013B, "Member 'WBP_BattleLoot_Box_C_AddLootedItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_BattleLoot_Box.WBP_BattleLoot_Box_C.AddLootedOtherItem
// 0x0140 (0x0140 - 0x0000)
struct WBP_BattleLoot_Box_C_AddLootedOtherItem final
{
public:
	struct FS_jRPG_Item_DynamicData               Item;                                              // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UWBP_BattleLoot_Item_C*                 CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Box_C_AddLootedOtherItem) == 0x000008, "Wrong alignment on WBP_BattleLoot_Box_C_AddLootedOtherItem");
static_assert(sizeof(WBP_BattleLoot_Box_C_AddLootedOtherItem) == 0x000140, "Wrong size on WBP_BattleLoot_Box_C_AddLootedOtherItem");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedOtherItem, Item) == 0x000000, "Member 'WBP_BattleLoot_Box_C_AddLootedOtherItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedOtherItem, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000138, "Member 'WBP_BattleLoot_Box_C_AddLootedOtherItem::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");

// Function WBP_BattleLoot_Box.WBP_BattleLoot_Box_C.AddLootedPicto
// 0x0160 (0x0160 - 0x0000)
struct WBP_BattleLoot_Box_C_AddLootedPicto final
{
public:
	struct FS_jRPG_Item_DynamicData               PictoItem;                                         // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_BattleLoot_Picto_C*                CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Box_C_AddLootedPicto) == 0x000008, "Wrong alignment on WBP_BattleLoot_Box_C_AddLootedPicto");
static_assert(sizeof(WBP_BattleLoot_Box_C_AddLootedPicto) == 0x000160, "Wrong size on WBP_BattleLoot_Box_C_AddLootedPicto");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedPicto, PictoItem) == 0x000000, "Member 'WBP_BattleLoot_Box_C_AddLootedPicto::PictoItem' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedPicto, CallFunc_GetCustomGI_ReturnValue) == 0x000138, "Member 'WBP_BattleLoot_Box_C_AddLootedPicto::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedPicto, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000140, "Member 'WBP_BattleLoot_Box_C_AddLootedPicto::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedPicto, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000148, "Member 'WBP_BattleLoot_Box_C_AddLootedPicto::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedPicto, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000150, "Member 'WBP_BattleLoot_Box_C_AddLootedPicto::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedPicto, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'WBP_BattleLoot_Box_C_AddLootedPicto::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_BattleLoot_Box.WBP_BattleLoot_Box_C.AddLootedWeapon
// 0x0160 (0x0160 - 0x0000)
struct WBP_BattleLoot_Box_C_AddLootedWeapon final
{
public:
	struct FS_jRPG_Item_DynamicData               WeaponItem;                                        // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_BattleLoot_Weapon_C*               CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Box_C_AddLootedWeapon) == 0x000008, "Wrong alignment on WBP_BattleLoot_Box_C_AddLootedWeapon");
static_assert(sizeof(WBP_BattleLoot_Box_C_AddLootedWeapon) == 0x000160, "Wrong size on WBP_BattleLoot_Box_C_AddLootedWeapon");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedWeapon, WeaponItem) == 0x000000, "Member 'WBP_BattleLoot_Box_C_AddLootedWeapon::WeaponItem' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedWeapon, CallFunc_GetCustomGI_ReturnValue) == 0x000138, "Member 'WBP_BattleLoot_Box_C_AddLootedWeapon::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedWeapon, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000140, "Member 'WBP_BattleLoot_Box_C_AddLootedWeapon::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedWeapon, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000148, "Member 'WBP_BattleLoot_Box_C_AddLootedWeapon::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedWeapon, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000150, "Member 'WBP_BattleLoot_Box_C_AddLootedWeapon::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_AddLootedWeapon, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'WBP_BattleLoot_Box_C_AddLootedWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_BattleLoot_Box.WBP_BattleLoot_Box_C.LoadBattleRewards
// 0x02A8 (0x02A8 - 0x0000)
struct WBP_BattleLoot_Box_C_LoadBattleRewards final
{
public:
	struct FS_BattleRewards                       BattleRewards;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RolledLootEntry                     CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemStaticDefinitionFromID_Found;      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticDefinitionFromID_ReturnValue; // 0x0040(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_jRPG_Item_DynamicData               K2Node_MakeStruct_S_jRPG_Item_DynamicData;         // 0x0170(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BattleLoot_Box_C_LoadBattleRewards) == 0x000008, "Wrong alignment on WBP_BattleLoot_Box_C_LoadBattleRewards");
static_assert(sizeof(WBP_BattleLoot_Box_C_LoadBattleRewards) == 0x0002A8, "Wrong size on WBP_BattleLoot_Box_C_LoadBattleRewards");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, BattleRewards) == 0x000000, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::BattleRewards' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_Array_IsEmpty_ReturnValue) == 0x000024, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_GetItemStaticDefinitionFromID_Found) == 0x00003D, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_GetItemStaticDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, CallFunc_GetItemStaticDefinitionFromID_ReturnValue) == 0x000040, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::CallFunc_GetItemStaticDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BattleLoot_Box_C_LoadBattleRewards, K2Node_MakeStruct_S_jRPG_Item_DynamicData) == 0x000170, "Member 'WBP_BattleLoot_Box_C_LoadBattleRewards::K2Node_MakeStruct_S_jRPG_Item_DynamicData' has a wrong offset!");

}

