#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GM_COV_LuminaElement

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "FPassiveEffect_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_GM_COV_LuminaElement.WBP_GM_COV_LuminaElement_C.BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GM_COV_LuminaElement_C_BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_LuminaElement_C_BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GM_COV_LuminaElement_C_BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_GM_COV_LuminaElement_C_BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_GM_COV_LuminaElement_C_BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_GM_COV_LuminaElement_C_BndEvt__WBP_GM_LuminaElementShort_WBP_BaseButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_GM_COV_LuminaElement.WBP_GM_COV_LuminaElement_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_GM_COV_LuminaElement_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_LuminaElement_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WBP_GM_COV_LuminaElement_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WBP_GM_COV_LuminaElement_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WBP_GM_COV_LuminaElement_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WBP_GM_COV_LuminaElement_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WBP_GM_COV_LuminaElement.WBP_GM_COV_LuminaElement_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_GM_COV_LuminaElement_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_LuminaElement_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WBP_GM_COV_LuminaElement_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WBP_GM_COV_LuminaElement_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WBP_GM_COV_LuminaElement_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WBP_GM_COV_LuminaElement_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WBP_GM_COV_LuminaElement.WBP_GM_COV_LuminaElement_C.ExecuteUbergraph_WBP_GM_COV_LuminaElement
// 0x0240 (0x0240 - 0x0000)
struct WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PassiveEffectInstance_C*            K2Node_DynamicCast_AsBP_Passive_Effect_Instance;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetOwningGearData_OutOwningGearData;      // 0x0020(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsHighlighted_bIsHighlighted;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFromGear_IsFromGear;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_ReturnValue;   // 0x0158(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01A8(0x0010)()
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x01C0(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x01D4(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x01E8(0x0014)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_UINotifiedObject_C> CallFunc_LoadNotificationData_NotifiedObject_CastInput; // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsHighlighted)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0210(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x1];                                      // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsHighlighted)>           K2Node_CreateDelegate_OutputDelegate_1;            // 0x0224(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPassiveEffectID_ReturnValue;           // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement) == 0x000008, "Wrong alignment on WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement");
static_assert(sizeof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement) == 0x000240, "Wrong size on WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, EntryPoint) == 0x000000, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_Event_bIsExpanded) == 0x000004, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_Event_bIsSelected) == 0x000005, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_Event_ListItemObject) == 0x000008, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_DynamicCast_AsBP_Passive_Effect_Instance) == 0x000010, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_DynamicCast_AsBP_Passive_Effect_Instance' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_GetOwningGearData_OutOwningGearData) == 0x000020, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_GetOwningGearData_OutOwningGearData' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_IsHighlighted_bIsHighlighted) == 0x000150, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_IsHighlighted_bIsHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000151, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_IsFromGear_IsFromGear) == 0x000152, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_IsFromGear_IsFromGear' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_BooleanAND_ReturnValue) == 0x000153, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_GetPassiveEffectDefinition_ReturnValue) == 0x000158, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_GetPassiveEffectDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, Temp_bool_Variable) == 0x0001A0, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_Conv_IntToText_ReturnValue) == 0x0001A8, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_ComponentBoundEvent_Button) == 0x0001B8, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_MakeStruct_SlateColor) == 0x0001C0, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_MakeStruct_SlateColor_1) == 0x0001D4, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_Select_Default) == 0x0001E8, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, Temp_byte_Variable) == 0x0001FC, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_LoadNotificationData_NotifiedObject_CastInput) == 0x000200, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_LoadNotificationData_NotifiedObject_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_CreateDelegate_OutputDelegate) == 0x000210, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, Temp_byte_Variable_1) == 0x000220, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, Temp_bool_Variable_1) == 0x000221, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_Select_Default_1) == 0x000222, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, K2Node_CreateDelegate_OutputDelegate_1) == 0x000224, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement, CallFunc_GetPassiveEffectID_ReturnValue) == 0x000234, "Member 'WBP_GM_COV_LuminaElement_C_ExecuteUbergraph_WBP_GM_COV_LuminaElement::CallFunc_GetPassiveEffectID_ReturnValue' has a wrong offset!");

// Function WBP_GM_COV_LuminaElement.WBP_GM_COV_LuminaElement_C.OnHighlightedStateChanged
// 0x0060 (0x0060 - 0x0000)
struct WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged final
{
public:
	bool                                          InIsHighlighted;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged) == 0x000008, "Wrong alignment on WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged");
static_assert(sizeof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged) == 0x000060, "Wrong size on WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, InIsHighlighted) == 0x000000, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::InIsHighlighted' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, Temp_byte_Variable) == 0x000001, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, Temp_bool_Variable) == 0x000002, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, Temp_struct_Variable) == 0x000004, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, K2Node_Select_Default) == 0x000024, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, Temp_byte_Variable_1) == 0x000034, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, Temp_bool_Variable_1) == 0x000035, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, K2Node_Select_Default_1) == 0x000036, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, CallFunc_GetEndTime_ReturnValue) == 0x000038, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, CallFunc_SelectFloat_B_ImplicitCast) == 0x000050, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x000058, "Member 'WBP_GM_COV_LuminaElement_C_OnHighlightedStateChanged::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_GM_COV_LuminaElement.WBP_GM_COV_LuminaElement_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WBP_GM_COV_LuminaElement_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_LuminaElement_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WBP_GM_COV_LuminaElement_C_OnListItemObjectSet");
static_assert(sizeof(WBP_GM_COV_LuminaElement_C_OnListItemObjectSet) == 0x000008, "Wrong size on WBP_GM_COV_LuminaElement_C_OnListItemObjectSet");
static_assert(offsetof(WBP_GM_COV_LuminaElement_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WBP_GM_COV_LuminaElement_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

}

