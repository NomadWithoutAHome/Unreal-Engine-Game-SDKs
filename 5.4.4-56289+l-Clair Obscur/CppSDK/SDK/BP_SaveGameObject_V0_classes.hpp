#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SaveGameObject_V0

#include "Basic.hpp"

#include "S_jRPG_CharacterSaveState_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_jRPG_PartySlot_structs.hpp"
#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FExplorationProgression_SaveState_structs.hpp"
#include "BP_SaveGameBase_classes.hpp"
#include "E_GPE_MovingAlongSplineDestination_structs.hpp"
#include "S_MerchantSaveData_structs.hpp"
#include "S_QuestStatusData_structs.hpp"
#include "S_EntitlementSaveData_structs.hpp"
#include "S_ManorDoors_structs.hpp"
#include "S_WeaponInstanceHandle_structs.hpp"
#include "E_CharacterList_structs.hpp"
#include "S_AreaAudioParameters_structs.hpp"
#include "S_LevelSpawnPointsData_structs.hpp"
#include "S_BattleTowerSaveData_structs.hpp"
#include "FPassiveEffectProgression_structs.hpp"
#include "S_GameDifficultySaveData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SaveGameObject_V0.BP_SaveGameObject_V0_C
// 0x0A30 (0x0A60 - 0x0030)
class UBP_SaveGameObject_V0_C : public UBP_SaveGameBase_C
{
public:
	TArray<struct FS_jRPG_PartySlot>              CurrentParty;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FS_jRPG_CharacterSaveState> CharactersCollection;                       // 0x0040(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   MapToLoad;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_jRPG_Item_DynamicData>       Inventory;                                         // 0x0098(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated, ContainsInstancedReference)
	class FText                                   AreaName;                                          // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        TimePlayed;                                        // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinishedGameCount;                                 // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      InventoryItems;                                    // 0x00C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Gold;                                              // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, bool>                       GPE_States;                                        // 0x0120(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       TransientBattledEnemies;                           // 0x0170(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FTransform>          TransientEnemyTransforms;                          // 0x01C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, int32>                      TransientEnemyRoamingPointIndexes;                 // 0x0210(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, TSoftObjectPtr<class ABP_FleePoint_C>> TransientEnemyLastFleePoints;           // 0x0260(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       BattledEnemies;                                    // 0x02B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, E_GPE_MovingAlongSplineDestination> MovingPlatformsStates;                     // 0x0300(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       TransientInteractedObjects;                        // 0x0350(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       InteractedObjects;                                 // 0x03A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       InteractedCinematics;                              // 0x03F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       InteractedTutorials;                               // 0x0440(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       SoundNotif;                                        // 0x0490(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       InteractedDialogs;                                 // 0x04E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   CurrentCharacterWorld;                             // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SpawnPointTagToLoadAt;                             // 0x0538(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ReturnSpawnPointTag;                               // 0x0540(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   MapToLoadAfterCamp;                                // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             LastWorldMapTransform;                             // 0x0550(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, bool>                       ManorGestrals;                                     // 0x05B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFExplorationProgression_SaveState     ExplorationProgression;                            // 0x0600(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<struct FGuid, bool>                      NamedIDsStates;                                    // 0x0628(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           EquippedConsumableShards;                          // 0x0678(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, int32>                      LiftsFloor;                                        // 0x0688(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FS_QuestStatusData>  QuestStatuses;                                     // 0x06D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FS_ManorDoors                          PreviousManorDoorInfo;                             // 0x0728(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_WeaponInstanceHandle>        WeaponProgressions;                                // 0x0738(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, bool>                       Nine9Gestrals;                                     // 0x0748(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGuid, int32>                     InteractedDialogues;                               // 0x0798(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_CharacterList, int32>                  Relationship_Level;                                // 0x07E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	uint8                                         Pad_838[0x8];                                      // 0x0838(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LastTransform;                                     // 0x0840(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LastLightingScenario;                      // 0x08A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 LastAudioParameters;                               // 0x08C8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FS_MerchantSaveData> MerchantStates;                                    // 0x0900(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FS_BattleTowerSaveData                 BattleTowerSaveData;                               // 0x0950(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDateTime                              SaveDateTime;                                      // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ExternalCompanions;                                // 0x09B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FFPassiveEffectProgression>     PassiveEffectsProgressions;                        // 0x09C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FS_GameDifficultySaveData              GameDifficultyData;                                // 0x09D0(0x0002)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D2[0x6];                                      // 0x09D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_LevelSpawnPointsData>        UnlockedSpawnPoints;                               // 0x09D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<uint8>                                 UnlockedMapSections;                               // 0x09E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsMountInUse;                                      // 0x09F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F9[0x7];                                      // 0x09F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EntitlementSaveData                 EntitlementData;                                   // 0x0A00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<class FName, bool>                       EncounteredEnemies;                                // 0x0A10(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SaveGameObject_V0_C">();
	}
	static class UBP_SaveGameObject_V0_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_SaveGameObject_V0_C>();
	}
};
static_assert(alignof(UBP_SaveGameObject_V0_C) == 0x000010, "Wrong alignment on UBP_SaveGameObject_V0_C");
static_assert(sizeof(UBP_SaveGameObject_V0_C) == 0x000A60, "Wrong size on UBP_SaveGameObject_V0_C");
static_assert(offsetof(UBP_SaveGameObject_V0_C, CurrentParty) == 0x000030, "Member 'UBP_SaveGameObject_V0_C::CurrentParty' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, CharactersCollection) == 0x000040, "Member 'UBP_SaveGameObject_V0_C::CharactersCollection' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, MapToLoad) == 0x000090, "Member 'UBP_SaveGameObject_V0_C::MapToLoad' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, Inventory) == 0x000098, "Member 'UBP_SaveGameObject_V0_C::Inventory' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, AreaName) == 0x0000A8, "Member 'UBP_SaveGameObject_V0_C::AreaName' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, TimePlayed) == 0x0000B8, "Member 'UBP_SaveGameObject_V0_C::TimePlayed' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, FinishedGameCount) == 0x0000C0, "Member 'UBP_SaveGameObject_V0_C::FinishedGameCount' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, InventoryItems) == 0x0000C8, "Member 'UBP_SaveGameObject_V0_C::InventoryItems' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, Gold) == 0x000118, "Member 'UBP_SaveGameObject_V0_C::Gold' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, GPE_States) == 0x000120, "Member 'UBP_SaveGameObject_V0_C::GPE_States' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, TransientBattledEnemies) == 0x000170, "Member 'UBP_SaveGameObject_V0_C::TransientBattledEnemies' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, TransientEnemyTransforms) == 0x0001C0, "Member 'UBP_SaveGameObject_V0_C::TransientEnemyTransforms' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, TransientEnemyRoamingPointIndexes) == 0x000210, "Member 'UBP_SaveGameObject_V0_C::TransientEnemyRoamingPointIndexes' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, TransientEnemyLastFleePoints) == 0x000260, "Member 'UBP_SaveGameObject_V0_C::TransientEnemyLastFleePoints' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, BattledEnemies) == 0x0002B0, "Member 'UBP_SaveGameObject_V0_C::BattledEnemies' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, MovingPlatformsStates) == 0x000300, "Member 'UBP_SaveGameObject_V0_C::MovingPlatformsStates' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, TransientInteractedObjects) == 0x000350, "Member 'UBP_SaveGameObject_V0_C::TransientInteractedObjects' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, InteractedObjects) == 0x0003A0, "Member 'UBP_SaveGameObject_V0_C::InteractedObjects' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, InteractedCinematics) == 0x0003F0, "Member 'UBP_SaveGameObject_V0_C::InteractedCinematics' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, InteractedTutorials) == 0x000440, "Member 'UBP_SaveGameObject_V0_C::InteractedTutorials' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, SoundNotif) == 0x000490, "Member 'UBP_SaveGameObject_V0_C::SoundNotif' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, InteractedDialogs) == 0x0004E0, "Member 'UBP_SaveGameObject_V0_C::InteractedDialogs' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, CurrentCharacterWorld) == 0x000530, "Member 'UBP_SaveGameObject_V0_C::CurrentCharacterWorld' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, SpawnPointTagToLoadAt) == 0x000538, "Member 'UBP_SaveGameObject_V0_C::SpawnPointTagToLoadAt' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, ReturnSpawnPointTag) == 0x000540, "Member 'UBP_SaveGameObject_V0_C::ReturnSpawnPointTag' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, MapToLoadAfterCamp) == 0x000548, "Member 'UBP_SaveGameObject_V0_C::MapToLoadAfterCamp' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, LastWorldMapTransform) == 0x000550, "Member 'UBP_SaveGameObject_V0_C::LastWorldMapTransform' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, ManorGestrals) == 0x0005B0, "Member 'UBP_SaveGameObject_V0_C::ManorGestrals' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, ExplorationProgression) == 0x000600, "Member 'UBP_SaveGameObject_V0_C::ExplorationProgression' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, NamedIDsStates) == 0x000628, "Member 'UBP_SaveGameObject_V0_C::NamedIDsStates' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, EquippedConsumableShards) == 0x000678, "Member 'UBP_SaveGameObject_V0_C::EquippedConsumableShards' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, LiftsFloor) == 0x000688, "Member 'UBP_SaveGameObject_V0_C::LiftsFloor' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, QuestStatuses) == 0x0006D8, "Member 'UBP_SaveGameObject_V0_C::QuestStatuses' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, PreviousManorDoorInfo) == 0x000728, "Member 'UBP_SaveGameObject_V0_C::PreviousManorDoorInfo' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, WeaponProgressions) == 0x000738, "Member 'UBP_SaveGameObject_V0_C::WeaponProgressions' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, Nine9Gestrals) == 0x000748, "Member 'UBP_SaveGameObject_V0_C::Nine9Gestrals' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, InteractedDialogues) == 0x000798, "Member 'UBP_SaveGameObject_V0_C::InteractedDialogues' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, Relationship_Level) == 0x0007E8, "Member 'UBP_SaveGameObject_V0_C::Relationship_Level' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, LastTransform) == 0x000840, "Member 'UBP_SaveGameObject_V0_C::LastTransform' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, LastLightingScenario) == 0x0008A0, "Member 'UBP_SaveGameObject_V0_C::LastLightingScenario' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, LastAudioParameters) == 0x0008C8, "Member 'UBP_SaveGameObject_V0_C::LastAudioParameters' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, MerchantStates) == 0x000900, "Member 'UBP_SaveGameObject_V0_C::MerchantStates' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, BattleTowerSaveData) == 0x000950, "Member 'UBP_SaveGameObject_V0_C::BattleTowerSaveData' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, SaveDateTime) == 0x0009A8, "Member 'UBP_SaveGameObject_V0_C::SaveDateTime' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, ExternalCompanions) == 0x0009B0, "Member 'UBP_SaveGameObject_V0_C::ExternalCompanions' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, PassiveEffectsProgressions) == 0x0009C0, "Member 'UBP_SaveGameObject_V0_C::PassiveEffectsProgressions' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, GameDifficultyData) == 0x0009D0, "Member 'UBP_SaveGameObject_V0_C::GameDifficultyData' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, UnlockedSpawnPoints) == 0x0009D8, "Member 'UBP_SaveGameObject_V0_C::UnlockedSpawnPoints' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, UnlockedMapSections) == 0x0009E8, "Member 'UBP_SaveGameObject_V0_C::UnlockedMapSections' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, IsMountInUse) == 0x0009F8, "Member 'UBP_SaveGameObject_V0_C::IsMountInUse' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, EntitlementData) == 0x000A00, "Member 'UBP_SaveGameObject_V0_C::EntitlementData' has a wrong offset!");
static_assert(offsetof(UBP_SaveGameObject_V0_C, EncounteredEnemies) == 0x000A10, "Member 'UBP_SaveGameObject_V0_C::EncounteredEnemies' has a wrong offset!");

}

