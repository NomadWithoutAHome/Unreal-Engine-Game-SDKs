#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataAsset_SkillTree

#include "Basic.hpp"

#include "FSkillUnlockData_structs.hpp"
#include "FSkillUnlockDataList_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DataAsset_SkillTree.BP_DataAsset_SkillTree_C
// 0x0070 (0x00A0 - 0x0030)
class UBP_DataAsset_SkillTree_C final : public UPrimaryDataAsset
{
public:
	TArray<struct FFSkillUnlockData>              RootSkillUnlocks;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UBP_DataAsset_Skill_C*, struct FFSkillUnlockDataList> SkillUnlockTable;               // 0x0040(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UBP_DataAsset_Skill_C*>          StartingSkills;                                    // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BPI_GetDependencies(TArray<TSoftClassPtr<class UClass>>* Classes, TArray<TSoftObjectPtr<class UObject>>* Assets, TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>>* ExternalDependencies);
	void GetAllSkillUnlockInfosMap(TMap<class UBP_DataAsset_Skill_C*, struct FFSkillUnlockInfos>* SkillUnlockInfos);
	void GetSkillsUnlockedBySkill(const class UBP_DataAsset_Skill_C*& Key, TArray<struct FFSkillUnlockData>* SkillUnlocks);
	void GetUnlockedSkillsByNameIDs(TArray<class FName>& NameIDs, TArray<class UBP_DataAsset_Skill_C*>* UnlockedSkills, bool* AllFound, TArray<class FName>* MissingNameIDs);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DataAsset_SkillTree_C">();
	}
	static class UBP_DataAsset_SkillTree_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DataAsset_SkillTree_C>();
	}
};
static_assert(alignof(UBP_DataAsset_SkillTree_C) == 0x000008, "Wrong alignment on UBP_DataAsset_SkillTree_C");
static_assert(sizeof(UBP_DataAsset_SkillTree_C) == 0x0000A0, "Wrong size on UBP_DataAsset_SkillTree_C");
static_assert(offsetof(UBP_DataAsset_SkillTree_C, RootSkillUnlocks) == 0x000030, "Member 'UBP_DataAsset_SkillTree_C::RootSkillUnlocks' has a wrong offset!");
static_assert(offsetof(UBP_DataAsset_SkillTree_C, SkillUnlockTable) == 0x000040, "Member 'UBP_DataAsset_SkillTree_C::SkillUnlockTable' has a wrong offset!");
static_assert(offsetof(UBP_DataAsset_SkillTree_C, StartingSkills) == 0x000090, "Member 'UBP_DataAsset_SkillTree_C::StartingSkills' has a wrong offset!");

}

