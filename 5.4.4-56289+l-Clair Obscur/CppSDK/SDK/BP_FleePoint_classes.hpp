#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FleePoint

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FleePoint.BP_FleePoint_C
// 0x0038 (0x02C8 - 0x0290)
class ABP_FleePoint_C final : public ATargetPoint
{
public:
	class UTextRenderComponent*                   TextRender;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_FleePoint_C*>                LinkedFleePoints;                                  // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class USceneComponent*>                DebugComponents;                                   // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsEndLocation;                                     // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	void ComputeFleePointDistance(class AActor* FleePoint, double* Distance, bool* IsAtValidDistance);
	void FindNextFleePoint(class AActor* PursuerActor, class ABP_FleePoint_C** FleePoint);
	void LinkFleePoints();
	void UpdateDebugDisplay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FleePoint_C">();
	}
	static class ABP_FleePoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FleePoint_C>();
	}
};
static_assert(alignof(ABP_FleePoint_C) == 0x000008, "Wrong alignment on ABP_FleePoint_C");
static_assert(sizeof(ABP_FleePoint_C) == 0x0002C8, "Wrong size on ABP_FleePoint_C");
static_assert(offsetof(ABP_FleePoint_C, TextRender) == 0x000290, "Member 'ABP_FleePoint_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_FleePoint_C, StaticMesh) == 0x000298, "Member 'ABP_FleePoint_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_FleePoint_C, LinkedFleePoints) == 0x0002A0, "Member 'ABP_FleePoint_C::LinkedFleePoints' has a wrong offset!");
static_assert(offsetof(ABP_FleePoint_C, DebugComponents) == 0x0002B0, "Member 'ABP_FleePoint_C::DebugComponents' has a wrong offset!");
static_assert(offsetof(ABP_FleePoint_C, IsEndLocation) == 0x0002C0, "Member 'ABP_FleePoint_C::IsEndLocation' has a wrong offset!");

}

