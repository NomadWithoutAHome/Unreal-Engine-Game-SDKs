#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_FreeAimTarget_World

#include "Basic.hpp"

#include "BPI_FreeAimTarget_World_classes.hpp"
#include "BPI_FreeAimTarget_World_parameters.hpp"


namespace SDK
{

// Function BPI_FreeAimTarget_World.BPI_FreeAimTarget_World_C.FreeAimHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       PlayerCharacterWorld                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FreeAimTarget_World_C::FreeAimHit(class ABP_jRPG_Character_World_C* PlayerCharacterWorld, const struct FVector& HitLocation, bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FreeAimTarget_World_C", "FreeAimHit");

	Params::BPI_FreeAimTarget_World_C_FreeAimHit Parms{};

	Parms.PlayerCharacterWorld = PlayerCharacterWorld;
	Parms.HitLocation = std::move(HitLocation);
	Parms.IsDisabled = IsDisabled;

	AsUObject()->ProcessEvent(Func, &Parms);
}


// Function BPI_FreeAimTarget_World.BPI_FreeAimTarget_World_C.IsFreeAimTargetDisabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsDisabled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_FreeAimTarget_World_C::IsFreeAimTargetDisabled(bool* IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_FreeAimTarget_World_C", "IsFreeAimTargetDisabled");

	Params::BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (IsDisabled != nullptr)
		*IsDisabled = Parms.IsDisabled;
}

}

