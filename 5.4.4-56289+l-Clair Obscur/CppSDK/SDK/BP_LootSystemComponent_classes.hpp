#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LootSystemComponent

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LootSystemComponent.BP_LootSystemComponent_C
// 0x0000 (0x00A0 - 0x00A0)
class UBP_LootSystemComponent_C final : public UActorComponent
{
public:
	int32 ComputeLootChromaFromItem(class UBP_DataAsset_Item_Chroma_C* ChromaItem, struct FS_LootContext& LootContext);
	void RollLootTable(class UDataTable* LootTableDT, const struct FS_LootContext& LootContext, double ChanceMultiplier, const class FString& DebugReason, TArray<struct FS_LootTableEntry>* RolledLootEntries);
	void RollLootTableReference(const struct FLootTableReference& LootTableReference, const struct FS_LootContext& LootContext, double ChanceMultiplier, const class FString& DebugReason, TArray<struct FS_LootTableEntry>* RolledLootEntries);
	void RollLootTableReferences(TArray<struct FLootTableReference>& LootTableRefs, const struct FS_LootContext& LootContext, double ChanceMultiplier, const class FString& DebugReason, TArray<struct FS_LootTableEntry>* RolledLootEntries);
	void RollLootTableSection(const struct FS_LootTableSection& Section, double ChanceMultiplier, bool* IsValid, struct FS_LootTableEntry* RolledLootEntry);
	void RollLootTableSectionList(TArray<struct FS_LootTableSection>& LootTableSectionList, const struct FS_LootContext& LootContext, double ChanceMultiplier, const class FString& DebugReason, TArray<struct FS_LootTableEntry>* RolledLootEntries);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LootSystemComponent_C">();
	}
	static class UBP_LootSystemComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_LootSystemComponent_C>();
	}
};
static_assert(alignof(UBP_LootSystemComponent_C) == 0x000008, "Wrong alignment on UBP_LootSystemComponent_C");
static_assert(sizeof(UBP_LootSystemComponent_C) == 0x0000A0, "Wrong size on UBP_LootSystemComponent_C");

}

