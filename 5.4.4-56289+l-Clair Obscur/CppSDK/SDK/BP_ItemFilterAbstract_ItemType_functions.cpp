#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemFilterAbstract_ItemType

#include "Basic.hpp"

#include "BP_ItemFilterAbstract_ItemType_classes.hpp"
#include "BP_ItemFilterAbstract_ItemType_parameters.hpp"


namespace SDK
{

// Function BP_ItemFilterAbstract_ItemType.BP_ItemFilterAbstract_ItemType_C.GetFilteredTypes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<E_jRPG_ItemType>*                FilteredType                                           (Parm, OutParm)

void UBP_ItemFilterAbstract_ItemType_C::GetFilteredTypes(TArray<E_jRPG_ItemType>* FilteredType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemFilterAbstract_ItemType_C", "GetFilteredTypes");

	Params::BP_ItemFilterAbstract_ItemType_C_GetFilteredTypes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FilteredType != nullptr)
		*FilteredType = std::move(Parms.FilteredType);
}


// Function BP_ItemFilterAbstract_ItemType.BP_ItemFilterAbstract_ItemType_C.ExecuteFilter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UBP_ItemInstance_Base_C*>&ItemInstances                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UBP_ItemInstance_Base_C*>* FilteredItemInstances                                  (Parm, OutParm)

void UBP_ItemFilterAbstract_ItemType_C::ExecuteFilter(const TArray<class UBP_ItemInstance_Base_C*>& ItemInstances, TArray<class UBP_ItemInstance_Base_C*>* FilteredItemInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ItemFilterAbstract_ItemType_C", "ExecuteFilter");

	Params::BP_ItemFilterAbstract_ItemType_C_ExecuteFilter Parms{};

	Parms.ItemInstances = std::move(ItemInstances);

	UObject::ProcessEvent(Func, &Parms);

	if (FilteredItemInstances != nullptr)
		*FilteredItemInstances = std::move(Parms.FilteredItemInstances);
}

}

