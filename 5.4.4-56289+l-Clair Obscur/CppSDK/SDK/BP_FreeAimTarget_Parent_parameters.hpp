#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimTarget_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_FreeAimTarget_Parent_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Parent_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Parent_C_UserConstructionScript");
static_assert(sizeof(BP_FreeAimTarget_Parent_C_UserConstructionScript) == 0x000020, "Wrong size on BP_FreeAimTarget_Parent_C_UserConstructionScript");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_UserConstructionScript, CallFunc_IsPackagedBuild_ReturnValue) == 0x000000, "Member 'BP_FreeAimTarget_Parent_C_UserConstructionScript::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_FreeAimTarget_Parent_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_FreeAimTarget_Parent_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.QA_TraceLinesOfSight
// 0x03F8 (0x03F8 - 0x0000)
struct BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight final
{
public:
	TArray<class FText>                           OutMessages;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         DrawTime;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0140(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23B[0x1];                                      // 0x023B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0310(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0330(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0378(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0388(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03E0(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight");
static_assert(sizeof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight) == 0x0003F8, "Wrong size on BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, OutMessages) == 0x000000, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::OutMessages' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, DrawTime) == 0x000010, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::DrawTime' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, Temp_object_Variable) == 0x000018, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000040, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000100, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Array_Get_Item) == 0x000118, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_IsValid_ReturnValue) == 0x000124, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Less_IntInt_ReturnValue) == 0x000125, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000128, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_LineTraceSingle_OutHit) == 0x000140, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_LineTraceSingle_ReturnValue) == 0x000238, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_bBlockingHit) == 0x000239, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_bInitialOverlap) == 0x00023A, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_Time) == 0x00023C, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_Distance) == 0x000240, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_Location) == 0x000248, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_ImpactPoint) == 0x000260, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_Normal) == 0x000278, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_ImpactNormal) == 0x000290, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_PhysMat) == 0x0002A8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_HitActor) == 0x0002B0, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_HitComponent) == 0x0002B8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_HitBoneName) == 0x0002C0, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_BoneName) == 0x0002C8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_HitItem) == 0x0002D0, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_ElementIndex) == 0x0002D4, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_FaceIndex) == 0x0002D8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_TraceStart) == 0x0002E0, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_BreakHitResult_TraceEnd) == 0x0002F8, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000310, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_GetDisplayName_ReturnValue) == 0x000320, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, K2Node_MakeStruct_FormatArgumentData_2) == 0x000330, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Conv_StringToText_ReturnValue) == 0x000378, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, K2Node_MakeStruct_FormatArgumentData_3) == 0x000388, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, K2Node_MakeArray_Array_1) == 0x0003D0, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Format_ReturnValue_1) == 0x0003E0, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight, CallFunc_Array_Add_ReturnValue_1) == 0x0003F0, "Member 'BP_FreeAimTarget_Parent_C_QA_TraceLinesOfSight::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.IsFreeAimTargetDisabled
// 0x0001 (0x0001 - 0x0000)
struct BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled final
{
public:
	bool                                          IsDisabled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled) == 0x000001, "Wrong alignment on BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled");
static_assert(sizeof(BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled) == 0x000001, "Wrong size on BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled, IsDisabled) == 0x000000, "Member 'BP_FreeAimTarget_Parent_C_IsFreeAimTargetDisabled::IsDisabled' has a wrong offset!");

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.FreeAimHit
// 0x0028 (0x0028 - 0x0000)
struct BP_FreeAimTarget_Parent_C_FreeAimHit final
{
public:
	class ABP_jRPG_Character_World_C*             PlayerCharacterWorld;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisabled;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Parent_C_FreeAimHit) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Parent_C_FreeAimHit");
static_assert(sizeof(BP_FreeAimTarget_Parent_C_FreeAimHit) == 0x000028, "Wrong size on BP_FreeAimTarget_Parent_C_FreeAimHit");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_FreeAimHit, PlayerCharacterWorld) == 0x000000, "Member 'BP_FreeAimTarget_Parent_C_FreeAimHit::PlayerCharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_FreeAimHit, HitLocation) == 0x000008, "Member 'BP_FreeAimTarget_Parent_C_FreeAimHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_FreeAimHit, IsDisabled) == 0x000020, "Member 'BP_FreeAimTarget_Parent_C_FreeAimHit::IsDisabled' has a wrong offset!");

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.ExplorationAttacked
// 0x0020 (0x0020 - 0x0000)
struct BP_FreeAimTarget_Parent_C_ExplorationAttacked final
{
public:
	class ABP_jRPG_Character_World_C*             PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Parent_C_ExplorationAttacked) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Parent_C_ExplorationAttacked");
static_assert(sizeof(BP_FreeAimTarget_Parent_C_ExplorationAttacked) == 0x000020, "Wrong size on BP_FreeAimTarget_Parent_C_ExplorationAttacked");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExplorationAttacked, PlayerCharacter) == 0x000000, "Member 'BP_FreeAimTarget_Parent_C_ExplorationAttacked::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExplorationAttacked, ImpactPoint) == 0x000008, "Member 'BP_FreeAimTarget_Parent_C_ExplorationAttacked::ImpactPoint' has a wrong offset!");

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.ExecuteUbergraph_BP_FreeAimTarget_Parent
// 0x0060 (0x0060 - 0x0000)
struct BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class ABP_jRPG_Character_World_C*             K2Node_Event_PlayerCharacter;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ImpactPoint;                          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_Event_PlayerCharacterWorld;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDisabled;                           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent");
static_assert(sizeof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent) == 0x000060, "Wrong size on BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent, EntryPoint) == 0x000000, "Member 'BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent, K2Node_Event_PlayerCharacter) == 0x000018, "Member 'BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent::K2Node_Event_PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent, K2Node_Event_ImpactPoint) == 0x000020, "Member 'BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent::K2Node_Event_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent, K2Node_Event_PlayerCharacterWorld) == 0x000038, "Member 'BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent::K2Node_Event_PlayerCharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent, K2Node_Event_HitLocation) == 0x000040, "Member 'BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent, K2Node_Event_IsDisabled) == 0x000058, "Member 'BP_FreeAimTarget_Parent_C_ExecuteUbergraph_BP_FreeAimTarget_Parent::K2Node_Event_IsDisabled' has a wrong offset!");

// Function BP_FreeAimTarget_Parent.BP_FreeAimTarget_Parent_C.CheckForErrors
// 0x0018 (0x0018 - 0x0000)
struct BP_FreeAimTarget_Parent_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Parent_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Parent_C_CheckForErrors");
static_assert(sizeof(BP_FreeAimTarget_Parent_C_CheckForErrors) == 0x000018, "Wrong size on BP_FreeAimTarget_Parent_C_CheckForErrors");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_FreeAimTarget_Parent_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Parent_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_FreeAimTarget_Parent_C_CheckForErrors::ReturnValue' has a wrong offset!");

}

