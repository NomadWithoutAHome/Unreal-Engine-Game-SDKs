#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ValidationHelpersFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ValidationHelpersFunctionLibrary.ValidationHelpersFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UValidationHelpersFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void CheckComponentReferenceList(TArray<struct FComponentReference>& Array, TArray<class FText>& ErrorMessages, const class FString& Context, class AActor* OwningActor, class UObject* __WorldContext);
	static void CheckDataRowHandle(const struct FDataTableRowHandle& DataRowHandle, const TArray<class FText>& ErrorMessages, const class FString& VariableName, class UObject* __WorldContext, bool* IsValid);
	static void CheckForNone(TArray<class UObject*>& List, const TArray<class FText>& ErrorMessages, const class FString& ListName, class UObject* __WorldContext);
	static void CheckForNone_Internal(class UObject* EditorValidator, TArray<class UObject*>& List, const TArray<class FText>& ErrorMessages, const class FString& ListName, class UObject* __WorldContext);
	static void CheckForNoneAndNotEmpty(TArray<class UObject*>& List, const TArray<class FText>& ErrorMessages, const class FString& ListName, class UObject* __WorldContext);
	static void CheckForNoneSoftRef(TArray<TSoftObjectPtr<class UObject>>& List, const TArray<class FText>& ErrorMessages, const class FString& ListName, class UObject* __WorldContext);
	static void CheckGPEActions(TArray<struct FFGPEAction>& Array, TArray<class FText>& ErrorMessages, const class FString& Context, class AActor* OwningActor, class UObject* __WorldContext);
	static void CheckIsValid(class UObject* Object, const TArray<class FText>& ErrorMessages, const class FString& VariableName, class UObject* ValidatorContext, class UObject* __WorldContext, bool* IsValid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ValidationHelpersFunctionLibrary_C">();
	}
	static class UValidationHelpersFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UValidationHelpersFunctionLibrary_C>();
	}
};
static_assert(alignof(UValidationHelpersFunctionLibrary_C) == 0x000008, "Wrong alignment on UValidationHelpersFunctionLibrary_C");
static_assert(sizeof(UValidationHelpersFunctionLibrary_C) == 0x000028, "Wrong size on UValidationHelpersFunctionLibrary_C");

}

