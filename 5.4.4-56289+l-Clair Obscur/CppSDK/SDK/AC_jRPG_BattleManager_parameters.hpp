#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_BattleManager

#include "Basic.hpp"

#include "GameplayCameras_structs.hpp"
#include "S_RolledLootEntry_structs.hpp"
#include "Engine_structs.hpp"
#include "S_InteractiveMusicParameters_structs.hpp"
#include "S_LootTableEntry_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_LootContext_structs.hpp"
#include "E_jRPG_ItemType_structs.hpp"
#include "FBattleCharacterStoredState_structs.hpp"
#include "S_jRPG_PartySlot_structs.hpp"
#include "E_GameDifficulty_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "ETeamMotivationLevelType_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "S_BattleSummaryStats_structs.hpp"
#include "E_jRPG_FormationType_structs.hpp"
#include "S_jRPG_Encounter_structs.hpp"
#include "EBattleEndResult_structs.hpp"
#include "EFreeAimType_structs.hpp"
#include "ECharacterTeamSelector_structs.hpp"
#include "SandFall_structs.hpp"
#include "S_BattleRewards_structs.hpp"
#include "EDamageReason_structs.hpp"
#include "S_Loot_structs.hpp"
#include "S_jRPG_Action_structs.hpp"
#include "E_FreezeFrame_structs.hpp"
#include "S_FreezeFrame_structs.hpp"
#include "EBattleTurnState_structs.hpp"
#include "S_jRPG_Enemy_structs.hpp"
#include "S_Cameras_BattleFinish_structs.hpp"
#include "FEnemyDataRow_structs.hpp"
#include "FCharacterBattleAudioProfile_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "S_EnemyScalingDataLevel_structs.hpp"
#include "S_BalancingTableFloatEntry_structs.hpp"
#include "E_jRPG_EngageTypes_structs.hpp"
#include "E_jRPG_ActionType_structs.hpp"
#include "FBattleStartParams_structs.hpp"


namespace SDK::Params
{

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ActivateCharacterCamera
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_ActivateCharacterCamera final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ActivateCharacterCamera) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ActivateCharacterCamera");
static_assert(sizeof(AC_jRPG_BattleManager_C_ActivateCharacterCamera) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_ActivateCharacterCamera");
static_assert(offsetof(AC_jRPG_BattleManager_C_ActivateCharacterCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ActivateCharacterCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ActivateCharacterCamera, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_ActivateCharacterCamera::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ActivateCharacterCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ActivateCharacterCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ActivateCharacterCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_ActivateCharacterCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.AdaptSpawnedCharacterLocation
// 0x0250 (0x0250 - 0x0000)
struct AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation final
{
public:
	struct FVector                                BaseLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                GroundLocation;                                    // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0080(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation");
static_assert(sizeof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation) == 0x000250, "Wrong size on AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, BaseLocation) == 0x000000, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::BaseLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, ActorsToIgnore) == 0x000018, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, GroundLocation) == 0x000028, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::GroundLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, K2Node_MakeArray_Array) == 0x000040, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000080, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000178, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000179, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017A, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_Time) == 0x00017C, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_Distance) == 0x000180, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_Normal) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_PhysMat) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_HitActor) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_HitComponent) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000200, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_BoneName) == 0x000208, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_HitItem) == 0x000210, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_ElementIndex) == 0x000214, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000218, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_TraceStart) == 0x000220, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000238, "Member 'AC_jRPG_BattleManager_C_AdaptSpawnedCharacterLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.AddBattleModifierBuff
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_BattleManager_C_AddBattleModifierBuff final
{
public:
	class UBP_BattleBuffInstance_C*               BuffInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcePermanent;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuffInstanceWrapper_C*        CallFunc_ActivateBuff_BuffInstanceWrapper;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_AddBattleModifierBuff) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_AddBattleModifierBuff");
static_assert(sizeof(AC_jRPG_BattleManager_C_AddBattleModifierBuff) == 0x000028, "Wrong size on AC_jRPG_BattleManager_C_AddBattleModifierBuff");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddBattleModifierBuff, BuffInstance) == 0x000000, "Member 'AC_jRPG_BattleManager_C_AddBattleModifierBuff::BuffInstance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddBattleModifierBuff, ForcePermanent) == 0x000008, "Member 'AC_jRPG_BattleManager_C_AddBattleModifierBuff::ForcePermanent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddBattleModifierBuff, Temp_object_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_AddBattleModifierBuff::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddBattleModifierBuff, CallFunc_ActivateBuff_BuffInstanceWrapper) == 0x000018, "Member 'AC_jRPG_BattleManager_C_AddBattleModifierBuff::CallFunc_ActivateBuff_BuffInstanceWrapper' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddBattleModifierBuff, CallFunc_ActivateBuff_Success) == 0x000020, "Member 'AC_jRPG_BattleManager_C_AddBattleModifierBuff::CallFunc_ActivateBuff_Success' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.AddExtraLootItem
// 0x01D8 (0x01D8 - 0x0000)
struct AC_jRPG_BattleManager_C_AddExtraLootItem final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0008(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         local_existingCount;                               // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0130(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0150(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01A8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_AddExtraLootItem) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_AddExtraLootItem");
static_assert(sizeof(AC_jRPG_BattleManager_C_AddExtraLootItem) == 0x0001D8, "Wrong size on AC_jRPG_BattleManager_C_AddExtraLootItem");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, ItemId) == 0x000000, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::ItemId' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, Quantity) == 0x000008, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::Quantity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, Reason) == 0x000010, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, local_existingCount) == 0x000020, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::local_existingCount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Conv_NameToText_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000130, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, K2Node_MakeArray_Array) == 0x000140, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, K2Node_MakeStruct_FormatArgumentData_3) == 0x000150, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Format_ReturnValue) == 0x000198, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, K2Node_MakeArray_Array_1) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Format_ReturnValue_1) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_IsNameValid_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Not_PreBool_ReturnValue) == 0x0001C9, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Add_IntInt_ReturnValue) == 0x0001CC, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Map_Find_Value) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddExtraLootItem, CallFunc_Map_Find_ReturnValue) == 0x0001D4, "Member 'AC_jRPG_BattleManager_C_AddExtraLootItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.AddGlobalDodgeWindowModifier
// 0x0048 (0x0048 - 0x0000)
struct AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier final
{
public:
	float                                         Multiplier;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugName;                                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier");
static_assert(sizeof(AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier) == 0x000048, "Wrong size on AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier, Multiplier) == 0x000000, "Member 'AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier::Multiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier, OutModifierHandle) == 0x000008, "Member 'AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier::OutModifierHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier, DebugName) == 0x000038, "Member 'AC_jRPG_BattleManager_C_AddGlobalDodgeWindowModifier::DebugName' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.AddGlobalParryWindowModifier
// 0x0048 (0x0048 - 0x0000)
struct AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier final
{
public:
	float                                         Multiplier;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 DebugName;                                         // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier");
static_assert(sizeof(AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier) == 0x000048, "Wrong size on AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier, Multiplier) == 0x000000, "Member 'AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier::Multiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier, OutModifierHandle) == 0x000008, "Member 'AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier::OutModifierHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier, DebugName) == 0x000038, "Member 'AC_jRPG_BattleManager_C_AddGlobalParryWindowModifier::DebugName' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.AreAllKickedCharacterStateHandleValid
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid final
{
public:
	TArray<struct FGuid>                          KickedCharacterHandle;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKickedCharacterStateHandleValid_Success; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid");
static_assert(sizeof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid) == 0x000038, "Wrong size on AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, KickedCharacterHandle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::KickedCharacterHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, Success) == 0x000010, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, CallFunc_IsKickedCharacterStateHandleValid_Success) == 0x000030, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::CallFunc_IsKickedCharacterStateHandleValid_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AC_jRPG_BattleManager_C_AreAllKickedCharacterStateHandleValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.BeginAOECounterAttack
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_BeginAOECounterAttack final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> CallFunc_ComputeCharactersForAOECounterAttack_ReturnValue; // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(AC_jRPG_BattleManager_C_BeginAOECounterAttack) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_BeginAOECounterAttack");
static_assert(sizeof(AC_jRPG_BattleManager_C_BeginAOECounterAttack) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_BeginAOECounterAttack");
static_assert(offsetof(AC_jRPG_BattleManager_C_BeginAOECounterAttack, CallFunc_ComputeCharactersForAOECounterAttack_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_BeginAOECounterAttack::CallFunc_ComputeCharactersForAOECounterAttack_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CanCharactersCounterAttackEnemySkill
// 0x0058 (0x0058 - 0x0000)
struct AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       EnemyCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedCharacters;                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CanCounter;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCounterAttackCurrentEnemy_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0038(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCounterAttackCurrentEnemy_ReturnValue_1; // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill");
static_assert(sizeof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill) == 0x000058, "Wrong size on AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, EnemyCharacter) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::EnemyCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, TargetedCharacters) == 0x000008, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::TargetedCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CanCounter) == 0x000018, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CanCounter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_CanCounterAttackCurrentEnemy_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_CanCounterAttackCurrentEnemy_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000038, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_Array_Contains_ReturnValue) == 0x000054, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_CanCounterAttackCurrentEnemy_ReturnValue_1) == 0x000056, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_CanCounterAttackCurrentEnemy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill, CallFunc_Not_PreBool_ReturnValue) == 0x000057, "Member 'AC_jRPG_BattleManager_C_CanCharactersCounterAttackEnemySkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CanFleeCurrentFight
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_CanFleeCurrentFight final
{
public:
	bool                                          FleeImpossible_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CanFleeCurrentFight) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_CanFleeCurrentFight");
static_assert(sizeof(AC_jRPG_BattleManager_C_CanFleeCurrentFight) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_CanFleeCurrentFight");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanFleeCurrentFight, FleeImpossible_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CanFleeCurrentFight::FleeImpossible_0' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CanPlayReactionBattleLines
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_BattleManager_C_CanPlayReactionBattleLines final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CanPlayReactionBattleLines) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_CanPlayReactionBattleLines");
static_assert(sizeof(AC_jRPG_BattleManager_C_CanPlayReactionBattleLines) == 0x000002, "Wrong size on AC_jRPG_BattleManager_C_CanPlayReactionBattleLines");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanPlayReactionBattleLines, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CanPlayReactionBattleLines::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanPlayReactionBattleLines, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_CanPlayReactionBattleLines::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CanResumeBattle
// 0x000B (0x000B - 0x0000)
struct AC_jRPG_BattleManager_C_CanResumeBattle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLastStandActive_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CanResumeBattle) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_CanResumeBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_CanResumeBattle) == 0x00000B, "Wrong size on AC_jRPG_BattleManager_C_CanResumeBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_IsBattleEnding_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_IsLastStandActive_ReturnValue) == 0x000002, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_IsLastStandActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_Not_PreBool_ReturnValue_2) == 0x000005, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_Not_PreBool_ReturnValue_3) == 0x000006, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_BooleanAND_ReturnValue_2) == 0x000009, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanResumeBattle, CallFunc_BooleanAND_ReturnValue_3) == 0x00000A, "Member 'AC_jRPG_BattleManager_C_CanResumeBattle::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CanSendReserveTeam
// 0x0068 (0x0068 - 0x0000)
struct AC_jRPG_BattleManager_C_CanSendReserveTeam final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLastStandActive_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CharacterData_C*>            CallFunc_GetCharacterCollection_Characters;        // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CanSendReserveTeam) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_CanSendReserveTeam");
static_assert(sizeof(AC_jRPG_BattleManager_C_CanSendReserveTeam) == 0x000068, "Wrong size on AC_jRPG_BattleManager_C_CanSendReserveTeam");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_IsLastStandActive_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_IsLastStandActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Map_Length_ReturnValue) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Array_Get_Item) == 0x000018, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_IsDead_ReturnValue) == 0x000025, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000026, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_GetCustomGI_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_GetCharacterCollection_Characters) == 0x000040, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_GetCharacterCollection_Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Not_PreBool_ReturnValue_1) == 0x000054, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_Greater_IntInt_ReturnValue) == 0x000064, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_BooleanAND_ReturnValue_1) == 0x000065, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CanSendReserveTeam, CallFunc_BooleanAND_ReturnValue_2) == 0x000066, "Member 'AC_jRPG_BattleManager_C_CanSendReserveTeam::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ChangeBattleMap
// 0x0590 (0x0590 - 0x0000)
struct AC_jRPG_BattleManager_C_ChangeBattleMap final
{
public:
	TSoftObjectPtr<class ABP_BattleMap_C>         BattleMapActor;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             local_deltaTransform;                              // 0x0030(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         local_currentCharacterFreeAimTargets;              // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FTransform                             local_currentCharacterPreviousTransform;           // 0x00A0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleMap_C*                        K2Node_DynamicCast_AsBP_Battle_Map;                // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue_1; // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0148(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0158(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0168(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0208(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LighingScenarioMain_DONOTTOUCH_C*   CallFunc_GetActorOfClass_ReturnValue;              // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters;         // 0x0258(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0xC];                                      // 0x0274(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0280(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0xF];                                      // 0x02E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x02F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0350(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412[0xE];                                      // 0x0412(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform; // 0x0420(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType; // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0488(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ChangeBattleMap) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_ChangeBattleMap");
static_assert(sizeof(AC_jRPG_BattleManager_C_ChangeBattleMap) == 0x000590, "Wrong size on AC_jRPG_BattleManager_C_ChangeBattleMap");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, BattleMapActor) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::BattleMapActor' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, local_deltaTransform) == 0x000030, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::local_deltaTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, local_currentCharacterFreeAimTargets) == 0x000090, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::local_currentCharacterFreeAimTargets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, local_currentCharacterPreviousTransform) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::local_currentCharacterPreviousTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000108, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, K2Node_DynamicCast_AsBP_Battle_Map) == 0x000118, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::K2Node_DynamicCast_AsBP_Battle_Map' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_IsValid_ReturnValue) == 0x000121, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000128, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue_1) == 0x000138, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Conv_StringToText_ReturnValue) == 0x000148, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000158, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, K2Node_MakeStruct_FormatArgumentData) == 0x000168, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, K2Node_MakeArray_Array) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, K2Node_MakeArray_Array_1) == 0x000208, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Format_ReturnValue) == 0x000218, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Format_ReturnValue_1) == 0x000228, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000238, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, Temp_int_Array_Index_Variable) == 0x00023C, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000240, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_GetActorOfClass_ReturnValue) == 0x000248, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_IsValid_ReturnValue_1) == 0x000250, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_GetAllCharacters_AllCharacters) == 0x000258, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_GetAllCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Array_Get_Item) == 0x000268, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Array_Length_ReturnValue) == 0x000270, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_GetTransform_ReturnValue) == 0x000280, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Less_IntInt_ReturnValue) == 0x0002E0, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_MakeRelativeTransform_ReturnValue) == 0x0002F0, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_InvertTransform_ReturnValue) == 0x000350, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_MakeTransform_ReturnValue) == 0x0003B0, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000410, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_Not_PreBool_ReturnValue) == 0x000411, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform) == 0x000420, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType) == 0x000480, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000488, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeBattleMap, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000580, "Member 'AC_jRPG_BattleManager_C_ChangeBattleMap::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ChangeTeamMotivation
// 0x0218 (0x0218 - 0x0000)
struct AC_jRPG_BattleManager_C_ChangeTeamMotivation final
{
public:
	double                                        Delta;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReasonText;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0100(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0110(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0010)(ConstParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0138(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0198(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0200(0x0010)()
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ChangeTeamMotivation) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ChangeTeamMotivation");
static_assert(sizeof(AC_jRPG_BattleManager_C_ChangeTeamMotivation) == 0x000218, "Wrong size on AC_jRPG_BattleManager_C_ChangeTeamMotivation");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, Delta) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::Delta' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, ReasonText) == 0x000008, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::ReasonText' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, Temp_bool_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_MakeLiteralText_ReturnValue) == 0x000100, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_Select_Default) == 0x000120, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000130, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_MakeStruct_FormatArgumentData_3) == 0x000138, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_FClamp_ReturnValue) == 0x000180, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_MakeArray_Array) == 0x000188, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_Format_ReturnValue) == 0x000198, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, K2Node_MakeArray_Array_1) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_Format_ReturnValue_1) == 0x000200, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ChangeTeamMotivation, CallFunc_FClamp_Max_ImplicitCast) == 0x000210, "Member 'AC_jRPG_BattleManager_C_ChangeTeamMotivation::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CheckBattleEnd
// 0x0006 (0x0006 - 0x0000)
struct AC_jRPG_BattleManager_C_CheckBattleEnd final
{
public:
	bool                                          BattleHasEnded;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CheckBattleEnd) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_CheckBattleEnd");
static_assert(sizeof(AC_jRPG_BattleManager_C_CheckBattleEnd) == 0x000006, "Wrong size on AC_jRPG_BattleManager_C_CheckBattleEnd");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckBattleEnd, BattleHasEnded) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CheckBattleEnd::BattleHasEnded' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckBattleEnd, CallFunc_IsBattleEnding_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_CheckBattleEnd::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckBattleEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'AC_jRPG_BattleManager_C_CheckBattleEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckBattleEnd, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000003, "Member 'AC_jRPG_BattleManager_C_CheckBattleEnd::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckBattleEnd, CallFunc_Array_IsEmpty_ReturnValue) == 0x000004, "Member 'AC_jRPG_BattleManager_C_CheckBattleEnd::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckBattleEnd, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000005, "Member 'AC_jRPG_BattleManager_C_CheckBattleEnd::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ComputeCharactersForAOECounterAttack
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0020(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_Temp_buffer_array_Variable;         // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDoDefensiveMove_CanDoDefensiveMove;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack");
static_assert(sizeof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack) == 0x000060, "Wrong size on AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, Temp_wildcard_Temp_buffer_array_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, CallFunc_Array_Get_Item) == 0x000048, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, CallFunc_CanDoDefensiveMove_CanDoDefensiveMove) == 0x000058, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::CallFunc_CanDoDefensiveMove_CanDoDefensiveMove' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack, CallFunc_BooleanOR_ReturnValue) == 0x000059, "Member 'AC_jRPG_BattleManager_C_ComputeCharactersForAOECounterAttack::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ComputeExtraLootItems
// 0x00E8 (0x00E8 - 0x0000)
struct AC_jRPG_BattleManager_C_ComputeExtraLootItems final
{
public:
	struct FS_EnemyScalingDataLevel               local_currentEnemyScaling;                         // 0x0000(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      local_itemsToLoot;                                 // 0x0038(0x0050)(Edit, BlueprintVisible)
	TArray<struct FS_jRPG_Item_DynamicData>       ItemsLootedLOCAL;                                  // 0x0088(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         local_GoldAcquired;                                // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_ExperienceGained;                            // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x00B0(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ComputeExtraLootItems) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ComputeExtraLootItems");
static_assert(sizeof(AC_jRPG_BattleManager_C_ComputeExtraLootItems) == 0x0000E8, "Wrong size on AC_jRPG_BattleManager_C_ComputeExtraLootItems");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, local_currentEnemyScaling) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::local_currentEnemyScaling' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, local_itemsToLoot) == 0x000038, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::local_itemsToLoot' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, ItemsLootedLOCAL) == 0x000088, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::ItemsLootedLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, local_GoldAcquired) == 0x000098, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::local_GoldAcquired' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, local_ExperienceGained) == 0x00009C, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::local_ExperienceGained' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, CallFunc_Map_Values_Values) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, CallFunc_Map_Keys_Keys) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, CallFunc_Array_Get_Item_1) == 0x0000D4, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeExtraLootItems, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_ComputeExtraLootItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ComputeFreeAim3rdPersonTargetLocation
// 0x0500 (0x0500 - 0x0000)
struct AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation final
{
public:
	bool                                          DEBUG_ForShoot;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHitCharacter;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CharacterBattle;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0048(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters_1; // 0x0058(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0128(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x1];                                      // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x02F8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0498(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation");
static_assert(sizeof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation) == 0x000500, "Wrong size on AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, DEBUG_ForShoot) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::DEBUG_ForShoot' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, HasHitCharacter) == 0x000001, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::HasHitCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CharacterBattle) == 0x000008, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CharacterBattle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, HitLocation) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::HitLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, StartLocation) == 0x000028, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::StartLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, Temp_byte_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, Temp_byte_Variable_1) == 0x000041, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, Temp_bool_Variable) == 0x000042, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000048, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_GetAllPlayerCharacters_AllCharacters_1) == 0x000058, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_GetAllPlayerCharacters_AllCharacters_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_GetCameraLocation_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, K2Node_Select_Default) == 0x000090, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_GetCameraRotation_ReturnValue) == 0x000098, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_GetForwardVector_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_LineTraceSingle_OutHit) == 0x000128, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_LineTraceSingle_ReturnValue) == 0x000220, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000221, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000222, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Time) == 0x000224, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Distance) == 0x000228, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Location) == 0x000230, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000248, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Normal) == 0x000260, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000278, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_PhysMat) == 0x000290, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitActor) == 0x000298, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitComponent) == 0x0002A0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitBoneName) == 0x0002A8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_BoneName) == 0x0002B0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitItem) == 0x0002B8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0002BC, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_FaceIndex) == 0x0002C0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_TraceStart) == 0x0002C8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_TraceEnd) == 0x0002E0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_LineTraceSingle_OutHit_1) == 0x0002F8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0003F0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_GetDisplayName_ReturnValue) == 0x0003F8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_Concat_StrStr_ReturnValue) == 0x000408, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000418, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000419, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Time_1) == 0x00041C, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Distance_1) == 0x000420, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Location_1) == 0x000428, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000440, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_Normal_1) == 0x000458, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000470, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_PhysMat_1) == 0x000488, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitActor_1) == 0x000490, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitComponent_1) == 0x000498, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004A0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_BoneName_1) == 0x0004A8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_HitItem_1) == 0x0004B0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004B4, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004B8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_TraceStart_1) == 0x0004C0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004D8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x0004F0, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation, K2Node_DynamicCast_bSuccess) == 0x0004F8, "Member 'AC_jRPG_BattleManager_C_ComputeFreeAim3rdPersonTargetLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CreateBattleEndVictoryScreen
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen final
{
public:
	TArray<class UBP_CharacterData_C*>            AllCharacterData;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UWBP_HUD_GM_EndBattle_Panel_C*          CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen");
static_assert(sizeof(AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen, AllCharacterData) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen::AllCharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen, CallFunc_Create_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_CreateBattleEndVictoryScreen::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CreateBattleInterface
// 0x00A0 (0x00A0 - 0x0000)
struct AC_jRPG_BattleManager_C_CreateBattleInterface final
{
public:
	class UWBP_HUD_BattleScreen_C*                CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LGUI_UIContainer_BattleWheelRoot_C* CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CreateBattleInterface) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_CreateBattleInterface");
static_assert(sizeof(AC_jRPG_BattleManager_C_CreateBattleInterface) == 0x0000A0, "Wrong size on AC_jRPG_BattleManager_C_CreateBattleInterface");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleInterface, CallFunc_Create_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CreateBattleInterface::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleInterface, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_CreateBattleInterface::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleInterface, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_CreateBattleInterface::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleInterface, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_CreateBattleInterface::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleInterface, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_CreateBattleInterface::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleInterface, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_CreateBattleInterface::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CreateBattleInterface, CallFunc_GetQTEManager_QTEManager) == 0x000098, "Member 'AC_jRPG_BattleManager_C_CreateBattleInterface::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.DEBUG_CVarChange_BattleLine_SkipRoll
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_DEBUG_CVarChange_BattleLine_SkipRoll final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_DEBUG_CVarChange_BattleLine_SkipRoll) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_DEBUG_CVarChange_BattleLine_SkipRoll");
static_assert(sizeof(AC_jRPG_BattleManager_C_DEBUG_CVarChange_BattleLine_SkipRoll) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_DEBUG_CVarChange_BattleLine_SkipRoll");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_CVarChange_BattleLine_SkipRoll, NewValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_DEBUG_CVarChange_BattleLine_SkipRoll::NewValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.DEBUG_FindPlayerCharacterByName
// 0x0078 (0x0078 - 0x0000)
struct AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        AC_jRPG_CharacterStats;                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName");
static_assert(sizeof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName) == 0x000078, "Wrong size on AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, Name_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::Name_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, AC_jRPG_CharacterStats) == 0x000018, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::AC_jRPG_CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_Replace_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_Array_Get_Item) == 0x000040, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_Conv_NameToString_ReturnValue) == 0x000060, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000071, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'AC_jRPG_BattleManager_C_DEBUG_FindPlayerCharacterByName::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.DEBUG_GetBattleBuffClassByName
// 0x0178 (0x0178 - 0x0000)
struct AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName final
{
public:
	class FString                                 _className;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TSubclassOf<class UBP_BattleBuffInstance_C>   BattleBuffInstanceClass;                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    local_buffClass;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndsWith_ReturnValue;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_DebugFindClassByName_ReturnValue;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0010)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00F8(0x0010)()
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0168(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName");
static_assert(sizeof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName) == 0x000178, "Wrong size on AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, _className) == 0x000000, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::_className' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, BattleBuffInstanceClass) == 0x000010, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::BattleBuffInstanceClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, local_buffClass) == 0x000018, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::local_buffClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, Temp_bool_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_EndsWith_ReturnValue) == 0x000021, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_EndsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, K2Node_Select_Default) == 0x000038, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_IsPackagedBuild_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_DebugFindClassByName_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_DebugFindClassByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, K2Node_MakeArray_Array) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::K2Node_ClassDynamicCast_AsBP_Battle_Buff_Instance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, K2Node_ClassDynamicCast_bSuccess) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_IsValidClass_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_ClassIsChildOf_ReturnValue) == 0x000108, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, K2Node_MakeArray_Array_1) == 0x000158, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName, CallFunc_Format_ReturnValue_1) == 0x000168, "Member 'AC_jRPG_BattleManager_C_DEBUG_GetBattleBuffClassByName::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Debug_PrintCharacterTurns
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns final
{
public:
	class FText                                   debugStr;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FString>                         outStr;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns");
static_assert(sizeof(AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns, debugStr) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns::debugStr' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns, outStr) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Debug_PrintCharacterTurns::outStr' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Debug_PrintToCategory
// 0x03A8 (0x03A8 - 0x0000)
struct AC_jRPG_BattleManager_C_Debug_PrintToCategory final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_wildcard_Variable;                            // 0x0010(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetDebugText_Result;                      // 0x00D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0148(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0168(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01B0(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_1;                        // 0x01C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D0(0x0010)()
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDebugText_Result_1;                    // 0x01F0(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0208(0x0010)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0218(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0228(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0270(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02D8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x02E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x02F8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0340(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0388(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0398(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_Debug_PrintToCategory) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Debug_PrintToCategory");
static_assert(sizeof(AC_jRPG_BattleManager_C_Debug_PrintToCategory) == 0x0003A8, "Wrong size on AC_jRPG_BattleManager_C_Debug_PrintToCategory");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, Temp_wildcard_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Conv_NameToText_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_GetDebugText_Result) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_GetDebugText_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000128, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeArray_Array) == 0x000138, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Conv_StringToText_ReturnValue) == 0x000148, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Format_ReturnValue) == 0x000158, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData_3) == 0x000168, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, Temp_wildcard_Variable_1) == 0x0001C0, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Format_ReturnValue_1) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Array_Get_Item) == 0x0001E0, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_IsValid_ReturnValue_1) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_GetDebugText_Result_1) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_GetDebugText_Result_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Less_IntInt_ReturnValue) == 0x000204, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Conv_BoolToText_ReturnValue) == 0x000208, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000218, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData_4) == 0x000228, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData_5) == 0x000270, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_SelectString_ReturnValue) == 0x0002B8, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_SelectString_ReturnValue_1) == 0x0002C8, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002D8, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0002E8, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData_6) == 0x0002F8, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeStruct_FormatArgumentData_7) == 0x000340, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, K2Node_MakeArray_Array_2) == 0x000388, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Debug_PrintToCategory, CallFunc_Format_ReturnValue_2) == 0x000398, "Member 'AC_jRPG_BattleManager_C_Debug_PrintToCategory::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.DispatchEnemiesAlongSpline
// 0x09A8 (0x09A8 - 0x0000)
struct AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline final
{
public:
	double                                        local_currentCharacterHalfWidth;                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_widthMultiplier;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                local_currentFinalLocation;                        // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_sortedEnemies;                             // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        local_distanceToFirstCharacter;                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_currentSpawnedDistanceSum;                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_centerCharacterRadiusSum;                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_radiusSum;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 local_radiusList;                                  // 0x0058(0x0010)(Edit, BlueprintVisible)
	class ABP_jRPG_Character_Battle_Base_C*       local_centerEnemy;                                 // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_SortedCharacters;                          // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Temp_buffer_array_Variable;        // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           CallFunc_GetAlliesSpots_Array;                     // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue;            // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue_1;          // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue_2;          // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0200(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_2;                         // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0260(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0270(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0280(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02C8(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetCharacterRadiusForPlacement_ReturnValue; // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0328(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0370(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x03B8(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03C8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x03D8(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCharacterRadiusForPlacement_ReturnValue_1; // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x04B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x04F8(0x0048)(HasGetValueTypeHash)
	struct FVector                                CallFunc_AdaptSpawnedCharacterLocation_GroundLocation; // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0588(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x06A8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x06F8(0x0048)(HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetEnemyIndexesLeftToRight_IndexMapping;  // 0x0740(0x0010)(ReferenceParm)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0758(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue_1;            // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x07B0(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0800(0x0010)(ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0818(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x0838(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0888(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_3;                     // 0x0898(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x08A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x08F0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_4;                     // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0920(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_4;                         // 0x0938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_949[0x7];                                      // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllEnemies_Enemies;                  // 0x0950(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x7];                                      // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_5;                         // 0x0968(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_972[0x2];                                      // 0x0972(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtTime_Time_ImplicitCast;      // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugSphere_Radius_ImplicitCast;      // 0x0984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline");
static_assert(sizeof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline) == 0x0009A8, "Wrong size on AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_currentCharacterHalfWidth) == 0x000000, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_currentCharacterHalfWidth' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_widthMultiplier) == 0x000008, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_widthMultiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_currentFinalLocation) == 0x000010, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_currentFinalLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_sortedEnemies) == 0x000028, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_sortedEnemies' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_distanceToFirstCharacter) == 0x000038, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_distanceToFirstCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_currentSpawnedDistanceSum) == 0x000040, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_currentSpawnedDistanceSum' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_centerCharacterRadiusSum) == 0x000048, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_centerCharacterRadiusSum' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_radiusSum) == 0x000050, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_radiusSum' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_radiusList) == 0x000058, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_radiusList' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_centerEnemy) == 0x000068, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_centerEnemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, local_SortedCharacters) == 0x000070, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::local_SortedCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_wildcard_Temp_buffer_array_Variable) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeArray_Array) == 0x000140, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Format_ReturnValue) == 0x000150, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_int_Array_Index_Variable) == 0x000160, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_int_Array_Index_Variable_1) == 0x000164, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_int_Loop_Counter_Variable_1) == 0x000168, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x00016C, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_int_Array_Index_Variable_2) == 0x000170, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetAlliesSpots_Array) == 0x000178, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetAlliesSpots_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Get_Item) == 0x000188, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000190, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetBoolCVar_ReturnValue) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetLocationAtTime_ReturnValue) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetLocationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetLocationAtTime_ReturnValue_1) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetLocationAtTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetLocationAtTime_ReturnValue_2) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetLocationAtTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_2) == 0x000200, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, Temp_int_Loop_Counter_Variable_2) == 0x000248, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Get_Item_1) == 0x000250, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Get_Item_2) == 0x000258, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000260, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000270, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_3) == 0x000280, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002C8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetCharacterRadiusForPlacement_ReturnValue) == 0x000310, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetCharacterRadiusForPlacement_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000318, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000320, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_5) == 0x000328, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_6) == 0x000370, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0003B8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeArray_Array_1) == 0x0003C8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_7) == 0x0003D8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Format_ReturnValue_1) == 0x000420, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetComponentBounds_Origin) == 0x000430, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetComponentBounds_BoxExtent) == 0x000448, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetComponentBounds_SphereRadius) == 0x000460, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_BreakVector_X) == 0x000468, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_BreakVector_Y) == 0x000470, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_BreakVector_Z) == 0x000478, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetCharacterRadiusForPlacement_ReturnValue_1) == 0x000480, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetCharacterRadiusForPlacement_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_MakeVector_ReturnValue) == 0x000488, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Length_ReturnValue) == 0x0004A0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Length_ReturnValue_1) == 0x0004A4, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Less_IntInt_ReturnValue) == 0x0004A8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004A9, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_IntInt_ReturnValue_2) == 0x0004AC, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_8) == 0x0004B0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_9) == 0x0004F8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_AdaptSpawnedCharacterLocation_GroundLocation) == 0x000540, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_AdaptSpawnedCharacterLocation_GroundLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_VectorVector_ReturnValue) == 0x000558, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_FindLookAtRotation_ReturnValue) == 0x000570, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000588, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000680, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_BreakRotator_Roll) == 0x000684, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_BreakRotator_Pitch) == 0x000688, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_BreakRotator_Yaw) == 0x00068C, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_MakeRotator_ReturnValue) == 0x000690, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_10) == 0x0006A8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0006F0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_11) == 0x0006F8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetEnemyIndexesLeftToRight_IndexMapping) == 0x000740, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetEnemyIndexesLeftToRight_IndexMapping' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetSplineLength_ReturnValue) == 0x000750, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Get_Item_3) == 0x000754, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_12) == 0x000758, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Length_ReturnValue_2) == 0x0007A0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Less_IntInt_ReturnValue_2) == 0x0007A4, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetSplineLength_ReturnValue_1) == 0x0007A8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetSplineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_13) == 0x0007B0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0007F8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeArray_Array_2) == 0x000800, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000810, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Format_ReturnValue_2) == 0x000818, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000828, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000830, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_14) == 0x000838, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000880, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeArray_Array_3) == 0x000888, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Format_ReturnValue_3) == 0x000898, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeStruct_FormatArgumentData_15) == 0x0008A8, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, K2Node_MakeArray_Array_4) == 0x0008F0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000900, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Format_ReturnValue_4) == 0x000908, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000918, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000920, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Get_Item_4) == 0x000938, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000940, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000948, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetAllEnemies_Enemies) == 0x000950, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetAllEnemies_Enemies' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000960, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Get_Item_5) == 0x000968, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Not_PreBool_ReturnValue) == 0x000970, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_IsValid_ReturnValue) == 0x000971, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Array_Add_ReturnValue) == 0x000974, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000978, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetLocationAtTime_Time_ImplicitCast) == 0x000980, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetLocationAtTime_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_DrawDebugSphere_Radius_ImplicitCast) == 0x000984, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_DrawDebugSphere_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_MakeVector_Z_ImplicitCast) == 0x000988, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000990, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000998, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0009A0, "Member 'AC_jRPG_BattleManager_C_DispatchEnemiesAlongSpline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.EnableFreeAimControls
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_EnableFreeAimControls final
{
public:
	EFreeAimType                                  FreeAimType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_EnableFreeAimControls) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_EnableFreeAimControls");
static_assert(sizeof(AC_jRPG_BattleManager_C_EnableFreeAimControls) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_EnableFreeAimControls");
static_assert(offsetof(AC_jRPG_BattleManager_C_EnableFreeAimControls, FreeAimType) == 0x000000, "Member 'AC_jRPG_BattleManager_C_EnableFreeAimControls::FreeAimType' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.End Character Turn
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_End_Character_Turn final
{
public:
	double                                        UsedInitiative;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_End_Character_Turn) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_End_Character_Turn");
static_assert(sizeof(AC_jRPG_BattleManager_C_End_Character_Turn) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_End_Character_Turn");
static_assert(offsetof(AC_jRPG_BattleManager_C_End_Character_Turn, UsedInitiative) == 0x000000, "Member 'AC_jRPG_BattleManager_C_End_Character_Turn::UsedInitiative' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ExecuteUbergraph_AC_jRPG_BattleManager
// 0x26F0 (0x26F0 - 0x0000)
struct AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0010(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_1;                        // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartJump_Success;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_2;                        // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_3;                        // 0x0060(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_4;                        // 0x0098(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_5;                        // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_2;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_6;                        // 0x0120(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_3;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartParry_Success;                    // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_14;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_15;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_14;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_15;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_4;                         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartDodge_Success;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_16;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_16;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_5;                         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x01D8(0x0010)()
	bool                                          CallFunc_FlushAdditionalTurnEndEvent_Value;        // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01F0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCameraAnimationSequence*               Temp_wildcard_Variable_7;                          // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0260(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0270(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0280(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02D0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_17;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_18;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x02FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_19;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_17;                  // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_8;                          // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0328(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_20;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_18;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction;     // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue;         // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36B[0x1];                                      // 0x036B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_19;                  // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_6;                         // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartGradientParry_Success;            // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0383(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_20;                  // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0388(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_21;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_21;                  // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_ScreenShotRequestAsyncAction*       CallFunc_WriteCurrentScreenToRenderTarget_ReturnValue; // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_22;                 // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_23;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_22;                  // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_9;                        // 0x03D0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_7;                         // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0408(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0418(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0460(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_3;                     // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0490(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x04A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x04E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsMovingTowardsInitialLocation_ReturnValue; // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_4;                     // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAtInitialLocation_ReturnValue;          // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_1;   // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_1;       // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A[0x2];                                      // 0x053A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_23;                  // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0550(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_2;   // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_2;       // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_3;   // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_3;       // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Temp_buffer_array_Variable;        // 0x05A8(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x05B8(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_24;                 // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_10;                       // 0x05D0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_24;                  // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_25;                 // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_25;                // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_25;                  // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_11;                       // 0x05F8(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_8;                         // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_2;  // 0x0615(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_616[0x2];                                      // 0x0616(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0618(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_3;  // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_26;                 // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_26;                // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_26;                  // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_4;  // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_5;  // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63A[0x2];                                      // 0x063A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_27;                 // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_27;                // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_27;                  // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DependencyRefCounter_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_6;  // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0654(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_7;  // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_28;                 // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_28;                // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_28;                  // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_8;  // 0x0674(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_675[0x3];                                      // 0x0675(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_29;                 // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_29;                // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_29;                  // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_9;  // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        Temp_wildcard_Variable_12;                         // 0x0688(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_10; // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0698(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x06A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x06F0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_5;                     // 0x0700(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0710(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0758(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_11; // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0770(0x0010)()
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_12; // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0x3];                                      // 0x0781(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_30;                 // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_30;                // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_30;                  // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_BattleTransition_C*                CallFunc_Create_ReturnValue;                       // 0x0790(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_31;                  // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79C[0x4];                                      // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_Temp_buffer_array_Variable_1;       // 0x07A0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1; // 0x07B0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x07C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_13; // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_14; // 0x07D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D2[0x2];                                      // 0x07D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_31;                 // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_31;                // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_32;                  // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_13;                       // 0x07E0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_9;                         // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x07FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FE[0x2];                                      // 0x07FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_33;                  // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_32;                 // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_32;                // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_34;                  // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFreeAimType                                  K2Node_CustomEvent_FreeAimType;                    // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0812(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_813[0x5];                                      // 0x0813(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0828(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDirectorComponent_C*            CallFunc_Get_Game_Director_Component_ReturnValue;  // 0x0848(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDirectorComponent_C*            CallFunc_Get_Game_Director_Component_ReturnValue_1; // 0x0850(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_1; // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UINavigationComponent_C*            CallFunc_GetUINavigationComponent_ReturnValue;     // 0x0888(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_UINavigationComponent_C*            CallFunc_GetUINavigationComponent_ReturnValue_1;   // 0x0890(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_7;        // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_8;        // 0x08A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFBattleStartParams                    K2Node_CustomEvent_BattleStartParams;              // 0x08B0(0x0158)(ContainsInstancedReference, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_7;                 // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DependencyRefCounter_C*             CallFunc_SpawnObject_ReturnValue_1;                // 0x0A18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleMap_C*                        K2Node_DynamicCast_AsBP_Battle_Map;                // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x7];                                      // 0x0A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0A30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0A40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0A50(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0A60(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0A70(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0AB8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0B00(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0B10(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x0B58(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_10;                        // 0x0B68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x0B70(0x0010)()
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_2;           // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B81[0x7];                                      // 0x0B81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters;         // 0x0B88(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters_1;       // 0x0B98(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_11;                        // 0x0BA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_3;           // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB1[0x7];                                      // 0x0BB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction;            // 0x0BB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction_1;          // 0x0BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC9[0x7];                                      // 0x0BC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_TransitionIntroLatentAction;    // 0x0BD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_4;   // 0x0BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_4;       // 0x0BE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction_2;          // 0x0BE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF1[0x3];                                      // 0x0BF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_33;                 // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_2; // 0x0BF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_33;                // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C04[0x4];                                      // 0x0C04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_3; // 0x0C08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartBattle_ReturnValue;               // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C11[0x3];                                      // 0x0C11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_34;                 // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_35;                 // 0x0C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C21[0x3];                                      // 0x0C21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_34;                // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0C30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_4; // 0x0C48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction; // 0x0C50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0C58(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0C68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x0C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C72[0x6];                                      // 0x0C72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_9;        // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterReactionSystem_C*          CallFunc_GetCharacterReactionSystem_ReturnValue;   // 0x0C80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters_2;       // 0x0C88(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_CustomEvent_CharactersToProcess;          // 0x0C98(0x0010)(ReferenceParm)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_6;                 // 0x0CA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusicParameters          K2Node_MakeStruct_S_InteractiveMusicParameters;    // 0x0CB0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0CD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD9[0x7];                                      // 0x0CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEnableCameraMovement_ReturnValue;      // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE9[0x7];                                      // 0x0CE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0CF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWorldPartitionStreamingSourceComponent*> K2Node_MakeArray_Array_8;                 // 0x0CF8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_8;            // 0x0D08(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_5; // 0x0D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_6; // 0x0D20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOutstandingDataLayerActivation_ReturnValue; // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0D29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOutstandingLoading_ReturnValue;        // 0x0D2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0D2B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_4;           // 0x0D2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2D[0x3];                                      // 0x0D2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffComponent_C*              CallFunc_SpawnObject_ReturnValue_2;                // 0x0D30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_AudioControlSystem_Battle_C*        CallFunc_SpawnObject_ReturnValue_3;                // 0x0D38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GradientGaugeSystem_C*              CallFunc_SpawnObject_ReturnValue_4;                // 0x0D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractiveBattleMusicController_C* CallFunc_SpawnObject_ReturnValue_5;                // 0x0D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0D50(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_TeamMotivationGenerator_C*          CallFunc_SpawnObject_ReturnValue_6;                // 0x0D68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Add_NewItem_CastInput;              // 0x0D70(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0D80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D84[0x4];                                      // 0x0D84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Add_NewItem_CastInput_1;            // 0x0D88(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9C[0x4];                                      // 0x0D9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Add_NewItem_CastInput_2;            // 0x0DA0(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0DB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB4[0x4];                                      // 0x0DB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_7; // 0x0DB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_PartySlot                      CallFunc_Array_Get_Item_12;                        // 0x0DC0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0DCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0DD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD2[0x6];                                      // 0x0DD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_CharacterName_1;                // 0x0DD8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0DE8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue; // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF9[0x7];                                      // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats; // 0x0E00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x0E0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E0D[0x3];                                      // 0x0E0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Ignore;                         // 0x0E14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E15[0x3];                                      // 0x0E15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAC_jRPG_CharacterBattleStats_C* CharacterStats)> K2Node_CreateDelegate_OutputDelegate_11; // 0x0E1C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2C[0x4];                                      // 0x0E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_13;                        // 0x0E30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0E3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3D[0x3];                                      // 0x0E3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Character_4;                    // 0x0E40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_1;                       // 0x0E50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_1; // 0x0E54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E55[0x3];                                      // 0x0E55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_1; // 0x0E58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAC_jRPG_CharacterBattleStats_C* CharacterStats)> K2Node_CreateDelegate_OutputDelegate_12; // 0x0E60(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewHPValue;                     // 0x0E70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E74[0x4];                                      // 0x0E74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_14;                        // 0x0E80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0E8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8D[0x3];                                      // 0x0E8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_BuffBPClass_1;                  // 0x0E90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0EA0(0x0010)()
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_15;                        // 0x0EB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0EB8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_9;                          // 0x0F00(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F14[0x4];                                      // 0x0F14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_8;                     // 0x0F18(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F29[0x7];                                      // 0x0F29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UBP_BattleBuffInstance_C>   CallFunc_DEBUG_GetBattleBuffClassByName_BattleBuffInstanceClass; // 0x0F30(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_BattleBuffInstance_C*               CallFunc_SpawnObject_ReturnValue_7;                // 0x0F38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F41[0x7];                                      // 0x0F41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_16;                        // 0x0F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_LastStandSystem_C*                  CallFunc_SpawnObject_ReturnValue_8;                // 0x0F50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x0F58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F59[0x3];                                      // 0x0F59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Amount;                         // 0x0F5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_17;                        // 0x0F60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_18;                        // 0x0F68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0F70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0F74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F75[0x3];                                      // 0x0F75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_19;                        // 0x0F78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_20;                        // 0x0F80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HP;                             // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8C[0x4];                                      // 0x0F8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput; // 0x0F90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamage_DamageDealt;                // 0x0FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_HasHit;                     // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_DodgeSuccess;               // 0x0FA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_ParrySuccess;               // 0x0FAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_QTESuccess_;                // 0x0FAB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FAC[0x4];                                      // 0x0FAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamage_BattleDamages;              // 0x0FB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0FB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_1_FirstRun;                       // 0x0FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC1[0x3];                                      // 0x0FC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0FC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_21;                        // 0x0FC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AllyName;                       // 0x0FD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_BuffBPClass;                    // 0x0FE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSubclassOf<class UBP_BattleBuffInstance_C>   CallFunc_DEBUG_GetBattleBuffClassByName_BattleBuffInstanceClass_1; // 0x0FF0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_2; // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF9[0x7];                                      // 0x0FF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_2; // 0x1000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuffInstance_C*               CallFunc_SpawnObject_ReturnValue_9;                // 0x1008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_22;                        // 0x1010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_CharacterName;                  // 0x1018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success_1;                   // 0x1028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_3; // 0x1029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102A[0x6];                                     // 0x102A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_3; // 0x1030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_CharacterID;                    // 0x1038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PerfectionChange;               // 0x1048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104C[0x4];                                     // 0x104C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_1; // 0x1050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamage_DamageDealt_1;              // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_HasHit_1;                   // 0x1068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_DodgeSuccess_1;             // 0x1069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_ParrySuccess_1;             // 0x106A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_QTESuccess__1;              // 0x106B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106C[0x4];                                     // 0x106C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamage_BattleDamages_1;            // 0x1070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_4; // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1079[0x7];                                     // 0x1079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_4; // 0x1080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x1088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ShieldAmount;                   // 0x1090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1094[0x4];                                     // 0x1094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PerfectionMechanicComponent_C*      CallFunc_GetComponentByClass_ReturnValue;          // 0x1098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x10A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_15; // 0x10A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A5[0x3];                                     // 0x10A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Damages;                        // 0x10A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_23;                        // 0x10B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_24;                        // 0x10B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x10C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10DC[0x4];                                     // 0x10DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_2; // 0x10E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamage_DamageDealt_2;              // 0x10F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_HasHit_2;                   // 0x10F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_DodgeSuccess_2;             // 0x10F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_ParrySuccess_2;             // 0x10FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_QTESuccess__2;              // 0x10FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10FC[0x4];                                     // 0x10FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamage_BattleDamages_2;            // 0x1100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x1108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1109[0x3];                                     // 0x1109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_35;                  // 0x110C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_36;                  // 0x1110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1114[0x4];                                     // 0x1114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_25;                        // 0x1118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_Target_1;                       // 0x1120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_Source_2;                       // 0x1128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1131[0x7];                                     // 0x1131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_3; // 0x1138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamage_DamageDealt_3;              // 0x1148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_HasHit_3;                   // 0x1150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_DodgeSuccess_3;             // 0x1151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_ParrySuccess_3;             // 0x1152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_QTESuccess__3;              // 0x1153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1154[0x4];                                     // 0x1154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamage_BattleDamages_3;            // 0x1158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_5;   // 0x1160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_5;       // 0x1168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_26;                        // 0x1170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x1178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1179[0x7];                                     // 0x1179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_27;                        // 0x1180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_36;                 // 0x1188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x118C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x118D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x118E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118F[0x1];                                     // 0x118F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base;   // 0x1190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x1198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacking_Heroes_IsAttacking;          // 0x1199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119A[0x6];                                     // 0x119A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Is_Attacking_Heroes_TargetedHeroes;     // 0x11A0(0x0010)(ReferenceParm)
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_1; // 0x11B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x11B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacking_Heroes_IsAttacking_1;        // 0x11B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11BA[0x6];                                     // 0x11BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Is_Attacking_Heroes_TargetedHeroes_1;   // 0x11C0(0x0010)(ReferenceParm)
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_2; // 0x11D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x11D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacking_Heroes_IsAttacking_2;        // 0x11D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DA[0x6];                                     // 0x11DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Is_Attacking_Heroes_TargetedHeroes_2;   // 0x11E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_35;                // 0x11F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x11F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11F5[0x3];                                     // 0x11F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_3; // 0x11F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x1200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1201[0x7];                                     // 0x1201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_3;          // 0x1208(0x0010)()
	bool                                          CallFunc_Is_Attacking_Heroes_IsAttacking_3;        // 0x1218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1219[0x7];                                     // 0x1219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Is_Attacking_Heroes_TargetedHeroes_3;   // 0x1220(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x1230(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_28;                        // 0x1278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x1280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockedByDefensiveMoveTimer_IsLocked;    // 0x1284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x1285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x1286(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1287[0x1];                                     // 0x1287(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_29;                        // 0x1288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x1290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x1294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1295[0x3];                                     // 0x1295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x1298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129C[0x4];                                     // 0x129C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_DebugReason_1;                  // 0x12A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x12B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_10;                         // 0x12F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_9;                     // 0x1308(0x0010)()
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_14;                       // 0x1318(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_30;                        // 0x1328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_31;                        // 0x1330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x1338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x133C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x1341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x1342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1343[0x5];                                     // 0x1343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_32;                        // 0x1348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x1350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1351[0x3];                                     // 0x1351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_24;              // 0x1354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x1358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x1359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x135A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135B[0x5];                                     // 0x135B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_8; // 0x1360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInBattle_ReturnValue;                   // 0x1368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1369[0x3];                                     // 0x1369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_37;                 // 0x136C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x1370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1371[0x3];                                     // 0x1371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_36;                // 0x1374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_ConcatActors_Result;                      // 0x1378(0x0010)()
	class FText                                   CallFunc_ConcatActors_Result_1;                    // 0x1388(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x1398(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x13E0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_25;              // 0x1428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_26;              // 0x142C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x1430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x1438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x1440(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x1488(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_11;                         // 0x14D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_10;                    // 0x14E0(0x0010)()
	bool                                          CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam;   // 0x14F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x14F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x14F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WantedDefense;                  // 0x14F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x14F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F5[0x3];                                     // 0x14F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_9; // 0x14F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInBattle_ReturnValue_1;                 // 0x1500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x1502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1503[0x1];                                     // 0x1503(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_13;           // 0x1504(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x1514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x1515(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1516[0x2];                                     // 0x1516(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_4; // 0x1518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x1520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacking_Heroes_IsAttacking_4;        // 0x1521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1522[0x6];                                     // 0x1522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Is_Attacking_Heroes_TargetedHeroes_4;   // 0x1528(0x0010)(ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x1538(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x1548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x1549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154A[0x6];                                     // 0x154A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_5; // 0x1550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacking_Heroes_IsAttacking_5;        // 0x1559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155A[0x6];                                     // 0x155A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Is_Attacking_Heroes_TargetedHeroes_5;   // 0x1560(0x0010)(ReferenceParm)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_5;                 // 0x1570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x1578(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetActiveCharacter_CurrentCharacter;      // 0x1588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue;               // 0x1590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x1591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateVisibilityAndBindingsFromTargets_IsVisible; // 0x1592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x1593(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1594[0x4];                                     // 0x1594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_6;   // 0x1598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_6;       // 0x15A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x15A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x15A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15AA[0x2];                                     // 0x15AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x15AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_4;                     // 0x15BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_EngageTypes                            K2Node_CustomEvent_EngageType;                     // 0x15BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x15BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15BF[0x1];                                     // 0x15BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character_3;                    // 0x15C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character_2;                    // 0x15C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Enemy_2;                        // 0x15D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_4;          // 0x15D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x15E8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_5;          // 0x1630(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_12;                         // 0x1640(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x1650(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_11;                    // 0x1698(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_13;                         // 0x16A8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_12;                    // 0x16B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1;     // 0x16C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C9[0x7];                                     // 0x16C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character_1;                    // 0x16D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Enemy_1;                        // 0x16D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleFeedbackState_C*              K2Node_CustomEvent_DodgeInfo;                      // 0x16E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSet_IsSet;                              // 0x16E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSet_IsSet_1;                            // 0x16E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16EA[0x6];                                     // 0x16EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleFeedbackState_C*              K2Node_CustomEvent_ParryInfo;                      // 0x16F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_37;                  // 0x16F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16FC[0x4];                                     // 0x16FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character;                      // 0x1700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Enemy;                          // 0x1708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_33;                        // 0x1710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_4; // 0x1718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamage_DamageDealt_4;              // 0x1728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_HasHit_4;                   // 0x1730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_DodgeSuccess_4;             // 0x1731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_ParrySuccess_4;             // 0x1732(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_QTESuccess__4;              // 0x1733(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1734[0x4];                                     // 0x1734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamage_BattleDamages_4;            // 0x1738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleFeedbackState_C*              K2Node_CustomEvent_DefendInfo;                     // 0x1740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSet_IsSet_2;                            // 0x1748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1749[0x7];                                     // 0x1749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_10; // 0x1750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_11; // 0x1758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_12; // 0x1760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x1768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x1769(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x176A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterWithMaxInitiative_Success_;   // 0x176B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176C[0x4];                                     // 0x176C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterWithMaxInitiative_Character;  // 0x1770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCharacterWithMaxInitiative_TimeToTurn; // 0x1778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters_1;  // 0x1780(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_18;           // 0x1790(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_34;                        // 0x17D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_27;              // 0x17E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x17E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E5[0x3];                                     // 0x17E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_6;          // 0x17E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_19;           // 0x17F8(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Source_1;                       // 0x1840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Target;                         // 0x1848(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResumeBattle_ReturnValue;              // 0x1850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1851[0x7];                                     // 0x1851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_jRPG_CharacterBattleStats_C*> K2Node_MakeArray_Array_14;                        // 0x1858(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CanResumeBattle_ReturnValue_1;            // 0x1868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1869[0x7];                                     // 0x1869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters_2;  // 0x1870(0x0010)(ReferenceParm)
	class UBP_UINavigationComponent_C*            CallFunc_GetUINavigationComponent_ReturnValue_2;   // 0x1880(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x1888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x1890(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x1898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_TargetCharacterStats;           // 0x18B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_CounteringCharacterStats;       // 0x18B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Skill;                          // 0x18C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_7;   // 0x18C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_7;       // 0x18D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x18D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_7;          // 0x18E0(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x18F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18F1[0x7];                                     // 0x18F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_20;           // 0x18F8(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x1940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x1948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1949[0x7];                                     // 0x1949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x1950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array_15;                       // 0x1958(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_8;          // 0x1968(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_21;           // 0x1978(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1; // 0x19C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_1;         // 0x19C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C9[0x7];                                     // 0x19C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_16;                         // 0x19D0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x19E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_13;                    // 0x19F8(0x0010)()
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x1A08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2; // 0x1A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_2;         // 0x1A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A19[0x7];                                     // 0x1A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x1A20(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x1A80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x1A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x1A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8A[0x6];                                     // 0x1A8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x1A90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x1A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x1AA0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x1AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_8;   // 0x1AB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_8;       // 0x1AC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x1AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ACC[0x4];                                     // 0x1ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x1AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD9[0x7];                                     // 0x1AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x1AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x1AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_38;                 // 0x1AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AF4[0x4];                                     // 0x1AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_CustomEvent_TargetedCharacters;           // 0x1AF8(0x0010)(ReferenceParm)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_Source;                         // 0x1B08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_SkillClass;                     // 0x1B10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x1B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Battle_SkillScript_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x1B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3; // 0x1B28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_3;         // 0x1B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_23;               // 0x1B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B32[0x2];                                     // 0x1B32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_37;                // 0x1B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_17;           // 0x1B38(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetReferenceCounterState_ReturnValue;     // 0x1B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent__isActive;                      // 0x1B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x1B4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x1B4B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4C[0x4];                                     // 0x1B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_13; // 0x1B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAC_jRPG_CombatMovement_C* MovementComponent)> K2Node_CreateDelegate_OutputDelegate_18; // 0x1B58(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleEnd_BattleHasEnded;            // 0x1B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B69[0x7];                                     // 0x1B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_9;          // 0x1B70(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_22;           // 0x1B80(0x0048)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item_35;                        // 0x1BC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_17;                         // 0x1BD8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_14;                    // 0x1BE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_28;              // 0x1BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_24;               // 0x1BFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_4;               // 0x1BFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BFE[0x2];                                     // 0x1BFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item_36;                        // 0x1C00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item_37;                        // 0x1C10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_29;              // 0x1C20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_30;              // 0x1C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_25;               // 0x1C28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_26;               // 0x1C29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2A[0x6];                                     // 0x1C2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_PrepareForBackupTeam_BackupTeam;          // 0x1C30(0x0010)(ReferenceParm)
	TArray<TSoftClassPtr<class UClass>>           CallFunc_PrepareForBackupTeam_ClassesToLoad;       // 0x1C40(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_38;                        // 0x1C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_31;              // 0x1C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5C[0x4];                                     // 0x1C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x1C60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_27;               // 0x1C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C69[0x3];                                     // 0x1C69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_32;              // 0x1C6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex; // 0x1C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_5;                     // 0x1C74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C75[0x3];                                     // 0x1C75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Spawn_Player_Character_SpawnedCharacter;  // 0x1C78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x1C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResumeBattle_ReturnValue_2;            // 0x1C84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C85[0x3];                                     // 0x1C85(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_14; // 0x1C88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_15; // 0x1C90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShouldSendReserve;              // 0x1C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOutstandingLoading_ReturnValue_1;      // 0x1C99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x1C9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9B[0x1];                                     // 0x1C9B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ABP_jRPG_Character_Battle_Base_C* CharacterBase)> K2Node_CreateDelegate_OutputDelegate_19; // 0x1C9C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_20;           // 0x1CAC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSendReserveTeam_ReturnValue;           // 0x1CBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CBD[0x3];                                     // 0x1CBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x1CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom;           // 0x1CC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD1[0x7];                                     // 0x1CD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue_1;                // 0x1CD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationParams                 K2Node_MakeStruct_CameraAnimationParams;           // 0x1CE0(0x0048)(NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_10;       // 0x1D28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value;                           // 0x1D30(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D41[0x7];                                     // 0x1D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Cameras_BattleFinish                CallFunc_GetDataTableRowFromName_OutRow;           // 0x1D48(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x1D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D61[0x7];                                     // 0x1D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationSequence*               CallFunc_Array_Random_OutItem;                     // 0x1D68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x1D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1D74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleEndResult                              K2Node_CustomEvent_BattleEndResult_1;              // 0x1D75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1D76(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleEndResult                              K2Node_CustomEvent_BattleEndResult;                // 0x1D77(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x1D78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x1D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D89[0x7];                                     // 0x1D89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x1D90(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_23;           // 0x1DA0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_18;                         // 0x1DE8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x1DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF9[0x7];                                     // 0x1DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_15;                    // 0x1E00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEncounterDataTableRow_Found;           // 0x1E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E11[0x7];                                     // 0x1E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Encounter                      CallFunc_GetEncounterDataTableRow_EncounterData;   // 0x1E18(0x0060)(HasGetValueTypeHash)
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FindActiveSkillSequenceBP_EpicSequenceBP; // 0x1E78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x1E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E81[0x7];                                     // 0x1E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x1E88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_10;         // 0x1E90(0x0010)()
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x1EA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_24;           // 0x1EA8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_19;                         // 0x1EF0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_16;                    // 0x1F00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_2;          // 0x1F10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_3;          // 0x1F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x1F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x1F28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x1F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item_39;                        // 0x1F38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item_40;                        // 0x1F40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_4; // 0x1F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_4;         // 0x1F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F51[0x7];                                     // 0x1F51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_5; // 0x1F58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_5;         // 0x1F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F61[0x3];                                     // 0x1F61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_33;              // 0x1F64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction_3;          // 0x1F68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_28;               // 0x1F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F71[0x7];                                     // 0x1F71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintAsyncAction*               CallFunc_WaitAsyncAction_ReturnValue;              // 0x1F78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x1F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F81[0x7];                                     // 0x1F81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction_4;          // 0x1F88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x1F90(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_WaitAsyncAction_ReturnValue_1;            // 0x1FA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x1FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA9[0x3];                                     // 0x1FA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x1FAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item_41;                        // 0x1FB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_6; // 0x1FB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_6;         // 0x1FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC1[0x3];                                     // 0x1FC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_34;              // 0x1FC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_29;               // 0x1FC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC9[0x3];                                     // 0x1FC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_22;           // 0x1FCC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x1FDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue_1;                     // 0x1FDD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FDE[0x2];                                     // 0x1FDE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_23;           // 0x1FE0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x1FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x1FF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF2[0x6];                                     // 0x1FF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusicParameters          K2Node_MakeStruct_S_InteractiveMusicParameters_1;  // 0x1FF8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue_2;                // 0x2010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x2018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2019[0x7];                                     // 0x2019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_4;                 // 0x2020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_24;           // 0x2028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleCommunication_C> CallFunc_OnCharacterTurnEnd_self_CastInput;   // 0x2038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_38;                  // 0x2048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204C[0x4];                                     // 0x204C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_42;                        // 0x2050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_5;               // 0x2058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2059[0x3];                                     // 0x2059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_25;           // 0x205C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x206C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x206D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleEnd_BattleHasEnded_1;          // 0x206E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_206F[0x1];                                     // 0x206F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters_3;  // 0x2070(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item_43;                        // 0x2080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x2090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_35;              // 0x2098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x209C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_30;               // 0x209D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209E[0x2];                                     // 0x209E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x20A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_2;              // 0x20A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A5[0x3];                                     // 0x20A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_CharacterBase;                  // 0x20A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x20B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x20C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C1[0x7];                                     // 0x20C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x20C8(0x0010)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x20D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D9[0x7];                                     // 0x20D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_25;           // 0x20E0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x2128(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_26;           // 0x2138(0x0048)(HasGetValueTypeHash)
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x2180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationHandle                 CallFunc_PlayCameraAnimation_ReturnValue;          // 0x2188(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationHandle                 CallFunc_PlayCameraAnimation_ReturnValue_1;        // 0x218C(0x0004)(NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CombatMovement_C*              K2Node_CustomEvent_MovementComponent;              // 0x2190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x2198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219C[0x4];                                     // 0x219C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x21A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x21A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x21B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21B1[0x7];                                     // 0x21B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_ConcatenateDisplayNames_Result;           // 0x21B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_27;           // 0x21C8(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_36;              // 0x2210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2214[0x4];                                     // 0x2214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x2218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_3;              // 0x2220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2221[0x7];                                     // 0x2221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_28;           // 0x2228(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_20;                         // 0x2270(0x0010)(ReferenceParm)
	class UWBP_BattleNotification_Reserve_C*      CallFunc_Create_ReturnValue_1;                     // 0x2280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_17;                    // 0x2288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_21;                         // 0x2298(0x0010)(ReferenceParm)
	TDelegate<void(bool ShouldSendReserve)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x22A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_18;                    // 0x22B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_3;                 // 0x22C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_DebugReason;                    // 0x22D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x22E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x22F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_27;           // 0x2300(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_SpawnObject_ReturnValue_10;               // 0x2310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool _isActive)>               K2Node_CreateDelegate_OutputDelegate_28;           // 0x2318(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters_3;       // 0x2328(0x0010)(ReferenceParm)
	struct FS_InteractiveMusicParameters          K2Node_MakeStruct_S_InteractiveMusicParameters_2;  // 0x2338(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_5;           // 0x2350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2351[0x7];                                     // 0x2351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters_4;       // 0x2358(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_44;                        // 0x2368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_37;              // 0x2370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_31;               // 0x2374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2375[0x3];                                     // 0x2375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x2378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_9;   // 0x2388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_9;       // 0x2390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x2398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2399[0x7];                                     // 0x2399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x23A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_10;  // 0x23B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_10;      // 0x23B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x23C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C1[0x7];                                     // 0x23C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_6; // 0x23C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x23D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D1[0x7];                                     // 0x23D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x23D8(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Has_Been_Initd_Variable_6;               // 0x23E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23E9[0x7];                                     // 0x23E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_45;                        // 0x23F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_38;              // 0x23F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_32;               // 0x23FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23FD[0x3];                                     // 0x23FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_46;                        // 0x2400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_29;           // 0x2408(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_39;              // 0x2418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_33;               // 0x241C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241D[0x3];                                     // 0x241D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_FirstStrike_C*                     CallFunc_SpawnObject_ReturnValue_11;               // 0x2420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_47;                        // 0x2428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_48;                        // 0x2430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_40;              // 0x2438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_41;              // 0x243C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_34;               // 0x2440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_35;               // 0x2441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x2442(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_6;                     // 0x2443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2444[0x4];                                     // 0x2444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x2448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x2450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2451[0x7];                                     // 0x2451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_29;           // 0x2458(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_22;                         // 0x24A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_19;                    // 0x24B0(0x0010)()
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_2;                 // 0x24C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item_49;                        // 0x24C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_4;              // 0x24D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x24D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x24D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D3[0x5];                                     // 0x24D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x24D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_39;                 // 0x24E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E4[0x4];                                     // 0x24E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom_1;         // 0x24E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x24F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_36;               // 0x24F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24F2[0x2];                                     // 0x24F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_38;                // 0x24F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_50;                        // 0x24F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_42;              // 0x2500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_37;               // 0x2504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2505[0x3];                                     // 0x2505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x2508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_250C[0x4];                                     // 0x250C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleFeedbackState_C*              CallFunc_SpawnObject_ReturnValue_12;               // 0x2510(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleFeedbackState_C*              CallFunc_SpawnObject_ReturnValue_13;               // 0x2518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x2520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2524[0x4];                                     // 0x2524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleFeedbackState_C*              CallFunc_SpawnObject_ReturnValue_14;               // 0x2528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_16; // 0x2530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x2538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInBattle_ReturnValue_2;                 // 0x2539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_253A[0x6];                                     // 0x253A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_1;                 // 0x2540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeDilation;                   // 0x2548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_GameDuration;                   // 0x254C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x2550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2551[0x7];                                     // 0x2551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_CharacterStats_1;               // 0x2558(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_CustomEvent_CharacterStats;                 // 0x2560(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_7; // 0x2568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid_7;         // 0x2570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue; // 0x2571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2572[0x6];                                     // 0x2572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleSummaryStatsManager_C*        CallFunc_SpawnObject_ReturnValue_15;               // 0x2578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_30;           // 0x2580(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_17; // 0x2590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_18; // 0x2598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_7;               // 0x25A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A1[0x7];                                     // 0x25A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_19; // 0x25A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue_1;             // 0x25B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x25B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25B2[0x6];                                     // 0x25B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_jRPG_GameOverScreen_C*             CallFunc_Create_ReturnValue_2;                     // 0x25B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_20; // 0x25C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters_5;       // 0x25C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsBattleEnding_ReturnValue_2;             // 0x25D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x25D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleEnding_ReturnValue_3;             // 0x25DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x25DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x25DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x25DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x25DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25DF[0x1];                                     // 0x25DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_39;                  // 0x25E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25E4[0x4];                                     // 0x25E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_51;                        // 0x25E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_5; // 0x25F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReceiveDamage_DamageDealt_5;              // 0x2600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_HasHit_5;                   // 0x2608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_DodgeSuccess_5;             // 0x2609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_ParrySuccess_5;             // 0x260A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveDamage_QTESuccess__5;              // 0x260B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_260C[0x4];                                     // 0x260C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_ReceiveDamage_BattleDamages_5;            // 0x2610(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction;                   // 0x2618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractiveMusicSystem_C*           CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem; // 0x2620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractiveMusicSystem_C*           CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem_1; // 0x2628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_World_Audio_Component_C*            CallFunc_GetWorldAudioComponent_WorldAudioComponent; // 0x2630(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateRangedAmbienceParameters_IsValid; // 0x2638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x2639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263A[0x6];                                     // 0x263A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_StartWaitAsyncAction_NewLatentAction_11;  // 0x2640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintAsyncAction*               CallFunc_StartWaitAsyncAction_ReturnValue_11;      // 0x2648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x2650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2651[0x7];                                     // 0x2651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue_3;                // 0x2658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue_2;                     // 0x2660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2661[0x7];                                     // 0x2661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentAP_AP;                          // 0x2668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x2670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x2671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2672[0x6];                                     // 0x2672(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue_4;                // 0x2678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_11;       // 0x2680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_31;           // 0x2688(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x2698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x26A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A1[0x7];                                     // 0x26A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PDT_GameAction_C*                   CallFunc_Array_Get_Item_52;                        // 0x26A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x26B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B1[0x3];                                     // 0x26B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_43;              // 0x26B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_38;               // 0x26B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_7;                     // 0x26B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26BA[0x6];                                     // 0x26BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_OutRangeA_ImplicitCast;   // 0x26C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x26C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast; // 0x26D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast;  // 0x26D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x26D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x26E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1; // 0x26E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x26E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager");
static_assert(sizeof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager) == 0x0026F0, "Wrong size on AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, EntryPoint) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable) == 0x00000D, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_1) == 0x000020, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item) == 0x000038, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_TryStartJump_Success) == 0x000044, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_TryStartJump_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_2) == 0x000048, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_2) == 0x000058, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_3) == 0x000060, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_1) == 0x00007C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_2) == 0x00008C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_2) == 0x000094, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_4) == 0x000098, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_4) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_3) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_5) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_5) == 0x0000D4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_4) == 0x0000DC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_3) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_5) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000EC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_4) == 0x0000F4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Variable) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_6) == 0x00010C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_6) == 0x000110, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_5) == 0x000114, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_7) == 0x000118, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_7) == 0x00011C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_6) == 0x000120, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_6) == 0x000130, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000134, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_6) == 0x000138, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_8) == 0x00013C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_8) == 0x000140, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_7) == 0x000144, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_8) == 0x000148, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_9) == 0x00014C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_9) == 0x000150, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_9) == 0x000154, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_10) == 0x000158, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_10) == 0x00015C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_10) == 0x000160, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_11) == 0x000164, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_3) == 0x000168, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_11) == 0x000170, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_TryStartParry_Success) == 0x000174, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_TryStartParry_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_11) == 0x000178, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_12) == 0x00017C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_12) == 0x000180, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_12) == 0x000184, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_13) == 0x000188, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_13) == 0x00018C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_3) == 0x000190, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_13) == 0x000194, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_14) == 0x000198, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_15) == 0x00019C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_14) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_15) == 0x0001A4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_14) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_15) == 0x0001AC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_4) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_TryStartDodge_Success) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_TryStartDodge_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_16) == 0x0001BC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_16) == 0x0001C4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_16) == 0x0001C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_5) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0001D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_FlushAdditionalTurnEndEvent_Value) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_FlushAdditionalTurnEndEvent_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array) == 0x000238, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue) == 0x000248, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_7) == 0x000258, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000260, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate) == 0x000270, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x000280, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_1) == 0x0002C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_1) == 0x0002D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_1) == 0x0002E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_17) == 0x0002F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_17) == 0x0002F4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_18) == 0x0002F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002FC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_5) == 0x00030C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_18) == 0x000310, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_19) == 0x000314, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_19) == 0x000318, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_17) == 0x00031C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable_1) == 0x000320, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_8) == 0x000321, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_2) == 0x000328, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_2) == 0x000338, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_20) == 0x000348, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_20) == 0x00034C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_18) == 0x000350, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable_1) == 0x000354, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction) == 0x000358, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue) == 0x000360, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_2) == 0x000368, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MultiGate_FirstRun) == 0x000369, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MultiGate_ScratchBool) == 0x00036A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MultiGate_ScratchIndex) == 0x00036C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_19) == 0x000370, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_6) == 0x000378, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_TryStartGradientParry_Success) == 0x000380, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_TryStartGradientParry_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000381, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x000382, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue) == 0x000383, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_20) == 0x000384, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000388, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_21) == 0x000398, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_21) == 0x00039C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_21) == 0x0003A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_WriteCurrentScreenToRenderTarget_ReturnValue) == 0x0003A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_WriteCurrentScreenToRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_3) == 0x0003B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_22) == 0x0003B4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_23) == 0x0003B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_22) == 0x0003BC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_6) == 0x0003C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_23) == 0x0003C4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_22) == 0x0003C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_9) == 0x0003D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_7) == 0x0003E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_7) == 0x0003E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetDisplayName_ReturnValue) == 0x0003F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_7) == 0x000400, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_StringToText_ReturnValue) == 0x000408, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_2) == 0x000418, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_3) == 0x000460, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetDisplayName_ReturnValue_1) == 0x000470, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_3) == 0x000480, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000490, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_3) == 0x0004A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_4) == 0x0004E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsMovingTowardsInitialLocation_ReturnValue) == 0x0004F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsMovingTowardsInitialLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_4) == 0x000500, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000510, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsAtInitialLocation_ReturnValue) == 0x000520, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsAtInitialLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_1) == 0x000528, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_1) == 0x000530, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x000538, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_4) == 0x000539, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_23) == 0x00053C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000540, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000550, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_2) == 0x000560, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_2) == 0x000568, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_5) == 0x000570, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000578, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000588, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_3) == 0x000590, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_3) == 0x000598, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_6) == 0x0005A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Temp_buffer_array_Variable) == 0x0005A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x0005B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_24) == 0x0005C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_24) == 0x0005CC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_10) == 0x0005D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_24) == 0x0005E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_8) == 0x0005E4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_25) == 0x0005E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_25) == 0x0005EC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_25) == 0x0005F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_11) == 0x0005F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_8) == 0x000608, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_9) == 0x000610, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_8) == 0x000614, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_2) == 0x000615, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000618, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_3) == 0x000628, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_26) == 0x00062C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_26) == 0x000630, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_26) == 0x000634, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_4) == 0x000638, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_5) == 0x000639, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_27) == 0x00063C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_27) == 0x000640, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_27) == 0x000644, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue) == 0x000648, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_6) == 0x000650, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x000654, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_7) == 0x000664, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_28) == 0x000668, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_28) == 0x00066C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_28) == 0x000670, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_8) == 0x000674, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_29) == 0x000678, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_29) == 0x00067C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_29) == 0x000680, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_9) == 0x000684, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_12) == 0x000688, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_10) == 0x000690, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000698, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_4) == 0x0006A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_5) == 0x0006F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_5) == 0x000700, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_5) == 0x000710, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_6) == 0x000758, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_11) == 0x000768, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_6) == 0x000770, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_12) == 0x000780, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_30) == 0x000784, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_30) == 0x000788, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_30) == 0x00078C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Create_ReturnValue) == 0x000790, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_31) == 0x000798, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Temp_buffer_array_Variable_1) == 0x0007A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Temp_buffer_array_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1) == 0x0007B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x0007C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_13) == 0x0007D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_14) == 0x0007D1, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_31) == 0x0007D4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_31) == 0x0007D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_32) == 0x0007DC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_32' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_13) == 0x0007E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_9) == 0x0007F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_10) == 0x0007F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_9) == 0x0007FC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable_2) == 0x0007FD, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_33) == 0x000800, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_33' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_32) == 0x000804, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_32' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_32) == 0x000808, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_34) == 0x00080C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_34' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_FreeAimType) == 0x000810, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_FreeAimType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000811, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsDead_ReturnValue) == 0x000812, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue) == 0x000818, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x000820, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_1) == 0x000828, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_2) == 0x000830, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_3) == 0x000838, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_K2_GetPawn_ReturnValue) == 0x000840, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Get_Game_Director_Component_ReturnValue) == 0x000848, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Get_Game_Director_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Get_Game_Director_Component_ReturnValue_1) == 0x000850, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Get_Game_Director_Component_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_4) == 0x000858, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000860, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_5) == 0x000868, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_6) == 0x000870, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_1) == 0x000878, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable_2) == 0x000880, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetUINavigationComponent_ReturnValue) == 0x000888, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetUINavigationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetUINavigationComponent_ReturnValue_1) == 0x000890, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetUINavigationComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_7) == 0x000898, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetTargetingManager_ReturnValue) == 0x0008A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_8) == 0x0008A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_BattleStartParams) == 0x0008B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_BattleStartParams' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction_7) == 0x000A08, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000A10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_1) == 0x000A18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_Battle_Map) == 0x000A20, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_Battle_Map' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess) == 0x000A28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetDisplayName_ReturnValue_2) == 0x000A30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000A40, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000A50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000A60, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_6) == 0x000A70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_7) == 0x000AB8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_NameToText_ReturnValue) == 0x000B00, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_8) == 0x000B10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_7) == 0x000B58, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_10) == 0x000B68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_7) == 0x000B70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsNotEmpty_ReturnValue_2) == 0x000B80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsNotEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllCharacters_AllCharacters) == 0x000B88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllCharacters_AllCharacters_1) == 0x000B98, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllCharacters_AllCharacters_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_11) == 0x000BA8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsNotEmpty_ReturnValue_3) == 0x000BB0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsNotEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartLatentAction_AsyncAction) == 0x000BB8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartLatentAction_AsyncAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartLatentAction_AsyncAction_1) == 0x000BC0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartLatentAction_AsyncAction_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable_3) == 0x000BC8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_TransitionIntroLatentAction) == 0x000BD0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_TransitionIntroLatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_4) == 0x000BD8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_4) == 0x000BE0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartLatentAction_AsyncAction_2) == 0x000BE8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartLatentAction_AsyncAction_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_7) == 0x000BF0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_33) == 0x000BF4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_33' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_2) == 0x000BF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_33) == 0x000C00, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_3) == 0x000C08, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_CanStartBattle_ReturnValue) == 0x000C10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_CanStartBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_34) == 0x000C14, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_34' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_35) == 0x000C18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_35' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x000C1C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000C20, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_34) == 0x000C24, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000C28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCameraLocation_ReturnValue) == 0x000C30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_4) == 0x000C48, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction) == 0x000C50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_7) == 0x000C58, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCustomGI_ReturnValue) == 0x000C68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SetGamePaused_ReturnValue) == 0x000C70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SetGamePaused_ReturnValue_1) == 0x000C71, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_9) == 0x000C78, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterReactionSystem_ReturnValue) == 0x000C80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterReactionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllCharacters_AllCharacters_2) == 0x000C88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllCharacters_AllCharacters_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CharactersToProcess) == 0x000C98, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CharactersToProcess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction_6) == 0x000CA8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_S_InteractiveMusicParameters) == 0x000CB0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_S_InteractiveMusicParameters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_object_Variable) == 0x000CC8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsSound_Base) == 0x000CD0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_1) == 0x000CD8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000CE0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetEnableCameraMovement_ReturnValue) == 0x000CE8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetEnableCameraMovement_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Loaded) == 0x000CF0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_8) == 0x000CF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_8) == 0x000D08, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_5) == 0x000D18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_6) == 0x000D20, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_HasOutstandingDataLayerActivation_ReturnValue) == 0x000D28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_HasOutstandingDataLayerActivation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_3) == 0x000D29, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_HasOutstandingLoading_ReturnValue) == 0x000D2A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_HasOutstandingLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_4) == 0x000D2B, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsNotEmpty_ReturnValue_4) == 0x000D2C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsNotEmpty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_2) == 0x000D30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_3) == 0x000D38, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_4) == 0x000D40, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_5) == 0x000D48, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_9) == 0x000D50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MapRangeClamped_ReturnValue) == 0x000D60, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_6) == 0x000D68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_NewItem_CastInput) == 0x000D70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_NewItem_CastInput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_ReturnValue) == 0x000D80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_NewItem_CastInput_1) == 0x000D88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_NewItem_CastInput_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_ReturnValue_1) == 0x000D98, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_NewItem_CastInput_2) == 0x000DA0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_NewItem_CastInput_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_ReturnValue_2) == 0x000DB0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_7) == 0x000DB8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_12) == 0x000DC0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_11) == 0x000DCC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_10) == 0x000DD0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000DD1, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CharacterName_1) == 0x000DD8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CharacterName_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_10) == 0x000DE8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue) == 0x000DF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats) == 0x000E00, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_12) == 0x000E08, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_On_Action_Finished_HasMoreActions) == 0x000E0C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000E10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Ignore) == 0x000E14, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Ignore' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Max_ReturnValue) == 0x000E18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_11) == 0x000E1C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_13) == 0x000E30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_13) == 0x000E38, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_11) == 0x000E3C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Character_4) == 0x000E40, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Character_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Amount_1) == 0x000E50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_1) == 0x000E54, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_1) == 0x000E58, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_12) == 0x000E60, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_NewHPValue) == 0x000E70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_NewHPValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000E78, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_14) == 0x000E80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_14) == 0x000E88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_12) == 0x000E8C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_BuffBPClass_1) == 0x000E90, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_BuffBPClass_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000EA0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_15) == 0x000EB0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_9) == 0x000EB8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_9) == 0x000F00, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_15) == 0x000F10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_8) == 0x000F18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_13) == 0x000F28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_GetBattleBuffClassByName_BattleBuffInstanceClass) == 0x000F30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_GetBattleBuffClassByName_BattleBuffInstanceClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_7) == 0x000F38, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValidClass_ReturnValue) == 0x000F40, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_16) == 0x000F48, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_8) == 0x000F50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ActivateBuff_Success) == 0x000F58, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Amount) == 0x000F5C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_17) == 0x000F60, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_18) == 0x000F68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_16) == 0x000F70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_14) == 0x000F74, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_19) == 0x000F78, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_20) == 0x000F80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_HP) == 0x000F88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_HP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput) == 0x000F90, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageDealt) == 0x000FA0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageDealt' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_HasHit) == 0x000FA8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_HasHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DodgeSuccess) == 0x000FA9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DodgeSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_ParrySuccess) == 0x000FAA, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_ParrySuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_QTESuccess_) == 0x000FAB, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_QTESuccess_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_BattleDamages) == 0x000FB0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000FB8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MultiGate_1_FirstRun) == 0x000FC0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MultiGate_1_FirstRun' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_17) == 0x000FC4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_21) == 0x000FC8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_AllyName) == 0x000FD0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_AllyName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_BuffBPClass) == 0x000FE0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_BuffBPClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_GetBattleBuffClassByName_BattleBuffInstanceClass_1) == 0x000FF0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_GetBattleBuffClassByName_BattleBuffInstanceClass_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_2) == 0x000FF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_2) == 0x001000, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_9) == 0x001008, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_22) == 0x001010, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CharacterName) == 0x001018, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CharacterName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ActivateBuff_Success_1) == 0x001028, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ActivateBuff_Success_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_3) == 0x001029, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_3) == 0x001030, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CharacterID) == 0x001038, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CharacterID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_PerfectionChange) == 0x001048, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_PerfectionChange' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_1) == 0x001050, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageDealt_1) == 0x001060, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageDealt_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_HasHit_1) == 0x001068, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_HasHit_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DodgeSuccess_1) == 0x001069, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DodgeSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_ParrySuccess_1) == 0x00106A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_ParrySuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_QTESuccess__1) == 0x00106B, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_QTESuccess__1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_BattleDamages_1) == 0x001070, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_BattleDamages_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_4) == 0x001078, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_4) == 0x001080, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_DEBUG_FindPlayerCharacterByName_AC_jRPG_CharacterStats_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetOwner_ReturnValue) == 0x001088, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_ShieldAmount) == 0x001090, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_ShieldAmount' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetComponentByClass_ReturnValue) == 0x001098, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_18) == 0x0010A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPackagedForDistribution_ReturnValue_15) == 0x0010A4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPackagedForDistribution_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Damages) == 0x0010A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Damages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_23) == 0x0010B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_24) == 0x0010B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0010C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_19) == 0x0010D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_2) == 0x0010E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageDealt_2) == 0x0010F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageDealt_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_HasHit_2) == 0x0010F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_HasHit_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DodgeSuccess_2) == 0x0010F9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DodgeSuccess_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_ParrySuccess_2) == 0x0010FA, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_ParrySuccess_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_QTESuccess__2) == 0x0010FB, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_QTESuccess__2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_BattleDamages_2) == 0x001100, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_BattleDamages_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_15) == 0x001108, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_35) == 0x00110C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_35' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_36) == 0x001110, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_36' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_25) == 0x001118, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Target_1) == 0x001120, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Source_2) == 0x001128, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Source_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x001130, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_3) == 0x001138, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageDealt_3) == 0x001148, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageDealt_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_HasHit_3) == 0x001150, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_HasHit_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DodgeSuccess_3) == 0x001151, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DodgeSuccess_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_ParrySuccess_3) == 0x001152, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_ParrySuccess_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_QTESuccess__3) == 0x001153, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_QTESuccess__3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_BattleDamages_3) == 0x001158, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_BattleDamages_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_5) == 0x001160, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_5) == 0x001168, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_26) == 0x001170, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_8) == 0x001178, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_27) == 0x001180, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_36) == 0x001188, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_36' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_9) == 0x00118C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_10) == 0x00118D, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_11) == 0x00118E, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base) == 0x001190, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_2) == 0x001198, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_IsAttacking) == 0x001199, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_IsAttacking' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_TargetedHeroes) == 0x0011A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_TargetedHeroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_1) == 0x0011B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_3) == 0x0011B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_IsAttacking_1) == 0x0011B9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_IsAttacking_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_TargetedHeroes_1) == 0x0011C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_TargetedHeroes_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_2) == 0x0011D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_4) == 0x0011D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_IsAttacking_2) == 0x0011D9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_IsAttacking_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_TargetedHeroes_2) == 0x0011E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_TargetedHeroes_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_35) == 0x0011F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_12) == 0x0011F4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_3) == 0x0011F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_5) == 0x001200, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_3) == 0x001208, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_IsAttacking_3) == 0x001218, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_IsAttacking_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_TargetedHeroes_3) == 0x001220, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_TargetedHeroes_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_10) == 0x001230, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_28) == 0x001278, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_20) == 0x001280, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsLockedByDefensiveMoveTimer_IsLocked) == 0x001284, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsLockedByDefensiveMoveTimer_IsLocked' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_16) == 0x001285, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_5) == 0x001286, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_29) == 0x001288, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_21) == 0x001290, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_17) == 0x001294, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_ReturnValue_3) == 0x001298, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_DebugReason_1) == 0x0012A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_DebugReason_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_11) == 0x0012B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_10) == 0x0012F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_9) == 0x001308, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_wildcard_Variable_14) == 0x001318, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_wildcard_Variable_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_30) == 0x001328, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_31) == 0x001330, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_22) == 0x001338, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_23) == 0x00133C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_18) == 0x001340, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_19) == 0x001341, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Contains_ReturnValue) == 0x001342, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_32) == 0x001348, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_32' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_6) == 0x001350, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_24) == 0x001354, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_20) == 0x001358, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Contains_ReturnValue_1) == 0x001359, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_7) == 0x00135A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_8) == 0x001360, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsInBattle_ReturnValue) == 0x001368, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsInBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_37) == 0x00136C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_37' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_21) == 0x001370, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_36) == 0x001374, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ConcatActors_Result) == 0x001378, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ConcatActors_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ConcatActors_Result_1) == 0x001388, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ConcatActors_Result_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_12) == 0x001398, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_13) == 0x0013E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_25) == 0x001428, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_26) == 0x00142C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_IntToInt64_ReturnValue) == 0x001430, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x001438, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_14) == 0x001440, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_15) == 0x001488, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_11) == 0x0014D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_10) == 0x0014E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam) == 0x0014F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_8) == 0x0014F1, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_9) == 0x0014F2, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_WantedDefense) == 0x0014F3, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_WantedDefense' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0014F4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_9) == 0x0014F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsInBattle_ReturnValue_1) == 0x001500, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsInBattle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_BooleanAND_ReturnValue) == 0x001501, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_10) == 0x001502, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_13) == 0x001504, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_11) == 0x001514, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_13) == 0x001515, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_4) == 0x001518, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_6) == 0x001520, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_IsAttacking_4) == 0x001521, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_IsAttacking_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_TargetedHeroes_4) == 0x001528, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_TargetedHeroes_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_14) == 0x001538, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable_3) == 0x001548, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_14) == 0x001549, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_5) == 0x001550, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_7) == 0x001558, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_IsAttacking_5) == 0x001559, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_IsAttacking_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Is_Attacking_Heroes_TargetedHeroes_5) == 0x001560, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Is_Attacking_Heroes_TargetedHeroes_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction_5) == 0x001570, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x001578, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetActiveCharacter_CurrentCharacter) == 0x001588, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetActiveCharacter_CurrentCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsBattleEnding_ReturnValue) == 0x001590, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsBattleEnding_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_12) == 0x001591, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_UpdateVisibilityAndBindingsFromTargets_IsVisible) == 0x001592, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_UpdateVisibilityAndBindingsFromTargets_IsVisible' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x001593, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_6) == 0x001598, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_6) == 0x0015A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_13) == 0x0015A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_15) == 0x0015A9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_15) == 0x0015AC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable_4) == 0x0015BC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_EngageType) == 0x0015BD, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_EngageType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_SwitchEnum_CmpSuccess) == 0x0015BE, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Character_3) == 0x0015C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Character_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Character_2) == 0x0015C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Character_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Enemy_2) == 0x0015D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Enemy_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_4) == 0x0015D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_16) == 0x0015E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_5) == 0x001630, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_12) == 0x001640, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_17) == 0x001650, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_11) == 0x001698, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_13) == 0x0016A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_12) == 0x0016B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1) == 0x0016C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Character_1) == 0x0016D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Character_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Enemy_1) == 0x0016D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Enemy_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_DodgeInfo) == 0x0016E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_DodgeInfo' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsSet_IsSet) == 0x0016E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsSet_IsSet' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsSet_IsSet_1) == 0x0016E9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsSet_IsSet_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_ParryInfo) == 0x0016F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_ParryInfo' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_37) == 0x0016F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_37' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Character) == 0x001700, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Enemy) == 0x001708, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Enemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_33) == 0x001710, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_33' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_4) == 0x001718, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageDealt_4) == 0x001728, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageDealt_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_HasHit_4) == 0x001730, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_HasHit_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DodgeSuccess_4) == 0x001731, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DodgeSuccess_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_ParrySuccess_4) == 0x001732, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_ParrySuccess_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_QTESuccess__4) == 0x001733, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_QTESuccess__4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_BattleDamages_4) == 0x001738, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_BattleDamages_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_DefendInfo) == 0x001740, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_DefendInfo' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsSet_IsSet_2) == 0x001748, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsSet_IsSet_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_10) == 0x001750, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_11) == 0x001758, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_12) == 0x001760, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsEmpty_ReturnValue) == 0x001768, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x001769, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_BooleanOR_ReturnValue) == 0x00176A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterWithMaxInitiative_Success_) == 0x00176B, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterWithMaxInitiative_Success_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterWithMaxInitiative_Character) == 0x001770, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterWithMaxInitiative_Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterWithMaxInitiative_TimeToTurn) == 0x001778, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterWithMaxInitiative_TimeToTurn' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllAliveCharacters_AllCharacters_1) == 0x001780, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllAliveCharacters_AllCharacters_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_18) == 0x001790, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_34) == 0x0017D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_34' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_27) == 0x0017E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_22) == 0x0017E4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_6) == 0x0017E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_19) == 0x0017F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Source_1) == 0x001840, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Source_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Target) == 0x001848, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_CanResumeBattle_ReturnValue) == 0x001850, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_CanResumeBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_14) == 0x001858, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_CanResumeBattle_ReturnValue_1) == 0x001868, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_CanResumeBattle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllAliveCharacters_AllCharacters_2) == 0x001870, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllAliveCharacters_AllCharacters_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetUINavigationComponent_ReturnValue_2) == 0x001880, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetUINavigationComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetOwner_ReturnValue_1) == 0x001888, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetComponentByClass_ReturnValue_1) == 0x001890, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x001898, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_TargetCharacterStats) == 0x0018B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_TargetCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CounteringCharacterStats) == 0x0018B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CounteringCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Skill) == 0x0018C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Skill' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_7) == 0x0018C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_7) == 0x0018D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetOwner_ReturnValue_2) == 0x0018D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_7) == 0x0018E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_16) == 0x0018F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_20) == 0x0018F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x001940, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid) == 0x001948, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetOwner_ReturnValue_3) == 0x001950, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_15) == 0x001958, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_8) == 0x001968, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_21) == 0x001978, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1) == 0x0019C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid_1) == 0x0019C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_16) == 0x0019D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0019E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_13) == 0x0019F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x001A08, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2) == 0x001A10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid_2) == 0x001A18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeTransform_ReturnValue) == 0x001A20, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetBattleManager_ReturnValue) == 0x001A80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_17) == 0x001A88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_18) == 0x001A89, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetSequencePlayer_ReturnValue) == 0x001A90, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralDouble_ReturnValue) == 0x001A98, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_16) == 0x001AA0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x001AB0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_8) == 0x001AB8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_8) == 0x001AC0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_PlayAnimMontage_ReturnValue) == 0x001AC8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x001AD0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_19) == 0x001AD8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x001AE0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x001AE8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_38) == 0x001AF0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_38' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_TargetedCharacters) == 0x001AF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_TargetedCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_Source) == 0x001B08, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_SkillClass) == 0x001B10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_SkillClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x001B18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x001B20, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3) == 0x001B28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid_3) == 0x001B30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_23) == 0x001B31, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_37) == 0x001B34, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_17) == 0x001B38, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetReferenceCounterState_ReturnValue) == 0x001B48, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetReferenceCounterState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent__isActive) == 0x001B49, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent__isActive' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_14) == 0x001B4A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_15) == 0x001B4B, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_13) == 0x001B50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_18) == 0x001B58, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_CheckBattleEnd_BattleHasEnded) == 0x001B68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_CheckBattleEnd_BattleHasEnded' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_9) == 0x001B70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_22) == 0x001B80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_35) == 0x001BC8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_35' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_17) == 0x001BD8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_14) == 0x001BE8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_28) == 0x001BF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_24) == 0x001BFC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable_4) == 0x001BFD, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_36) == 0x001C00, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_36' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_37) == 0x001C10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_37' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_29) == 0x001C20, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_30) == 0x001C24, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_25) == 0x001C28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_26) == 0x001C29, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_PrepareForBackupTeam_BackupTeam) == 0x001C30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_PrepareForBackupTeam_BackupTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_PrepareForBackupTeam_ClassesToLoad) == 0x001C40, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_PrepareForBackupTeam_ClassesToLoad' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_38) == 0x001C50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_38' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_31) == 0x001C58, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterByID_CharacterData) == 0x001C60, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_27) == 0x001C68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_32) == 0x001C6C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex) == 0x001C70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable_5) == 0x001C74, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Spawn_Player_Character_SpawnedCharacter) == 0x001C78, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Spawn_Player_Character_SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_ReturnValue_4) == 0x001C80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_CanResumeBattle_ReturnValue_2) == 0x001C84, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_CanResumeBattle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_14) == 0x001C88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_15) == 0x001C90, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_ShouldSendReserve) == 0x001C98, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_ShouldSendReserve' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_HasOutstandingLoading_ReturnValue_1) == 0x001C99, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_HasOutstandingLoading_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_16) == 0x001C9A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_19) == 0x001C9C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_20) == 0x001CAC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_CanSendReserveTeam_ReturnValue) == 0x001CBC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_CanSendReserveTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetGameInstance_ReturnValue) == 0x001CC0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom) == 0x001CC8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_8) == 0x001CD0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCustomGI_ReturnValue_1) == 0x001CD8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCustomGI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_CameraAnimationParams) == 0x001CE0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_CameraAnimationParams' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_10) == 0x001D28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Map_Find_Value) == 0x001D30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Map_Find_ReturnValue) == 0x001D40, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x001D48, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x001D60, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Random_OutItem) == 0x001D68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Random_OutIndex) == 0x001D70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001D74, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_BattleEndResult_1) == 0x001D75, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_BattleEndResult_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001D76, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_BattleEndResult) == 0x001D77, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_BattleEndResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x001D78, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x001D88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_StringToText_ReturnValue_5) == 0x001D90, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_23) == 0x001DA0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_18) == 0x001DE8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_17) == 0x001DF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_15) == 0x001E00, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetEncounterDataTableRow_Found) == 0x001E10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetEncounterDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetEncounterDataTableRow_EncounterData) == 0x001E18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetEncounterDataTableRow_EncounterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_FindActiveSkillSequenceBP_EpicSequenceBP) == 0x001E78, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_FindActiveSkillSequenceBP_EpicSequenceBP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_20) == 0x001E80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetSequence_ReturnValue) == 0x001E88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_ObjectToText_ReturnValue_10) == 0x001E90, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_ObjectToText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x001EA0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_24) == 0x001EA8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_19) == 0x001EF0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_16) == 0x001F00, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralDouble_ReturnValue_2) == 0x001F10, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralDouble_ReturnValue_3) == 0x001F18, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x001F20, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x001F28, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x001F30, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_39) == 0x001F38, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_39' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_40) == 0x001F40, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_40' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_4) == 0x001F48, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid_4) == 0x001F50, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_5) == 0x001F58, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid_5) == 0x001F60, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_33) == 0x001F64, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartLatentAction_AsyncAction_3) == 0x001F68, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartLatentAction_AsyncAction_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_28) == 0x001F70, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_WaitAsyncAction_ReturnValue) == 0x001F78, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_WaitAsyncAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_21) == 0x001F80, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartLatentAction_AsyncAction_4) == 0x001F88, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartLatentAction_AsyncAction_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_21) == 0x001F90, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_WaitAsyncAction_ReturnValue_1) == 0x001FA0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_WaitAsyncAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_22) == 0x001FA8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Variable_1) == 0x001FAC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_41) == 0x001FB0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_41' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_6) == 0x001FB8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid_6) == 0x001FC0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_34) == 0x001FC4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_29) == 0x001FC8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_22) == 0x001FCC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x001FDC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsDead_ReturnValue_1) == 0x001FDD, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsDead_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_23) == 0x001FE0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_23) == 0x001FF0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x001FF1, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_S_InteractiveMusicParameters_1) == 0x001FF8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_S_InteractiveMusicParameters_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCustomGI_ReturnValue_2) == 0x002010, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCustomGI_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_EqualsObjects_ReturnValue) == 0x002018, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction_4) == 0x002020, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_24) == 0x002028, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_OnCharacterTurnEnd_self_CastInput) == 0x002038, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_OnCharacterTurnEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_38) == 0x002048, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_38' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_42) == 0x002050, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_42' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable_5) == 0x002058, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_25) == 0x00205C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00206C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_BooleanAND_ReturnValue_1) == 0x00206D, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_CheckBattleEnd_BattleHasEnded_1) == 0x00206E, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_CheckBattleEnd_BattleHasEnded_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllAliveCharacters_AllCharacters_3) == 0x002070, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllAliveCharacters_AllCharacters_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_43) == 0x002080, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_43' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x002090, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_35) == 0x002098, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_24) == 0x00209C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_30) == 0x00209D, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_AddUnique_ReturnValue) == 0x0020A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsEmpty_ReturnValue_2) == 0x0020A4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CharacterBase) == 0x0020A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CharacterBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetDisplayName_ReturnValue_3) == 0x0020B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_SwitchEnum_CmpSuccess_3) == 0x0020C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_StringToText_ReturnValue_6) == 0x0020C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_RemoveItem_ReturnValue) == 0x0020D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_25) == 0x0020E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_BoolToText_ReturnValue) == 0x002128, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_26) == 0x002138, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x002180, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_PlayCameraAnimation_ReturnValue) == 0x002188, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_PlayCameraAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_PlayCameraAnimation_ReturnValue_1) == 0x00218C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_PlayCameraAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_MovementComponent) == 0x002190, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_MovementComponent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_AddUnique_ReturnValue_1) == 0x002198, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetOwner_ReturnValue_4) == 0x0021A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x0021A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_9) == 0x0021B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ConcatenateDisplayNames_Result) == 0x0021B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ConcatenateDisplayNames_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_27) == 0x0021C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_36) == 0x002210, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x002218, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsEmpty_ReturnValue_3) == 0x002220, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_28) == 0x002228, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_20) == 0x002270, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Create_ReturnValue_1) == 0x002280, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_17) == 0x002288, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_21) == 0x002298, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_26) == 0x0022A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_18) == 0x0022B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction_3) == 0x0022C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_DebugReason) == 0x0022D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0022E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0022F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_27) == 0x002300, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_10) == 0x002310, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_28) == 0x002318, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllCharacters_AllCharacters_3) == 0x002328, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllCharacters_AllCharacters_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_S_InteractiveMusicParameters_2) == 0x002338, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_S_InteractiveMusicParameters_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsNotEmpty_ReturnValue_5) == 0x002350, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsNotEmpty_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllCharacters_AllCharacters_4) == 0x002358, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllCharacters_AllCharacters_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_44) == 0x002368, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_44' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_37) == 0x002370, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_31) == 0x002374, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralString_ReturnValue) == 0x002378, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_9) == 0x002388, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_9) == 0x002390, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_25) == 0x002398, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralString_ReturnValue_1) == 0x0023A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_10) == 0x0023B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_10) == 0x0023B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_26) == 0x0023C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_6) == 0x0023C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_10) == 0x0023D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Acquire_Targets_AcquiredTargets) == 0x0023D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable_6) == 0x0023E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_45) == 0x0023F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_45' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_38) == 0x0023F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_32) == 0x0023FC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_46) == 0x002400, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_46' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_29) == 0x002408, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_39) == 0x002418, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_33) == 0x00241C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_11) == 0x002420, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_47) == 0x002428, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_47' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_48) == 0x002430, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_48' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_40) == 0x002438, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_41) == 0x00243C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_34) == 0x002440, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_35) == 0x002441, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_byte_Variable) == 0x002442, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable_6) == 0x002443, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Map_Find_Value_1) == 0x002448, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Map_Find_ReturnValue_1) == 0x002450, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeStruct_FormatArgumentData_29) == 0x002458, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeStruct_FormatArgumentData_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_MakeArray_Array_22) == 0x0024A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_MakeArray_Array_22' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Format_ReturnValue_19) == 0x0024B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Format_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction_2) == 0x0024C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_49) == 0x0024C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_49' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_IsEmpty_ReturnValue_4) == 0x0024D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_IsEmpty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_27) == 0x0024D1, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_18) == 0x0024D2, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetGameInstance_ReturnValue_1) == 0x0024D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Loop_Counter_Variable_39) == 0x0024E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Loop_Counter_Variable_39' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom_1) == 0x0024E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_11) == 0x0024F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_36) == 0x0024F1, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Add_IntInt_ReturnValue_38) == 0x0024F4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Add_IntInt_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_50) == 0x0024F8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_50' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_42) == 0x002500, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_37) == 0x002504, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Add_ReturnValue_5) == 0x002508, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_12) == 0x002510, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_13) == 0x002518, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_Event_DeltaSeconds) == 0x002520, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_14) == 0x002528, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_16) == 0x002530, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_28) == 0x002538, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsInBattle_ReturnValue_2) == 0x002539, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsInBattle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction_1) == 0x002540, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_TimeDilation) == 0x002548, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_TimeDilation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_GameDuration) == 0x00254C, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_GameDuration' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_29) == 0x002550, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CharacterStats_1) == 0x002558, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CharacterStats_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_CharacterStats) == 0x002560, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_7) == 0x002568, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCharacterBattleBase_IsValid_7) == 0x002570, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCharacterBattleBase_IsValid_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue) == 0x002571, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsGameplayDebugCategoryEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SpawnObject_ReturnValue_15) == 0x002578, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SpawnObject_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_30) == 0x002580, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_17) == 0x002590, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_18) == 0x002598, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_18' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_Has_Been_Initd_Variable_7) == 0x0025A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_Has_Been_Initd_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_19) == 0x0025A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsBattleEnding_ReturnValue_1) == 0x0025B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsBattleEnding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0025B1, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Create_ReturnValue_2) == 0x0025B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetJRPGControllerWorld_JRPG_Controller_20) == 0x0025C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetJRPGControllerWorld_JRPG_Controller_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetAllCharacters_AllCharacters_5) == 0x0025C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetAllCharacters_AllCharacters_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsBattleEnding_ReturnValue_2) == 0x0025D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsBattleEnding_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_19) == 0x0025D9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsBattleEnding_ReturnValue_3) == 0x0025DA, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsBattleEnding_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_BooleanAND_ReturnValue_2) == 0x0025DB, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_20) == 0x0025DC, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_BooleanAND_ReturnValue_3) == 0x0025DD, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_NewValue) == 0x0025DE, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_int_Array_Index_Variable_39) == 0x0025E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_int_Array_Index_Variable_39' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_51) == 0x0025E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_51' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_5) == 0x0025F0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageSourceCharacter_CastInput_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DamageDealt_5) == 0x002600, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DamageDealt_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_HasHit_5) == 0x002608, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_HasHit_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_DodgeSuccess_5) == 0x002609, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_DodgeSuccess_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_ParrySuccess_5) == 0x00260A, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_ParrySuccess_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_QTESuccess__5) == 0x00260B, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_QTESuccess__5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ReceiveDamage_BattleDamages_5) == 0x002610, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ReceiveDamage_BattleDamages_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CustomEvent_LatentAction) == 0x002618, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CustomEvent_LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem) == 0x002620, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem_1) == 0x002628, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetWorldAudioComponent_WorldAudioComponent) == 0x002630, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetWorldAudioComponent_WorldAudioComponent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_ValidateRangedAmbienceParameters_IsValid) == 0x002638, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_ValidateRangedAmbienceParameters_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x002639, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_NewLatentAction_11) == 0x002640, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_NewLatentAction_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_StartWaitAsyncAction_ReturnValue_11) == 0x002648, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_StartWaitAsyncAction_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_30) == 0x002650, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCustomGI_ReturnValue_3) == 0x002658, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCustomGI_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsDead_ReturnValue_2) == 0x002660, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsDead_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCurrentAP_AP) == 0x002668, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCurrentAP_AP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Not_PreBool_ReturnValue_21) == 0x002670, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x002671, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetCustomGI_ReturnValue_4) == 0x002678, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetCustomGI_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_GetPlayerController_ReturnValue_11) == 0x002680, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_GetPlayerController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_CreateDelegate_OutputDelegate_31) == 0x002688, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x002698, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, K2Node_DynamicCast_bSuccess_12) == 0x0026A0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Get_Item_52) == 0x0026A8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Get_Item_52' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_IsValid_ReturnValue_31) == 0x0026B0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Array_Length_ReturnValue_43) == 0x0026B4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Array_Length_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Less_IntInt_ReturnValue_38) == 0x0026B8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Less_IntInt_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, Temp_bool_IsClosed_Variable_7) == 0x0026B9, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::Temp_bool_IsClosed_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MapRangeClamped_OutRangeA_ImplicitCast) == 0x0026C0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MapRangeClamped_OutRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x0026C8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast) == 0x0026D0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast) == 0x0026D4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_PlayAnimMontage_InPlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0026D8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Delay_Duration_ImplicitCast) == 0x0026E0, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1) == 0x0026E4, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0026E8, "Member 'AC_jRPG_BattleManager_C_ExecuteUbergraph_AC_jRPG_BattleManager::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.FeedbackSuccessfulDefend
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_FeedbackSuccessfulDefend final
{
public:
	class UBP_BattleFeedbackState_C*              DefendInfo;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_FeedbackSuccessfulDefend) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_FeedbackSuccessfulDefend");
static_assert(sizeof(AC_jRPG_BattleManager_C_FeedbackSuccessfulDefend) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_FeedbackSuccessfulDefend");
static_assert(offsetof(AC_jRPG_BattleManager_C_FeedbackSuccessfulDefend, DefendInfo) == 0x000000, "Member 'AC_jRPG_BattleManager_C_FeedbackSuccessfulDefend::DefendInfo' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.FeedbackSuccessfulDodge
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_FeedbackSuccessfulDodge final
{
public:
	class UBP_BattleFeedbackState_C*              DodgeInfo;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_FeedbackSuccessfulDodge) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_FeedbackSuccessfulDodge");
static_assert(sizeof(AC_jRPG_BattleManager_C_FeedbackSuccessfulDodge) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_FeedbackSuccessfulDodge");
static_assert(offsetof(AC_jRPG_BattleManager_C_FeedbackSuccessfulDodge, DodgeInfo) == 0x000000, "Member 'AC_jRPG_BattleManager_C_FeedbackSuccessfulDodge::DodgeInfo' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.FeedbackSuccessfulParry
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_FeedbackSuccessfulParry final
{
public:
	class UBP_BattleFeedbackState_C*              ParryInfo;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_FeedbackSuccessfulParry) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_FeedbackSuccessfulParry");
static_assert(sizeof(AC_jRPG_BattleManager_C_FeedbackSuccessfulParry) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_FeedbackSuccessfulParry");
static_assert(offsetof(AC_jRPG_BattleManager_C_FeedbackSuccessfulParry, ParryInfo) == 0x000000, "Member 'AC_jRPG_BattleManager_C_FeedbackSuccessfulParry::ParryInfo' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.FindActiveSkillSequenceBP
// 0x0078 (0x0078 - 0x0000)
struct AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP final
{
public:
	class ABP_EpicBattleSequenceActor_C*          EpicSequenceBP;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllHeroesAliveAndDead_Target_Heroes; // 0x0018(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EpicBattleSequenceActor_C*          CallFunc_GetActiveCounterSequence_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters;         // 0x0048(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP");
static_assert(sizeof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP) == 0x000078, "Wrong size on AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, EpicSequenceBP) == 0x000000, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::EpicSequenceBP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_GetAllHeroesAliveAndDead_Target_Heroes) == 0x000018, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_GetAllHeroesAliveAndDead_Target_Heroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_GetActiveCounterSequence_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_GetActiveCounterSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_GetAllCharacters_AllCharacters) == 0x000048, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_GetAllCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_IsValid_ReturnValue_1) == 0x000064, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'AC_jRPG_BattleManager_C_FindActiveSkillSequenceBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.FindBattleModifierBuffByClass
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass final
{
public:
	class UClass*                                 BuffClass;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_BattleBuffInstanceWrapper_C*> ActiveBuffInstanceWrappers;                       // 0x0008(0x0010)(Parm, OutParm)
	TArray<class UBP_BattleBuffInstanceWrapper_C*> CallFunc_GetActiveBuffsByClass_ActiveBuffInstanceWrappers; // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass");
static_assert(sizeof(AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass) == 0x000028, "Wrong size on AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass, BuffClass) == 0x000000, "Member 'AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass::BuffClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass, ActiveBuffInstanceWrappers) == 0x000008, "Member 'AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass::ActiveBuffInstanceWrappers' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass, CallFunc_GetActiveBuffsByClass_ActiveBuffInstanceWrappers) == 0x000018, "Member 'AC_jRPG_BattleManager_C_FindBattleModifierBuffByClass::CallFunc_GetActiveBuffsByClass_ActiveBuffInstanceWrappers' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.FindCharacterAtBattleSpot
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot final
{
public:
	ECharacterTeamSelector                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpotIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharactersFromTeam_Characters;    // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot");
static_assert(sizeof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot) == 0x000040, "Wrong size on AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, Team) == 0x000000, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, SpotIndex) == 0x000004, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::SpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, Character) == 0x000008, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, CallFunc_GetAllCharactersFromTeam_Characters) == 0x000010, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::CallFunc_GetAllCharactersFromTeam_Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, Temp_int_Array_Index_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_FindCharacterAtBattleSpot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.FindCharacterStatsBattleActor
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       BattleCharacterActor;                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor");
static_assert(sizeof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor) == 0x000038, "Wrong size on AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, BattleCharacterActor) == 0x000008, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::BattleCharacterActor' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, Temp_int_Array_Index_Variable) == 0x000014, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002E, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_FindCharacterStatsBattleActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ForceBattleEnd
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_ForceBattleEnd final
{
public:
	EBattleEndResult                              BattleEndResult;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ForceBattleEnd) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_ForceBattleEnd");
static_assert(sizeof(AC_jRPG_BattleManager_C_ForceBattleEnd) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_ForceBattleEnd");
static_assert(offsetof(AC_jRPG_BattleManager_C_ForceBattleEnd, BattleEndResult) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ForceBattleEnd::BattleEndResult' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Get Game Director Component
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_Get_Game_Director_Component final
{
public:
	class UBP_GameDirectorComponent_C*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Get_Game_Director_Component) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Get_Game_Director_Component");
static_assert(sizeof(AC_jRPG_BattleManager_C_Get_Game_Director_Component) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_Get_Game_Director_Component");
static_assert(offsetof(AC_jRPG_BattleManager_C_Get_Game_Director_Component, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Get_Game_Director_Component::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Get_Game_Director_Component, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000008, "Member 'AC_jRPG_BattleManager_C_Get_Game_Director_Component::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetActiveCharacter
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_GetActiveCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CurrentCharacter_0;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetActiveCharacter_Character;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetActiveCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetActiveCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetActiveCharacter) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_GetActiveCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetActiveCharacter, CurrentCharacter_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetActiveCharacter::CurrentCharacter_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetActiveCharacter, CallFunc_Array_Get_Item) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetActiveCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetActiveCharacter, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetActiveCharacter::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetActiveCharacter, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetActiveCharacter::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetActiveCharacter, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000019, "Member 'AC_jRPG_BattleManager_C_GetActiveCharacter::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetActiveCharacter, CallFunc_GetActiveCharacter_Character) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetActiveCharacter::CallFunc_GetActiveCharacter_Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetActiveCharacter, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetActiveCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAliveEnemies
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAliveEnemies final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAliveEnemies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAliveEnemies");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAliveEnemies) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_GetAliveEnemies");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAliveEnemies, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAliveEnemies::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAllActiveBattleBuffComponents
// 0x0090 (0x0090 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents final
{
public:
	TArray<class UBP_BattleBuffComponent_C*>      Array;                                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UBP_BattleBuffComponent_C*>      local_buffComponents;                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_BattleBuffComponent_C*>      Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0040(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleBuffComponent_C*>      Temp_wildcard_Temp_buffer_array_Variable;          // 0x0068(0x0010)(ConstParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents) == 0x000090, "Wrong size on AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, Array) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, local_buffComponents) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::local_buffComponents' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, Temp_int_Array_Index_Variable) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, Temp_wildcard_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, CallFunc_Array_Get_Item) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, Temp_wildcard_Temp_buffer_array_Variable) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents, CallFunc_Array_Add_ReturnValue_1) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetAllActiveBattleBuffComponents::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAllAliveCharacters
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAllAliveCharacters final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AllCharacters;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAllAliveCharacters) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAllAliveCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAllAliveCharacters) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_GetAllAliveCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAliveCharacters, AllCharacters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAllAliveCharacters::AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAliveCharacters, local_AllCharacters) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAllAliveCharacters::local_AllCharacters' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAllAllyCharacters_SortedBySpotIndex
// 0x0118 (0x0118 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AllCharacters;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<int32>                                 Temp_wildcard_Original_index_Variable;             // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                Temp_real_Variable;                                // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Result_array_Variable;             // 0x0068(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_NextIndex_Variable;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            Temp_wildcard_RemapTable_Variable;                 // 0x0080(0x0050)(ConstParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Array_Remap_ResultArray;                // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0108(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex) == 0x000118, "Wrong size on AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, AllCharacters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, local_AllCharacters) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::local_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, Temp_wildcard_Original_index_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::Temp_wildcard_Original_index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, Temp_int_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, Temp_real_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000054, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_MinOfFloatArray_MinValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_Get_Item) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, Temp_wildcard_Result_array_Variable) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::Temp_wildcard_Result_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, Temp_int_NextIndex_Variable) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::Temp_int_NextIndex_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, Temp_wildcard_RemapTable_Variable) == 0x000080, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::Temp_wildcard_RemapTable_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_Remap_ResultArray) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_Remap_ResultArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_Add_ReturnValue_1) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_Add_ReturnValue_2) == 0x0000FC, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000100, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000104, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000108, "Member 'AC_jRPG_BattleManager_C_GetAllAllyCharacters_SortedBySpotIndex::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAllCharacters
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAllCharacters final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AllCharacters;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAllCharacters) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAllCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAllCharacters) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_GetAllCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllCharacters, AllCharacters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAllCharacters::AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllCharacters, local_AllCharacters) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAllCharacters::local_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllCharacters, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetAllCharacters::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAllEnemyCharacters_SortedBySpotIndex
// 0x0110 (0x0110 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AllEnemies;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_NextIndex_Variable;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 Temp_wildcard_Original_index_Variable;             // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            Temp_wildcard_RemapTable_Variable;                 // 0x0040(0x0050)(ConstParm)
	TArray<double>                                Temp_real_Variable;                                // 0x0090(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Result_array_Variable;             // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Array_Remap_ResultArray;                // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0100(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex) == 0x000110, "Wrong size on AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, AllEnemies) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::AllEnemies' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, local_AllCharacters) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::local_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, Temp_int_NextIndex_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::Temp_int_NextIndex_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, Temp_wildcard_Original_index_Variable) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::Temp_wildcard_Original_index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, Temp_wildcard_RemapTable_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::Temp_wildcard_RemapTable_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, Temp_real_Variable) == 0x000090, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, Temp_wildcard_Result_array_Variable) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::Temp_wildcard_Result_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x0000B4, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_MinOfFloatArray_MinValue) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BC, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, Temp_int_Variable) == 0x0000C4, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_Remap_ResultArray) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_Remap_ResultArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_Add_ReturnValue_1) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_Add_ReturnValue_2) == 0x0000F4, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000100, "Member 'AC_jRPG_BattleManager_C_GetAllEnemyCharacters_SortedBySpotIndex::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAllItemsUsableInBattle
// 0x01B8 (0x01B8 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle final
{
public:
	TArray<struct FS_jRPG_Item_DynamicData>       UsableItem;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class FName>                           AlreadyAddedItemsLOCAL;                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_jRPG_Item_DynamicData>       UsableItemsLOCAL;                                  // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_jRPG_Item_DynamicData>       Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0040(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_jRPG_Item_DynamicData>       Temp_wildcard_Temp_buffer_array_Variable;          // 0x0050(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindItemDynamicFromInventory_Found;       // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_FindItemDynamicFromInventory_ItemStruct;  // 0x0078(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle) == 0x0001B8, "Wrong size on AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, UsableItem) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::UsableItem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, AlreadyAddedItemsLOCAL) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::AlreadyAddedItemsLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, UsableItemsLOCAL) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::UsableItemsLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, Temp_int_Array_Index_Variable) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, Temp_wildcard_Temp_buffer_array_Variable) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_GetInventoryManager_ReturnValue) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_Array_Get_Item) == 0x00006C, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_FindItemDynamicFromInventory_Found) == 0x000075, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_FindItemDynamicFromInventory_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_FindItemDynamicFromInventory_ItemStruct) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_FindItemDynamicFromInventory_ItemStruct' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_GetAllItemsUsableInBattle::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAllPlayerCharacters
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAllPlayerCharacters final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AllCharacters;                                   // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAllPlayerCharacters) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAllPlayerCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAllPlayerCharacters) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_GetAllPlayerCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllPlayerCharacters, AllCharacters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAllPlayerCharacters::AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAllPlayerCharacters, local_AllCharacters) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAllPlayerCharacters::local_AllCharacters' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetAssetsToLoadForBattle
// 0x04A0 (0x04A0 - 0x0000)
struct AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle final
{
public:
	TArray<TSoftClassPtr<class UClass>>           ClassesToLoad;                                     // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FDataTableRowHandle>            local_enemiesEntriesToLoad;                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<TSoftClassPtr<class UClass>>           local_classesToLoad;                               // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetStatusEffectBuffClassSoft_BP_Class;    // 0x0048(0x0028)(HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           CallFunc_GetBattleItemSkillsScriptClasses_ItemSkillScriptSoftClasses; // 0x0100(0x0010)(ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0110(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_PartySlot                      CallFunc_Array_Get_Item_1;                         // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item_2;                         // 0x0160(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0178(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0380(0x0010)()
	struct FFEnemyDataRow                         CallFunc_Array_Get_Item_3;                         // 0x0390(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x03A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03F8(0x0010)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A[0x2];                                      // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41A[0x2];                                      // 0x041A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x3];                                      // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Encounter                      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0428(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            CallFunc_Map_Values_Values;                        // 0x0490(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle) == 0x0004A0, "Wrong size on AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, ClassesToLoad) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::ClassesToLoad' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, local_enemiesEntriesToLoad) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::local_enemiesEntriesToLoad' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, local_classesToLoad) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::local_classesToLoad' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Variable_1) == 0x000034, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Conv_IntToByte_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetValidValue_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000041, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetStatusEffectBuffClassSoft_BP_Class) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetStatusEffectBuffClassSoft_BP_Class' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000071, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000074, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Array_Index_Variable) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Loop_Counter_Variable_1) == 0x0000D4, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000DC, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Array_Index_Variable_1) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Loop_Counter_Variable_2) == 0x0000E4, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Array_Index_Variable_2) == 0x0000EC, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Loop_Counter_Variable_3) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000F4, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, Temp_int_Array_Index_Variable_3) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetBattleItemSkillsScriptClasses_ItemSkillScriptSoftClasses) == 0x000100, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetBattleItemSkillsScriptClasses_ItemSkillScriptSoftClasses' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Get_Item) == 0x000110, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_AddUnique_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000144, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Length_ReturnValue_1) == 0x000154, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Get_Item_2) == 0x000160, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Length_ReturnValue_2) == 0x000170, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Less_IntInt_ReturnValue_2) == 0x000174, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetDataTableRowFromName_OutRow) == 0x000178, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000378, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Conv_NameToText_ReturnValue) == 0x000380, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Get_Item_3) == 0x000390, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, K2Node_MakeStruct_FormatArgumentData_1) == 0x0003A0, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, K2Node_MakeArray_Array) == 0x0003E8, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Format_ReturnValue) == 0x0003F8, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000408, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_IsValid_ReturnValue) == 0x000409, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_AddUnique_ReturnValue_2) == 0x00040C, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Not_PreBool_ReturnValue) == 0x000410, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_Length_ReturnValue_3) == 0x000414, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_BooleanOR_ReturnValue) == 0x000418, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Less_IntInt_ReturnValue_3) == 0x000419, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_MakeLiteralInt_ReturnValue) == 0x00041C, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Less_IntInt_ReturnValue_4) == 0x000420, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Array_AddUnique_ReturnValue_3) == 0x000424, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000428, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000488, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle, CallFunc_Map_Values_Values) == 0x000490, "Member 'AC_jRPG_BattleManager_C_GetAssetsToLoadForBattle::CallFunc_Map_Values_Values' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetBattleEndState
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_GetBattleEndState final
{
public:
	EBattleEndResult                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetBattleEndState) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_GetBattleEndState");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetBattleEndState) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_GetBattleEndState");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleEndState, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetBattleEndState::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetBattleItemSkills
// 0x0310 (0x0310 - 0x0000)
struct AC_jRPG_BattleManager_C_GetBattleItemSkills final
{
public:
	TArray<class UBP_DataAsset_Skill_C*>          ItemSkills;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UBP_DataAsset_Skill_C*>          Temp_wildcard_Temp_buffer_array_Variable;          // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_DataAsset_Skill_C*>          Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0030(0x0010)(ConstParm, ReferenceParm)
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_jRPG_Item_DynamicData>       CallFunc_GetOwnedItemsByType_FilteredArray;        // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_Array_Get_Item;                           // 0x0068(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue; // 0x01A8(0x0010)(NoDestructor)
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B8(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Consumable_C*        K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable; // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  CallFunc_GetItemSkillDefinition_ReturnValue;       // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetBattleItemSkills) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetBattleItemSkills");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetBattleItemSkills) == 0x000310, "Wrong size on AC_jRPG_BattleManager_C_GetBattleItemSkills");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, ItemSkills) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::ItemSkills' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, Temp_wildcard_Temp_buffer_array_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_GetInventoryManager_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_GetOwnedItemsByType_FilteredArray) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_GetOwnedItemsByType_FilteredArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_Array_Get_Item) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_Less_IntInt_ReturnValue) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002E8, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable) == 0x0002F0, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, K2Node_DynamicCast_bSuccess) == 0x0002F8, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_GetItemSkillDefinition_ReturnValue) == 0x000300, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_GetItemSkillDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_IsValid_ReturnValue) == 0x000308, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkills, CallFunc_Array_Add_ReturnValue) == 0x00030C, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkills::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetBattleItemSkillsScriptClasses
// 0x02F8 (0x02F8 - 0x0000)
struct AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses final
{
public:
	TArray<TSoftClassPtr<class UClass>>           ItemSkillScriptSoftClasses;                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftClassPtr<class UClass>>           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0038(0x0010)(ConstParm, ReferenceParm)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_jRPG_Item_DynamicData>       CallFunc_GetOwnedItemsByType_FilteredArray;        // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_jRPG_Item_DynamicData               CallFunc_Array_Get_Item;                           // 0x0060(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue; // 0x01A0(0x0010)(NoDestructor)
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B0(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Consumable_C*        K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable; // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses) == 0x0002F8, "Wrong size on AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, ItemSkillScriptSoftClasses) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::ItemSkillScriptSoftClasses' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, Temp_int_Array_Index_Variable) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, Temp_wildcard_Temp_buffer_array_Variable) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_GetInventoryManager_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_GetOwnedItemsByType_FilteredArray) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_GetOwnedItemsByType_FilteredArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_Array_Get_Item) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_Less_IntInt_ReturnValue) == 0x00019C, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0002E0, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable) == 0x0002E8, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::K2Node_DynamicCast_AsBP_Data_Asset_Item_Consumable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, K2Node_DynamicCast_bSuccess) == 0x0002F0, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0002F1, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses, CallFunc_Array_Add_ReturnValue) == 0x0002F4, "Member 'AC_jRPG_BattleManager_C_GetBattleItemSkillsScriptClasses::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCharacterAssetDependencies
// 0x00B0 (0x00B0 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCharacterAssetDependencies final
{
public:
	class FName                                   CharacterId;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           OutClasses;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           CallFunc_BPI_GetDependencies_Classes;              // 0x0030(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_BPI_GetDependencies_Assets;               // 0x0040(0x0010)(ReferenceParm)
	TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>> CallFunc_BPI_GetDependencies_ExternalDependencies; // 0x0050(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_LoadingDependenciesSource_C> CallFunc_Array_Get_Item;                // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           CallFunc_BPI_GetDependencies_Classes_1;            // 0x0078(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_BPI_GetDependencies_Assets_1;             // 0x0088(0x0010)(ReferenceParm)
	TArray<TScriptInterface<class IBPI_LoadingDependenciesSource_C>> CallFunc_BPI_GetDependencies_ExternalDependencies_1; // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCharacterAssetDependencies");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies) == 0x0000B0, "Wrong size on AC_jRPG_BattleManager_C_GetCharacterAssetDependencies");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CharacterId) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CharacterId' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, OutClasses) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::OutClasses' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_GetCharacterByID_CharacterData) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_BPI_GetDependencies_Classes) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_BPI_GetDependencies_Classes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_BPI_GetDependencies_Assets) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_BPI_GetDependencies_Assets' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_BPI_GetDependencies_ExternalDependencies) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_BPI_GetDependencies_ExternalDependencies' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_Array_Get_Item) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_BPI_GetDependencies_Classes_1) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_BPI_GetDependencies_Classes_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_BPI_GetDependencies_Assets_1) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_BPI_GetDependencies_Assets_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_BPI_GetDependencies_ExternalDependencies_1) == 0x000098, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_BPI_GetDependencies_ExternalDependencies_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000A9, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x0000AA, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterAssetDependencies, CallFunc_BooleanAND_ReturnValue) == 0x0000AB, "Member 'AC_jRPG_BattleManager_C_GetCharacterAssetDependencies::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCharacterData
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCharacterData final
{
public:
	class FName                                   CharacterId;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCharacterData) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCharacterData");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCharacterData) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_GetCharacterData");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterData, CharacterId) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCharacterData::CharacterId' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterData, CharacterData) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetCharacterData::CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterData, CallFunc_GetCharacterByID_CharacterData) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetCharacterData::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCharacterRadiusForPlacement
// 0x0080 (0x0080 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_widthMultiplier;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement) == 0x000080, "Wrong size on AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, local_widthMultiplier) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::local_widthMultiplier' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_GetComponentBounds_Origin) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_GetComponentBounds_BoxExtent) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_GetComponentBounds_SphereRadius) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_BreakVector_X) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_BreakVector_Y) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_BreakVector_Z) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_FMax_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetCharacterRadiusForPlacement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCharactersState
// 0x00B0 (0x00B0 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCharactersState final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Characters;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                CharactersInitiative;                              // 0x0010(0x0010)(Parm, OutParm)
	TArray<bool>                                  CharactersEngagementBonus;                         // 0x0020(0x0010)(Parm, OutParm)
	TArray<double>                                local_AllCharactersInitiative;                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                Temp_wildcard_Temp_buffer_array_Variable;          // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0058(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1; // 0x0078(0x0010)(ConstParm, ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  Temp_wildcard_Temp_buffer_array_Variable_1;        // 0x0098(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCharactersState) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCharactersState");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCharactersState) == 0x0000B0, "Wrong size on AC_jRPG_BattleManager_C_GetCharactersState");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, Characters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CharactersInitiative) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CharactersInitiative' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CharactersEngagementBonus) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CharactersEngagementBonus' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, local_AllCharactersInitiative) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::local_AllCharactersInitiative' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, Temp_wildcard_Temp_buffer_array_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, Temp_int_Array_Index_Variable) == 0x000074, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CallFunc_Array_Get_Item) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, Temp_wildcard_Temp_buffer_array_Variable_1) == 0x000098, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::Temp_wildcard_Temp_buffer_array_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersState, CallFunc_Array_Add_ReturnValue_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_GetCharactersState::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCharactersWithFormation
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCharactersWithFormation final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CharactersArray;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_jRPG_FormationType                          DesiredFormation;                                  // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Result;                                          // 0x0018(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CharactersWithDesiredFormationLOCAL;             // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCharactersWithFormation) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCharactersWithFormation");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCharactersWithFormation) == 0x000060, "Wrong size on AC_jRPG_BattleManager_C_GetCharactersWithFormation");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CharactersArray) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CharactersArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, DesiredFormation) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::DesiredFormation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, Result) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CharactersWithDesiredFormationLOCAL) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CharactersWithDesiredFormationLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, Temp_int_Array_Index_Variable) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CallFunc_Array_Get_Item) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharactersWithFormation, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetCharactersWithFormation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCharacterWithMaxInitiative
// 0x0090 (0x0090 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative final
{
public:
	bool                                          DEBUG_Verbose;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToTurn;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                local_TimeToTurnPerCharacter;                      // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_jRPG_Character_Battle_Base_C*       CharacterLOCAL;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_LOCAL;                                     // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x0048(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_GetCharactersState_CharactersInitiative;  // 0x0058(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetCharactersState_CharactersEngagementBonus; // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetCharacterWithMaxInitiativeSimulate_Success_; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterWithMaxInitiativeSimulate_Character; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCharacterWithMaxInitiativeSimulate_TimeToTurn; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative) == 0x000090, "Wrong size on AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, DEBUG_Verbose) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::DEBUG_Verbose' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, Success_) == 0x000001, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::Success_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, Character) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, TimeToTurn) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::TimeToTurn' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, local_TimeToTurnPerCharacter) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::local_TimeToTurnPerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, local_AllCharacters) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::local_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, CharacterLOCAL) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::CharacterLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, Success_LOCAL) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::Success_LOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, CallFunc_GetCharactersState_CharactersInitiative) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::CallFunc_GetCharactersState_CharactersInitiative' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, CallFunc_GetCharactersState_CharactersEngagementBonus) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::CallFunc_GetCharactersState_CharactersEngagementBonus' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, CallFunc_GetCharacterWithMaxInitiativeSimulate_Success_) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::CallFunc_GetCharacterWithMaxInitiativeSimulate_Success_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, CallFunc_GetCharacterWithMaxInitiativeSimulate_Character) == 0x000080, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::CallFunc_GetCharacterWithMaxInitiativeSimulate_Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative, CallFunc_GetCharacterWithMaxInitiativeSimulate_TimeToTurn) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiative::CallFunc_GetCharacterWithMaxInitiativeSimulate_TimeToTurn' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCharacterWithMaxInitiativeSimulate
// 0x02B0 (0x02B0 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Characters;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<double>                                CharactersInitiative;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<bool>                                  HasEngagementBonus;                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         SimulationStep;                                    // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DEBUG_Verbose;                                     // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x0035(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToTurn;                                        // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                local_TimeToTurnPerCharacter;                      // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_jRPG_Character_Battle_Base_C*       CharacterLOCAL;                                    // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_LOCAL;                                     // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_4;                         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0140(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0150(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_HasPendingResurrect_Enabled;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentSpeedSimulate_ReturnValue;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetTimeToFullInitiativeSimulate_Time;     // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0220(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0228(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0278(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0288(0x0010)()
	double                                        K2Node_FunctionResult_TimeToTurn_ImplicitCast;     // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x02A0(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate) == 0x0002B0, "Wrong size on AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, Characters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CharactersInitiative) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CharactersInitiative' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, HasEngagementBonus) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::HasEngagementBonus' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, SimulationStep) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::SimulationStep' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, DEBUG_Verbose) == 0x000034, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::DEBUG_Verbose' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, Success_) == 0x000035, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::Success_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, Character) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, TimeToTurn) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::TimeToTurn' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, local_TimeToTurnPerCharacter) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::local_TimeToTurnPerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, local_AllCharacters) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::local_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CharacterLOCAL) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CharacterLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, Success_LOCAL) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::Success_LOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Length_ReturnValue_2) == 0x00007C, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000091, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000094, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_MinOfFloatArray_MinValue) == 0x000098, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_LastIndex_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_GetCharacterBattleBase_IsValid) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C1, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, Temp_bool_Variable) == 0x0000DC, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Get_Item_3) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Get_Item_4) == 0x000138, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, K2Node_MakeStruct_FormatArgumentData_1) == 0x000150, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_HasPendingResurrect_Enabled) == 0x000198, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_HasPendingResurrect_Enabled' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_GetCurrentSpeedSimulate_ReturnValue) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_GetCurrentSpeedSimulate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_BooleanOR_ReturnValue) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_GetTimeToFullInitiativeSimulate_Time) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_GetTimeToFullInitiativeSimulate_Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000200, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Round_ReturnValue) == 0x000208, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000210, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000218, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, K2Node_Select_Default) == 0x000220, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, K2Node_MakeStruct_FormatArgumentData_3) == 0x000228, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Array_Add_ReturnValue) == 0x000270, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, K2Node_MakeArray_Array) == 0x000278, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_Format_ReturnValue) == 0x000288, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, K2Node_FunctionResult_TimeToTurn_ImplicitCast) == 0x000298, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::K2Node_FunctionResult_TimeToTurn_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x0002A0, "Member 'AC_jRPG_BattleManager_C_GetCharacterWithMaxInitiativeSimulate::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCurrentBattleDifficulty
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCurrentBattleDifficulty final
{
public:
	E_GameDifficulty                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCurrentBattleDifficulty) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_GetCurrentBattleDifficulty");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCurrentBattleDifficulty) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_GetCurrentBattleDifficulty");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCurrentBattleDifficulty, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCurrentBattleDifficulty::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCurrentlyCounteringCharacters
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCurrentlyCounteringCharacters final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCurrentlyCounteringCharacters) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCurrentlyCounteringCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCurrentlyCounteringCharacters) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_GetCurrentlyCounteringCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCurrentlyCounteringCharacters, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCurrentlyCounteringCharacters::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetCurrentlyTargetingSkillState
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState final
{
public:
	class UBP_SkillState_C*                       SkillState;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  CallFunc_FindEquippedSkillByID_Skill;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SkillState_C*                       CallFunc_GetSkillState_Value;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState, SkillState) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState::SkillState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState, CallFunc_FindEquippedSkillByID_Skill) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState::CallFunc_FindEquippedSkillByID_Skill' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState, CallFunc_GetSkillState_Value) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetCurrentlyTargetingSkillState::CallFunc_GetSkillState_Value' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetDummyMiddleCharacter
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_GetDummyMiddleCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetDummyMiddleCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetDummyMiddleCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetDummyMiddleCharacter) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_GetDummyMiddleCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetDummyMiddleCharacter, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetDummyMiddleCharacter::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetEquippedCharacterGradientAttacks
// 0x0058 (0x0058 - 0x0000)
struct AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Skill_C*>          EquippedSkills;                                    // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FName>                           local_skillNames;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_jRPG_Action>                 local_skills;                                      // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         local_SlotIndex;                                   // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterData_CharacterData;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetAvailableGradientAttacks_ReturnValue;  // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks) == 0x000058, "Wrong size on AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks, EquippedSkills) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks::EquippedSkills' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks, local_skillNames) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks::local_skillNames' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks, local_skills) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks::local_skills' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks, local_SlotIndex) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks::local_SlotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks, CallFunc_GetCharacterData_CharacterData) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks::CallFunc_GetCharacterData_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks, CallFunc_GetAvailableGradientAttacks_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterGradientAttacks::CallFunc_GetAvailableGradientAttacks_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetEquippedCharacterSkills
// 0x0058 (0x0058 - 0x0000)
struct AC_jRPG_BattleManager_C_GetEquippedCharacterSkills final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Skill_C*>          EquippedSkills;                                    // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FName>                           local_skillNames;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_jRPG_Action>                 local_skills;                                      // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         local_SlotIndex;                                   // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterData_CharacterData;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetEquippedSkills_EquippedSkills;         // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetEquippedCharacterSkills");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills) == 0x000058, "Wrong size on AC_jRPG_BattleManager_C_GetEquippedCharacterSkills");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterSkills::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills, EquippedSkills) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterSkills::EquippedSkills' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills, local_skillNames) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterSkills::local_skillNames' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills, local_skills) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterSkills::local_skills' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills, local_SlotIndex) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterSkills::local_SlotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills, CallFunc_GetCharacterData_CharacterData) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterSkills::CallFunc_GetCharacterData_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetEquippedCharacterSkills, CallFunc_GetEquippedSkills_EquippedSkills) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetEquippedCharacterSkills::CallFunc_GetEquippedSkills_EquippedSkills' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetExtraLootItems
// 0x0050 (0x0050 - 0x0000)
struct AC_jRPG_BattleManager_C_GetExtraLootItems final
{
public:
	TMap<class FName, int32>                      ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetExtraLootItems) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetExtraLootItems");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetExtraLootItems) == 0x000050, "Wrong size on AC_jRPG_BattleManager_C_GetExtraLootItems");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetExtraLootItems, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetExtraLootItems::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetForcedNextCharacters
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_GetForcedNextCharacters final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> ReturnValue;                                      // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetForcedNextCharacters) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetForcedNextCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetForcedNextCharacters) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_GetForcedNextCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetForcedNextCharacters, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetForcedNextCharacters::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetGlobalDodgeWindowModifier
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_GetGlobalDodgeWindowModifier final
{
public:
	class UModifierStack_Float*                   Stack;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetGlobalDodgeWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetGlobalDodgeWindowModifier");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetGlobalDodgeWindowModifier) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_GetGlobalDodgeWindowModifier");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetGlobalDodgeWindowModifier, Stack) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetGlobalDodgeWindowModifier::Stack' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetGlobalParryWindowModifier
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_GetGlobalParryWindowModifier final
{
public:
	class UModifierStack_Float*                   Stack;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetGlobalParryWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetGlobalParryWindowModifier");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetGlobalParryWindowModifier) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_GetGlobalParryWindowModifier");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetGlobalParryWindowModifier, Stack) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetGlobalParryWindowModifier::Stack' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetJRPGControllerWorld
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_GetJRPGControllerWorld final
{
public:
	class ABP_jRPG_Controller_World_C*            JRPG_Controller;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetJRPGControllerWorld) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetJRPGControllerWorld");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetJRPGControllerWorld) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_GetJRPGControllerWorld");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetJRPGControllerWorld, JRPG_Controller) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetJRPGControllerWorld::JRPG_Controller' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetJRPGControllerWorld, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetJRPGControllerWorld::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetJRPGControllerWorld, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetJRPGControllerWorld::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetJRPGControllerWorld, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetJRPGControllerWorld::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetKickedCharacterStateFromHandle
// 0x0130 (0x0130 - 0x0000)
struct AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle final
{
public:
	struct FGuid                                  KickedCharacterHandle;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBattleCharacterStoredState           CharacterState;                                    // 0x0018(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x00C0(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
	struct FFBattleCharacterStoredState           CallFunc_Map_Find_Value;                           // 0x00F0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle) == 0x000130, "Wrong size on AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, KickedCharacterHandle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::KickedCharacterHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, Success) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CharacterState) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CharacterState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CallFunc_IsValid_Guid_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CallFunc_Conv_GuidToString_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CallFunc_AppendStack__Content__Result) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CallFunc_AppendStack__Content__Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, K2Node_MakeArray_Array) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CallFunc_Map_Find_Value) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'AC_jRPG_BattleManager_C_GetKickedCharacterStateFromHandle::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetLGUIActor_BattleWheels
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_GetLGUIActor_BattleWheels final
{
public:
	class ABP_LGUI_UIContainer_BattleWheelRoot_C* ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetLGUIActor_BattleWheels) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetLGUIActor_BattleWheels");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetLGUIActor_BattleWheels) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_GetLGUIActor_BattleWheels");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetLGUIActor_BattleWheels, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetLGUIActor_BattleWheels::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetPlayerCharacterAtBattleSpot
// 0x0048 (0x0048 - 0x0000)
struct AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot final
{
public:
	int32                                         SpotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot) == 0x000048, "Wrong size on AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, SpotIndex) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::SpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, Character) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, CallFunc_Array_Get_Item) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000041, "Member 'AC_jRPG_BattleManager_C_GetPlayerCharacterAtBattleSpot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetProperBattleSpawnPointTransform
// 0x0520 (0x0520 - 0x0000)
struct AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform final
{
public:
	bool                                          EnemySpot_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpotIndex;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          FormationType;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BattleSpotTransform;                               // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          BattleSpotFormationType;                           // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_CharacterBattleSpot_C*> CharactersBattleSpotsArray;                        // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_jRPG_EnemyBattleSpot_C*>     EnemyBattleSpotsArray;                             // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             BattleSpotTransformLOCAL;                          // 0x00A0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors;            // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_CharacterBattleSpot_C*         K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Spot; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors_1;          // 0x0170(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_CharacterBattleSpot_C*         CallFunc_Array_Get_Item_1;                         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0xB];                                      // 0x0195(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0xF];                                      // 0x0201(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0210(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_EnemyBattleSpot_C*             CallFunc_Array_Get_Item_2;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_2;     // 0x02A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0370(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_EnemyBattleSpot_C*             K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Spot;   // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          Temp_byte_Variable;                                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          Temp_byte_Variable_1;                              // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0xE];                                      // 0x03F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Select_Default;                             // 0x0400(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x04B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          Temp_byte_Variable_2;                              // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          K2Node_Select_Default_1;                           // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform) == 0x000520, "Wrong size on AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, EnemySpot_) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::EnemySpot_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, SpotIndex) == 0x000004, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::SpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, FormationType) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::FormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, BattleSpotTransform) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::BattleSpotTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, BattleSpotFormationType) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::BattleSpotFormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CharactersBattleSpotsArray) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CharactersBattleSpotsArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, EnemyBattleSpotsArray) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::EnemyBattleSpotsArray' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, BattleSpotTransformLOCAL) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::BattleSpotTransformLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_bool_True_if_break_was_hit_Variable) == 0x000101, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Array_Index_Variable) == 0x000104, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Not_PreBool_ReturnValue) == 0x000108, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Loop_Counter_Variable) == 0x00010C, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Loop_Counter_Variable_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Loop_Counter_Variable_2) == 0x00011C, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Add_IntInt_ReturnValue_2) == 0x000120, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000124, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Array_Index_Variable_1) == 0x000128, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012C, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Array_Index_Variable_2) == 0x000130, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Loop_Counter_Variable_3) == 0x000134, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_GetAllChildActors_ChildActors) == 0x000138, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_GetAllChildActors_ChildActors' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Add_IntInt_ReturnValue_3) == 0x000148, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Get_Item) == 0x000150, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Spot) == 0x000158, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Spot' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Length_ReturnValue) == 0x000164, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Less_IntInt_ReturnValue_1) == 0x000168, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_GetAllChildActors_ChildActors_1) == 0x000170, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_GetAllChildActors_ChildActors_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Less_IntInt_ReturnValue_2) == 0x000184, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Get_Item_1) == 0x000188, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Length_ReturnValue_2) == 0x000190, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Less_IntInt_ReturnValue_3) == 0x000194, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BooleanAND_ReturnValue) == 0x000200, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000210, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000270, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000288, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Add_ReturnValue) == 0x00028C, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Get_Item_2) == 0x000290, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Length_ReturnValue_3) == 0x000298, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Less_IntInt_ReturnValue_4) == 0x00029C, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_K2_GetComponentToWorld_ReturnValue_2) == 0x0002A0, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BooleanAND_ReturnValue_1) == 0x000300, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BreakTransform_Location) == 0x000308, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BreakTransform_Rotation) == 0x000320, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BreakTransform_Scale) == 0x000338, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000350, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000368, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_MakeTransform_ReturnValue) == 0x000370, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_int_Array_Index_Variable_3) == 0x0003D0, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Get_Item_3) == 0x0003D8, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Spot) == 0x0003E0, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Spot' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, K2Node_DynamicCast_bSuccess_1) == 0x0003E8, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_Array_Add_ReturnValue_1) == 0x0003EC, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_byte_Variable) == 0x0003F0, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_byte_Variable_1) == 0x0003F1, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, K2Node_Select_Default) == 0x000400, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BreakTransform_Location_1) == 0x000460, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BreakTransform_Rotation_1) == 0x000478, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_BreakTransform_Scale_1) == 0x000490, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x0004B0, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_byte_Variable_2) == 0x000510, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, Temp_bool_Variable) == 0x000511, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform, K2Node_Select_Default_1) == 0x000512, "Member 'AC_jRPG_BattleManager_C_GetProperBattleSpawnPointTransform::K2Node_Select_Default_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetTargetingManager
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_GetTargetingManager final
{
public:
	class UAC_jRPG_TargetingManager_C*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetTargetingManager) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetTargetingManager");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetTargetingManager) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_GetTargetingManager");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTargetingManager, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetTargetingManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTargetingManager, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetTargetingManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTargetingManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetTargetingManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetTeamMotivationLevel
// 0x00F8 (0x00F8 - 0x0000)
struct AC_jRPG_BattleManager_C_GetTeamMotivationLevel final
{
public:
	ETeamMotivationLevelType                      LevelType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LevelProgress;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      MinLevel;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      MaxLevel;                                          // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable;                                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable_2;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable_3;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable_4;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable_5;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable_6;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      Temp_byte_Variable_7;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      K2Node_Select_Default;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      K2Node_Select_Default_1;                           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      K2Node_Select_Default_2;                           // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      K2Node_Select_Default_3;                           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamMotivationLevelType                      K2Node_Select_Default_4;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_5;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_6;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_7;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator2_ImplicitCast;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator5_ImplicitCast;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator1_ImplicitCast_1;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator2_ImplicitCast_1;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator5_ImplicitCast_1;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator3_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast_1;       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_1; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetTeamMotivationLevel");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel) == 0x0000F8, "Wrong size on AC_jRPG_BattleManager_C_GetTeamMotivationLevel");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, LevelType) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::LevelType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, LevelProgress) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::LevelProgress' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, MinLevel) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::MinLevel' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, MaxLevel) == 0x000011, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::MaxLevel' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_bool_Variable) == 0x000012, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable) == 0x000013, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable_1) == 0x000014, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_bool_Variable_1) == 0x000015, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable_2) == 0x000016, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable_3) == 0x000017, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_bool_Variable_2) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_real_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable_4) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_real_Variable_1) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_real_Variable_2) == 0x000038, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_bool_Variable_3) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable_5) == 0x000041, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_bool_Variable_4) == 0x000042, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable_6) == 0x000043, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_byte_Variable_7) == 0x000044, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_real_Variable_3) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_real_Variable_4) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, Temp_bool_Variable_5) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000059, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00005A, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default) == 0x00005B, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default_1) == 0x00005C, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x00005D, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00005E, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default_2) == 0x00005F, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default_3) == 0x000061, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default_4) == 0x000062, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000063, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default_5) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default_6) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_NormalizeToRange_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_BooleanOR_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_Default_7) == 0x000090, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x000098, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator2_ImplicitCast) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator5_ImplicitCast) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator5_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator1_ImplicitCast_1) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator1_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator2_ImplicitCast_1) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator2_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator5_ImplicitCast_1) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator5_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, K2Node_Select_NewEnumerator3_ImplicitCast) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::K2Node_Select_NewEnumerator3_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_Less_DoubleDouble_B_ImplicitCast_1) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_Less_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTeamMotivationLevel, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_1) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_GetTeamMotivationLevel::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetTurnCount
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_BattleManager_C_GetTurnCount final
{
public:
	int32                                         TurnCount_0;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetTurnCount) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_GetTurnCount");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetTurnCount) == 0x000004, "Wrong size on AC_jRPG_BattleManager_C_GetTurnCount");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetTurnCount, TurnCount_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetTurnCount::TurnCount_0' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetWorldEnemiesTransforms
// 0x0140 (0x0140 - 0x0000)
struct AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms final
{
public:
	TMap<class FName, struct FTransform>          EnemiesTransforms;                                 // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, struct FTransform>          EnemiesTransformsLOCAL;                            // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Enemy_World_Base_Seamless_C*> CallFunc_GetAllActorsOfClass_OutActors;      // 0x00B0(0x0010)(ReferenceParm)
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms) == 0x000140, "Wrong size on AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, EnemiesTransforms) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::EnemiesTransforms' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, EnemiesTransformsLOCAL) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::EnemiesTransformsLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, CallFunc_GetGlobalObjectID_ObjectID) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms, CallFunc_GetTransform_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_GetWorldEnemiesTransforms::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GoBackToExploration
// 0x0080 (0x0080 - 0x0000)
struct AC_jRPG_BattleManager_C_GoBackToExploration final
{
public:
	class UGameplayCamerasSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FindActiveSkillSequenceBP_EpicSequenceBP; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters;         // 0x0030(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleSequenceTimeline_C*>   CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleSequenceTimeline_C*           CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GoBackToExploration) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GoBackToExploration");
static_assert(sizeof(AC_jRPG_BattleManager_C_GoBackToExploration) == 0x000080, "Wrong size on AC_jRPG_BattleManager_C_GoBackToExploration");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_FindActiveSkillSequenceBP_EpicSequenceBP) == 0x000020, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_FindActiveSkillSequenceBP_EpicSequenceBP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_GetAllCharacters_AllCharacters) == 0x000030, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_GetAllCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Array_Get_Item) == 0x000048, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Map_Values_Values) == 0x000058, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GoBackToExploration, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'AC_jRPG_BattleManager_C_GoBackToExploration::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.HasBattleModifierBuffOfClass
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass final
{
public:
	class UClass*                                 BuffClass;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBuffOfClass_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass");
static_assert(sizeof(AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass");
static_assert(offsetof(AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass, BuffClass) == 0x000000, "Member 'AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass::BuffClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass, ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass, CallFunc_HasBuffOfClass_ReturnValue) == 0x000009, "Member 'AC_jRPG_BattleManager_C_HasBattleModifierBuffOfClass::CallFunc_HasBuffOfClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Helper_AddRolledLootToMap
// 0x0090 (0x0090 - 0x0000)
struct AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap final
{
public:
	TMap<class FName, struct FS_RolledLootEntry>  RolledLootMap;                                     // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   ItemId;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedLootLevelOffset;                          // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_RolledLootEntry                     CallFunc_Map_Find_Value;                           // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_RolledLootEntry                     K2Node_SetFieldsInStruct_StructOut;                // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap");
static_assert(sizeof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap) == 0x000090, "Wrong size on AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, RolledLootMap) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::RolledLootMap' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, ItemId) == 0x000050, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::ItemId' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, Quantity) == 0x000058, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::Quantity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, GeneratedLootLevelOffset) == 0x00005C, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::GeneratedLootLevelOffset' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, CallFunc_Map_Find_Value) == 0x000060, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, CallFunc_Max_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap, K2Node_SetFieldsInStruct_StructOut) == 0x00007C, "Member 'AC_jRPG_BattleManager_C_Helper_AddRolledLootToMap::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Helper_TryAddRolledLootToMap
// 0x00C8 (0x00C8 - 0x0000)
struct AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap final
{
public:
	TMap<class FName, struct FS_RolledLootEntry>  RolledBattleLootEntries;                           // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FName                                   ItemDefinitionID;                                  // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OffsetLootContext;                                 // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         LootContext;                                       // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_OffsetLootContext;                           // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_ItemID;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_Quantity;                                    // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         CallFunc_OffsetLootContext_OffsetLootContext;      // 0x0074(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemLevelFromLootContext_ReturnValue;  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_RolledLootEntry                     CallFunc_Map_Find_Value;                           // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               CallFunc_GetItemType_Item_Type;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap");
static_assert(sizeof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap) == 0x0000C8, "Wrong size on AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, RolledBattleLootEntries) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::RolledBattleLootEntries' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, ItemDefinitionID) == 0x000050, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::ItemDefinitionID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, Quantity) == 0x000058, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::Quantity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, OffsetLootContext) == 0x00005C, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::OffsetLootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, LootContext) == 0x000060, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::LootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, local_OffsetLootContext) == 0x000064, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::local_OffsetLootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, local_ItemID) == 0x000068, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::local_ItemID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, local_Quantity) == 0x000070, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::local_Quantity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_OffsetLootContext_OffsetLootContext) == 0x000074, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_OffsetLootContext_OffsetLootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_GetItemLevelFromLootContext_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_GetItemLevelFromLootContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_Map_Find_Value) == 0x00007C, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_Map_Find_ReturnValue) == 0x00008C, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_Not_PreBool_ReturnValue) == 0x00008D, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_GetItemType_Item_Type) == 0x000098, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_GetItemType_Item_Type' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_FindItemInstanceByID_ItemInstance) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_GetCurrentLevel_ReturnValue) == 0x0000BC, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap, CallFunc_BooleanOR_ReturnValue) == 0x0000C2, "Member 'AC_jRPG_BattleManager_C_Helper_TryAddRolledLootToMap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.InitPlayerCharactersGear
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_BattleManager_C_InitPlayerCharactersGear final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0010(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0020(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_InitPlayerCharactersGear");
static_assert(sizeof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear) == 0x000040, "Wrong size on AC_jRPG_BattleManager_C_InitPlayerCharactersGear");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, Temp_wildcard_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000020, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, CallFunc_Array_Get_Item) == 0x000030, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_InitPlayerCharactersGear, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_InitPlayerCharactersGear::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Internal_MakePlayerCharacterDead
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead final
{
public:
	const class ABP_jRPG_Character_Battle_Base_C* Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_Battle_CharacterPortrait_C*    CallFunc_FindCharacterPortrait_Portrait;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead");
static_assert(sizeof(AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead");
static_assert(offsetof(AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead, CallFunc_FindCharacterPortrait_Portrait) == 0x000008, "Member 'AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead::CallFunc_FindCharacterPortrait_Portrait' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead, CallFunc_Array_RemoveItem_ReturnValue) == 0x000014, "Member 'AC_jRPG_BattleManager_C_Internal_MakePlayerCharacterDead::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Is Attacking Heroes
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_BattleManager_C_Is_Attacking_Heroes final
{
public:
	class ABP_jRPG_Enemy_Battle_Base_C*           Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttacking;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedHeroes;                                  // 0x0010(0x0010)(Parm, OutParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Is_Attacking_Heroes) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Is_Attacking_Heroes");
static_assert(sizeof(AC_jRPG_BattleManager_C_Is_Attacking_Heroes) == 0x000028, "Wrong size on AC_jRPG_BattleManager_C_Is_Attacking_Heroes");
static_assert(offsetof(AC_jRPG_BattleManager_C_Is_Attacking_Heroes, Enemy) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Is_Attacking_Heroes::Enemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Is_Attacking_Heroes, IsAttacking) == 0x000008, "Member 'AC_jRPG_BattleManager_C_Is_Attacking_Heroes::IsAttacking' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Is_Attacking_Heroes, TargetedHeroes) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Is_Attacking_Heroes::TargetedHeroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Is_Attacking_Heroes, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_Is_Attacking_Heroes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Is_Attacking_Heroes, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_Is_Attacking_Heroes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsAFullTeamDead
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_IsAFullTeamDead final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsAFullTeamDead) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_IsAFullTeamDead");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsAFullTeamDead) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_IsAFullTeamDead");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsAFullTeamDead, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsAFullTeamDead::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsAFullTeamDead, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'AC_jRPG_BattleManager_C_IsAFullTeamDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsAFullTeamDead, CallFunc_Array_Length_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_BattleManager_C_IsAFullTeamDead::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsAFullTeamDead, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_IsAFullTeamDead::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsAFullTeamDead, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00000D, "Member 'AC_jRPG_BattleManager_C_IsAFullTeamDead::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsAFullTeamDead, CallFunc_BooleanOR_ReturnValue) == 0x00000E, "Member 'AC_jRPG_BattleManager_C_IsAFullTeamDead::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsBattleEnding
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_BattleManager_C_IsBattleEnding final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsBattleEnding) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_IsBattleEnding");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsBattleEnding) == 0x000002, "Wrong size on AC_jRPG_BattleManager_C_IsBattleEnding");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsBattleEnding, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsBattleEnding::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsBattleEnding, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_IsBattleEnding::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsGradientChargeUnlocked
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_BattleManager_C_IsGradientChargeUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0010(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0038(0x0010)(ReferenceParm)
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetEquippedCharacterGradientAttacks_EquippedSkills; // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_IsGradientChargeUnlocked");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked) == 0x000060, "Wrong size on AC_jRPG_BattleManager_C_IsGradientChargeUnlocked");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, Temp_wildcard_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_GetBattleManager_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000038, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_GetEquippedCharacterGradientAttacks_EquippedSkills) == 0x000048, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_GetEquippedCharacterGradientAttacks_EquippedSkills' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsGradientChargeUnlocked, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_IsGradientChargeUnlocked::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsKickedCharacterStateHandleValid
// 0x0014 (0x0014 - 0x0000)
struct AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid final
{
public:
	struct FGuid                                  KickedCharacterHandle;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid) == 0x000014, "Wrong size on AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid, KickedCharacterHandle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid::KickedCharacterHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid, Success) == 0x000010, "Member 'AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid::Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid, CallFunc_IsValid_Guid_ReturnValue) == 0x000011, "Member 'AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid, CallFunc_Map_Contains_ReturnValue) == 0x000012, "Member 'AC_jRPG_BattleManager_C_IsKickedCharacterStateHandleValid::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsLastStandActive
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_BattleManager_C_IsLastStandActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsProcessingLastStand_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsLastStandActive) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_IsLastStandActive");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsLastStandActive) == 0x000002, "Wrong size on AC_jRPG_BattleManager_C_IsLastStandActive");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsLastStandActive, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsLastStandActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsLastStandActive, CallFunc_IsProcessingLastStand_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_IsLastStandActive::CallFunc_IsProcessingLastStand_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsNarrativeBattle
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_IsNarrativeBattle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsNarrativeBattle) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_IsNarrativeBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsNarrativeBattle) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_IsNarrativeBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsNarrativeBattle, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsNarrativeBattle::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsPlayerTeamCharacterBase
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CharacterBattle;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerTeam;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam;  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase, CharacterBattle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase::CharacterBattle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase, IsPlayerTeam) == 0x000008, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase::IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000009, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase, CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam) == 0x00000B, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterBase::CallFunc_IsPlayerTeamCharacterStats_IsPlayerTeam' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsPlayerTeamCharacterStats
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterBattleStats;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPlayerTeam;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats, CharacterBattleStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats::CharacterBattleStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats, IsPlayerTeam) == 0x000008, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats::IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000010, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats, CallFunc_GetCharacterBattleBase_IsValid) == 0x000018, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats, CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam) == 0x000019, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats::CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'AC_jRPG_BattleManager_C_IsPlayerTeamCharacterStats::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsShowingTooltip
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_BattleManager_C_IsShowingTooltip final
{
public:
	bool                                          IsShowingTooltip_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTooltipVisible_IsVisible;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsShowingTooltip) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_IsShowingTooltip");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsShowingTooltip) == 0x000002, "Wrong size on AC_jRPG_BattleManager_C_IsShowingTooltip");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsShowingTooltip, IsShowingTooltip_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsShowingTooltip::IsShowingTooltip_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsShowingTooltip, CallFunc_IsTooltipVisible_IsVisible) == 0x000001, "Member 'AC_jRPG_BattleManager_C_IsShowingTooltip::CallFunc_IsTooltipVisible_IsVisible' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.IsSkipImpossible
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_IsSkipImpossible final
{
public:
	bool                                          SkipImpossible;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_IsSkipImpossible) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_IsSkipImpossible");
static_assert(sizeof(AC_jRPG_BattleManager_C_IsSkipImpossible) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_IsSkipImpossible");
static_assert(offsetof(AC_jRPG_BattleManager_C_IsSkipImpossible, SkipImpossible) == 0x000000, "Member 'AC_jRPG_BattleManager_C_IsSkipImpossible::SkipImpossible' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.KickCharacterFromBattle_Internal
// 0x01D8 (0x01D8 - 0x0000)
struct AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal final
{
public:
	const class ABP_jRPG_Character_Battle_Base_C* Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  KickedCharacterHandle;                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  local_createGUID;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0028(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0108(0x0010)()
	class FText                                   CallFunc_AppendStack__Content__Result;             // 0x0118(0x0010)()
	TScriptInterface<class IBPI_BattleListener_C> K2Node_DynamicCast_AsBPI_Battle_Listener;          // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentShieldPoints_ShieldPoints;      // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0148(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleEnd_BattleHasEnded;            // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters;         // 0x0178(0x0010)(ReferenceParm)
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBattleCharacterStoredState           K2Node_MakeStruct_FBattleCharacterStoredState;     // 0x0198(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_4;           // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_5;           // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal");
static_assert(sizeof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal) == 0x0001D8, "Wrong size on AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, KickedCharacterHandle) == 0x000008, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::KickedCharacterHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, local_createGUID) == 0x000018, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::local_createGUID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000038, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, K2Node_MakeArray_Array) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Format_ReturnValue_1) == 0x000108, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_AppendStack__Content__Result) == 0x000118, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_AppendStack__Content__Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, K2Node_DynamicCast_AsBPI_Battle_Listener) == 0x000128, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::K2Node_DynamicCast_AsBPI_Battle_Listener' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_GetCurrentShieldPoints_ShieldPoints) == 0x00013C, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_GetCurrentShieldPoints_ShieldPoints' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_FCeil_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, Temp_int_Array_Index_Variable) == 0x000144, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, Temp_wildcard_Variable) == 0x000148, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_Get_Item) == 0x000158, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_CheckBattleEnd_BattleHasEnded) == 0x000164, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_CheckBattleEnd_BattleHasEnded' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_RemoveItem_ReturnValue) == 0x000165, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, Temp_int_Loop_Counter_Variable) == 0x000168, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00016C, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Less_IntInt_ReturnValue) == 0x00016D, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000170, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_GetAllCharacters_AllCharacters) == 0x000178, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_GetAllCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_NewGuid_ReturnValue) == 0x000188, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_NewGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, K2Node_MakeStruct_FBattleCharacterStoredState) == 0x000198, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::K2Node_MakeStruct_FBattleCharacterStoredState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x0001D1, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_RemoveItem_ReturnValue_4) == 0x0001D2, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_RemoveItem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Array_RemoveItem_ReturnValue_5) == 0x0001D3, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Array_RemoveItem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_BooleanOR_ReturnValue) == 0x0001D4, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_BooleanOR_ReturnValue_1) == 0x0001D5, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_BooleanOR_ReturnValue_2) == 0x0001D6, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal, CallFunc_Not_PreBool_ReturnValue) == 0x0001D7, "Member 'AC_jRPG_BattleManager_C_KickCharacterFromBattle_Internal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.LoadEncounterSettings
// 0x0280 (0x0280 - 0x0000)
struct AC_jRPG_BattleManager_C_LoadEncounterSettings final
{
public:
	TMap<int32, class FName>                      local_CurrentEncounter;                            // 0x0000(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_GameDifficulty                              CallFunc_GetGameDifficulty_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0058(0x0010)()
	bool                                          CallFunc_GetEncounterDataTableRow_Found;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Encounter                      CallFunc_GetEncounterDataTableRow_EncounterData;   // 0x0070(0x0060)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0010)()
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value;                           // 0x0150(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ComputeEncounterLevelForBattle_EncounterLevel; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameAction*                            CallFunc_GetGameActionFromWrapperPure_GameAction;  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PDT_GameAction_C*                   K2Node_DynamicCast_AsBP_PDT_Game_Action;           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19B[0x5];                                      // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FTransform>          CallFunc_GetWorldEnemiesTransforms_EnemiesTransforms; // 0x01A0(0x0050)()
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0200(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AC_jRPG_BattleManager_C_LoadEncounterSettings) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_LoadEncounterSettings");
static_assert(sizeof(AC_jRPG_BattleManager_C_LoadEncounterSettings) == 0x000280, "Wrong size on AC_jRPG_BattleManager_C_LoadEncounterSettings");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, local_CurrentEncounter) == 0x000000, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::local_CurrentEncounter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, Temp_int_Array_Index_Variable) == 0x000050, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetGameDifficulty_ReturnValue) == 0x000054, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetGameDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Conv_NameToText_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetEncounterDataTableRow_Found) == 0x000068, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetEncounterDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetEncounterDataTableRow_EncounterData) == 0x000070, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetEncounterDataTableRow_EncounterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, K2Node_MakeArray_Array) == 0x000118, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Format_ReturnValue) == 0x000128, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Map_Keys_Keys) == 0x000138, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Array_Get_Item) == 0x000148, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Array_Length_ReturnValue) == 0x00014C, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Map_Find_Value) == 0x000150, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_ComputeEncounterLevelForBattle_EncounterLevel) == 0x000164, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_ComputeEncounterLevelForBattle_EncounterLevel' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Array_AddUnique_ReturnValue) == 0x00016C, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetGameActionFromWrapperPure_GameAction) == 0x000170, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetGameActionFromWrapperPure_GameAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, Temp_int_Loop_Counter_Variable) == 0x000178, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_IsValid_ReturnValue_1) == 0x00017C, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Less_IntInt_ReturnValue) == 0x00017D, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, K2Node_DynamicCast_AsBP_PDT_Game_Action) == 0x000188, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::K2Node_DynamicCast_AsBP_PDT_Game_Action' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000194, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000198, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000199, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00019A, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetWorldEnemiesTransforms_EnemiesTransforms) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetWorldEnemiesTransforms_EnemiesTransforms' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetPlayerPawn_ReturnValue) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetTransform_ReturnValue) == 0x000200, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadEncounterSettings, CallFunc_GetControlRotation_ReturnValue) == 0x000260, "Member 'AC_jRPG_BattleManager_C_LoadEncounterSettings::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.LoadParty
// 0x0068 (0x0068 - 0x0000)
struct AC_jRPG_BattleManager_C_LoadParty final
{
public:
	TMap<int32, class FName>                      local_CurrentEncounter;                            // 0x0000(0x0050)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_jRPG_PartySlot>              K2Node_Select_Default;                             // 0x0058(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_LoadParty) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_LoadParty");
static_assert(sizeof(AC_jRPG_BattleManager_C_LoadParty) == 0x000068, "Wrong size on AC_jRPG_BattleManager_C_LoadParty");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadParty, local_CurrentEncounter) == 0x000000, "Member 'AC_jRPG_BattleManager_C_LoadParty::local_CurrentEncounter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadParty, Temp_bool_Variable) == 0x000050, "Member 'AC_jRPG_BattleManager_C_LoadParty::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadParty, CallFunc_Array_IsEmpty_ReturnValue) == 0x000051, "Member 'AC_jRPG_BattleManager_C_LoadParty::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_LoadParty, K2Node_Select_Default) == 0x000058, "Member 'AC_jRPG_BattleManager_C_LoadParty::K2Node_Select_Default' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.MoveCharactersBackToTheirSpots
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots");
static_assert(sizeof(AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots");
static_assert(offsetof(AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots, LatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots::LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots, DebugReason) == 0x000008, "Member 'AC_jRPG_BattleManager_C_MoveCharactersBackToTheirSpots::DebugReason' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.On Character Has Received Damage
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_On_Character_Has_Received_Damage final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_On_Character_Has_Received_Damage) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_On_Character_Has_Received_Damage");
static_assert(sizeof(AC_jRPG_BattleManager_C_On_Character_Has_Received_Damage) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_On_Character_Has_Received_Damage");
static_assert(offsetof(AC_jRPG_BattleManager_C_On_Character_Has_Received_Damage, BattleDamages) == 0x000000, "Member 'AC_jRPG_BattleManager_C_On_Character_Has_Received_Damage::BattleDamages' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnBattleEndBlockerLifted
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_OnBattleEndBlockerLifted final
{
public:
	bool                                          _isActive;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnBattleEndBlockerLifted) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_OnBattleEndBlockerLifted");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnBattleEndBlockerLifted) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_OnBattleEndBlockerLifted");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleEndBlockerLifted, _isActive) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnBattleEndBlockerLifted::_isActive' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnBattleMapReady
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_BattleManager_C_OnBattleMapReady final
{
public:
	class ABP_BattleMap_C*                        local_battleMap;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BattleMap_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	class ABP_BattleMap_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleMap_C*                        K2Node_DynamicCast_AsBP_Battle_Map;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnBattleMapReady) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnBattleMapReady");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnBattleMapReady) == 0x000038, "Wrong size on AC_jRPG_BattleManager_C_OnBattleMapReady");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, local_battleMap) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::local_battleMap' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, CallFunc_Array_Get_Item) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, K2Node_DynamicCast_AsBP_Battle_Map) == 0x000028, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::K2Node_DynamicCast_AsBP_Battle_Map' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnBattleMapReady, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'AC_jRPG_BattleManager_C_OnBattleMapReady::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCancelTargeting
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCancelTargeting final
{
public:
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCancelTargeting) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnCancelTargeting");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCancelTargeting) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_OnCancelTargeting");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCancelTargeting, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCancelTargeting::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCharacterActionFinished
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCharacterActionFinished final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCharacterActionFinished) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnCharacterActionFinished");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCharacterActionFinished) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_OnCharacterActionFinished");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterActionFinished, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCharacterActionFinished::Character' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCharacterDashBackComplete
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCharacterDashBackComplete final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CharacterBase;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCharacterDashBackComplete) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnCharacterDashBackComplete");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCharacterDashBackComplete) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_OnCharacterDashBackComplete");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterDashBackComplete, CharacterBase) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCharacterDashBackComplete::CharacterBase' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCharacterDashBackCompleteComponent
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCharacterDashBackCompleteComponent final
{
public:
	class UAC_jRPG_CombatMovement_C*              MovementComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCharacterDashBackCompleteComponent) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnCharacterDashBackCompleteComponent");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCharacterDashBackCompleteComponent) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_OnCharacterDashBackCompleteComponent");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterDashBackCompleteComponent, MovementComponent) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCharacterDashBackCompleteComponent::MovementComponent' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCharacterLastStandEnded
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCharacterLastStandEnded final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCharacterLastStandEnded) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnCharacterLastStandEnded");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCharacterLastStandEnded) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_OnCharacterLastStandEnded");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterLastStandEnded, CharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCharacterLastStandEnded::CharacterStats' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCharacterLastStandStarted
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCharacterLastStandStarted final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCharacterLastStandStarted) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnCharacterLastStandStarted");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCharacterLastStandStarted) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_OnCharacterLastStandStarted");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterLastStandStarted, CharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCharacterLastStandStarted::CharacterStats' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCharacterReceivedDamages
// 0x00B8 (0x00B8 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCharacterReceivedDamages final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacterStats;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Damages;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacterStats;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item;                           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnCharacterReceivedDamages");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages) == 0x0000B8, "Wrong size on AC_jRPG_BattleManager_C_OnCharacterReceivedDamages");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, TargetCharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::TargetCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, Damages) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::Damages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, SourceCharacterStats) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::SourceCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, BattleDamages) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::BattleDamages' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, Temp_int_Array_Index_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, CallFunc_Array_Get_Item) == 0x000080, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, K2Node_MakeArray_Array) == 0x000090, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCharacterReceivedDamages, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'AC_jRPG_BattleManager_C_OnCharacterReceivedDamages::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnCounterAttackFinished
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_BattleManager_C_OnCounterAttackFinished final
{
public:
	bool                                          CallFunc_IsProcessingLastStand_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnCounterAttackFinished) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_OnCounterAttackFinished");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnCounterAttackFinished) == 0x000002, "Wrong size on AC_jRPG_BattleManager_C_OnCounterAttackFinished");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCounterAttackFinished, CallFunc_IsProcessingLastStand_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnCounterAttackFinished::CallFunc_IsProcessingLastStand_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnCounterAttackFinished, CallFunc_On_Action_Finished_HasMoreActions) == 0x000001, "Member 'AC_jRPG_BattleManager_C_OnCounterAttackFinished::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnDefendSuccess
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_OnDefendSuccess final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnDefendSuccess) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnDefendSuccess");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnDefendSuccess) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_OnDefendSuccess");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnDefendSuccess, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnDefendSuccess::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnDefendSuccess, Enemy) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnDefendSuccess::Enemy' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnDodgeSuccess
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_OnDodgeSuccess final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnDodgeSuccess) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnDodgeSuccess");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnDodgeSuccess) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_OnDodgeSuccess");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnDodgeSuccess, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnDodgeSuccess::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnDodgeSuccess, Enemy) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnDodgeSuccess::Enemy' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnEnemyKilled
// 0x0098 (0x0098 - 0x0000)
struct AC_jRPG_BattleManager_C_OnEnemyKilled final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       local_Enemy;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
	bool                                          CallFunc_CheckBattleEnd_BattleHasEnded;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnEnemyKilled) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnEnemyKilled");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnEnemyKilled) == 0x000098, "Wrong size on AC_jRPG_BattleManager_C_OnEnemyKilled");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, Enemy) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::Enemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, local_Enemy) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::local_Enemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, K2Node_MakeArray_Array) == 0x000068, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, CallFunc_Format_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, CallFunc_CheckBattleEnd_BattleHasEnded) == 0x000088, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::CallFunc_CheckBattleEnd_BattleHasEnded' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, CallFunc_Map_Remove_ReturnValue) == 0x000089, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnEnemyKilled, CallFunc_Array_RemoveItem_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_OnEnemyKilled::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnLastStandFinished
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_OnLastStandFinished final
{
public:
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnLastStandFinished) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_OnLastStandFinished");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnLastStandFinished) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_OnLastStandFinished");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnLastStandFinished, CallFunc_On_Action_Finished_HasMoreActions) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnLastStandFinished::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82, Loaded) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnLoaded_F58B7C71485B149C4ED04FB5D95BEB82::Loaded' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnParrySuccess
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_OnParrySuccess final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnParrySuccess) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnParrySuccess");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnParrySuccess) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_OnParrySuccess");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnParrySuccess, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnParrySuccess::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnParrySuccess, Enemy) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnParrySuccess::Enemy' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnPlayerCharacterKilled
// 0x0058 (0x0058 - 0x0000)
struct AC_jRPG_BattleManager_C_OnPlayerCharacterKilled final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       KilledPlayerCharacterLOCAL;                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleEnd_BattleHasEnded;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPendingResurrect_Enabled;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> K2Node_DynamicCast_AsBPI_Battle_Listener;          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnPlayerCharacterKilled");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled) == 0x000058, "Wrong size on AC_jRPG_BattleManager_C_OnPlayerCharacterKilled");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, PlayerCharacter) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, KilledPlayerCharacterLOCAL) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::KilledPlayerCharacterLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_CheckBattleEnd_BattleHasEnded) == 0x000014, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_CheckBattleEnd_BattleHasEnded' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_Array_RemoveItem_ReturnValue) == 0x000015, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_Array_AddUnique_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_HasPendingResurrect_Enabled) == 0x000024, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_HasPendingResurrect_Enabled' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, K2Node_DynamicCast_AsBPI_Battle_Listener) == 0x000038, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::K2Node_DynamicCast_AsBPI_Battle_Listener' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterKilled, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterKilled::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnPlayerCharacterResurrected
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       ResurrectedCharacterLOCAL;                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_Battle_CharacterPortrait_C*    CallFunc_FindCharacterPortrait_Portrait;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected, PlayerCharacter) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected, ResurrectedCharacterLOCAL) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected::ResurrectedCharacterLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected, CallFunc_FindCharacterPortrait_Portrait) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected::CallFunc_FindCharacterPortrait_Portrait' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected, CallFunc_Array_RemoveItem_ReturnValue) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterResurrected::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnPlayerCharacterTurnStart
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart final
{
public:
	bool                                          CallFunc_TryProcessForcedSkill_PreventPlayerChoice; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Temp_wildcard_Variable;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0010(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveHeroes_Target_Heroes;        // 0x0020(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Random_OutItem;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveEnemies_Target_Heroes;       // 0x0040(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Random_OutItem_1;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasForcedAutoAttack_ReturnValue;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart) == 0x000060, "Wrong size on AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_TryProcessForcedSkill_PreventPlayerChoice) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_TryProcessForcedSkill_PreventPlayerChoice' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, Temp_wildcard_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, K2Node_MakeArray_Array) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_GetAllAliveHeroes_Target_Heroes) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_GetAllAliveHeroes_Target_Heroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_Array_Random_OutItem) == 0x000030, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_Array_Random_OutIndex) == 0x000038, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_GetAllAliveEnemies_Target_Heroes) == 0x000040, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_GetAllAliveEnemies_Target_Heroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_Array_Random_OutItem_1) == 0x000050, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_Array_Random_OutIndex_1) == 0x000058, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_GetTeam_Team) == 0x00005C, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, CallFunc_HasForcedAutoAttack_ReturnValue) == 0x00005D, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::CallFunc_HasForcedAutoAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart, K2Node_SwitchEnum_CmpSuccess) == 0x00005E, "Member 'AC_jRPG_BattleManager_C_OnPlayerCharacterTurnStart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnReserveTeamResponse
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_OnReserveTeamResponse final
{
public:
	bool                                          ShouldSendReserve;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnReserveTeamResponse) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_OnReserveTeamResponse");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnReserveTeamResponse) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_OnReserveTeamResponse");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnReserveTeamResponse, ShouldSendReserve) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnReserveTeamResponse::ShouldSendReserve' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnSelectFlee
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_OnSelectFlee final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnSelectFlee) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnSelectFlee");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnSelectFlee) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_OnSelectFlee");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnSelectFlee, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnSelectFlee::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnSelectFlee, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnSelectFlee::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnSelectSkip
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_BattleManager_C_OnSelectSkip final
{
public:
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnSelectSkip) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnSelectSkip");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnSelectSkip) == 0x000028, "Wrong size on AC_jRPG_BattleManager_C_OnSelectSkip");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnSelectSkip, CallFunc_GetTargetingManager_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnSelectSkip::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnSelectSkip, CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnSelectSkip::CallFunc_IsPlayerTeamCharacterBase_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnSelectSkip, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnSelectSkip::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnSelectSkip, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnSelectSkip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnSelectSkip, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnSelectSkip::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnStartTargeting
// 0x0168 (0x0168 - 0x0000)
struct AC_jRPG_BattleManager_C_OnStartTargeting final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          Temp_struct_Variable;                              // 0x0008(0x0010)(NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          Temp_struct_Variable_1;                            // 0x0020(0x0010)(NoDestructor)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_GetCurrentBattleTurnState_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentlyTargetingAllies_ReturnValue;   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default;                             // 0x0118(0x0010)(NoDestructor)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue_1;        // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default_1;                           // 0x0138(0x0010)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default_2;                           // 0x0150(0x0010)(NoDestructor)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnStartTargeting) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnStartTargeting");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnStartTargeting) == 0x000168, "Wrong size on AC_jRPG_BattleManager_C_OnStartTargeting");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, Temp_bool_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, Temp_struct_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, Temp_int_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, Temp_struct_Variable_1) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, Temp_int_Variable_1) == 0x000030, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_GetTargetingManager_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_GetCurrentBattleTurnState_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_GetCurrentBattleTurnState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_IsCurrentlyTargetingAllies_ReturnValue) == 0x000041, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_IsCurrentlyTargetingAllies_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000042, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000058, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000070, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_SelectInt_ReturnValue) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, K2Node_MakeArray_Array) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_SelectInt_ReturnValue_1) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_BooleanOR_ReturnValue) == 0x0000F1, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, K2Node_SwitchEnum_CmpSuccess) == 0x0000F2, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_BooleanOR_ReturnValue_1) == 0x0000F3, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_SelectInt_ReturnValue_2) == 0x0000F4, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Max_ReturnValue) == 0x0000FC, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_SelectInt_ReturnValue_3) == 0x000104, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_And_IntInt_ReturnValue) == 0x000108, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Max_ReturnValue_1) == 0x00010C, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, K2Node_Select_Default) == 0x000118, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_And_IntInt_ReturnValue_1) == 0x000128, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_GetTargetingManager_ReturnValue_1) == 0x000130, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_GetTargetingManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, K2Node_Select_Default_1) == 0x000138, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_Not_PreBool_ReturnValue_1) == 0x000148, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, K2Node_Select_Default_2) == 0x000150, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStartTargeting, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000160, "Member 'AC_jRPG_BattleManager_C_OnStartTargeting::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnStopTargeting
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_OnStopTargeting final
{
public:
	bool                                          WasPreTargeting;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnStopTargeting) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnStopTargeting");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnStopTargeting) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_OnStopTargeting");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStopTargeting, WasPreTargeting) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnStopTargeting::WasPreTargeting' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStopTargeting, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_OnStopTargeting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnStopTargeting, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnStopTargeting::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnTargetChanged
// 0x0050 (0x0050 - 0x0000)
struct AC_jRPG_BattleManager_C_OnTargetChanged final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue_2;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          K2Node_Select_Default;                             // 0x0040(0x0010)(NoDestructor)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnTargetChanged) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnTargetChanged");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnTargetChanged) == 0x000050, "Wrong size on AC_jRPG_BattleManager_C_OnTargetChanged");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, Temp_bool_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_GetTargetingManager_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_GetTargetingManager_ReturnValue_1) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_GetTargetingManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_GetTargetingManager_ReturnValue_2) == 0x000028, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_GetTargetingManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_Array_Get_Item) == 0x000030, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000038, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetChanged, K2Node_Select_Default) == 0x000040, "Member 'AC_jRPG_BattleManager_C_OnTargetChanged::K2Node_Select_Default' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnTargetingUpdate
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_BattleManager_C_OnTargetingUpdate final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_object_Variable;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_Select_Default;                           // 0x0028(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnTargetingUpdate) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnTargetingUpdate");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnTargetingUpdate) == 0x000038, "Wrong size on AC_jRPG_BattleManager_C_OnTargetingUpdate");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetingUpdate, Temp_bool_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnTargetingUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetingUpdate, Temp_object_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnTargetingUpdate::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetingUpdate, CallFunc_GetTargetingManager_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnTargetingUpdate::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetingUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnTargetingUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetingUpdate, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'AC_jRPG_BattleManager_C_OnTargetingUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTargetingUpdate, K2Node_Select_Default) == 0x000028, "Member 'AC_jRPG_BattleManager_C_OnTargetingUpdate::K2Node_Select_Default' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnTurnEndEventBegin
// 0x0140 (0x0140 - 0x0000)
struct AC_jRPG_BattleManager_C_OnTurnEndEventBegin final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0088(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x00C0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0130(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnTurnEndEventBegin");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin) == 0x000140, "Wrong size on AC_jRPG_BattleManager_C_OnTurnEndEventBegin");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, K2Node_MakeArray_Array) == 0x000060, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Format_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, Temp_int_Array_Index_Variable) == 0x000080, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, Temp_wildcard_Variable) == 0x000088, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Array_Get_Item) == 0x000098, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Not_PreBool_ReturnValue) == 0x000118, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, K2Node_MakeArray_Array_1) == 0x000120, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventBegin, CallFunc_Format_ReturnValue_1) == 0x000130, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventBegin::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnTurnEndEventEnd
// 0x0098 (0x0098 - 0x0000)
struct AC_jRPG_BattleManager_C_OnTurnEndEventEnd final
{
public:
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0010(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0088(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_OnTurnEndEventEnd");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd) == 0x000098, "Wrong size on AC_jRPG_BattleManager_C_OnTurnEndEventEnd");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd, K2Node_MakeArray_Array) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventEnd::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd, CallFunc_Format_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventEnd::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventEnd::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventEnd::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd, K2Node_MakeArray_Array_1) == 0x000078, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventEnd::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnEndEventEnd, CallFunc_Format_ReturnValue_1) == 0x000088, "Member 'AC_jRPG_BattleManager_C_OnTurnEndEventEnd::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.OnTurnSkipped
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_OnTurnSkipped final
{
public:
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_OnTurnSkipped) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_OnTurnSkipped");
static_assert(sizeof(AC_jRPG_BattleManager_C_OnTurnSkipped) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_OnTurnSkipped");
static_assert(offsetof(AC_jRPG_BattleManager_C_OnTurnSkipped, CallFunc_On_Action_Finished_HasMoreActions) == 0x000000, "Member 'AC_jRPG_BattleManager_C_OnTurnSkipped::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.PerformFlee
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_PerformFlee final
{
public:
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_PerformFlee) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_PerformFlee");
static_assert(sizeof(AC_jRPG_BattleManager_C_PerformFlee) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_PerformFlee");
static_assert(offsetof(AC_jRPG_BattleManager_C_PerformFlee, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000000, "Member 'AC_jRPG_BattleManager_C_PerformFlee::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.PlayFreezeFrameInternal
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_PlayFreezeFrameInternal final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         TimeDilation;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameDuration;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_PlayFreezeFrameInternal) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_PlayFreezeFrameInternal");
static_assert(sizeof(AC_jRPG_BattleManager_C_PlayFreezeFrameInternal) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_PlayFreezeFrameInternal");
static_assert(offsetof(AC_jRPG_BattleManager_C_PlayFreezeFrameInternal, LatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_PlayFreezeFrameInternal::LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PlayFreezeFrameInternal, TimeDilation) == 0x000008, "Member 'AC_jRPG_BattleManager_C_PlayFreezeFrameInternal::TimeDilation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PlayFreezeFrameInternal, GameDuration) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_PlayFreezeFrameInternal::GameDuration' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.PrepareForBackupTeam
// 0x0388 (0x0388 - 0x0000)
struct AC_jRPG_BattleManager_C_PrepareForBackupTeam final
{
public:
	TArray<class FName>                           BackupTeam;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<TSoftClassPtr<class UClass>>           ClassesToLoad;                                     // 0x0010(0x0010)(Parm, OutParm)
	TArray<TSoftClassPtr<class UClass>>           local_outClassesToLoad;                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           local_backupTeam;                                  // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_playerCharacters;                          // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_jRPG_PartySlot>              Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           Temp_wildcard_Variable;                            // 0x0068(0x0010)(ReferenceParm)
	TArray<struct FS_jRPG_PartySlot>              Temp_wildcard_Temp_buffer_array_Variable;          // 0x0078(0x0010)(ConstParm, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_PartySlot                      K2Node_MakeStruct_S_jRPG_PartySlot;                // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConcatenateDisplayNamesString_Result;     // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConcatenateDisplayNamesString_Result_1;   // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F8(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0118(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0160(0x0048)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsEmpty_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConcatenateDisplayNamesString_Result_2;   // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ReferenceParm)
	TArray<struct FFBattleCharacterStoredState>   CallFunc_Map_Values_Values;                        // 0x0238(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFBattleCharacterStoredState           CallFunc_Array_Get_Item_2;                         // 0x0258(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0298(0x0010)()
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02F8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_3;                         // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x033F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_4;                         // 0x0344(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0360(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0378(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_PrepareForBackupTeam) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_PrepareForBackupTeam");
static_assert(sizeof(AC_jRPG_BattleManager_C_PrepareForBackupTeam) == 0x000388, "Wrong size on AC_jRPG_BattleManager_C_PrepareForBackupTeam");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, BackupTeam) == 0x000000, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::BackupTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, ClassesToLoad) == 0x000010, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::ClassesToLoad' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, local_outClassesToLoad) == 0x000020, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::local_outClassesToLoad' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, local_backupTeam) == 0x000030, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::local_backupTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, local_playerCharacters) == 0x000040, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::local_playerCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Array_Index_Variable) == 0x000050, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000058, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_wildcard_Variable) == 0x000068, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_wildcard_Temp_buffer_array_Variable) == 0x000078, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Get_Item) == 0x000088, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, K2Node_MakeStruct_S_jRPG_PartySlot) == 0x000090, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::K2Node_MakeStruct_S_jRPG_PartySlot' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0000A4, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Array_Index_Variable_2) == 0x0000B4, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Not_PreBool_ReturnValue) == 0x0000B9, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Array_Index_Variable_3) == 0x0000C4, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Loop_Counter_Variable_2) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_ConcatenateDisplayNamesString_Result) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_ConcatenateDisplayNamesString_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_ConcatenateDisplayNamesString_Result_1) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_ConcatenateDisplayNamesString_Result_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000108, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, K2Node_MakeStruct_FormatArgumentData) == 0x000118, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, K2Node_MakeStruct_FormatArgumentData_1) == 0x000160, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Map_IsEmpty_ReturnValue) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Map_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Length_ReturnValue_1) == 0x0001B4, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_ConcatenateDisplayNamesString_Result_2) == 0x0001C0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_ConcatenateDisplayNamesString_Result_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001E0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, K2Node_MakeArray_Array) == 0x000228, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Map_Values_Values) == 0x000238, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Format_ReturnValue) == 0x000248, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Get_Item_2) == 0x000258, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Length_ReturnValue_2) == 0x000290, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Conv_NameToText_ReturnValue) == 0x000298, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_RemoveItem_ReturnValue) == 0x0002A8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002B0, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, K2Node_MakeArray_Array_1) == 0x0002F8, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Format_ReturnValue_1) == 0x000308, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Loop_Counter_Variable_3) == 0x000318, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Less_IntInt_ReturnValue_2) == 0x00031C, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Add_IntInt_ReturnValue_3) == 0x000320, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_LastIndex_ReturnValue) == 0x000324, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Min_ReturnValue) == 0x000328, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Get_Item_3) == 0x000330, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Length_ReturnValue_3) == 0x000338, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Less_IntInt_ReturnValue_3) == 0x00033C, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00033D, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_IsEmpty_ReturnValue) == 0x00033E, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_BooleanAND_ReturnValue) == 0x00033F, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, Temp_int_Variable) == 0x000340, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Get_Item_4) == 0x000344, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00034C, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_Add_ReturnValue_1) == 0x000350, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000354, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Add_IntInt_ReturnValue_4) == 0x000358, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000360, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000370, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_PrepareForBackupTeam, CallFunc_Map_Keys_Keys) == 0x000378, "Member 'AC_jRPG_BattleManager_C_PrepareForBackupTeam::CallFunc_Map_Keys_Keys' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ProcessLastStandEvents
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_ProcessLastStandEvents final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ProcessLastStandEvents) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ProcessLastStandEvents");
static_assert(sizeof(AC_jRPG_BattleManager_C_ProcessLastStandEvents) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_ProcessLastStandEvents");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessLastStandEvents, LatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ProcessLastStandEvents::LatentAction' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ProcessNextPendingResurrect
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_ProcessNextPendingResurrect final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ProcessNextPendingResurrect) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ProcessNextPendingResurrect");
static_assert(sizeof(AC_jRPG_BattleManager_C_ProcessNextPendingResurrect) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_ProcessNextPendingResurrect");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextPendingResurrect, LatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ProcessNextPendingResurrect::LatentAction' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ProcessNextTurnStartListener
// 0x01B8 (0x01B8 - 0x0000)
struct AC_jRPG_BattleManager_C_ProcessNextTurnStartListener final
{
public:
	TScriptInterface<class IBPI_BattleListener_C> local_currentDependency;                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0030(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0130(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0178(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0188(0x0010)()
	bool                                          CallFunc_HasNoPendingDependency_ReturnValue;       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item;                           // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ProcessNextTurnStartListener");
static_assert(sizeof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener) == 0x0001B8, "Wrong size on AC_jRPG_BattleManager_C_ProcessNextTurnStartListener");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, local_currentDependency) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::local_currentDependency' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000018, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x000028, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_MakeArray_Array) == 0x000098, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_MakeArray_Array_1) == 0x000100, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Format_ReturnValue_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Not_PreBool_ReturnValue) == 0x000124, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000128, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_MakeStruct_FormatArgumentData_2) == 0x000130, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, K2Node_MakeArray_Array_2) == 0x000178, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Format_ReturnValue_2) == 0x000188, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_HasNoPendingDependency_ReturnValue) == 0x000198, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_HasNoPendingDependency_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Array_Length_ReturnValue_2) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessNextTurnStartListener, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B4, "Member 'AC_jRPG_BattleManager_C_ProcessNextTurnStartListener::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ProcessVictoryEndFlow
// 0x0140 (0x0140 - 0x0000)
struct AC_jRPG_BattleManager_C_ProcessVictoryEndFlow final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> local_AllCharacterBattleStats;                    // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_BattleRewards                       local_receivedBattleRewards;                       // 0x0010(0x0018)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TMap<class FName, int32>                      local_loot;                                        // 0x0028(0x0050)(Edit, BlueprintVisible)
	bool                                          local_DEV_useOldUI;                                // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CharacterData_C*>            local_AllCharacterData;                            // 0x0080(0x0010)(Edit, BlueprintVisible)
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0090(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x00B0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_CharacterData_C*>            Temp_wildcard_Temp_buffer_array_Variable;          // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	TArray<class UBP_CharacterData_C*>            Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1; // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	TArray<class UAC_jRPG_CharacterBattleStats_C*> Temp_wildcard_Temp_buffer_array_Variable_1;       // 0x00F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0108(0x0010)(ReferenceParm)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattleRewards                       CallFunc_RollBattleRewards_BattleRewards;          // 0x0128(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ProcessVictoryEndFlow");
static_assert(sizeof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow) == 0x000140, "Wrong size on AC_jRPG_BattleManager_C_ProcessVictoryEndFlow");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, local_AllCharacterBattleStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::local_AllCharacterBattleStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, local_receivedBattleRewards) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::local_receivedBattleRewards' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, local_loot) == 0x000028, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::local_loot' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, local_DEV_useOldUI) == 0x000078, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::local_DEV_useOldUI' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, local_AllCharacterData) == 0x000080, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::local_AllCharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000090, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, Temp_wildcard_Variable) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, Temp_wildcard_Temp_buffer_array_Variable) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, Temp_wildcard_Temp_buffer_array_Variable_1) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::Temp_wildcard_Temp_buffer_array_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000108, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_GetCharacterByID_CharacterData) == 0x000118, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_Array_Add_ReturnValue_1) == 0x000120, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ProcessVictoryEndFlow, CallFunc_RollBattleRewards_BattleRewards) == 0x000128, "Member 'AC_jRPG_BattleManager_C_ProcessVictoryEndFlow::CallFunc_RollBattleRewards_BattleRewards' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.QueueForcedNextCharacter
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_QueueForcedNextCharacter final
{
public:
	const class UAC_jRPG_CharacterBattleStats_C*  CharacterStats;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         local_existingIndex;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_QueueForcedNextCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_QueueForcedNextCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter, CharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_QueueForcedNextCharacter::CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter, local_existingIndex) == 0x000008, "Member 'AC_jRPG_BattleManager_C_QueueForcedNextCharacter::local_existingIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter, CallFunc_EqualsObjects_ReturnValue) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_QueueForcedNextCharacter::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_QueueForcedNextCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000014, "Member 'AC_jRPG_BattleManager_C_QueueForcedNextCharacter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_QueueForcedNextCharacter, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_QueueForcedNextCharacter::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ReceiveBattleExperience
// 0x00C0 (0x00C0 - 0x0000)
struct AC_jRPG_BattleManager_C_ReceiveBattleExperience final
{
public:
	int32                                         InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           local_AliveHeroes;                                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<class UBP_CharacterData_C*>            Temp_wildcard_Variable;                            // 0x0018(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0050(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0080(0x0010)(ConstParm, ReferenceParm)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CharacterData_C*>            CallFunc_GetCharacterCollection_Characters;        // 0x0098(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ReceiveBattleExperience) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ReceiveBattleExperience");
static_assert(sizeof(AC_jRPG_BattleManager_C_ReceiveBattleExperience) == 0x0000C0, "Wrong size on AC_jRPG_BattleManager_C_ReceiveBattleExperience");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, InputPin) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::InputPin' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, local_AliveHeroes) == 0x000008, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::local_AliveHeroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, Temp_wildcard_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_FCeil_ReturnValue) == 0x000044, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000050, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, Temp_int_Array_Index_Variable) == 0x000068, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Array_Get_Item) == 0x000070, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Array_Contains_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, Temp_wildcard_Temp_buffer_array_Variable) == 0x000080, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_GetCustomGI_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_GetCharacterCollection_Characters) == 0x000098, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_GetCharacterCollection_Characters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleExperience, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleExperience::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ReceiveBattleRewards
// 0x0070 (0x0070 - 0x0000)
struct AC_jRPG_BattleManager_C_ReceiveBattleRewards final
{
public:
	struct FS_BattleRewards                       BattleRewards;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_LootContext                         local_lootContext;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_RolledLootEntry                     CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         CallFunc_OffsetLootContext_OffsetLootContext;      // 0x0048(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GeneratedItemInfo_Base_C*           CallFunc_AddItemToInventory_GeneratedItem;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         K2Node_MakeStruct_S_LootContext;                   // 0x0068(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ReceiveBattleRewards) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ReceiveBattleRewards");
static_assert(sizeof(AC_jRPG_BattleManager_C_ReceiveBattleRewards) == 0x000070, "Wrong size on AC_jRPG_BattleManager_C_ReceiveBattleRewards");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, BattleRewards) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::BattleRewards' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, local_lootContext) == 0x000018, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::local_lootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_GetInventoryManager_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_OffsetLootContext_OffsetLootContext) == 0x000048, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_OffsetLootContext_OffsetLootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_AddItemToInventory_GeneratedItem) == 0x000050, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_AddItemToInventory_GeneratedItem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, CallFunc_GetInventoryManager_ReturnValue_1) == 0x000060, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::CallFunc_GetInventoryManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveBattleRewards, K2Node_MakeStruct_S_LootContext) == 0x000068, "Member 'AC_jRPG_BattleManager_C_ReceiveBattleRewards::K2Node_MakeStruct_S_LootContext' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_BattleManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ReceiveTick) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_ReceiveTick");
static_assert(sizeof(AC_jRPG_BattleManager_C_ReceiveTick) == 0x000004, "Wrong size on AC_jRPG_BattleManager_C_ReceiveTick");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RegisterBattleListener
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_RegisterBattleListener final
{
public:
	TScriptInterface<class IBPI_BattleListener_C> NewListener;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RegisterBattleListener) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_RegisterBattleListener");
static_assert(sizeof(AC_jRPG_BattleManager_C_RegisterBattleListener) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_RegisterBattleListener");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterBattleListener, NewListener) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RegisterBattleListener::NewListener' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterBattleListener, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_RegisterBattleListener::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RegisterPendingResurrect
// 0x0090 (0x0090 - 0x0000)
struct AC_jRPG_BattleManager_C_RegisterPendingResurrect final
{
public:
	const class UAC_jRPG_CharacterBattleStats_C*  CharacterStats;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RegisterPendingResurrect) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_RegisterPendingResurrect");
static_assert(sizeof(AC_jRPG_BattleManager_C_RegisterPendingResurrect) == 0x000090, "Wrong size on AC_jRPG_BattleManager_C_RegisterPendingResurrect");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterPendingResurrect, CharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RegisterPendingResurrect::CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterPendingResurrect, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_RegisterPendingResurrect::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterPendingResurrect, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_RegisterPendingResurrect::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterPendingResurrect, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_RegisterPendingResurrect::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterPendingResurrect, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AC_jRPG_BattleManager_C_RegisterPendingResurrect::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterPendingResurrect, K2Node_MakeArray_Array) == 0x000070, "Member 'AC_jRPG_BattleManager_C_RegisterPendingResurrect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RegisterPendingResurrect, CallFunc_Format_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_RegisterPendingResurrect::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ReintegrateCharacterToBattle
// 0x0068 (0x0068 - 0x0000)
struct AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle final
{
public:
	struct FGuid                                  KickedCharacterHandle;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       RespawnedCharacter;                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetKickedCharacterStateFromHandle_Success; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFBattleCharacterStoredState           CallFunc_GetKickedCharacterStateFromHandle_CharacterState; // 0x0020(0x0038)(HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_SpawnCharacterFromStoredState_SpawnedCharacter; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle) == 0x000068, "Wrong size on AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle, KickedCharacterHandle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle::KickedCharacterHandle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle, RespawnedCharacter) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle::RespawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle, CallFunc_GetKickedCharacterStateFromHandle_Success) == 0x000018, "Member 'AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle::CallFunc_GetKickedCharacterStateFromHandle_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle, CallFunc_GetKickedCharacterStateFromHandle_CharacterState) == 0x000020, "Member 'AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle::CallFunc_GetKickedCharacterStateFromHandle_CharacterState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle, CallFunc_SpawnCharacterFromStoredState_SpawnedCharacter) == 0x000058, "Member 'AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle::CallFunc_SpawnCharacterFromStoredState_SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle, CallFunc_Map_Remove_ReturnValue) == 0x000060, "Member 'AC_jRPG_BattleManager_C_ReintegrateCharacterToBattle::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RemoveBattleScreenHUD
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_RemoveBattleScreenHUD final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RemoveBattleScreenHUD) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_RemoveBattleScreenHUD");
static_assert(sizeof(AC_jRPG_BattleManager_C_RemoveBattleScreenHUD) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_RemoveBattleScreenHUD");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveBattleScreenHUD, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RemoveBattleScreenHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RemoveGlobalDodgeWindowModifier
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_RemoveGlobalDodgeWindowModifier final
{
public:
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RemoveGlobalDodgeWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_RemoveGlobalDodgeWindowModifier");
static_assert(sizeof(AC_jRPG_BattleManager_C_RemoveGlobalDodgeWindowModifier) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_RemoveGlobalDodgeWindowModifier");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveGlobalDodgeWindowModifier, OutModifierHandle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RemoveGlobalDodgeWindowModifier::OutModifierHandle' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RemoveGlobalParryWindowModifier
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_RemoveGlobalParryWindowModifier final
{
public:
	struct FSF_ModifierStackEntryHandle           OutModifierHandle;                                 // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RemoveGlobalParryWindowModifier) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_RemoveGlobalParryWindowModifier");
static_assert(sizeof(AC_jRPG_BattleManager_C_RemoveGlobalParryWindowModifier) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_RemoveGlobalParryWindowModifier");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveGlobalParryWindowModifier, OutModifierHandle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RemoveGlobalParryWindowModifier::OutModifierHandle' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RemoveInvalidKickedCharacterStateHandles
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles final
{
public:
	TArray<struct FGuid>                          KickedCharacterHandles;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Array_Get_Item;                           // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsKickedCharacterStateHandleValid_Success; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FGuid>                          Temp_wildcard_Temp_buffer_array_Variable;          // 0x0048(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles");
static_assert(sizeof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles) == 0x000060, "Wrong size on AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, KickedCharacterHandles) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::KickedCharacterHandles' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, Temp_int_Array_Index_Variable) == 0x000014, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, CallFunc_Array_Get_Item) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, CallFunc_IsKickedCharacterStateHandleValid_Success) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::CallFunc_IsKickedCharacterStateHandleValid_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000038, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, Temp_wildcard_Temp_buffer_array_Variable) == 0x000048, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_RemoveInvalidKickedCharacterStateHandles::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RequestActionExecution
// 0x0050 (0x0050 - 0x0000)
struct AC_jRPG_BattleManager_C_RequestActionExecution final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedCharacters;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedCharactersLOCAL;                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RequestActionExecution) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_RequestActionExecution");
static_assert(sizeof(AC_jRPG_BattleManager_C_RequestActionExecution) == 0x000050, "Wrong size on AC_jRPG_BattleManager_C_RequestActionExecution");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, TargetedCharacters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::TargetedCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, TargetedCharactersLOCAL) == 0x000010, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::TargetedCharactersLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, Temp_int_Array_Index_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, CallFunc_GetTargetingManager_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RequestActionExecution, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'AC_jRPG_BattleManager_C_RequestActionExecution::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ResetGlobalTimeDilationForBattle
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_ResetGlobalTimeDilationForBattle final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ResetGlobalTimeDilationForBattle) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ResetGlobalTimeDilationForBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_ResetGlobalTimeDilationForBattle) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_ResetGlobalTimeDilationForBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResetGlobalTimeDilationForBattle, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ResetGlobalTimeDilationForBattle::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ResetInterceptions
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_ResetInterceptions final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ResetInterceptions) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ResetInterceptions");
static_assert(sizeof(AC_jRPG_BattleManager_C_ResetInterceptions) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_ResetInterceptions");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResetInterceptions, LatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ResetInterceptions::LatentAction' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ResumeAudioFromBattle
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_BattleManager_C_ResumeAudioFromBattle final
{
public:
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractiveMusicSystem_C*           CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractiveMusicSystem_C*           CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem_1; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusicParameters          K2Node_MakeStruct_S_InteractiveMusicParameters;    // 0x0018(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_World_Audio_Component_C*            CallFunc_GetWorldAudioComponent_WorldAudioComponent; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateRangedAmbienceParameters_IsValid; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ResumeAudioFromBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle) == 0x000040, "Wrong size on AC_jRPG_BattleManager_C_ResumeAudioFromBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle, CallFunc_GetCustomGI_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ResumeAudioFromBattle::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle, CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem) == 0x000008, "Member 'AC_jRPG_BattleManager_C_ResumeAudioFromBattle::CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle, CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem_1) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ResumeAudioFromBattle::CallFunc_GetInteractiveMusicSystem_InteractiveMusicSystem_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle, K2Node_MakeStruct_S_InteractiveMusicParameters) == 0x000018, "Member 'AC_jRPG_BattleManager_C_ResumeAudioFromBattle::K2Node_MakeStruct_S_InteractiveMusicParameters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle, CallFunc_GetWorldAudioComponent_WorldAudioComponent) == 0x000030, "Member 'AC_jRPG_BattleManager_C_ResumeAudioFromBattle::CallFunc_GetWorldAudioComponent_WorldAudioComponent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle, CallFunc_ValidateRangedAmbienceParameters_IsValid) == 0x000038, "Member 'AC_jRPG_BattleManager_C_ResumeAudioFromBattle::CallFunc_ValidateRangedAmbienceParameters_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ResumeAudioFromBattle, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000039, "Member 'AC_jRPG_BattleManager_C_ResumeAudioFromBattle::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.RollBattleRewards
// 0x0590 (0x0590 - 0x0000)
struct AC_jRPG_BattleManager_C_RollBattleRewards final
{
public:
	struct FS_BattleRewards                       BattleRewards;                                     // 0x0000(0x0018)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_LootContext                         local_lootContext;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FS_RolledLootEntry>  local_rolledLootEntries;                           // 0x0020(0x0050)(Edit, BlueprintVisible)
	struct FS_EnemyScalingDataLevel               local_currentEnemyScaling;                         // 0x0070(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, int32>                      local_itemsToLoot;                                 // 0x00A8(0x0050)(Edit, BlueprintVisible)
	int32                                         local_GoldAcquired;                                // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_ExperienceGained;                            // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         K2Node_MakeStruct_S_LootContext;                   // 0x0124(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_RolledLootEntry>             CallFunc_Map_Values_Values;                        // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_Was_Battle_No_Damage_ReturnValue;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0150(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         K2Node_MakeStruct_S_LootContext_1;                 // 0x0168(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0180(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0190(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetEnemyDataTableRow_Found;               // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetEnemyDataTableRow_EnemyData;           // 0x01E0(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_DataAsset_EnemyBattleArchetype_C*   CallFunc_GetEnemyArchetypeAsset_ReturnValue;       // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_Loot                                CallFunc_Array_Get_Item_1;                         // 0x0408(0x0028)(NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetArchetypeScalingDataTableForBattle_ReturnValue; // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_LootSystemComponent_C*              CallFunc_GetLootSystem_ReturnValue;                // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_LootTableEntry>              CallFunc_RollLootTableReferences_RolledLootEntries; // 0x0470(0x0010)(ReferenceParm)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x3];                                      // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootTableEntry                      CallFunc_Array_Get_Item_2;                         // 0x04A4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0500(0x0010)(ReferenceParm)
	struct FS_EnemyScalingDataLevel               CallFunc_FindArchetypeEncounterLevelRow_ScalingDataLevel; // 0x0510(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleRewards                       K2Node_MakeStruct_S_BattleRewards;                 // 0x0568(0x0018)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomBoolWithWeight_Weight_ImplicitCast; // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_RollBattleRewards) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_RollBattleRewards");
static_assert(sizeof(AC_jRPG_BattleManager_C_RollBattleRewards) == 0x000590, "Wrong size on AC_jRPG_BattleManager_C_RollBattleRewards");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, BattleRewards) == 0x000000, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::BattleRewards' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, local_lootContext) == 0x000018, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::local_lootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, local_rolledLootEntries) == 0x000020, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::local_rolledLootEntries' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, local_currentEnemyScaling) == 0x000070, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::local_currentEnemyScaling' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, local_itemsToLoot) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::local_itemsToLoot' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, local_GoldAcquired) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::local_GoldAcquired' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, local_ExperienceGained) == 0x0000FC, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::local_ExperienceGained' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Loop_Counter_Variable) == 0x000100, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Loop_Counter_Variable_1) == 0x000104, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Array_Index_Variable) == 0x000110, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Array_Index_Variable_1) == 0x000114, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Loop_Counter_Variable_2) == 0x000118, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Add_IntInt_ReturnValue_2) == 0x00011C, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Array_Index_Variable_2) == 0x000120, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, K2Node_MakeStruct_S_LootContext) == 0x000124, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::K2Node_MakeStruct_S_LootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Map_Values_Values) == 0x000128, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Was_Battle_No_Damage_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Was_Battle_No_Damage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Not_PreBool_ReturnValue) == 0x000148, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_wildcard_Variable) == 0x000150, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Get_Item) == 0x000160, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, K2Node_MakeStruct_S_LootContext_1) == 0x000168, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::K2Node_MakeStruct_S_LootContext_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_GetDisplayName_ReturnValue) == 0x000170, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Conv_StringToText_ReturnValue) == 0x000180, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, K2Node_MakeStruct_FormatArgumentData) == 0x000190, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_GetEnemyDataTableRow_Found) == 0x0001D8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_GetEnemyDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_GetEnemyDataTableRow_EnemyData) == 0x0001E0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_GetEnemyDataTableRow_EnemyData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, K2Node_MakeArray_Array) == 0x0003E0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Format_ReturnValue) == 0x0003F0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_GetEnemyArchetypeAsset_ReturnValue) == 0x000400, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_GetEnemyArchetypeAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Get_Item_1) == 0x000408, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_GetArchetypeScalingDataTableForBattle_ReturnValue) == 0x000430, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_GetArchetypeScalingDataTableForBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000438, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000440, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Length_ReturnValue) == 0x000444, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000448, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Length_ReturnValue_1) == 0x00044C, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Less_IntInt_ReturnValue_1) == 0x000450, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_GetDataTableRowFromName_OutRow) == 0x000458, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_GetLootSystem_ReturnValue) == 0x000460, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_GetLootSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000468, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_RollLootTableReferences_RolledLootEntries) == 0x000470, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_RollLootTableReferences_RolledLootEntries' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_SelectFloat_ReturnValue) == 0x000480, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Length_ReturnValue_2) == 0x000488, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000490, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Less_IntInt_ReturnValue_2) == 0x000498, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Round_ReturnValue) == 0x00049C, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Array_Index_Variable_3) == 0x0004A0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Get_Item_2) == 0x0004A4, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0004B8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0004C0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0004C8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0004D0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0004D8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_FCeil_ReturnValue) == 0x0004E0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0004E8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Max_ReturnValue) == 0x0004F0, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_FCeil_ReturnValue_1) == 0x0004F4, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Max_ReturnValue_1) == 0x0004F8, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Map_Keys_Keys) == 0x000500, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_FindArchetypeEncounterLevelRow_ScalingDataLevel) == 0x000510, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_FindArchetypeEncounterLevelRow_ScalingDataLevel' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Get_Item_3) == 0x000548, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Map_Find_Value) == 0x000550, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Map_Find_ReturnValue) == 0x000554, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Array_Length_ReturnValue_3) == 0x000558, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, Temp_int_Loop_Counter_Variable_3) == 0x00055C, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Less_IntInt_ReturnValue_3) == 0x000560, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Add_IntInt_ReturnValue_3) == 0x000564, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, K2Node_MakeStruct_S_BattleRewards) == 0x000568, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::K2Node_MakeStruct_S_BattleRewards' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Add_IntInt_ReturnValue_4) == 0x000580, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_Add_IntInt_ReturnValue_5) == 0x000584, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_RollBattleRewards, CallFunc_RandomBoolWithWeight_Weight_ImplicitCast) == 0x000588, "Member 'AC_jRPG_BattleManager_C_RollBattleRewards::CallFunc_RandomBoolWithWeight_Weight_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_AddAP
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_AddAP final
{
public:
	class FString                                 Character;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_AddAP) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_AddAP");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_AddAP) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_AddAP");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_AddAP, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_AddAP::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_AddAP, Amount) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Sandfall_AddAP::Amount' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_ApplyBuffToAllEnemies
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAllEnemies final
{
public:
	class FString                                 BuffBPClass;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAllEnemies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAllEnemies");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAllEnemies) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAllEnemies");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAllEnemies, BuffBPClass) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAllEnemies::BuffBPClass' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_ApplyBuffToAlly
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly final
{
public:
	class FString                                 AllyName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 BuffBPClass;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly, AllyName) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly::AllyName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly, BuffBPClass) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Sandfall_ApplyBuffToAlly::BuffBPClass' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_ApplyShieldToEnemies
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_ApplyShieldToEnemies final
{
public:
	int32                                         ShieldAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_ApplyShieldToEnemies) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_ApplyShieldToEnemies");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_ApplyShieldToEnemies) == 0x000004, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_ApplyShieldToEnemies");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_ApplyShieldToEnemies, ShieldAmount) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_ApplyShieldToEnemies::ShieldAmount' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_ChangePerfection
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_ChangePerfection final
{
public:
	class FString                                 CharacterId;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         PerfectionChange;                                  // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_ChangePerfection) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_ChangePerfection");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_ChangePerfection) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_ChangePerfection");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_ChangePerfection, CharacterId) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_ChangePerfection::CharacterId' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_ChangePerfection, PerfectionChange) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Sandfall_ChangePerfection::PerfectionChange' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_DamageCharacter 
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_DamageCharacter_ final
{
public:
	class FString                                 CharacterName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_DamageCharacter_) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_DamageCharacter_");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_DamageCharacter_) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_DamageCharacter_");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_DamageCharacter_, CharacterName) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_DamageCharacter_::CharacterName' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_DamageEnemies
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_DamageEnemies final
{
public:
	double                                        Damages;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_DamageEnemies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_DamageEnemies");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_DamageEnemies) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_DamageEnemies");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_DamageEnemies, Damages) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_DamageEnemies::Damages' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_HeroesIgnoreDamage
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_HeroesIgnoreDamage final
{
public:
	bool                                          Ignore;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_HeroesIgnoreDamage) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_HeroesIgnoreDamage");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_HeroesIgnoreDamage) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_HeroesIgnoreDamage");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_HeroesIgnoreDamage, Ignore) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_HeroesIgnoreDamage::Ignore' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_KillCharacter
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_KillCharacter final
{
public:
	class FString                                 CharacterName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_KillCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_KillCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_KillCharacter) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_KillCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_KillCharacter, CharacterName) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_KillCharacter::CharacterName' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_KillCharacterByObject
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        Source;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject, Target) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject::Target' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject, Source) == 0x000008, "Member 'AC_jRPG_BattleManager_C_Sandfall_KillCharacterByObject::Source' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_SetAllAlliesAP
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesAP final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesAP) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesAP");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesAP) == 0x000004, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesAP");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesAP, Amount) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesAP::Amount' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_SetAllAlliesHP
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesHP final
{
public:
	int32                                         HP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesHP) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesHP");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesHP) == 0x000004, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesHP");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesHP, HP) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_SetAllAlliesHP::HP' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Sandfall_SetAllEnemiesHP
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_BattleManager_C_Sandfall_SetAllEnemiesHP final
{
public:
	int32                                         NewHPValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Sandfall_SetAllEnemiesHP) == 0x000004, "Wrong alignment on AC_jRPG_BattleManager_C_Sandfall_SetAllEnemiesHP");
static_assert(sizeof(AC_jRPG_BattleManager_C_Sandfall_SetAllEnemiesHP) == 0x000004, "Wrong size on AC_jRPG_BattleManager_C_Sandfall_SetAllEnemiesHP");
static_assert(offsetof(AC_jRPG_BattleManager_C_Sandfall_SetAllEnemiesHP, NewHPValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Sandfall_SetAllEnemiesHP::NewHPValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SelectAction
// 0x00D8 (0x00D8 - 0x0000)
struct AC_jRPG_BattleManager_C_SelectAction final
{
public:
	E_jRPG_ActionType                             ActionType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotIndexLOCAL;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_jRPG_Item_DynamicData>       CallFunc_GetAllItemsUsableInBattle_UsableItem;     // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SelectAction) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SelectAction");
static_assert(sizeof(AC_jRPG_BattleManager_C_SelectAction) == 0x0000D8, "Wrong size on AC_jRPG_BattleManager_C_SelectAction");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, ActionType) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SelectAction::ActionType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, SlotIndexLOCAL) == 0x000004, "Member 'AC_jRPG_BattleManager_C_SelectAction::SlotIndexLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SelectAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'AC_jRPG_BattleManager_C_SelectAction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, K2Node_MakeArray_Array) == 0x000078, "Member 'AC_jRPG_BattleManager_C_SelectAction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_Format_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_GetOwner_ReturnValue_1) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectAction, CallFunc_GetAllItemsUsableInBattle_UsableItem) == 0x0000C8, "Member 'AC_jRPG_BattleManager_C_SelectAction::CallFunc_GetAllItemsUsableInBattle_UsableItem' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SelectSecondaryAction
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_BattleManager_C_SelectSecondaryAction final
{
public:
	class FName                                   SelectedSecondaryAction_0;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SelectSecondaryAction) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SelectSecondaryAction");
static_assert(sizeof(AC_jRPG_BattleManager_C_SelectSecondaryAction) == 0x000028, "Wrong size on AC_jRPG_BattleManager_C_SelectSecondaryAction");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectSecondaryAction, SelectedSecondaryAction_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SelectSecondaryAction::SelectedSecondaryAction_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectSecondaryAction, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SelectSecondaryAction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectSecondaryAction, CallFunc_NotEqual_NameName_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SelectSecondaryAction::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectSecondaryAction, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SelectSecondaryAction::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SelectSecondaryAction, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SelectSecondaryAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetBattleInputEnabled
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_BattleManager_C_SetBattleInputEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetBattleInputEnabled) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_SetBattleInputEnabled");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetBattleInputEnabled) == 0x000002, "Wrong size on AC_jRPG_BattleManager_C_SetBattleInputEnabled");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetBattleInputEnabled, Enabled) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetBattleInputEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetBattleInputEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_SetBattleInputEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetBattleMapInternal
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_SetBattleMapInternal final
{
public:
	class ABP_BattleMap_C*                        BattleMapActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetBattleMapInternal) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SetBattleMapInternal");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetBattleMapInternal) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_SetBattleMapInternal");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetBattleMapInternal, BattleMapActor) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetBattleMapInternal::BattleMapActor' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetBattleMapInternal, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SetBattleMapInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetBattleMapInternal, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'AC_jRPG_BattleManager_C_SetBattleMapInternal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetCurrentCharacter
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_SetCurrentCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CurrentCharacter_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetCurrentCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SetCurrentCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetCurrentCharacter) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_SetCurrentCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetCurrentCharacter, CurrentCharacter_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetCurrentCharacter::CurrentCharacter_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetCurrentCharacter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SetCurrentCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetCurrentCharacter, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000009, "Member 'AC_jRPG_BattleManager_C_SetCurrentCharacter::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetDebugFlowState
// 0x0088 (0x0088 - 0x0000)
struct AC_jRPG_BattleManager_C_SetDebugFlowState final
{
public:
	class FString                                 StateName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetDebugFlowState) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SetDebugFlowState");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetDebugFlowState) == 0x000088, "Wrong size on AC_jRPG_BattleManager_C_SetDebugFlowState");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetDebugFlowState, StateName) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetDebugFlowState::StateName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetDebugFlowState, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SetDebugFlowState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetDebugFlowState, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SetDebugFlowState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetDebugFlowState, K2Node_MakeArray_Array) == 0x000068, "Member 'AC_jRPG_BattleManager_C_SetDebugFlowState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetDebugFlowState, CallFunc_Format_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_SetDebugFlowState::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetDefenseState
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_SetDefenseState final
{
public:
	bool                                          WantedDefense_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetDefenseState) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_SetDefenseState");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetDefenseState) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_SetDefenseState");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetDefenseState, WantedDefense_0) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetDefenseState::WantedDefense_0' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetInputMappingContextEnabled
// 0x0048 (0x0048 - 0x0000)
struct AC_jRPG_BattleManager_C_SetInputMappingContextEnabled final
{
public:
	bool                                          bIsEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UInputMappingContext*             MappingContext;                                    // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  K2Node_MakeStruct_ModifyContextOptions;            // 0x0010(0x0001)(NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddMappingContext_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_RemoveMappingContext_self_CastInput; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SetInputMappingContextEnabled");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled) == 0x000048, "Wrong size on AC_jRPG_BattleManager_C_SetInputMappingContextEnabled");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled, bIsEnabled) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetInputMappingContextEnabled::bIsEnabled' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled, MappingContext) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SetInputMappingContextEnabled::MappingContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled, K2Node_MakeStruct_ModifyContextOptions) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SetInputMappingContextEnabled::K2Node_MakeStruct_ModifyContextOptions' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SetInputMappingContextEnabled::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SetInputMappingContextEnabled::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled, CallFunc_AddMappingContext_self_CastInput) == 0x000028, "Member 'AC_jRPG_BattleManager_C_SetInputMappingContextEnabled::CallFunc_AddMappingContext_self_CastInput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetInputMappingContextEnabled, CallFunc_RemoveMappingContext_self_CastInput) == 0x000038, "Member 'AC_jRPG_BattleManager_C_SetInputMappingContextEnabled::CallFunc_RemoveMappingContext_self_CastInput' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetIsSkipImpossible
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_SetIsSkipImpossible final
{
public:
	bool                                          IsSkipImpossible;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetIsSkipImpossible) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_SetIsSkipImpossible");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetIsSkipImpossible) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_SetIsSkipImpossible");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetIsSkipImpossible, IsSkipImpossible) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetIsSkipImpossible::IsSkipImpossible' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetLastFatalDamageReceivedReason
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_SetLastFatalDamageReceivedReason final
{
public:
	EDamageReason                                 LastDamageReceivedReason;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetLastFatalDamageReceivedReason) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_SetLastFatalDamageReceivedReason");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetLastFatalDamageReceivedReason) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_SetLastFatalDamageReceivedReason");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetLastFatalDamageReceivedReason, LastDamageReceivedReason) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetLastFatalDamageReceivedReason::LastDamageReceivedReason' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SetupBattleMap
// 0x0138 (0x0138 - 0x0000)
struct AC_jRPG_BattleManager_C_SetupBattleMap final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorLocalRotation_SweepHitResult;  // 0x0038(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SetupBattleMap) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SetupBattleMap");
static_assert(sizeof(AC_jRPG_BattleManager_C_SetupBattleMap) == 0x000138, "Wrong size on AC_jRPG_BattleManager_C_SetupBattleMap");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetupBattleMap, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SetupBattleMap::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetupBattleMap, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SetupBattleMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetupBattleMap, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SetupBattleMap::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetupBattleMap, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SetupBattleMap::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetupBattleMap, CallFunc_MakeRotator_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SetupBattleMap::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetupBattleMap, CallFunc_K2_AddActorLocalRotation_SweepHitResult) == 0x000038, "Member 'AC_jRPG_BattleManager_C_SetupBattleMap::CallFunc_K2_AddActorLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SetupBattleMap, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000130, "Member 'AC_jRPG_BattleManager_C_SetupBattleMap::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ShouldQueueRevive
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_ShouldQueueRevive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ShouldQueueRevive) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_ShouldQueueRevive");
static_assert(sizeof(AC_jRPG_BattleManager_C_ShouldQueueRevive) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_ShouldQueueRevive");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShouldQueueRevive, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ShouldQueueRevive::ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ShouldUpdateCharacterDataWithFinalBattleState
// 0x0002 (0x0002 - 0x0000)
struct AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState");
static_assert(sizeof(AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState) == 0x000002, "Wrong size on AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AC_jRPG_BattleManager_C_ShouldUpdateCharacterDataWithFinalBattleState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ShowBattleMenuTooltip
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_ShowBattleMenuTooltip final
{
public:
	class FText                                   TooltipName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   TooltipDesc;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ShowBattleMenuTooltip) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ShowBattleMenuTooltip");
static_assert(sizeof(AC_jRPG_BattleManager_C_ShowBattleMenuTooltip) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_ShowBattleMenuTooltip");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowBattleMenuTooltip, TooltipName) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ShowBattleMenuTooltip::TooltipName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowBattleMenuTooltip, TooltipDesc) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ShowBattleMenuTooltip::TooltipDesc' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ShowBattleTooltip
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_ShowBattleTooltip final
{
public:
	class FText                                   ToolTipText;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          AutoFadeout;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ShowBattleTooltip) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ShowBattleTooltip");
static_assert(sizeof(AC_jRPG_BattleManager_C_ShowBattleTooltip) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_ShowBattleTooltip");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowBattleTooltip, ToolTipText) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ShowBattleTooltip::ToolTipText' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowBattleTooltip, AutoFadeout) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ShowBattleTooltip::AutoFadeout' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowBattleTooltip, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000011, "Member 'AC_jRPG_BattleManager_C_ShowBattleTooltip::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowBattleTooltip, CallFunc_GetBoolCVar_ReturnValue) == 0x000012, "Member 'AC_jRPG_BattleManager_C_ShowBattleTooltip::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ShowSkillTooltip
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_ShowSkillTooltip final
{
public:
	class FText                                   TooltipName;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   TooltipDesc;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_ShowSkillTooltip) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ShowSkillTooltip");
static_assert(sizeof(AC_jRPG_BattleManager_C_ShowSkillTooltip) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_ShowSkillTooltip");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowSkillTooltip, TooltipName) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ShowSkillTooltip::TooltipName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ShowSkillTooltip, TooltipDesc) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ShowSkillTooltip::TooltipDesc' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Spawn Player Character
// 0x0720 (0x0720 - 0x0000)
struct AC_jRPG_BattleManager_C_Spawn_Player_Character final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         BattleSpotIndex;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          FormationType;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       SpawnedCharacter;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 local_class;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         local_battleSpotIndex;                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       local_SpawnedCharacter;                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    local_SpawnedCharacterData;                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Skill_C*>          Temp_wildcard_Variable;                            // 0x0108(0x0010)(ReferenceParm)
	class UBP_DataAsset_Skill_C*                  CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script;  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetBaseFilename_ReturnValue;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0170(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0180(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01E8(0x0048)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetBattleSoftClass_CharacterActorSoftClass; // 0x0230(0x0028)(HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_1; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1; // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetBaseFilename_ReturnValue_1;            // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0298(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02A8(0x0048)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform; // 0x02F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType; // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0358(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0368(0x0010)()
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0378(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base_1; // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsClassLoaded_ReturnValue;                // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A[0x6];                                      // 0x048A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllActorsOfClass_OutActors;          // 0x04A0(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetPlayerCharacterAtBattleSpot_Character; // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x04D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x04E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0528(0x0010)(ReferenceParm)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0540(0x0010)()
	TArray<class UBP_DataAsset_Skill_C*>          CallFunc_GetAllAvailableEquippedSkills_ReturnValue; // 0x0550(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0560(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_579[0x3];                                      // 0x0579(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCharacterBattleAudioProfile          CallFunc_GetBattleAudioProfile_BattleAudioProfile; // 0x0580(0x00D0)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x0650(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0660(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x06A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x06B8(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x06CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CE[0x2];                                      // 0x06CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_4;                          // 0x06D0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1[0x3];                                      // 0x06E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x06F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0710(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x3];                                      // 0x0719(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Spawn_Player_Character) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_Spawn_Player_Character");
static_assert(sizeof(AC_jRPG_BattleManager_C_Spawn_Player_Character) == 0x000720, "Wrong size on AC_jRPG_BattleManager_C_Spawn_Player_Character");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CharacterData) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, BattleSpotIndex) == 0x000008, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::BattleSpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, FormationType) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::FormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, SpawnedCharacter) == 0x000010, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, local_class) == 0x000018, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::local_class' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, local_battleSpotIndex) == 0x000020, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::local_battleSpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, local_SpawnedCharacter) == 0x000028, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::local_SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, local_SpawnedCharacterData) == 0x000030, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::local_SpawnedCharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_NameToText_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, Temp_int_Array_Index_Variable) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeArray_Array) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, Temp_wildcard_Variable) == 0x000108, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Get_Item) == 0x000118, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsValid_ReturnValue) == 0x000124, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000128, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script) == 0x000130, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_ClassDynamicCast_AsBP_Battle_Skill_Script' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_ClassDynamicCast_bSuccess) == 0x000138, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsValidClass_ReturnValue) == 0x000150, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetBaseFilename_ReturnValue) == 0x000158, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetBaseFilename_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000168, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_StringToText_ReturnValue) == 0x000170, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeStruct_FormatArgumentData_2) == 0x000180, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetClassDisplayName_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001D8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetBattleSoftClass_CharacterActorSoftClass) == 0x000230, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetBattleSoftClass_CharacterActorSoftClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_1) == 0x000258, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000260, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000268, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_ClassDynamicCast_bSuccess_1) == 0x000270, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsValidClass_ReturnValue_1) == 0x000271, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1) == 0x000278, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetBaseFilename_ReturnValue_1) == 0x000288, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetBaseFilename_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000298, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002A8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform) == 0x0002F0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType) == 0x000350, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeArray_Array_1) == 0x000358, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Format_ReturnValue_1) == 0x000368, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000378, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000470, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000478, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base_1) == 0x000480, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_ClassDynamicCast_bSuccess_2) == 0x000488, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsClassLoaded_ReturnValue) == 0x000489, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsClassLoaded_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000490, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_FinishSpawningActor_ReturnValue) == 0x000498, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetAllActorsOfClass_OutActors) == 0x0004A0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Get_Item_1) == 0x0004B0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Length_ReturnValue_1) == 0x0004B8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Greater_IntInt_ReturnValue) == 0x0004BC, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetPlayerCharacterAtBattleSpot_Character) == 0x0004C0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetPlayerCharacterAtBattleSpot_Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsValid_ReturnValue_1) == 0x0004C8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0004D0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeStruct_FormatArgumentData_5) == 0x0004E0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeArray_Array_2) == 0x000528, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetCharacterByID_CharacterData) == 0x000538, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Format_ReturnValue_2) == 0x000540, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetAllAvailableEquippedSkills_ReturnValue) == 0x000550, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetAllAvailableEquippedSkills_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000560, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Length_ReturnValue_2) == 0x000570, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Add_IntInt_ReturnValue) == 0x000574, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Less_IntInt_ReturnValue) == 0x000578, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Percent_IntInt_ReturnValue) == 0x00057C, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetBattleAudioProfile_BattleAudioProfile) == 0x000580, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetBattleAudioProfile_BattleAudioProfile' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Conv_NameToText_ReturnValue_2) == 0x000650, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeStruct_FormatArgumentData_6) == 0x000660, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeArray_Array_3) == 0x0006A8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Format_ReturnValue_3) == 0x0006B8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Add_ReturnValue) == 0x0006C8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsValid_ReturnValue_2) == 0x0006CC, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0006CD, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, K2Node_MakeArray_Array_4) == 0x0006D0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_IsValid_ReturnValue_3) == 0x0006E0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, Temp_int_Loop_Counter_Variable) == 0x0006E4, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Less_IntInt_ReturnValue_1) == 0x0006E8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Add_IntInt_ReturnValue_1) == 0x0006EC, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetOwner_ReturnValue) == 0x0006F0, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetComponentByClass_ReturnValue) == 0x0006F8, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetOwner_ReturnValue_1) == 0x000700, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Contains_ReturnValue) == 0x000708, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000710, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_BooleanAND_ReturnValue) == 0x000718, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Spawn_Player_Character, CallFunc_Array_Add_ReturnValue_1) == 0x00071C, "Member 'AC_jRPG_BattleManager_C_Spawn_Player_Character::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnAllCharacters
// 0x01A0 (0x01A0 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnAllCharacters final
{
public:
	struct FTransform                             CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform; // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetPlayerCharacterAtBattleSpot_Character; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterBattle_Dummy_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnAllCharacters) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnAllCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnAllCharacters) == 0x0001A0, "Wrong size on AC_jRPG_BattleManager_C_SpawnAllCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType) == 0x000060, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_GetPlayerCharacterAtBattleSpot_Character) == 0x000068, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_GetPlayerCharacterAtBattleSpot_Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakTransform_Location) == 0x000070, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakVector_X) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakVector_Y) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakVector_Z) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakVector_X_1) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakVector_Y_1) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BreakVector_Z_1) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_MakeVector_ReturnValue) == 0x000100, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000180, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_FinishSpawningActor_ReturnValue) == 0x000188, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_Not_PreBool_ReturnValue) == 0x000190, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnAllCharacters, CallFunc_Not_PreBool_ReturnValue_1) == 0x000191, "Member 'AC_jRPG_BattleManager_C_SpawnAllCharacters::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnBattleSequence
// 0x0180 (0x0180 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnBattleSequence final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetCharacters;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          SnapOnTarget;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTargetAsOrigin;                                 // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTargetOrientation;                              // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtTarget;                                      // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtAttacker;                                    // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableSequenceSnapping;                           // 0x0025(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EpicBattleSequenceActor_C*          EpicSequence;                                      // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             AttackerFirstPosition;                             // 0x0030(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0048)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_EpicBattleSequenceActor_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnBattleSequence) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnBattleSequence");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnBattleSequence) == 0x000180, "Wrong size on AC_jRPG_BattleManager_C_SpawnBattleSequence");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, LevelSequence) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::LevelSequence' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, SourceCharacter) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::SourceCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, TargetCharacters) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::TargetCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, SnapOnTarget) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::SnapOnTarget' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, UseTargetAsOrigin) == 0x000021, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::UseTargetAsOrigin' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, UseTargetOrientation) == 0x000022, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::UseTargetOrientation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, LookAtTarget) == 0x000023, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::LookAtTarget' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, LookAtAttacker) == 0x000024, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::LookAtAttacker' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, DisableSequenceSnapping) == 0x000025, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::DisableSequenceSnapping' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, EpicSequence) == 0x000028, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::EpicSequence' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, AttackerFirstPosition) == 0x000030, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::AttackerFirstPosition' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000098, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, K2Node_MakeArray_Array) == 0x000150, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000160, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, CallFunc_Format_ReturnValue) == 0x000168, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnBattleSequence, CallFunc_FinishSpawningActor_ReturnValue) == 0x000178, "Member 'AC_jRPG_BattleManager_C_SpawnBattleSequence::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnCharacterFromStoredState
// 0x0098 (0x0098 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState final
{
public:
	struct FFBattleCharacterStoredState           StoredState;                                       // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       SpawnedCharacter;                                  // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isDead;                                      // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       local_respawnedCharacter;                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_SpawnEnemyOnSpot_SpawnedEnemy;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation;    // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Spawn_Player_Character_SpawnedCharacter;  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState) == 0x000098, "Wrong size on AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, StoredState) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::StoredState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, SpawnedCharacter) == 0x000038, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, local_isDead) == 0x000040, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::local_isDead' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, local_respawnedCharacter) == 0x000048, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::local_respawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_SpawnEnemyOnSpot_SpawnedEnemy) == 0x000060, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_SpawnEnemyOnSpot_SpawnedEnemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation) == 0x000068, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_Array_RemoveItem_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_GetCharacterByID_CharacterData) == 0x000088, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState, CallFunc_Spawn_Player_Character_SpawnedCharacter) == 0x000090, "Member 'AC_jRPG_BattleManager_C_SpawnCharacterFromStoredState::CallFunc_Spawn_Player_Character_SpawnedCharacter' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnEnemies
// 0x0228 (0x0228 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnEnemies final
{
public:
	bool                                          local_battleContainsBoss;                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllEnemyCharacters_SortedBySpotIndex_AllEnemies; // 0x0068(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0048)(HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_SpawnEnemyOnSpot_SpawnedEnemy;            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation;    // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E[0x2];                                      // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_3;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0148(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0218(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnEnemies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnEnemies");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnEnemies) == 0x000228, "Wrong size on AC_jRPG_BattleManager_C_SpawnEnemies");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, local_battleContainsBoss) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::local_battleContainsBoss' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Loop_Counter_Variable_2) == 0x000014, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Loop_Counter_Variable_3) == 0x000030, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Get_Item) == 0x000040, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Not_PreBool_ReturnValue_1) == 0x000048, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Not_PreBool_ReturnValue_2) == 0x000051, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_BooleanAND_ReturnValue_1) == 0x000065, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_GetAllEnemyCharacters_SortedBySpotIndex_AllEnemies) == 0x000068, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_GetAllEnemyCharacters_SortedBySpotIndex_AllEnemies' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Length_ReturnValue_2) == 0x00008C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Less_IntInt_ReturnValue_2) == 0x000098, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000F1, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_SpawnEnemyOnSpot_SpawnedEnemy) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_SpawnEnemyOnSpot_SpawnedEnemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation) == 0x000100, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_SpawnEnemyOnSpot_EnemySpawnedLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Length_ReturnValue_3) == 0x000118, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Less_IntInt_ReturnValue_3) == 0x00011C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_BooleanAND_ReturnValue_2) == 0x00011D, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Get_Item_3) == 0x000120, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Array_Length_ReturnValue_4) == 0x000128, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_IsValid_ReturnValue) == 0x00012C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000130, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Not_PreBool_ReturnValue_3) == 0x000134, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Max_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_GetTimeSeconds_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Conv_NameToText_ReturnValue) == 0x000148, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, K2Node_MakeArray_Array) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, K2Node_MakeArray_Array_1) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Format_ReturnValue) == 0x000208, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemies, CallFunc_Format_ReturnValue_1) == 0x000218, "Member 'AC_jRPG_BattleManager_C_SpawnEnemies::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnEnemyOnSpot
// 0x0770 (0x0770 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnEnemyOnSpot final
{
public:
	int32                                         BattleSpotIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharacterHardcodedName;                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NotifyBattleStart;                                 // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       SpawnedEnemy;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EnemySpawnedLocation;                              // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_notifyBattleStart;                           // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_battleSpotIndex;                             // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       local_spawnedEnemy;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Enemy                          local_enemyData;                                   // 0x0040(0x0200)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0240(0x0010)()
	bool                                          CallFunc_GetEnemyDataTableRow_Found;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Enemy                          CallFunc_GetEnemyDataTableRow_EnemyData;           // 0x0258(0x0200)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0458(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x04A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x04B0(0x0010)()
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x04D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x04E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x04F8(0x0048)(HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0540(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_1;                              // 0x0541(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_542[0x6];                                      // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0550(0x0048)(HasGetValueTypeHash)
	uint8                                         Pad_598[0x8];                                      // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform; // 0x05A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType; // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_EnemyBattleArchetype_C*   CallFunc_GetEnemyArchetypeAsset_ReturnValue;       // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetArchetypeScalingDataTableForBattle_ReturnValue; // 0x0640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_StatType, double>                 CallFunc_ComputeCharacterStats_Stats;              // 0x0648(0x0050)()
	int32                                         CallFunc_ComputeCharacterStats_Chroma;             // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeCharacterStats_Experience;         // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Map_Find_Value;                           // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x06C0(0x0010)()
	double                                        CallFunc_Map_Find_Value_2;                         // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x06E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0728(0x0010)(ReferenceParm)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0740(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0760(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnEnemyOnSpot");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot) == 0x000770, "Wrong size on AC_jRPG_BattleManager_C_SpawnEnemyOnSpot");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, BattleSpotIndex) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::BattleSpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CharacterHardcodedName) == 0x000004, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CharacterHardcodedName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, NotifyBattleStart) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::NotifyBattleStart' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, SpawnedEnemy) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::SpawnedEnemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, EnemySpawnedLocation) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::EnemySpawnedLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, local_notifyBattleStart) == 0x000030, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::local_notifyBattleStart' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, local_battleSpotIndex) == 0x000034, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::local_battleSpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, local_spawnedEnemy) == 0x000038, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::local_spawnedEnemy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, local_enemyData) == 0x000040, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::local_enemyData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Conv_NameToText_ReturnValue) == 0x000240, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetEnemyDataTableRow_Found) == 0x000250, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetEnemyDataTableRow_Found' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetEnemyDataTableRow_EnemyData) == 0x000258, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetEnemyDataTableRow_EnemyData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_MakeStruct_FormatArgumentData) == 0x000458, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_MakeArray_Array) == 0x0004A0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Format_ReturnValue) == 0x0004B0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0004C0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x0004C8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_ClassDynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_ClassDynamicCast_bSuccess) == 0x0004D0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetClassDisplayName_ReturnValue) == 0x0004D8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Conv_StringToText_ReturnValue) == 0x0004E8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_MakeStruct_FormatArgumentData_1) == 0x0004F8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, Temp_byte_Variable) == 0x000540, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, Temp_byte_Variable_1) == 0x000541, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000548, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_MakeStruct_FormatArgumentData_2) == 0x000550, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform) == 0x0005A0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType) == 0x000600, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000608, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_IsValid_ReturnValue) == 0x000610, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_FinishSpawningActor_ReturnValue) == 0x000618, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000620, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetEnemyArchetypeAsset_ReturnValue) == 0x000638, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetEnemyArchetypeAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetArchetypeScalingDataTableForBattle_ReturnValue) == 0x000640, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetArchetypeScalingDataTableForBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_ComputeCharacterStats_Stats) == 0x000648, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_ComputeCharacterStats_Stats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_ComputeCharacterStats_Chroma) == 0x000698, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_ComputeCharacterStats_Chroma' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_ComputeCharacterStats_Experience) == 0x00069C, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_ComputeCharacterStats_Experience' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Map_Find_Value) == 0x0006A0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Map_Find_ReturnValue) == 0x0006A8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Map_Find_Value_1) == 0x0006B0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Map_Find_ReturnValue_1) == 0x0006B8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0006C0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Map_Find_Value_2) == 0x0006D0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Map_Find_ReturnValue_2) == 0x0006D8, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_MakeStruct_FormatArgumentData_3) == 0x0006E0, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, K2Node_MakeArray_Array_1) == 0x000728, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Map_Contains_ReturnValue) == 0x000738, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Format_ReturnValue_1) == 0x000740, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Not_PreBool_ReturnValue) == 0x000750, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetOwner_ReturnValue) == 0x000758, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_GetComponentByClass_ReturnValue) == 0x000760, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnEnemyOnSpot, CallFunc_Array_Add_ReturnValue) == 0x000768, "Member 'AC_jRPG_BattleManager_C_SpawnEnemyOnSpot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnExtraPlayerCharacter
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Spawn_Player_Character_SpawnedCharacter;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter, CharacterData) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter::CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter, CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter::CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter, CallFunc_Spawn_Player_Character_SpawnedCharacter) == 0x000028, "Member 'AC_jRPG_BattleManager_C_SpawnExtraPlayerCharacter::CallFunc_Spawn_Player_Character_SpawnedCharacter' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnPlayerCharactersFromParty
// 0x0190 (0x0190 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty final
{
public:
	class UBP_CharacterData_C*                    local_SpawnedCharacterData;                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       local_SpawnedCharacter;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_PartySlot                      CallFunc_Array_Get_Item;                           // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Spawn_Player_Character_SpawnedCharacter;  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0170(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty) == 0x000190, "Wrong size on AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, local_SpawnedCharacterData) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::local_SpawnedCharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, local_SpawnedCharacter) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::local_SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_RemapPartyIndexToBattleSpotIndex_SpotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Array_Length_ReturnValue_1) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_GetCharacterByID_CharacterData) == 0x000088, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Spawn_Player_Character_SpawnedCharacter) == 0x000090, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Spawn_Player_Character_SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_GetTimeSeconds_ReturnValue) == 0x000098, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Array_Length_ReturnValue_3) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, K2Node_MakeArray_Array) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Format_ReturnValue) == 0x000150, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, K2Node_MakeArray_Array_1) == 0x000160, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Format_ReturnValue_1) == 0x000170, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'AC_jRPG_BattleManager_C_SpawnPlayerCharactersFromParty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SpawnPuppetCharacter
// 0x0160 (0x0160 - 0x0000)
struct AC_jRPG_BattleManager_C_SpawnPuppetCharacter final
{
public:
	class UClass*                                 CharacterBPClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        PuppetedBy;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_SpawnPuppetCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter) == 0x000160, "Wrong size on AC_jRPG_BattleManager_C_SpawnPuppetCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CharacterBPClass) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CharacterBPClass' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, PuppetedBy) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::PuppetedBy' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, Scale) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::Scale' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_BreakTransform_Rotation) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_BreakTransform_Scale) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000150, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SpawnPuppetCharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000158, "Member 'AC_jRPG_BattleManager_C_SpawnPuppetCharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartAudioForBattle
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_StartAudioForBattle final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartAudioForBattle) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartAudioForBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartAudioForBattle) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_StartAudioForBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartAudioForBattle, LatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartAudioForBattle::LatentAction' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartBattle
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_StartBattle final
{
public:
	E_jRPG_EngageTypes                            EngageType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartBattle) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_StartBattle");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartBattle) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_StartBattle");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartBattle, EngageType) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartBattle::EngageType' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartBattleEndFlow
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_BattleManager_C_StartBattleEndFlow final
{
public:
	EBattleEndResult                              BattleEndResult;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartBattleEndFlow) == 0x000001, "Wrong alignment on AC_jRPG_BattleManager_C_StartBattleEndFlow");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartBattleEndFlow) == 0x000001, "Wrong size on AC_jRPG_BattleManager_C_StartBattleEndFlow");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartBattleEndFlow, BattleEndResult) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartBattleEndFlow::BattleEndResult' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartBattleNEW
// 0x0158 (0x0158 - 0x0000)
struct AC_jRPG_BattleManager_C_StartBattleNEW final
{
public:
	struct FFBattleStartParams                    BattleStartParams;                                 // 0x0000(0x0158)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartBattleNEW) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartBattleNEW");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartBattleNEW) == 0x000158, "Wrong size on AC_jRPG_BattleManager_C_StartBattleNEW");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartBattleNEW, BattleStartParams) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartBattleNEW::BattleStartParams' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartBattleTransition
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_StartBattleTransition final
{
public:
	class USF_BlueprintLatentAction*              TransitionIntroLatentAction;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartBattleTransition) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartBattleTransition");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartBattleTransition) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_StartBattleTransition");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartBattleTransition, TransitionIntroLatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartBattleTransition::TransitionIntroLatentAction' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartCharacterTurn
// 0x0340 (0x0340 - 0x0000)
struct AC_jRPG_BattleManager_C_StartCharacterTurn final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          local_CharacterHasChanged;                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_wildcard_Variable;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x00A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable_1;                        // 0x0110(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTeam_ReturnValue;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxHP_MaxHP;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Multiply_Int64Int64_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_FTrunc64_ReturnValue;                     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIntCVar_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x0188(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIntCVar_ReturnValue_1;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterReactionSystem_C*          CallFunc_GetCharacterReactionSystem_ReturnValue;   // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0208(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0260(0x0010)()
	class UBP_DependencyRefCounter_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters_1;  // 0x0290(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x02A0(0x0010)()
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base;   // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0308(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0318(0x0010)()
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartCharacterTurn) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartCharacterTurn");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartCharacterTurn) == 0x000340, "Wrong size on AC_jRPG_BattleManager_C_StartCharacterTurn");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Character) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, local_CharacterHasChanged) == 0x000008, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::local_CharacterHasChanged' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Temp_wildcard_Variable) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_MakeArray_Array) == 0x000070, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Format_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Temp_int_Array_Index_Variable_1) == 0x000104, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Not_PreBool_ReturnValue) == 0x000108, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000109, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Temp_wildcard_Variable_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Array_Get_Item) == 0x000120, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000130, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_IsInTeam_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_IsInTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_DoubleToInt64_ReturnValue) == 0x000148, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_DoubleToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetMaxHP_MaxHP) == 0x000150, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Multiply_Int64Int64_ReturnValue) == 0x000158, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Multiply_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000160, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000168, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_FTrunc64_ReturnValue) == 0x000170, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_FTrunc64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetIntCVar_ReturnValue) == 0x000178, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetIntCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Temp_int_Variable) == 0x00017C, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000180, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x000188, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000198, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetIntCVar_ReturnValue_1) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetIntCVar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001B0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_FClamp_ReturnValue) == 0x0001C0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Round_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetCharacterReactionSystem_ReturnValue) == 0x0001E0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetCharacterReactionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_SwitchInteger_CmpSuccess) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_CreateDelegate_OutputDelegate) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_MakeStruct_FormatArgumentData_2) == 0x000208, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_MakeArray_Array_1) == 0x000250, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Format_ReturnValue_1) == 0x000260, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_SpawnObject_ReturnValue) == 0x000270, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, Temp_int_Loop_Counter_Variable_1) == 0x000278, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetQTEManager_QTEManager) == 0x000280, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Less_IntInt_ReturnValue) == 0x000288, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Add_IntInt_ReturnValue_2) == 0x00028C, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_GetAllAliveCharacters_AllCharacters_1) == 0x000290, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_GetAllAliveCharacters_AllCharacters_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0002A0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base) == 0x0002B0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_DynamicCast_bSuccess) == 0x0002B8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002C0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, K2Node_MakeArray_Array_2) == 0x000308, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Format_ReturnValue_2) == 0x000318, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000328, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Array_Get_Item_1) == 0x000330, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Array_Length_ReturnValue_1) == 0x000338, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn, CallFunc_Less_IntInt_ReturnValue_1) == 0x00033C, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartCharacterTurn_Phase2
// 0x0198 (0x0198 - 0x0000)
struct AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2 final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue; // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0110(0x0010)()
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTurnSkipActive_ReturnValue;             // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0180(0x0010)()
	bool                                          CallFunc_AreAllDependenciesSolved_AllSolved;       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2) == 0x000198, "Wrong size on AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_K2_SetTimerForNextTickDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000038, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_Not_PreBool_ReturnValue_1) == 0x000039, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_On_Action_Finished_HasMoreActions) == 0x00003A, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, K2Node_MakeArray_Array) == 0x000098, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, K2Node_MakeArray_Array_1) == 0x000100, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_Format_ReturnValue_1) == 0x000110, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000120, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_BooleanOR_ReturnValue) == 0x000121, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_Not_PreBool_ReturnValue_2) == 0x000122, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_IsTurnSkipActive_ReturnValue) == 0x000123, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_IsTurnSkipActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, K2Node_MakeArray_Array_2) == 0x000170, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_Format_ReturnValue_2) == 0x000180, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_AreAllDependenciesSolved_AllSolved) == 0x000190, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_AreAllDependenciesSolved_AllSolved' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2, CallFunc_IsValid_ReturnValue) == 0x000191, "Member 'AC_jRPG_BattleManager_C_StartCharacterTurn_Phase2::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartCounterAttackInternal
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_StartCounterAttackInternal final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartCounterAttackInternal) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartCounterAttackInternal");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartCounterAttackInternal) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_StartCounterAttackInternal");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCounterAttackInternal, Source) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartCounterAttackInternal::Source' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartCounterAttackInternal, Target) == 0x000008, "Member 'AC_jRPG_BattleManager_C_StartCounterAttackInternal::Target' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartFreezeFrame
// 0x00C0 (0x00C0 - 0x0000)
struct AC_jRPG_BattleManager_C_StartFreezeFrame final
{
public:
	E_FreezeFrame                                 FreezeFrameType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_StartLatentAction_AsyncAction;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	struct FS_FreezeFrame                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartFreezeFrame) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartFreezeFrame");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartFreezeFrame) == 0x0000C0, "Wrong size on AC_jRPG_BattleManager_C_StartFreezeFrame");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, FreezeFrameType) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::FreezeFrameType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, LatentAction) == 0x000008, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, CallFunc_StartLatentAction_AsyncAction) == 0x000020, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::CallFunc_StartLatentAction_AsyncAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, K2Node_MakeArray_Array) == 0x000088, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartFreezeFrame, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_StartFreezeFrame::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartPlayerTurnChoice
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_StartPlayerTurnChoice final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UINavigationComponent_C*            CallFunc_GetUINavigationComponent_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartPlayerTurnChoice) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartPlayerTurnChoice");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartPlayerTurnChoice) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_StartPlayerTurnChoice");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPlayerTurnChoice, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartPlayerTurnChoice::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPlayerTurnChoice, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_StartPlayerTurnChoice::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPlayerTurnChoice, CallFunc_GetUINavigationComponent_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_StartPlayerTurnChoice::CallFunc_GetUINavigationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPlayerTurnChoice, CallFunc_GetTargetingManager_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_StartPlayerTurnChoice::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StartPreloadingBattleDependencies
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies final
{
public:
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class AActor>>          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           CallFunc_GetAssetsToLoadForBattle_ClassesToLoad;   // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies");
static_assert(sizeof(AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies, K2Node_MakeArray_Array) == 0x000008, "Member 'AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies, CallFunc_GetJRPGControllerWorld_JRPG_Controller_1) == 0x000018, "Member 'AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies::CallFunc_GetJRPGControllerWorld_JRPG_Controller_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies, CallFunc_GetAssetsToLoadForBattle_ClassesToLoad) == 0x000020, "Member 'AC_jRPG_BattleManager_C_StartPreloadingBattleDependencies::CallFunc_GetAssetsToLoadForBattle_ClassesToLoad' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.StopBattleSystems
// 0x00D0 (0x00D0 - 0x0000)
struct AC_jRPG_BattleManager_C_StopBattleSystems final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameDirectorComponent_C*            CallFunc_Get_Game_Director_Component_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterReactionSystem_C*          CallFunc_GetCharacterReactionSystem_ReturnValue;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleListener_C> CallFunc_Array_Get_Item_1;                         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharacters_AllCharacters;         // 0x00A8(0x0010)(ReferenceParm)
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class AActor>>          K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_StopBattleSystems) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_StopBattleSystems");
static_assert(sizeof(AC_jRPG_BattleManager_C_StopBattleSystems) == 0x0000D0, "Wrong size on AC_jRPG_BattleManager_C_StopBattleSystems");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, Temp_int_Loop_Counter_Variable_1) == 0x000004, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, Temp_int_Array_Index_Variable) == 0x000010, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, Temp_wildcard_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetPlayerController_ReturnValue_1) == 0x000048, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetTargetingManager_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Get_Game_Director_Component_ReturnValue) == 0x000068, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Get_Game_Director_Component_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Array_Get_Item) == 0x000078, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetCharacterReactionSystem_ReturnValue) == 0x000080, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetCharacterReactionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetTargetingManager_ReturnValue_1) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetTargetingManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetAllCharacters_AllCharacters) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetAllCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_StopBattleSystems, K2Node_MakeArray_Array) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_StopBattleSystems::K2Node_MakeArray_Array' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.SwitchCamera
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_BattleManager_C_SwitchCamera final
{
public:
	class FName                                   PathID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RandomStartDistance;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop;                                              // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdatePathLocation;                                // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_DynamicCameraManager_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_SwitchCamera) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_SwitchCamera");
static_assert(sizeof(AC_jRPG_BattleManager_C_SwitchCamera) == 0x000028, "Wrong size on AC_jRPG_BattleManager_C_SwitchCamera");
static_assert(offsetof(AC_jRPG_BattleManager_C_SwitchCamera, PathID) == 0x000000, "Member 'AC_jRPG_BattleManager_C_SwitchCamera::PathID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SwitchCamera, RandomStartDistance) == 0x000008, "Member 'AC_jRPG_BattleManager_C_SwitchCamera::RandomStartDistance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SwitchCamera, Loop) == 0x000009, "Member 'AC_jRPG_BattleManager_C_SwitchCamera::Loop' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SwitchCamera, UpdatePathLocation) == 0x00000A, "Member 'AC_jRPG_BattleManager_C_SwitchCamera::UpdatePathLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SwitchCamera, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_SwitchCamera::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SwitchCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_SwitchCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_SwitchCamera, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_SwitchCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TriggerBattleStartEvents
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_BattleManager_C_TriggerBattleStartEvents final
{
public:
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TriggerBattleStartEvents) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TriggerBattleStartEvents");
static_assert(sizeof(AC_jRPG_BattleManager_C_TriggerBattleStartEvents) == 0x000008, "Wrong size on AC_jRPG_BattleManager_C_TriggerBattleStartEvents");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerBattleStartEvents, LatentAction) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TriggerBattleStartEvents::LatentAction' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TriggerBattleStartEventsForCharacters
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CharactersToProcess;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters, CharactersToProcess) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters::CharactersToProcess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters, LatentAction) == 0x000010, "Member 'AC_jRPG_BattleManager_C_TriggerBattleStartEventsForCharacters::LatentAction' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TriggerSkill
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_TriggerSkill final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedCharacters;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UAC_jRPG_CharacterBattleStats_C*        Source;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SkillClass;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TriggerSkill) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TriggerSkill");
static_assert(sizeof(AC_jRPG_BattleManager_C_TriggerSkill) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_TriggerSkill");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerSkill, TargetedCharacters) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TriggerSkill::TargetedCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerSkill, Source) == 0x000010, "Member 'AC_jRPG_BattleManager_C_TriggerSkill::Source' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerSkill, SkillClass) == 0x000018, "Member 'AC_jRPG_BattleManager_C_TriggerSkill::SkillClass' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TriggerSkillCounter
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_TriggerSkillCounter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacterStats;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CounteringCharacterStats;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Skill;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TriggerSkillCounter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TriggerSkillCounter");
static_assert(sizeof(AC_jRPG_BattleManager_C_TriggerSkillCounter) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_TriggerSkillCounter");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerSkillCounter, TargetCharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TriggerSkillCounter::TargetCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerSkillCounter, CounteringCharacterStats) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TriggerSkillCounter::CounteringCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TriggerSkillCounter, Skill) == 0x000010, "Member 'AC_jRPG_BattleManager_C_TriggerSkillCounter::Skill' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryCounterAttack
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_TryCounterAttack final
{
public:
	class UBP_BattleFeedbackState_C*              ParryState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_2;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCharactersCounterAttackEnemySkill_CanCounter; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryCounterAttack) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryCounterAttack");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryCounterAttack) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_TryCounterAttack");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, ParryState) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::ParryState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_Array_Get_Item) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_Array_Get_Item_2) == 0x000020, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_CanCharactersCounterAttackEnemySkill_CanCounter) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_CanCharactersCounterAttackEnemySkill_CanCounter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002D, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryCounterAttack, CallFunc_BooleanAND_ReturnValue_1) == 0x00002E, "Member 'AC_jRPG_BattleManager_C_TryCounterAttack::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryForceUnregisterPendingResurrect
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect final
{
public:
	const class UAC_jRPG_CharacterBattleStats_C*  CharStats;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect, CharStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect::CharStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryForceUnregisterPendingResurrect::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryGetInterceptingCharacter
// 0x0190 (0x0190 - 0x0000)
struct AC_jRPG_BattleManager_C_TryGetInterceptingCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetedCharacterStats;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        AttackerCharacterStats;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0088(0x0010)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x0100(0x0010)()
	bool                                          CallFunc_CanInterceptAttack_ReturnValue;           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x0170(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryGetInterceptingCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter) == 0x000190, "Wrong size on AC_jRPG_BattleManager_C_TryGetInterceptingCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, TargetedCharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::TargetedCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, AttackerCharacterStats) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::AttackerCharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CharacterStats) == 0x000010, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, Temp_wildcard_Variable) == 0x000018, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000088, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Conv_NameToText_ReturnValue_2) == 0x000100, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_CanInterceptAttack_ReturnValue) == 0x000110, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_CanInterceptAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, K2Node_MakeArray_Array) == 0x000160, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x000170, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetInterceptingCharacter, CallFunc_Format_ReturnValue) == 0x000180, "Member 'AC_jRPG_BattleManager_C_TryGetInterceptingCharacter::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryGetTargetedAllies
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_BattleManager_C_TryGetTargetedAllies final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedHeroes;                                  // 0x0008(0x0010)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Attacking_Heroes_IsAttacking;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Is_Attacking_Heroes_TargetedHeroes;     // 0x0030(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryGetTargetedAllies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryGetTargetedAllies");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryGetTargetedAllies) == 0x000040, "Wrong size on AC_jRPG_BattleManager_C_TryGetTargetedAllies");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetTargetedAllies, Valid) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryGetTargetedAllies::Valid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetTargetedAllies, TargetedHeroes) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryGetTargetedAllies::TargetedHeroes' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetTargetedAllies, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_TryGetTargetedAllies::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetTargetedAllies, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base) == 0x000020, "Member 'AC_jRPG_BattleManager_C_TryGetTargetedAllies::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetTargetedAllies, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AC_jRPG_BattleManager_C_TryGetTargetedAllies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetTargetedAllies, CallFunc_Is_Attacking_Heroes_IsAttacking) == 0x000029, "Member 'AC_jRPG_BattleManager_C_TryGetTargetedAllies::CallFunc_Is_Attacking_Heroes_IsAttacking' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGetTargetedAllies, CallFunc_Is_Attacking_Heroes_TargetedHeroes) == 0x000030, "Member 'AC_jRPG_BattleManager_C_TryGetTargetedAllies::CallFunc_Is_Attacking_Heroes_TargetedHeroes' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryGradientCounterAttack
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_BattleManager_C_TryGradientCounterAttack final
{
public:
	class UBP_BattleFeedbackState_C*              ParryState;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_2;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryGradientCounterAttack) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryGradientCounterAttack");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryGradientCounterAttack) == 0x000030, "Wrong size on AC_jRPG_BattleManager_C_TryGradientCounterAttack");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, ParryState) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::ParryState' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_Array_Get_Item) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_Array_Get_Item_1) == 0x000010, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_Array_Get_Item_2) == 0x000020, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryGradientCounterAttack, CallFunc_BooleanAND_ReturnValue_1) == 0x00002D, "Member 'AC_jRPG_BattleManager_C_TryGradientCounterAttack::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryLastStand
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_BattleManager_C_TryLastStand final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CharacterBattle;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDamageReason                                 DeathReason;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasLastStand;                                      // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCancelFreeAim_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddCharacterForLastStand_HasLastStand; // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryLastStand) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryLastStand");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryLastStand) == 0x000020, "Wrong size on AC_jRPG_BattleManager_C_TryLastStand");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryLastStand, CharacterBattle) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryLastStand::CharacterBattle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryLastStand, DeathReason) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryLastStand::DeathReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryLastStand, HasLastStand) == 0x000009, "Member 'AC_jRPG_BattleManager_C_TryLastStand::HasLastStand' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryLastStand, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_TryLastStand::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryLastStand, CallFunc_CanCancelFreeAim_ReturnValue) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_TryLastStand::CallFunc_CanCancelFreeAim_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryLastStand, CallFunc_TryAddCharacterForLastStand_HasLastStand) == 0x00001D, "Member 'AC_jRPG_BattleManager_C_TryLastStand::CallFunc_TryAddCharacterForLastStand_HasLastStand' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryRemoveQueuedForcedNextCharacter
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter final
{
public:
	const class UAC_jRPG_CharacterBattleStats_C*  CharacterStats;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter, CharacterStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter::CharacterStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryRemoveQueuedForcedNextCharacter::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.TryStealConsumableFromPlayer
// 0x04B0 (0x04B0 - 0x0000)
struct AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        Thief;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    ConsumableDataRow;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Quantity;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemovedQuantity;                                   // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_ItemID;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_removedQuantity;                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_previousValue;                               // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0148(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemQuantityInInventory_ReturnValue;   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemQuantityInInventory_ReturnValue_1; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0208(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0340(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0398(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x03A8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x03C8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x7];                                      // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0418(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0428(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0438(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0480(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0490(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x04A0(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer");
static_assert(sizeof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer) == 0x0004B0, "Wrong size on AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, Thief) == 0x000000, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::Thief' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, ConsumableDataRow) == 0x000008, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::ConsumableDataRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, Quantity) == 0x000018, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::Quantity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, RemovedQuantity) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::RemovedQuantity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, local_ItemID) == 0x000020, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::local_ItemID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, local_removedQuantity) == 0x000028, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::local_removedQuantity' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, local_previousValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::local_previousValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeArray_Array) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Format_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData_3) == 0x000148, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, Temp_bool_Variable) == 0x000190, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000198, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_GetItemQuantityInInventory_ReturnValue) == 0x0001EC, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_GetItemQuantityInInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_GetItemQuantityInInventory_ReturnValue_1) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_GetItemQuantityInInventory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001F4, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Max_ReturnValue) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_GetInventoryManager_ReturnValue) == 0x000200, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_GetDataTableRowFromName_OutRow) == 0x000208, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000338, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData_5) == 0x000340, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000388, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeArray_Array_1) == 0x000398, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x0003A8, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Format_ReturnValue_1) == 0x0003B8, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData_6) == 0x0003C8, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000410, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeArray_Array_2) == 0x000418, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Format_ReturnValue_2) == 0x000428, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeStruct_FormatArgumentData_7) == 0x000438, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_MakeArray_Array_3) == 0x000480, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, CallFunc_Format_ReturnValue_3) == 0x000490, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer, K2Node_Select_Default) == 0x0004A0, "Member 'AC_jRPG_BattleManager_C_TryStealConsumableFromPlayer::K2Node_Select_Default' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UnlockNoDamageBossAchievement
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_AchievementManager_C*               CallFunc_GetAchievementManager_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAchievementUnlocked_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOfArchetype_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOfArchetype_ReturnValue_1;              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Was_Battle_No_Damage_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement");
static_assert(sizeof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement) == 0x000040, "Wrong size on AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_GetAchievementManager_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_GetAchievementManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_GetAchievementManager_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_GetAchievementManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_IsAchievementUnlocked_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_IsAchievementUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_Array_Get_Item) == 0x000028, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_IsOfArchetype_ReturnValue) == 0x000034, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_IsOfArchetype_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_IsOfArchetype_ReturnValue_1) == 0x000036, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_IsOfArchetype_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_Was_Battle_No_Damage_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_Was_Battle_No_Damage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'AC_jRPG_BattleManager_C_UnlockNoDamageBossAchievement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UnregisterBattleListener
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_UnregisterBattleListener final
{
public:
	TScriptInterface<class IBPI_BattleListener_C> Item;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UnregisterBattleListener) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UnregisterBattleListener");
static_assert(sizeof(AC_jRPG_BattleManager_C_UnregisterBattleListener) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_UnregisterBattleListener");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnregisterBattleListener, Item) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UnregisterBattleListener::Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnregisterBattleListener, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UnregisterBattleListener::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UnspawnEnemies
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_BattleManager_C_UnspawnEnemies final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UnspawnEnemies) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UnspawnEnemies");
static_assert(sizeof(AC_jRPG_BattleManager_C_UnspawnEnemies) == 0x000038, "Wrong size on AC_jRPG_BattleManager_C_UnspawnEnemies");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Array_Get_Item) == 0x000018, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnEnemies, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'AC_jRPG_BattleManager_C_UnspawnEnemies::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UnspawnPlayerCharacters
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_BattleManager_C_UnspawnPlayerCharacters final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UnspawnPlayerCharacters");
static_assert(sizeof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters) == 0x000038, "Wrong size on AC_jRPG_BattleManager_C_UnspawnPlayerCharacters");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, Temp_int_Array_Index_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Array_Get_Item) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Less_IntInt_ReturnValue_1) == 0x00002D, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UnspawnPlayerCharacters, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'AC_jRPG_BattleManager_C_UnspawnPlayerCharacters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateBattleEndVictoryScreen
// 0x0060 (0x0060 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> CharacterBattleStats;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FS_BattleRewards                       BattleRewards;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_BattleSummaryStats                  CallFunc_GetBattleSummaryStats_BattleSummaryStats; // 0x0028(0x0028)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen) == 0x000060, "Wrong size on AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen, CharacterBattleStats) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen::CharacterBattleStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen, BattleRewards) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen::BattleRewards' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen, CallFunc_GetBattleSummaryStats_BattleSummaryStats) == 0x000028, "Member 'AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen::CallFunc_GetBattleSummaryStats_BattleSummaryStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'AC_jRPG_BattleManager_C_UpdateBattleEndVictoryScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateCharacterDataWithBattleFinalState
// 0x0050 (0x0050 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState final
{
public:
	struct FS_LootContext                         local_lootContext;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Variable;                          // 0x0008(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateCharacterDataWithFinalBattleState_ReturnValue; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState) == 0x000050, "Wrong size on AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, local_lootContext) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::local_lootContext' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, Temp_int_Array_Index_Variable) == 0x000004, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, Temp_wildcard_Variable) == 0x000008, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, CallFunc_Array_Get_Item) == 0x000018, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, CallFunc_ShouldUpdateCharacterDataWithFinalBattleState_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::CallFunc_ShouldUpdateCharacterDataWithFinalBattleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, CallFunc_GetCharacterByID_CharacterData) == 0x000030, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000040, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterDataWithBattleFinalState::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateCharacterNextTurns
// 0x0540 (0x0540 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateCharacterNextTurns final
{
public:
	bool                                          DEBUG_VerboseTurnSimulation;                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  local_EngagementBonusPerCharacter;                 // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                local_SimulatedInitiativePerCharacter;             // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                TimeToFullInitiative;                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         currentEleemnt;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_SortedCharacters;                          // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_AllCharacters;                             // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<double>                                InitiativePerCharacter;                            // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        Temp_real_Variable;                                // 0x0070(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0080(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Temp_wildcard_Temp_buffer_array_Variable;        // 0x0110(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0160(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0178(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveCharacters_AllCharacters;    // 0x01C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterWithMaxInitiativeSimulate_Success_; // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterWithMaxInitiativeSimulate_Character; // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCharacterWithMaxInitiativeSimulate_TimeToTurn; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01F8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0240(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0250(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B0(0x0010)()
	double                                        CallFunc_Array_Get_Item_2;                         // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ComputeNewInitiativeAfterTimeSimulate_NewInitiative; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02D0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeToFullInitiativeSimulate_Time;     // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0330(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0378(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03C0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03E0(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03F0(0x0010)()
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_3;                         // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0408(0x0010)()
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0420(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0478(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0488(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetTimeToFullInitiativeSimulate_Time_1;   // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x04D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0520(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0530(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateCharacterNextTurns");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns) == 0x000540, "Wrong size on AC_jRPG_BattleManager_C_UpdateCharacterNextTurns");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, DEBUG_VerboseTurnSimulation) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::DEBUG_VerboseTurnSimulation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, local_EngagementBonusPerCharacter) == 0x000008, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::local_EngagementBonusPerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, local_SimulatedInitiativePerCharacter) == 0x000018, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::local_SimulatedInitiativePerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, TimeToFullInitiative) == 0x000028, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::TimeToFullInitiative' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, currentEleemnt) == 0x000038, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::currentEleemnt' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, local_SortedCharacters) == 0x000040, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::local_SortedCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, local_AllCharacters) == 0x000050, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::local_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, InitiativePerCharacter) == 0x000060, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::InitiativePerCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_real_Variable) == 0x000070, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000078, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000080, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_int_Array_Index_Variable) == 0x000090, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_int_Array_Index_Variable_1) == 0x00009C, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_int_Loop_Counter_Variable_1) == 0x0000A0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_int_Array_Index_Variable_2) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_bool_Variable) == 0x0000AC, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_int_Variable) == 0x000100, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000104, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Add_IntInt_ReturnValue_2) == 0x000108, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_wildcard_Temp_buffer_array_Variable) == 0x000110, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000120, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Get_Item) == 0x000130, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000140, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetCharacterBattleBase_IsValid) == 0x000148, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Add_ReturnValue) == 0x00014C, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Length_ReturnValue_1) == 0x000158, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000160, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_1) == 0x000178, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, Temp_int_Loop_Counter_Variable_2) == 0x0001C0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetAllAliveCharacters_AllCharacters) == 0x0001C8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetAllAliveCharacters_AllCharacters' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001DC, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetCharacterWithMaxInitiativeSimulate_Success_) == 0x0001E0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetCharacterWithMaxInitiativeSimulate_Success_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetCharacterWithMaxInitiativeSimulate_Character) == 0x0001E8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetCharacterWithMaxInitiativeSimulate_Character' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetCharacterWithMaxInitiativeSimulate_TimeToTurn) == 0x0001F0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetCharacterWithMaxInitiativeSimulate_TimeToTurn' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000240, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_3) == 0x000250, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Add_ReturnValue_1) == 0x000298, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeArray_Array) == 0x0002A0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Format_ReturnValue) == 0x0002B0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Get_Item_2) == 0x0002C0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_ComputeNewInitiativeAfterTimeSimulate_NewInitiative) == 0x0002C8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_ComputeNewInitiativeAfterTimeSimulate_NewInitiative' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002D0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Find_ReturnValue) == 0x000318, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetTimeToFullInitiativeSimulate_Time) == 0x000320, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetTimeToFullInitiativeSimulate_Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000328, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_5) == 0x000330, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_6) == 0x000378, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeArray_Array_1) == 0x0003C0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeArray_Array_2) == 0x0003D0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Format_ReturnValue_1) == 0x0003E0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Format_ReturnValue_2) == 0x0003F0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Get_Item_3) == 0x000400, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000408, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_EqualsObjects_ReturnValue) == 0x000418, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_7) == 0x000420, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Length_ReturnValue_2) == 0x000468, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Less_IntInt_ReturnValue_2) == 0x00046C, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Add_ReturnValue_2) == 0x000470, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_Select_Default) == 0x000478, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Array_Add_ReturnValue_3) == 0x000480, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_8) == 0x000488, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_GetTimeToFullInitiativeSimulate_Time_1) == 0x0004D0, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_GetTimeToFullInitiativeSimulate_Time_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeStruct_FormatArgumentData_9) == 0x0004D8, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, K2Node_MakeArray_Array_3) == 0x000520, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateCharacterNextTurns, CallFunc_Format_ReturnValue_3) == 0x000530, "Member 'AC_jRPG_BattleManager_C_UpdateCharacterNextTurns::CallFunc_Format_ReturnValue_3' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateDefend
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateDefend final
{
public:
	class FText                                   DebugReason;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateDefend) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateDefend");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateDefend) == 0x000010, "Wrong size on AC_jRPG_BattleManager_C_UpdateDefend");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateDefend, DebugReason) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateDefend::DebugReason' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateDummyMiddleCharacterLocation
// 0x0170 (0x0170 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation final
{
public:
	struct FTransform                             CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform; // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_FormationType                          CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0068(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation) == 0x000010, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation) == 0x000170, "Wrong size on AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotTransform' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation, CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType) == 0x000060, "Member 'AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation::CallFunc_GetProperBattleSpawnPointTransform_BattleSpotFormationType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000068, "Member 'AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000160, "Member 'AC_jRPG_BattleManager_C_UpdateDummyMiddleCharacterLocation::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateFreeAimHover
// 0x01D8 (0x01D8 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateFreeAimHover final
{
public:
	bool                                          CallFunc_ComputeFreeAim3rdPersonTargetLocation_HasHitCharacter; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_ComputeFreeAim3rdPersonTargetLocation_CharacterBattle; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeFreeAim3rdPersonTargetLocation_HitLocation; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeFreeAim3rdPersonTargetLocation_StartLocation; // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x00C0(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0120(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0130(0x0010)()
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0148(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01B8(0x0010)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateFreeAimHover) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateFreeAimHover");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateFreeAimHover) == 0x0001D8, "Wrong size on AC_jRPG_BattleManager_C_UpdateFreeAimHover");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_ComputeFreeAim3rdPersonTargetLocation_HasHitCharacter) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_ComputeFreeAim3rdPersonTargetLocation_HasHitCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_ComputeFreeAim3rdPersonTargetLocation_CharacterBattle) == 0x000008, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_ComputeFreeAim3rdPersonTargetLocation_CharacterBattle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_ComputeFreeAim3rdPersonTargetLocation_HitLocation) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_ComputeFreeAim3rdPersonTargetLocation_HitLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_ComputeFreeAim3rdPersonTargetLocation_StartLocation) == 0x000028, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_ComputeFreeAim3rdPersonTargetLocation_StartLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000040, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, K2Node_MakeArray_Array) == 0x000098, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0000C0, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, K2Node_MakeArray_Array_1) == 0x000120, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_Format_ReturnValue_1) == 0x000130, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000140, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000148, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_IsValid_ReturnValue_2) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, K2Node_MakeArray_Array_2) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_Format_ReturnValue_2) == 0x0001B8, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_GetPlayerController_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x0001D0, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateFreeAimHover, CallFunc_IsValid_ReturnValue_3) == 0x0001D1, "Member 'AC_jRPG_BattleManager_C_UpdateFreeAimHover::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateMouseTargeting
// 0x03F0 (0x03F0 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateMouseTargeting final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0078(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00F8(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0168(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0178(0x0010)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasInputKeyJustPressed_ReturnValue;       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputMethodActive_ReturnValue;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectMousePositionToWorld_WorldLocation; // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectMousePositionToWorld_WorldDirection; // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectMousePositionToWorld_ReturnValue; // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0210(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B[0x1];                                      // 0x030B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateMouseTargeting) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateMouseTargeting");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateMouseTargeting) == 0x0003F0, "Wrong size on AC_jRPG_BattleManager_C_UpdateMouseTargeting");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, Temp_object_Variable) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_MakeArray_Array) == 0x000068, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000078, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Format_ReturnValue) == 0x000088, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Format_ReturnValue_1) == 0x0000F8, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000108, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_IsValid_ReturnValue_1) == 0x000160, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_MakeArray_Array_2) == 0x000168, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Format_ReturnValue_2) == 0x000178, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_GetPlayerController_ReturnValue) == 0x000188, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue) == 0x000190, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_GetLocalPlayerSubSystemFromPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_WasInputKeyJustPressed_ReturnValue) == 0x000198, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_WasInputKeyJustPressed_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_IsInputMethodActive_ReturnValue) == 0x000199, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_IsInputMethodActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BooleanAND_ReturnValue) == 0x00019A, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_IsValid_ReturnValue_2) == 0x00019B, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_DeprojectMousePositionToWorld_WorldLocation) == 0x0001A8, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_DeprojectMousePositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_DeprojectMousePositionToWorld_WorldDirection) == 0x0001C0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_DeprojectMousePositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_DeprojectMousePositionToWorld_ReturnValue) == 0x0001D8, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_DeprojectMousePositionToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001E0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F8, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_LineTraceSingle_OutHit) == 0x000210, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_LineTraceSingle_ReturnValue) == 0x000308, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_bBlockingHit) == 0x000309, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_bInitialOverlap) == 0x00030A, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_Time) == 0x00030C, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_Distance) == 0x000310, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_Location) == 0x000318, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_ImpactPoint) == 0x000330, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_Normal) == 0x000348, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_ImpactNormal) == 0x000360, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_PhysMat) == 0x000378, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_HitActor) == 0x000380, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_HitComponent) == 0x000388, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_HitBoneName) == 0x000390, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_BoneName) == 0x000398, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_HitItem) == 0x0003A0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_ElementIndex) == 0x0003A4, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_FaceIndex) == 0x0003A8, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_TraceStart) == 0x0003B0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_BreakHitResult_TraceEnd) == 0x0003C8, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x0003E0, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, K2Node_DynamicCast_bSuccess) == 0x0003E8, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateMouseTargeting, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0003E9, "Member 'AC_jRPG_BattleManager_C_UpdateMouseTargeting::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.UpdateTargetingArrowsState
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_UpdateTargetingArrowsState final
{
public:
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetTargetingManager_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_UINavigationComponent_C*            CallFunc_GetUINavigationComponent_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasNavigationFromActiveNode_HasNavigation; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasNavigationFromActiveNode_HasNavigation_1; // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_UpdateTargetingArrowsState");
static_assert(sizeof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_UpdateTargetingArrowsState");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState, CallFunc_GetTargetingManager_ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_UpdateTargetingArrowsState::CallFunc_GetTargetingManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState, CallFunc_GetUINavigationComponent_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_UpdateTargetingArrowsState::CallFunc_GetUINavigationComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState, CallFunc_HasNavigationFromActiveNode_HasNavigation) == 0x000010, "Member 'AC_jRPG_BattleManager_C_UpdateTargetingArrowsState::CallFunc_HasNavigationFromActiveNode_HasNavigation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'AC_jRPG_BattleManager_C_UpdateTargetingArrowsState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'AC_jRPG_BattleManager_C_UpdateTargetingArrowsState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_UpdateTargetingArrowsState, CallFunc_HasNavigationFromActiveNode_HasNavigation_1) == 0x000013, "Member 'AC_jRPG_BattleManager_C_UpdateTargetingArrowsState::CallFunc_HasNavigationFromActiveNode_HasNavigation_1' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.Was Battle No Damage
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_BattleManager_C_Was_Battle_No_Damage final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattleSummaryStats                  CallFunc_GetBattleSummaryStats_BattleSummaryStats; // 0x0008(0x0028)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_Was_Battle_No_Damage) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_Was_Battle_No_Damage");
static_assert(sizeof(AC_jRPG_BattleManager_C_Was_Battle_No_Damage) == 0x000038, "Wrong size on AC_jRPG_BattleManager_C_Was_Battle_No_Damage");
static_assert(offsetof(AC_jRPG_BattleManager_C_Was_Battle_No_Damage, ReturnValue) == 0x000000, "Member 'AC_jRPG_BattleManager_C_Was_Battle_No_Damage::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Was_Battle_No_Damage, CallFunc_GetBattleSummaryStats_BattleSummaryStats) == 0x000008, "Member 'AC_jRPG_BattleManager_C_Was_Battle_No_Damage::CallFunc_GetBattleSummaryStats_BattleSummaryStats' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_Was_Battle_No_Damage, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'AC_jRPG_BattleManager_C_Was_Battle_No_Damage::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.CheckIfAlreadyLootedItem
// 0x0180 (0x0180 - 0x0000)
struct AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem final
{
public:
	TArray<struct FS_jRPG_Item_DynamicData>       LootedItems;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class FName                                   ItemHardcodedName;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyLooted_;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotIndex;                                         // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndexLOCAL;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyLooted_LOCAL;                               // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_DynamicData               CallFunc_Array_Get_Item;                           // 0x0038(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem");
static_assert(sizeof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem) == 0x000180, "Wrong size on AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, LootedItems) == 0x000000, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::LootedItems' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, ItemHardcodedName) == 0x000010, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::ItemHardcodedName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, AlreadyLooted_) == 0x000018, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::AlreadyLooted_' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, SlotIndex) == 0x00001C, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::SlotIndex' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, SlotIndexLOCAL) == 0x000020, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::SlotIndexLOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, AlreadyLooted_LOCAL) == 0x000024, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::AlreadyLooted_LOCAL' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000025, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, Temp_int_Array_Index_Variable) == 0x000030, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, CallFunc_Array_Get_Item) == 0x000038, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, Temp_int_Loop_Counter_Variable) == 0x000170, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000174, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, CallFunc_Less_IntInt_ReturnValue) == 0x000175, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, CallFunc_Add_IntInt_ReturnValue) == 0x000178, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem, CallFunc_BooleanAND_ReturnValue) == 0x00017C, "Member 'AC_jRPG_BattleManager_C_CheckIfAlreadyLootedItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.ConcatActors
// 0x01B0 (0x01B0 - 0x0000)
struct AC_jRPG_BattleManager_C_ConcatActors final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0080(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_2;                              // 0x0128(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0138(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0190(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A0(0x0010)()
};
static_assert(alignof(AC_jRPG_BattleManager_C_ConcatActors) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_ConcatActors");
static_assert(sizeof(AC_jRPG_BattleManager_C_ConcatActors) == 0x0001B0, "Wrong size on AC_jRPG_BattleManager_C_ConcatActors");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Actors) == 0x000000, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Actors' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Result) == 0x000010, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Temp_bool_Variable) == 0x000020, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Temp_text_Variable) == 0x000028, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Temp_text_Variable_1) == 0x000038, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Temp_int_Array_Index_Variable) == 0x000048, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_Array_Get_Item) == 0x000050, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_GetDisplayName_ReturnValue) == 0x000060, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, K2Node_Select_Default) == 0x000080, "Member 'AC_jRPG_BattleManager_C_ConcatActors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'AC_jRPG_BattleManager_C_ConcatActors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'AC_jRPG_BattleManager_C_ConcatActors::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, Temp_text_Variable_2) == 0x000128, "Member 'AC_jRPG_BattleManager_C_ConcatActors::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_MakeLiteralText_ReturnValue) == 0x000138, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'AC_jRPG_BattleManager_C_ConcatActors::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, K2Node_MakeArray_Array) == 0x000190, "Member 'AC_jRPG_BattleManager_C_ConcatActors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_ConcatActors, CallFunc_Format_ReturnValue) == 0x0001A0, "Member 'AC_jRPG_BattleManager_C_ConcatActors::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_BattleManager.AC_jRPG_BattleManager_C.GetQTEManager
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_BattleManager_C_GetQTEManager final
{
public:
	class UBP_QTEManager_C*                       QTEManager;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_QTEManager_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_BattleManager_C_GetQTEManager) == 0x000008, "Wrong alignment on AC_jRPG_BattleManager_C_GetQTEManager");
static_assert(sizeof(AC_jRPG_BattleManager_C_GetQTEManager) == 0x000018, "Wrong size on AC_jRPG_BattleManager_C_GetQTEManager");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetQTEManager, QTEManager) == 0x000000, "Member 'AC_jRPG_BattleManager_C_GetQTEManager::QTEManager' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetQTEManager, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_BattleManager_C_GetQTEManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_BattleManager_C_GetQTEManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_BattleManager_C_GetQTEManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

}

