#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConditionChecker

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ConditionChecker.BP_ConditionChecker_C.AppendPropertyPath
// 0x0050 (0x0050 - 0x0000)
struct BP_ConditionChecker_C_AppendPropertyPath final
{
public:
	class FString                                 CurrentPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	class FString                                 PropertyName;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_C_AppendPropertyPath) == 0x000008, "Wrong alignment on BP_ConditionChecker_C_AppendPropertyPath");
static_assert(sizeof(BP_ConditionChecker_C_AppendPropertyPath) == 0x000050, "Wrong size on BP_ConditionChecker_C_AppendPropertyPath");
static_assert(offsetof(BP_ConditionChecker_C_AppendPropertyPath, CurrentPath) == 0x000000, "Member 'BP_ConditionChecker_C_AppendPropertyPath::CurrentPath' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_AppendPropertyPath, PropertyName) == 0x000010, "Member 'BP_ConditionChecker_C_AppendPropertyPath::PropertyName' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_AppendPropertyPath, ReturnValue) == 0x000020, "Member 'BP_ConditionChecker_C_AppendPropertyPath::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_AppendPropertyPath, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_ConditionChecker_C_AppendPropertyPath::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_AppendPropertyPath, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_ConditionChecker_C_AppendPropertyPath::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_ConditionChecker.BP_ConditionChecker_C.BindEventOnGameStateChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_ConditionChecker_C_BindEventOnGameStateChanged final
{
public:
	TDelegate<void()>                             Event;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_C_BindEventOnGameStateChanged) == 0x000004, "Wrong alignment on BP_ConditionChecker_C_BindEventOnGameStateChanged");
static_assert(sizeof(BP_ConditionChecker_C_BindEventOnGameStateChanged) == 0x000010, "Wrong size on BP_ConditionChecker_C_BindEventOnGameStateChanged");
static_assert(offsetof(BP_ConditionChecker_C_BindEventOnGameStateChanged, Event) == 0x000000, "Member 'BP_ConditionChecker_C_BindEventOnGameStateChanged::Event' has a wrong offset!");

// Function BP_ConditionChecker.BP_ConditionChecker_C.ReportValidationError
// 0x0170 (0x0170 - 0x0000)
struct BP_ConditionChecker_C_ReportValidationError final
{
public:
	TArray<class FText>                           ErrorMesssages;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 PropertyPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0098(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_C_ReportValidationError) == 0x000008, "Wrong alignment on BP_ConditionChecker_C_ReportValidationError");
static_assert(sizeof(BP_ConditionChecker_C_ReportValidationError) == 0x000170, "Wrong size on BP_ConditionChecker_C_ReportValidationError");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, ErrorMesssages) == 0x000000, "Member 'BP_ConditionChecker_C_ReportValidationError::ErrorMesssages' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, PropertyPath) == 0x000010, "Member 'BP_ConditionChecker_C_ReportValidationError::PropertyPath' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, Message) == 0x000020, "Member 'BP_ConditionChecker_C_ReportValidationError::Message' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_ConditionChecker_C_ReportValidationError::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'BP_ConditionChecker_C_ReportValidationError::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_ConditionChecker_C_ReportValidationError::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000098, "Member 'BP_ConditionChecker_C_ReportValidationError::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000A8, "Member 'BP_ConditionChecker_C_ReportValidationError::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'BP_ConditionChecker_C_ReportValidationError::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'BP_ConditionChecker_C_ReportValidationError::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, K2Node_MakeArray_Array) == 0x000148, "Member 'BP_ConditionChecker_C_ReportValidationError::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, CallFunc_Format_ReturnValue) == 0x000158, "Member 'BP_ConditionChecker_C_ReportValidationError::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ReportValidationError, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'BP_ConditionChecker_C_ReportValidationError::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ConditionChecker.BP_ConditionChecker_C.UnbindEventOnGameStateChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_ConditionChecker_C_UnbindEventOnGameStateChanged final
{
public:
	TDelegate<void()>                             Event;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_C_UnbindEventOnGameStateChanged) == 0x000004, "Wrong alignment on BP_ConditionChecker_C_UnbindEventOnGameStateChanged");
static_assert(sizeof(BP_ConditionChecker_C_UnbindEventOnGameStateChanged) == 0x000010, "Wrong size on BP_ConditionChecker_C_UnbindEventOnGameStateChanged");
static_assert(offsetof(BP_ConditionChecker_C_UnbindEventOnGameStateChanged, Event) == 0x000000, "Member 'BP_ConditionChecker_C_UnbindEventOnGameStateChanged::Event' has a wrong offset!");

// Function BP_ConditionChecker.BP_ConditionChecker_C.ValidateConditionChecker
// 0x0020 (0x0020 - 0x0000)
struct BP_ConditionChecker_C_ValidateConditionChecker final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 PropertyPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ConditionChecker_C_ValidateConditionChecker) == 0x000008, "Wrong alignment on BP_ConditionChecker_C_ValidateConditionChecker");
static_assert(sizeof(BP_ConditionChecker_C_ValidateConditionChecker) == 0x000020, "Wrong size on BP_ConditionChecker_C_ValidateConditionChecker");
static_assert(offsetof(BP_ConditionChecker_C_ValidateConditionChecker, ErrorMessages) == 0x000000, "Member 'BP_ConditionChecker_C_ValidateConditionChecker::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_ConditionChecker_C_ValidateConditionChecker, PropertyPath) == 0x000010, "Member 'BP_ConditionChecker_C_ValidateConditionChecker::PropertyPath' has a wrong offset!");

}

