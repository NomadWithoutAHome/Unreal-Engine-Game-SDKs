#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleLineGatherer

#include "Basic.hpp"

#include "E_CharacterList_structs.hpp"
#include "S_BattleLinePoolCandidate_structs.hpp"
#include "S_BattleLine_structs.hpp"
#include "S_BattleLineCandidate_structs.hpp"
#include "SandFall_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleLineGatherer.BP_BattleLineGatherer_C
// 0x0030 (0x0058 - 0x0028)
class UBP_BattleLineGatherer_C final : public UExtendedObject
{
public:
	TArray<struct FS_BattleLinePoolCandidate>     CandidatePools;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated, ContainsInstancedReference)
	TArray<struct FS_BattleLine>                  Lines;                                             // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_BattleLineCandidate>         LineCandidates;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void RegisterCandidateLine(const struct FS_BattleLine& NewLine, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason);
	void RegisterPerCharacterPool(const struct FS_BattleLineEventPerCharacter& PerCharacterLines, class UAC_jRPG_CharacterBattleStats_C* RelevantCharacter, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason);
	void RegisterPool(const struct FS_BattleLinePool& Pool, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason);
	void Roll();
	void RollChancePercent(double ChancePercent, bool* Rolled);
	void RollFromPool(const struct FS_BattleLinePool& BattleLinePool, struct FS_BattleLine* BattleLine);
	void SelectBattleLineCandidate(bool* Valid, struct FS_BattleLineCandidate* ChosenLine);
	void TryRegisterPerCharacterPool(const struct FS_BattleLineEventPerCharacter& PerCharacterLines, double ChancePercent, class UAC_jRPG_CharacterBattleStats_C* RelevantCharacter, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason, bool* Rolled);
	void TryRegisterPool(const struct FS_BattleLinePool& Pool, double ChancePercent, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason, bool* Rolled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleLineGatherer_C">();
	}
	static class UBP_BattleLineGatherer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BattleLineGatherer_C>();
	}
};
static_assert(alignof(UBP_BattleLineGatherer_C) == 0x000008, "Wrong alignment on UBP_BattleLineGatherer_C");
static_assert(sizeof(UBP_BattleLineGatherer_C) == 0x000058, "Wrong size on UBP_BattleLineGatherer_C");
static_assert(offsetof(UBP_BattleLineGatherer_C, CandidatePools) == 0x000028, "Member 'UBP_BattleLineGatherer_C::CandidatePools' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineGatherer_C, Lines) == 0x000038, "Member 'UBP_BattleLineGatherer_C::Lines' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineGatherer_C, LineCandidates) == 0x000048, "Member 'UBP_BattleLineGatherer_C::LineCandidates' has a wrong offset!");

}

