#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QA_3C_Debugger

#include "Basic.hpp"

#include "ALSV4_CPP_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_QA_3C_Debugger.WBP_QA_3C_Debugger_C.ExecuteUbergraph_WBP_QA_3C_Debugger
// 0x0060 (0x0060 - 0x0000)
struct WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger) == 0x000008, "Wrong alignment on WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger");
static_assert(sizeof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger) == 0x000060, "Wrong size on WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger");
static_assert(offsetof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger, EntryPoint) == 0x000000, "Member 'WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger, K2Node_Event_MyGeometry) == 0x000010, "Member 'WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger, K2Node_Event_InDeltaTime) == 0x000048, "Member 'WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000050, "Member 'WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_QA_3C_Debugger_C_ExecuteUbergraph_WBP_QA_3C_Debugger::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_QA_3C_Debugger.WBP_QA_3C_Debugger_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_QA_3C_Debugger_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QA_3C_Debugger_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_QA_3C_Debugger_C_PreConstruct");
static_assert(sizeof(WBP_QA_3C_Debugger_C_PreConstruct) == 0x000001, "Wrong size on WBP_QA_3C_Debugger_C_PreConstruct");
static_assert(offsetof(WBP_QA_3C_Debugger_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_QA_3C_Debugger_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_QA_3C_Debugger.WBP_QA_3C_Debugger_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_QA_3C_Debugger_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QA_3C_Debugger_C_Tick) == 0x000004, "Wrong alignment on WBP_QA_3C_Debugger_C_Tick");
static_assert(sizeof(WBP_QA_3C_Debugger_C_Tick) == 0x00003C, "Wrong size on WBP_QA_3C_Debugger_C_Tick");
static_assert(offsetof(WBP_QA_3C_Debugger_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_QA_3C_Debugger_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_QA_3C_Debugger_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_QA_3C_Debugger.WBP_QA_3C_Debugger_C.UpdateALSStateParameters
// 0x0010 (0x0010 - 0x0000)
struct WBP_QA_3C_Debugger_C_UpdateALSStateParameters final
{
public:
	class ABP_jRPG_Character_World_C*             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EALSGait                                      CallFunc_GetAllowedGait_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QA_3C_Debugger_C_UpdateALSStateParameters) == 0x000008, "Wrong alignment on WBP_QA_3C_Debugger_C_UpdateALSStateParameters");
static_assert(sizeof(WBP_QA_3C_Debugger_C_UpdateALSStateParameters) == 0x000010, "Wrong size on WBP_QA_3C_Debugger_C_UpdateALSStateParameters");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateALSStateParameters, Character) == 0x000000, "Member 'WBP_QA_3C_Debugger_C_UpdateALSStateParameters::Character' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateALSStateParameters, CallFunc_GetAllowedGait_ReturnValue) == 0x000008, "Member 'WBP_QA_3C_Debugger_C_UpdateALSStateParameters::CallFunc_GetAllowedGait_ReturnValue' has a wrong offset!");

// Function WBP_QA_3C_Debugger.WBP_QA_3C_Debugger_C.UpdateCharacterInputMappingParameters
// 0x0028 (0x0028 - 0x0000)
struct WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters final
{
public:
	class ABP_jRPG_Character_World_C*             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentInputMappingNames_MovementInputMapping; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentInputMappingNames_CameraInputMapping; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters) == 0x000008, "Wrong alignment on WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters");
static_assert(sizeof(WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters) == 0x000028, "Wrong size on WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters, Character) == 0x000000, "Member 'WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters::Character' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters, CallFunc_GetCurrentInputMappingNames_MovementInputMapping) == 0x000008, "Member 'WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters::CallFunc_GetCurrentInputMappingNames_MovementInputMapping' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters, CallFunc_GetCurrentInputMappingNames_CameraInputMapping) == 0x000018, "Member 'WBP_QA_3C_Debugger_C_UpdateCharacterInputMappingParameters::CallFunc_GetCurrentInputMappingNames_CameraInputMapping' has a wrong offset!");

// Function WBP_QA_3C_Debugger.WBP_QA_3C_Debugger_C.UpdateCharacterStateParameters
// 0x0020 (0x0020 - 0x0000)
struct WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters final
{
public:
	class ABP_jRPG_Character_World_C*             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetParameterValueAsFloat_Value_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters) == 0x000008, "Wrong alignment on WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters");
static_assert(sizeof(WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters) == 0x000020, "Wrong size on WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters, Character) == 0x000000, "Member 'WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters::Character' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters, CallFunc_GetMaxSpeed_ReturnValue) == 0x000008, "Member 'WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters, CallFunc_VSize_ReturnValue) == 0x000010, "Member 'WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters, CallFunc_SetParameterValueAsFloat_Value_ImplicitCast) == 0x000018, "Member 'WBP_QA_3C_Debugger_C_UpdateCharacterStateParameters::CallFunc_SetParameterValueAsFloat_Value_ImplicitCast' has a wrong offset!");

}

