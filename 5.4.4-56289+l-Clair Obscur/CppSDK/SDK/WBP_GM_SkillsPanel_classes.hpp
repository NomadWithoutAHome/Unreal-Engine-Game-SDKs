#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GM_SkillsPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GM_SkillsPanel.WBP_GM_SkillsPanel_C
// 0x00F0 (0x0520 - 0x0430)
class UWBP_GM_SkillsPanel_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_SkillSelectionState;                          // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_GM_AssignedSkills_C*               AssignedSkills;                                    // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GM_SkillsList_C*                   SkillsList;                                        // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BaseButton_C*                      SkillTreeButton;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Assign;                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Back;                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_SelectSlot;            // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Unassign;              // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GM_CharacterSheet_C*               WBP_GM_CharacterSheet;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CurrentCharacterData;                              // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    PreviewCharacterData;                              // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool ShouldLock)> OnRequestLockCharacterSwitch;                    // 0x0490(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSoundEventDataTableRowHandle          SD_OnEquipedSkill;                                 // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_OnUnequipedSkill;                               // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWBP_GM_SkillElementShort_C*            SelectedSlot;                                      // 0x04C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  SelectedSkillData;                                 // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_GM_SkillElementShort_C*            FocusedSlot;                                       // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Skill_C*                  FocusedSkill;                                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnSkillTreeButtonClicked;                          // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         LastFocusedSkillSlot;                              // 0x04F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4[0x4];                                      // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SD_OnActivated;                                    // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_OnDeactivated;                                  // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWBP_CommonActionBarContainer_C*        CurrentActionBarContainer;                         // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BackFromSkillSelectionState();
	void BackFromSlotSelectionState();
	void BndEvt__WBP_GM_SkillsPanel_AssignedSkills_K2Node_ComponentBoundEvent_10_OnSkillSlotFocused__DelegateSignature(class UWBP_GM_SkillElementShort_C* InFocusedSlot, bool IsFocused);
	void BndEvt__WBP_GM_SkillsPanel_AssignedSkills_K2Node_ComponentBoundEvent_9_OnSkillSlotClicked__DelegateSignature(class UWBP_GM_SkillElementShort_C* InClickedSlot);
	void BndEvt__WBP_GM_SkillsPanel_SkillsList_K2Node_ComponentBoundEvent_11_OnSkillItemClicked__DelegateSignature(class UBP_DataAsset_Skill_C* SkillData);
	void BndEvt__WBP_GM_SkillsPanel_SkillsList_K2Node_ComponentBoundEvent_12_OnSkillItemNavigated__DelegateSignature(class UBP_DataAsset_Skill_C* SkillData);
	void BndEvt__WBP_GM_SkillsPanel_SkillTreeButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Panel_Pictos_WBP_CommonBoundActionButton_Unequip_K2Node_ComponentBoundEvent_8_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BP_OnActivated();
	void BP_OnDeactivated();
	void BPI_GetCharacterNotificationState(class UBP_CharacterData_C* CharacterData, bool* HasNotification);
	void BPI_LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void CanUnassignSkills(bool* bCanUnassignSkills);
	void CheckUnassignForbidden();
	void CleanFocusedSlot();
	class UWidget* DoCustom_NavigationSkillList(EUINavigation Navigation_0);
	class UWidget* DoCustomNavigationSkillSlots(EUINavigation Navigation_0);
	class UWidget* DoCustomNavigationSkillTreeButton(EUINavigation Navigation_0);
	void ExecuteUbergraph_WBP_GM_SkillsPanel(int32 EntryPoint);
	void GetLastFocusedSkillSlot(int32* LastFocusedSkillSlot_0);
	void GoToSkillSelectionState(class UWBP_GM_SkillElementShort_C* InSelectedSlot);
	void GoToSlotSelectionState(class UBP_DataAsset_Skill_C* InSkillData);
	void InitializeSlotsData();
	void IsInSelectionState(bool* IsInSelectionState_0);
	void LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void OnActionBarContentUpdated(class UWBP_CommonActionBarContainer_C* ActionBarContainerWidget);
	void OnSkillItemClicked(class UBP_DataAsset_Skill_C* InSkillData);
	void OnSlotClicked(class UWBP_GM_SkillElementShort_C* InClickedSlot);
	void PreSelectSlot(int32 InSlotIndex);
	void ProcessEquipSkill(class UBP_DataAsset_Skill_C* InSkillData, int32 InSlotIndex);
	void ProcessUnequipSlot();
	void RefreshFocus();
	void RefreshSlotData(int32 InSlotIndex);
	void Set_FocusedSkill(class UBP_DataAsset_Skill_C* SkillData);
	void SetFocusedSlot(class UWBP_GM_SkillElementShort_C* InFocusedSlot);
	void SetSelectedSkillData(class UBP_DataAsset_Skill_C* SelectedSkillData_0);
	void SetSelectedSlot(class UWBP_GM_SkillElementShort_C* SelectedSlot_0);
	void StopEquip();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GM_SkillsPanel_C">();
	}
	static class UWBP_GM_SkillsPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GM_SkillsPanel_C>();
	}
};
static_assert(alignof(UWBP_GM_SkillsPanel_C) == 0x000008, "Wrong alignment on UWBP_GM_SkillsPanel_C");
static_assert(sizeof(UWBP_GM_SkillsPanel_C) == 0x000520, "Wrong size on UWBP_GM_SkillsPanel_C");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, UberGraphFrame) == 0x000430, "Member 'UWBP_GM_SkillsPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, Anim_SkillSelectionState) == 0x000438, "Member 'UWBP_GM_SkillsPanel_C::Anim_SkillSelectionState' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, AssignedSkills) == 0x000440, "Member 'UWBP_GM_SkillsPanel_C::AssignedSkills' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SkillsList) == 0x000448, "Member 'UWBP_GM_SkillsPanel_C::SkillsList' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SkillTreeButton) == 0x000450, "Member 'UWBP_GM_SkillsPanel_C::SkillTreeButton' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, WBP_CommonBoundActionButton_Assign) == 0x000458, "Member 'UWBP_GM_SkillsPanel_C::WBP_CommonBoundActionButton_Assign' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, WBP_CommonBoundActionButton_Back) == 0x000460, "Member 'UWBP_GM_SkillsPanel_C::WBP_CommonBoundActionButton_Back' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, WBP_CommonBoundActionButton_SelectSlot) == 0x000468, "Member 'UWBP_GM_SkillsPanel_C::WBP_CommonBoundActionButton_SelectSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, WBP_CommonBoundActionButton_Unassign) == 0x000470, "Member 'UWBP_GM_SkillsPanel_C::WBP_CommonBoundActionButton_Unassign' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, WBP_GM_CharacterSheet) == 0x000478, "Member 'UWBP_GM_SkillsPanel_C::WBP_GM_CharacterSheet' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, CurrentCharacterData) == 0x000480, "Member 'UWBP_GM_SkillsPanel_C::CurrentCharacterData' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, PreviewCharacterData) == 0x000488, "Member 'UWBP_GM_SkillsPanel_C::PreviewCharacterData' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, OnRequestLockCharacterSwitch) == 0x000490, "Member 'UWBP_GM_SkillsPanel_C::OnRequestLockCharacterSwitch' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SD_OnEquipedSkill) == 0x0004A0, "Member 'UWBP_GM_SkillsPanel_C::SD_OnEquipedSkill' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SD_OnUnequipedSkill) == 0x0004B0, "Member 'UWBP_GM_SkillsPanel_C::SD_OnUnequipedSkill' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SelectedSlot) == 0x0004C0, "Member 'UWBP_GM_SkillsPanel_C::SelectedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SelectedSkillData) == 0x0004C8, "Member 'UWBP_GM_SkillsPanel_C::SelectedSkillData' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, FocusedSlot) == 0x0004D0, "Member 'UWBP_GM_SkillsPanel_C::FocusedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, FocusedSkill) == 0x0004D8, "Member 'UWBP_GM_SkillsPanel_C::FocusedSkill' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, OnSkillTreeButtonClicked) == 0x0004E0, "Member 'UWBP_GM_SkillsPanel_C::OnSkillTreeButtonClicked' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, LastFocusedSkillSlot) == 0x0004F0, "Member 'UWBP_GM_SkillsPanel_C::LastFocusedSkillSlot' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SD_OnActivated) == 0x0004F8, "Member 'UWBP_GM_SkillsPanel_C::SD_OnActivated' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, SD_OnDeactivated) == 0x000508, "Member 'UWBP_GM_SkillsPanel_C::SD_OnDeactivated' has a wrong offset!");
static_assert(offsetof(UWBP_GM_SkillsPanel_C, CurrentActionBarContainer) == 0x000518, "Member 'UWBP_GM_SkillsPanel_C::CurrentActionBarContainer' has a wrong offset!");

}

