#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_UpdateSpeedRelatedToDistance

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTService_UpdateSpeedRelatedToDistance.BTService_UpdateSpeedRelatedToDistance_C.ComputeSpeed
// 0x0014 (0x0014 - 0x0000)
struct BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlackboardValueAsFloat_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed) == 0x000004, "Wrong alignment on BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed");
static_assert(sizeof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed) == 0x000014, "Wrong size on BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed, ReturnValue) == 0x000000, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed, CallFunc_GetBlackboardValueAsFloat_ReturnValue) == 0x000008, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed::CallFunc_GetBlackboardValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed, CallFunc_GetFloatValue_ReturnValue) == 0x00000C, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ComputeSpeed::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function BTService_UpdateSpeedRelatedToDistance.BTService_UpdateSpeedRelatedToDistance_C.ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance
// 0x0060 (0x0060 - 0x0000)
struct BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ComputeSpeed_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBT_FleeAiComponent_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_InitialMaxSpeed_ImplicitCast;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance) == 0x000008, "Wrong alignment on BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance");
static_assert(sizeof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance) == 0x000060, "Wrong size on BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, EntryPoint) == 0x000000, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_Event_OwnerController) == 0x000008, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, CallFunc_ComputeSpeed_ReturnValue) == 0x00001C, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::CallFunc_ComputeSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_Event_OwnerController_2) == 0x000020, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_Event_ControlledPawn_2) == 0x000028, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000038, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_Event_OwnerController_1) == 0x000040, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_Event_ControlledPawn_1) == 0x000048, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000054, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance, K2Node_VariableSet_InitialMaxSpeed_ImplicitCast) == 0x000058, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance::K2Node_VariableSet_InitialMaxSpeed_ImplicitCast' has a wrong offset!");

// Function BTService_UpdateSpeedRelatedToDistance.BTService_UpdateSpeedRelatedToDistance_C.ReceiveActivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI) == 0x000008, "Wrong alignment on BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI");
static_assert(sizeof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI) == 0x000010, "Wrong size on BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI, OwnerController) == 0x000000, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI, ControlledPawn) == 0x000008, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ReceiveActivationAI::ControlledPawn' has a wrong offset!");

// Function BTService_UpdateSpeedRelatedToDistance.BTService_UpdateSpeedRelatedToDistance_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI");
static_assert(sizeof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

// Function BTService_UpdateSpeedRelatedToDistance.BTService_UpdateSpeedRelatedToDistance_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI");
static_assert(sizeof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI) == 0x000018, "Wrong size on BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTService_UpdateSpeedRelatedToDistance_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

