#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExplorationProgressionSystem

#include "Basic.hpp"

#include "E_ExplorationCapacity_structs.hpp"
#include "E_WorldMapExplorationCapacity_structs.hpp"
#include "FExplorationProgression_SaveState_structs.hpp"


namespace SDK::Params
{

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_LoadCVar_DamageLevel
// 0x0020 (0x0020 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel final
{
public:
	class FString                                 InputPin;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel) == 0x000020, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel, InputPin) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel::InputPin' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel, CallFunc_Conv_StringToInt_ReturnValue) == 0x000014, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000019, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_DamageLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_LoadCVar_UnlockedWorldMapCapacities
// 0x0080 (0x0080 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities final
{
public:
	class FString                                 SourceString;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<E_WorldMapExplorationCapacity>         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0050(0x0010)(ConstParm, ReferenceParm)
	TArray<E_WorldMapExplorationCapacity>         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0060(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities) == 0x000080, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, SourceString) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::SourceString' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_ParseIntoArray_ReturnValue) == 0x000010, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, Temp_int_Variable) == 0x000020, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, Temp_int_Variable_1) == 0x000024, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_Conv_IntToByte_ReturnValue) == 0x000028, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_GetValidValue_ReturnValue) == 0x000030, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000031, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000048, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_Array_Contains_ReturnValue) == 0x000049, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, Temp_wildcard_Temp_buffer_array_Variable) == 0x000050, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000060, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_MakeLiteralInt_ReturnValue) == 0x000074, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVar_UnlockedWorldMapCapacities::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_LoadCVars
// 0x0002 (0x0002 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars final
{
public:
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars) == 0x000002, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_LoadCVars::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_AttackInWorld
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld) == 0x000001, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld, NewValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_AttackInWorld::NewValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_Camp
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp) == 0x000001, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp, NewValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Camp::NewValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_DamageLevel
// 0x0010 (0x0010 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel final
{
public:
	class FString                                 NewValue;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel) == 0x000010, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel, NewValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_DamageLevel::NewValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_FreeAim
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim) == 0x000001, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim, NewValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_FreeAim::NewValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_GameMenu
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu) == 0x000001, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu, NewValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_GameMenu::NewValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_Overlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay) == 0x000001, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay, NewValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Overlay::NewValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_OnCVarChanged_Teleport
// 0x0001 (0x0001 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport) == 0x000001, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport, NewValue) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_OnCVarChanged_Teleport::NewValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_UnlockExplorationCapacity
// 0x0002 (0x0002 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity final
{
public:
	E_ExplorationCapacity                         Capacity;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity) == 0x000002, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity, Capacity) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity::Capacity' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity, Unlocked) == 0x000001, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_UnlockExplorationCapacity::Unlocked' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.DEBUG_UnlockFreeAimDamageLevel
// 0x0004 (0x0004 - 0x0000)
struct BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel final
{
public:
	int32                                         DamageLevel;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel) == 0x000004, "Wrong alignment on BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel) == 0x000004, "Wrong size on BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel, DamageLevel) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_DEBUG_UnlockFreeAimDamageLevel::DamageLevel' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.GetFreeAimDamageLevel
// 0x0004 (0x0004 - 0x0000)
struct BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel final
{
public:
	int32                                         FreeAimDamageLevel_0;                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel) == 0x000004, "Wrong alignment on BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel) == 0x000004, "Wrong size on BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel, FreeAimDamageLevel_0) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_GetFreeAimDamageLevel::FreeAimDamageLevel_0' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.GetUnlockedExplorationCapacities
// 0x0010 (0x0010 - 0x0000)
struct BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities final
{
public:
	TArray<E_ExplorationCapacity>                 UnlockedExplorationCapacities_0;                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities) == 0x000010, "Wrong size on BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities, UnlockedExplorationCapacities_0) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_GetUnlockedExplorationCapacities::UnlockedExplorationCapacities_0' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.GetUnlockedWorldMapCapacities
// 0x0010 (0x0010 - 0x0000)
struct BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities final
{
public:
	TArray<E_WorldMapExplorationCapacity>         UnlockedWorldMapCapacities_0;                      // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities) == 0x000010, "Wrong size on BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities, UnlockedWorldMapCapacities_0) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_GetUnlockedWorldMapCapacities::UnlockedWorldMapCapacities_0' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.Initialize
// 0x0080 (0x0080 - 0x0000)
struct BP_ExplorationProgressionSystem_C_Initialize final
{
public:
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_4;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& NewValue)> K2Node_CreateDelegate_OutputDelegate_5;           // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate_6;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& NewValue)> K2Node_CreateDelegate_OutputDelegate_7;           // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_Initialize) == 0x000004, "Wrong alignment on BP_ExplorationProgressionSystem_C_Initialize");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_Initialize) == 0x000080, "Wrong size on BP_ExplorationProgressionSystem_C_Initialize");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate_4) == 0x000040, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate_5) == 0x000050, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate_6) == 0x000060, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate_7) == 0x000070, "Member 'BP_ExplorationProgressionSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.IsExplorationCapacityUnlocked
// 0x0020 (0x0020 - 0x0000)
struct BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked final
{
public:
	E_ExplorationCapacity                         Capacity;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_ExplorationCapacity>                 CallFunc_GetUnlockedExplorationCapacities_UnlockedExplorationCapacities; // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked) == 0x000020, "Wrong size on BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked, Capacity) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked::Capacity' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked, IsUnlocked) == 0x000001, "Member 'BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked::IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked, CallFunc_GetUnlockedExplorationCapacities_UnlockedExplorationCapacities) == 0x000008, "Member 'BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked::CallFunc_GetUnlockedExplorationCapacities_UnlockedExplorationCapacities' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'BP_ExplorationProgressionSystem_C_IsExplorationCapacityUnlocked::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.IsFreeAimTeleportUnlocked
// 0x0002 (0x0002 - 0x0000)
struct BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked final
{
public:
	bool                                          FreeAimTeleportUnlocked;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExplorationCapacityUnlocked_IsUnlocked; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked) == 0x000002, "Wrong size on BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked, FreeAimTeleportUnlocked) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked::FreeAimTeleportUnlocked' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked, CallFunc_IsExplorationCapacityUnlocked_IsUnlocked) == 0x000001, "Member 'BP_ExplorationProgressionSystem_C_IsFreeAimTeleportUnlocked::CallFunc_IsExplorationCapacityUnlocked_IsUnlocked' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.IsWorldMapCapacityUnlocked
// 0x0003 (0x0003 - 0x0000)
struct BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked final
{
public:
	E_WorldMapExplorationCapacity                 Capacity;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked) == 0x000001, "Wrong alignment on BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked) == 0x000003, "Wrong size on BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked, Capacity) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked::Capacity' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked, IsUnlocked) == 0x000001, "Member 'BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked::IsUnlocked' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked, CallFunc_Array_Contains_ReturnValue) == 0x000002, "Member 'BP_ExplorationProgressionSystem_C_IsWorldMapCapacityUnlocked::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.LoadState
// 0x0028 (0x0028 - 0x0000)
struct BP_ExplorationProgressionSystem_C_LoadState final
{
public:
	struct FFExplorationProgression_SaveState     State;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_LoadState) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_LoadState");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_LoadState) == 0x000028, "Wrong size on BP_ExplorationProgressionSystem_C_LoadState");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_LoadState, State) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_LoadState::State' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.ResetState
// 0x0010 (0x0010 - 0x0000)
struct BP_ExplorationProgressionSystem_C_ResetState final
{
public:
	TArray<E_ExplorationCapacity>                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_ResetState) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_ResetState");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_ResetState) == 0x000010, "Wrong size on BP_ExplorationProgressionSystem_C_ResetState");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_ResetState, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_ResetState::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.SaveState
// 0x0028 (0x0028 - 0x0000)
struct BP_ExplorationProgressionSystem_C_SaveState final
{
public:
	struct FFExplorationProgression_SaveState     State;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_SaveState) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_SaveState");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_SaveState) == 0x000028, "Wrong size on BP_ExplorationProgressionSystem_C_SaveState");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_SaveState, State) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_SaveState::State' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.SetExplorationCapacityUnlocked
// 0x0008 (0x0008 - 0x0000)
struct BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked final
{
public:
	E_ExplorationCapacity                         Capacity;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked) == 0x000004, "Wrong alignment on BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked) == 0x000008, "Wrong size on BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked, Capacity) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked::Capacity' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked, Unlocked) == 0x000001, "Member 'BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked::Unlocked' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked, CallFunc_Array_RemoveItem_ReturnValue) == 0x000002, "Member 'BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked, CallFunc_Array_AddUnique_ReturnValue) == 0x000004, "Member 'BP_ExplorationProgressionSystem_C_SetExplorationCapacityUnlocked::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.UnlockFreeAimDamageLevel
// 0x0008 (0x0008 - 0x0000)
struct BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel final
{
public:
	int32                                         DamageLevel;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel) == 0x000004, "Wrong alignment on BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel) == 0x000008, "Wrong size on BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel, DamageLevel) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel::DamageLevel' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'BP_ExplorationProgressionSystem_C_UnlockFreeAimDamageLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExplorationProgressionSystem.BP_ExplorationProgressionSystem_C.UnlockWorldMapCapacities
// 0x0028 (0x0028 - 0x0000)
struct BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities final
{
public:
	TArray<E_WorldMapExplorationCapacity>         Capacities;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WorldMapExplorationCapacity                 CallFunc_Array_Get_Item;                           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities) == 0x000008, "Wrong alignment on BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities");
static_assert(sizeof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities) == 0x000028, "Wrong size on BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, Capacities) == 0x000000, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::Capacities' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'BP_ExplorationProgressionSystem_C_UnlockWorldMapCapacities::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

