#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TeleportPoint_DEBUG

#include "Basic.hpp"

#include "S_AreaAudioParameters_structs.hpp"
#include "Engine_classes.hpp"
#include "SandFall_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TeleportPoint_DEBUG.TeleportPoint_DEBUG_C
// 0x00C8 (0x0358 - 0x0290)
class ATeleportPoint_DEBUG_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Sphere2;                                           // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere1;                                           // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Debug_Teleport;                                    // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ManuallyAjustTpNumber;                             // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TPNumber;                                          // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 Debug_TP_Point_;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_LightingScenarioReference_C> LightingScenarioToActivate;                // 0x02D8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AreaAudioParameters                 MusicToPlay;                                       // 0x0300(0x0038)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugDontTriggerMovementZone;                      // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_MapSpawnPoint_C*               ReferenceSpawnPoint;                               // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameAction_Wrapper                    GameActionToExecute;                               // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, AdvancedDisplay)

public:
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	void TeleportCharacter(class ABP_jRPG_Character_World_C* CharacterWorld);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TeleportPoint_DEBUG_C">();
	}
	static class ATeleportPoint_DEBUG_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATeleportPoint_DEBUG_C>();
	}
};
static_assert(alignof(ATeleportPoint_DEBUG_C) == 0x000008, "Wrong alignment on ATeleportPoint_DEBUG_C");
static_assert(sizeof(ATeleportPoint_DEBUG_C) == 0x000358, "Wrong size on ATeleportPoint_DEBUG_C");
static_assert(offsetof(ATeleportPoint_DEBUG_C, Sphere2) == 0x000290, "Member 'ATeleportPoint_DEBUG_C::Sphere2' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, Sphere1) == 0x000298, "Member 'ATeleportPoint_DEBUG_C::Sphere1' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, Cube) == 0x0002A0, "Member 'ATeleportPoint_DEBUG_C::Cube' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, Debug_Teleport) == 0x0002A8, "Member 'ATeleportPoint_DEBUG_C::Debug_Teleport' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, Sphere) == 0x0002B0, "Member 'ATeleportPoint_DEBUG_C::Sphere' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, DefaultSceneRoot) == 0x0002B8, "Member 'ATeleportPoint_DEBUG_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, ManuallyAjustTpNumber) == 0x0002C0, "Member 'ATeleportPoint_DEBUG_C::ManuallyAjustTpNumber' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, TPNumber) == 0x0002C4, "Member 'ATeleportPoint_DEBUG_C::TPNumber' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, Debug_TP_Point_) == 0x0002C8, "Member 'ATeleportPoint_DEBUG_C::Debug_TP_Point_' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, LightingScenarioToActivate) == 0x0002D8, "Member 'ATeleportPoint_DEBUG_C::LightingScenarioToActivate' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, MusicToPlay) == 0x000300, "Member 'ATeleportPoint_DEBUG_C::MusicToPlay' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, DebugDontTriggerMovementZone) == 0x000338, "Member 'ATeleportPoint_DEBUG_C::DebugDontTriggerMovementZone' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, ReferenceSpawnPoint) == 0x000340, "Member 'ATeleportPoint_DEBUG_C::ReferenceSpawnPoint' has a wrong offset!");
static_assert(offsetof(ATeleportPoint_DEBUG_C, GameActionToExecute) == 0x000348, "Member 'ATeleportPoint_DEBUG_C::GameActionToExecute' has a wrong offset!");

}

