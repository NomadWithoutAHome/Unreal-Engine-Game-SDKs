#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoamingAiComponent

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.CheckForErrors
// 0x00D0 (0x00D0 - 0x0000)
struct BP_RoamingAiComponent_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_CheckForErrors");
static_assert(sizeof(BP_RoamingAiComponent_C_CheckForErrors) == 0x0000D0, "Wrong size on BP_RoamingAiComponent_C_CheckForErrors");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_RoamingAiComponent_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_RoamingAiComponent_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless) == 0x000020, "Member 'BP_RoamingAiComponent_C_CheckForErrors::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_RoamingAiComponent_C_CheckForErrors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_GetDisplayName_ReturnValue) == 0x000030, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_RoamingAiComponent_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_RoamingAiComponent_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000B0, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_BooleanAND_ReturnValue) == 0x0000C8, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'BP_RoamingAiComponent_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.SaveCurrentRoamingPoint
// 0x0028 (0x0028 - 0x0000)
struct BP_RoamingAiComponent_C_SaveCurrentRoamingPoint final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SerializableActorComponent_C*       CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_SaveCurrentRoamingPoint) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_SaveCurrentRoamingPoint");
static_assert(sizeof(BP_RoamingAiComponent_C_SaveCurrentRoamingPoint) == 0x000028, "Wrong size on BP_RoamingAiComponent_C_SaveCurrentRoamingPoint");
static_assert(offsetof(BP_RoamingAiComponent_C_SaveCurrentRoamingPoint, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_RoamingAiComponent_C_SaveCurrentRoamingPoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_SaveCurrentRoamingPoint, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_RoamingAiComponent_C_SaveCurrentRoamingPoint::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_SaveCurrentRoamingPoint, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_RoamingAiComponent_C_SaveCurrentRoamingPoint::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_SaveCurrentRoamingPoint, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_RoamingAiComponent_C_SaveCurrentRoamingPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_SaveCurrentRoamingPoint, CallFunc_GetGlobalObjectID_ObjectID) == 0x00001C, "Member 'BP_RoamingAiComponent_C_SaveCurrentRoamingPoint::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.LoadState
// 0x0020 (0x0020 - 0x0000)
struct BP_RoamingAiComponent_C_LoadState final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSavedRoamingPointIndex_Index;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSavedRoamingPointIndex_IsValid;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_LoadState) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_LoadState");
static_assert(sizeof(BP_RoamingAiComponent_C_LoadState) == 0x000020, "Wrong size on BP_RoamingAiComponent_C_LoadState");
static_assert(offsetof(BP_RoamingAiComponent_C_LoadState, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_RoamingAiComponent_C_LoadState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_LoadState, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless) == 0x000008, "Member 'BP_RoamingAiComponent_C_LoadState::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_LoadState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_RoamingAiComponent_C_LoadState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_LoadState, CallFunc_GetSavedRoamingPointIndex_Index) == 0x000014, "Member 'BP_RoamingAiComponent_C_LoadState::CallFunc_GetSavedRoamingPointIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_LoadState, CallFunc_GetSavedRoamingPointIndex_IsValid) == 0x000018, "Member 'BP_RoamingAiComponent_C_LoadState::CallFunc_GetSavedRoamingPointIndex_IsValid' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.InitiliazeFromInitialRoamingPoint
// 0x00A8 (0x00A8 - 0x0000)
struct BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint final
{
public:
	TSoftObjectPtr<class ATargetPoint>            CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           CallFunc_GetNextPoint_Point;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPoint_Index;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ATargetPoint>            CallFunc_Array_Get_Item;                           // 0x0050(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point_1;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point_2;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint");
static_assert(sizeof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint) == 0x0000A8, "Wrong size on BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000000, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, K2Node_DynamicCast_AsTarget_Point) == 0x000030, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::K2Node_DynamicCast_AsTarget_Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_Array_Find_ReturnValue) == 0x00003C, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_GetNextPoint_Point) == 0x000040, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_GetNextPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_GetNextPoint_Index) == 0x000048, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_GetNextPoint_Index' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000078, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, K2Node_DynamicCast_AsTarget_Point_1) == 0x000080, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::K2Node_DynamicCast_AsTarget_Point_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000090, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, K2Node_DynamicCast_AsTarget_Point_2) == 0x000098, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::K2Node_DynamicCast_AsTarget_Point_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'BP_RoamingAiComponent_C_InitiliazeFromInitialRoamingPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.InitializeWithCurrentIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_RoamingAiComponent_C_InitializeWithCurrentIndex final
{
public:
	class ATargetPoint*                           CallFunc_GetNextPoint_Point;                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPoint_Index;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ATargetPoint>            CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_InitializeWithCurrentIndex");
static_assert(sizeof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex) == 0x000050, "Wrong size on BP_RoamingAiComponent_C_InitializeWithCurrentIndex");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex, CallFunc_GetNextPoint_Point) == 0x000000, "Member 'BP_RoamingAiComponent_C_InitializeWithCurrentIndex::CallFunc_GetNextPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex, CallFunc_GetNextPoint_Index) == 0x000008, "Member 'BP_RoamingAiComponent_C_InitializeWithCurrentIndex::CallFunc_GetNextPoint_Index' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_RoamingAiComponent_C_InitializeWithCurrentIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000038, "Member 'BP_RoamingAiComponent_C_InitializeWithCurrentIndex::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex, K2Node_DynamicCast_AsTarget_Point) == 0x000040, "Member 'BP_RoamingAiComponent_C_InitializeWithCurrentIndex::K2Node_DynamicCast_AsTarget_Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeWithCurrentIndex, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_RoamingAiComponent_C_InitializeWithCurrentIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.InitializeRoamingPoints
// 0x000C (0x000C - 0x0000)
struct BP_RoamingAiComponent_C_InitializeRoamingPoints final
{
public:
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_InitializeRoamingPoints) == 0x000004, "Wrong alignment on BP_RoamingAiComponent_C_InitializeRoamingPoints");
static_assert(sizeof(BP_RoamingAiComponent_C_InitializeRoamingPoints) == 0x00000C, "Wrong size on BP_RoamingAiComponent_C_InitializeRoamingPoints");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000000, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_Less_IntInt_ReturnValue) == 0x000009, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_InitializeRoamingPoints, CallFunc_BooleanAND_ReturnValue_1) == 0x00000A, "Member 'BP_RoamingAiComponent_C_InitializeRoamingPoints::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.GetNextTargetPoint
// 0x0008 (0x0008 - 0x0000)
struct BP_RoamingAiComponent_C_GetNextTargetPoint final
{
public:
	class ATargetPoint*                           CurrentTargetPoint_0;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_GetNextTargetPoint) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_GetNextTargetPoint");
static_assert(sizeof(BP_RoamingAiComponent_C_GetNextTargetPoint) == 0x000008, "Wrong size on BP_RoamingAiComponent_C_GetNextTargetPoint");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextTargetPoint, CurrentTargetPoint_0) == 0x000000, "Member 'BP_RoamingAiComponent_C_GetNextTargetPoint::CurrentTargetPoint_0' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.GetCurrentTargetPoint
// 0x0008 (0x0008 - 0x0000)
struct BP_RoamingAiComponent_C_GetCurrentTargetPoint final
{
public:
	class ATargetPoint*                           CurrentTargetPoint_0;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_GetCurrentTargetPoint) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_GetCurrentTargetPoint");
static_assert(sizeof(BP_RoamingAiComponent_C_GetCurrentTargetPoint) == 0x000008, "Wrong size on BP_RoamingAiComponent_C_GetCurrentTargetPoint");
static_assert(offsetof(BP_RoamingAiComponent_C_GetCurrentTargetPoint, CurrentTargetPoint_0) == 0x000000, "Member 'BP_RoamingAiComponent_C_GetCurrentTargetPoint::CurrentTargetPoint_0' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.SetNextWaypointActive
// 0x0020 (0x0020 - 0x0000)
struct BP_RoamingAiComponent_C_SetNextWaypointActive final
{
public:
	class ATargetPoint*                           CallFunc_GetNextPoint_Point;                       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPoint_Index;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATargetPoint*                           CallFunc_GetNextPoint_Point_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNextPoint_Index_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_SetNextWaypointActive) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_SetNextWaypointActive");
static_assert(sizeof(BP_RoamingAiComponent_C_SetNextWaypointActive) == 0x000020, "Wrong size on BP_RoamingAiComponent_C_SetNextWaypointActive");
static_assert(offsetof(BP_RoamingAiComponent_C_SetNextWaypointActive, CallFunc_GetNextPoint_Point) == 0x000000, "Member 'BP_RoamingAiComponent_C_SetNextWaypointActive::CallFunc_GetNextPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_SetNextWaypointActive, CallFunc_GetNextPoint_Index) == 0x000008, "Member 'BP_RoamingAiComponent_C_SetNextWaypointActive::CallFunc_GetNextPoint_Index' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_SetNextWaypointActive, CallFunc_GetNextPoint_Point_1) == 0x000010, "Member 'BP_RoamingAiComponent_C_SetNextWaypointActive::CallFunc_GetNextPoint_Point_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_SetNextWaypointActive, CallFunc_GetNextPoint_Index_1) == 0x000018, "Member 'BP_RoamingAiComponent_C_SetNextWaypointActive::CallFunc_GetNextPoint_Index_1' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.ExecuteUbergraph_BP_RoamingAiComponent
// 0x01A0 (0x01A0 - 0x0000)
struct BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue_1;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue_2;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0030(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0110(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0128(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0180(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0190(0x0010)()
};
static_assert(alignof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent");
static_assert(sizeof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent) == 0x0001A0, "Wrong size on BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, EntryPoint) == 0x000000, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_RunBehaviorTree_ReturnValue) == 0x000006, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_RunBehaviorTree_ReturnValue_1) == 0x000007, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_RunBehaviorTree_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_GetAIController_ReturnValue) == 0x000010, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_IsValid_ReturnValue_2) == 0x000018, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_RunBehaviorTree_ReturnValue_2) == 0x000019, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_RunBehaviorTree_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_GetOwner_ReturnValue_1) == 0x000020, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_GetOwner_ReturnValue_2) == 0x000028, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000030, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000040, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, K2Node_MakeArray_Array_1) == 0x0000F0, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_Format_ReturnValue_1) == 0x000110, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000120, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000128, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, K2Node_MakeArray_Array_2) == 0x000180, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent, CallFunc_Format_ReturnValue_2) == 0x000190, "Member 'BP_RoamingAiComponent_C_ExecuteUbergraph_BP_RoamingAiComponent::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.Editor_DrawDebugShapes
// 0x0001 (0x0001 - 0x0000)
struct BP_RoamingAiComponent_C_Editor_DrawDebugShapes final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_Editor_DrawDebugShapes) == 0x000001, "Wrong alignment on BP_RoamingAiComponent_C_Editor_DrawDebugShapes");
static_assert(sizeof(BP_RoamingAiComponent_C_Editor_DrawDebugShapes) == 0x000001, "Wrong size on BP_RoamingAiComponent_C_Editor_DrawDebugShapes");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_DrawDebugShapes, ReturnValue) == 0x000000, "Member 'BP_RoamingAiComponent_C_Editor_DrawDebugShapes::ReturnValue' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.Editor_GetDebugShapes
// 0x02F0 (0x02F0 - 0x0000)
struct BP_RoamingAiComponent_C_Editor_GetDebugShapes final
{
public:
	TArray<struct FEditorDebugShape_Arrow>        Arrows;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FEditorDebugShape_Arrow>        Lines;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ATargetPoint>            CallFunc_Array_Get_Item;                           // 0x0078(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point;                 // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShorterVector_Start2;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShorterVector_End2;                    // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ATargetPoint>            CallFunc_Array_Get_Item_1;                         // 0x0120(0x0028)(HasGetValueTypeHash)
	struct FEditorDebugShape_Arrow                K2Node_MakeStruct_EditorDebugShape_Arrow;          // 0x0148(0x0048)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point_1;               // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ATargetPoint>            CallFunc_Array_Get_Item_2;                         // 0x01F0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point_2;               // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetShorterVector_Start2_1;                // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShorterVector_End2_1;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEditorDebugShape_Arrow                K2Node_MakeStruct_EditorDebugShape_Arrow_1;        // 0x02A0(0x0048)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_Editor_GetDebugShapes) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_Editor_GetDebugShapes");
static_assert(sizeof(BP_RoamingAiComponent_C_Editor_GetDebugShapes) == 0x0002F0, "Wrong size on BP_RoamingAiComponent_C_Editor_GetDebugShapes");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, Arrows) == 0x000000, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::Arrows' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, Lines) == 0x000010, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::Lines' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, ReturnValue) == 0x000020, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000030, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Percent_IntInt_ReturnValue) == 0x00006C, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, Temp_int_Variable) == 0x000070, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000A8, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_DynamicCast_AsTarget_Point) == 0x0000B0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_DynamicCast_AsTarget_Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000C0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_GetShorterVector_Start2) == 0x0000F0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_GetShorterVector_Start2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_GetShorterVector_End2) == 0x000108, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_GetShorterVector_End2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_MakeStruct_EditorDebugShape_Arrow) == 0x000148, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_MakeStruct_EditorDebugShape_Arrow' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000190, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_Add_ReturnValue) == 0x000198, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_DynamicCast_AsTarget_Point_1) == 0x0001A0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_DynamicCast_AsTarget_Point_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_DynamicCast_bSuccess_1) == 0x0001A8, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_Length_ReturnValue_1) == 0x0001AC, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001B0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001D0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Percent_IntInt_ReturnValue_1) == 0x0001E8, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_IsValid_ReturnValue) == 0x0001EC, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_Get_Item_2) == 0x0001F0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000218, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_DynamicCast_AsTarget_Point_2) == 0x000220, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_DynamicCast_AsTarget_Point_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_DynamicCast_bSuccess_2) == 0x000228, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000230, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_IsValid_ReturnValue_1) == 0x000248, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000250, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_BooleanAND_ReturnValue) == 0x000268, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_GetShorterVector_Start2_1) == 0x000270, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_GetShorterVector_Start2_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_GetShorterVector_End2_1) == 0x000288, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_GetShorterVector_End2_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, K2Node_MakeStruct_EditorDebugShape_Arrow_1) == 0x0002A0, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::K2Node_MakeStruct_EditorDebugShape_Arrow_1' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_Editor_GetDebugShapes, CallFunc_Array_Add_ReturnValue_1) == 0x0002E8, "Member 'BP_RoamingAiComponent_C_Editor_GetDebugShapes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_RoamingAiComponent.BP_RoamingAiComponent_C.GetNextPoint
// 0x0060 (0x0060 - 0x0000)
struct BP_RoamingAiComponent_C_GetNextPoint final
{
public:
	class ATargetPoint*                           Point;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ATargetPoint>            CallFunc_Array_Get_Item;                           // 0x0020(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATargetPoint*                           K2Node_DynamicCast_AsTarget_Point;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_RoamingAiComponent_C_GetNextPoint) == 0x000008, "Wrong alignment on BP_RoamingAiComponent_C_GetNextPoint");
static_assert(sizeof(BP_RoamingAiComponent_C_GetNextPoint) == 0x000060, "Wrong size on BP_RoamingAiComponent_C_GetNextPoint");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, Point) == 0x000000, "Member 'BP_RoamingAiComponent_C_GetNextPoint::Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, Index_0) == 0x000008, "Member 'BP_RoamingAiComponent_C_GetNextPoint::Index_0' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_RoamingAiComponent_C_GetNextPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_RoamingAiComponent_C_GetNextPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, CallFunc_Array_IsEmpty_ReturnValue) == 0x000014, "Member 'BP_RoamingAiComponent_C_GetNextPoint::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, CallFunc_Percent_IntInt_ReturnValue) == 0x000018, "Member 'BP_RoamingAiComponent_C_GetNextPoint::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_RoamingAiComponent_C_GetNextPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000048, "Member 'BP_RoamingAiComponent_C_GetNextPoint::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, K2Node_DynamicCast_AsTarget_Point) == 0x000050, "Member 'BP_RoamingAiComponent_C_GetNextPoint::K2Node_DynamicCast_AsTarget_Point' has a wrong offset!");
static_assert(offsetof(BP_RoamingAiComponent_C_GetNextPoint, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_RoamingAiComponent_C_GetNextPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

