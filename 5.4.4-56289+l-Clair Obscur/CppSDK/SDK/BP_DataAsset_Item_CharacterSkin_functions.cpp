#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataAsset_Item_CharacterSkin

#include "Basic.hpp"

#include "BP_DataAsset_Item_CharacterSkin_classes.hpp"
#include "BP_DataAsset_Item_CharacterSkin_parameters.hpp"


namespace SDK
{

// Function BP_DataAsset_Item_CharacterSkin.BP_DataAsset_Item_CharacterSkin_C.OnRemovedFromInventory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_jRPG_GI_Custom_C*             GameInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_InventoryManager_C*      InventoryManager                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_Item_CharacterSkin_C::OnRemovedFromInventory(class UBP_jRPG_GI_Custom_C* GameInstance, class UAC_jRPG_InventoryManager_C* InventoryManager, class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_Item_CharacterSkin_C", "OnRemovedFromInventory");

	Params::BP_DataAsset_Item_CharacterSkin_C_OnRemovedFromInventory Parms{};

	Parms.GameInstance = GameInstance;
	Parms.InventoryManager = InventoryManager;
	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DataAsset_Item_CharacterSkin.BP_DataAsset_Item_CharacterSkin_C.UpdateCharacterCustomization_Internal
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterData_C*              CharacterData                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_DataAsset_Item_CharacterSkin_C::UpdateCharacterCustomization_Internal(class UBP_CharacterData_C* CharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DataAsset_Item_CharacterSkin_C", "UpdateCharacterCustomization_Internal");

	Params::BP_DataAsset_Item_CharacterSkin_C_UpdateCharacterCustomization_Internal Parms{};

	Parms.CharacterData = CharacterData;

	UObject::ProcessEvent(Func, &Parms);
}

}

