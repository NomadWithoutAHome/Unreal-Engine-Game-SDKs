#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConditionalDataLayersManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_ConditionalDataLayers_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ConditionalDataLayersManager.BP_ConditionalDataLayersManager_C
// 0x0028 (0x02B8 - 0x0290)
class ABP_ConditionalDataLayersManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ConditionalDataLayers>       ConditionalDataLayers;                             // 0x02A0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         ConditionIndex;                                    // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConditionValue;                                    // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UnbindCondition(const struct FS_ConditionalDataLayers& ConditionalDataLayers_0);
	void UnbindAllConditions();
	void SetDataLayersRuntimeStateForEditor(TArray<class UDataLayerAsset*>& DataLayers, EDataLayerRuntimeState State);
	void SetDataLayersRuntimeState(TArray<class UDataLayerAsset*>& DataLayers, TArray<class FName>& DataLayerNames, EDataLayerRuntimeState State);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void OnGameStateChanged();
	void OnGameModePreStartPlay();
	void OnConditionEvaluatedToTrue(const struct FS_ConditionalDataLayers& ConditionalDataLayers_0);
	void OnConditionEvaluatedToFalse(const struct FS_ConditionalDataLayers& ConditionalDataLayers_0);
	void ForceConditionAtIndex(int32 Index_0, bool Value);
	void ForceCondition();
	void ExecuteUbergraph_BP_ConditionalDataLayersManager(int32 EntryPoint);
	void EvaluateCondition(const struct FS_ConditionalDataLayers& ConditionalDataLayer);
	void EvaluateAllConditions(bool IsBeginPlay);
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	void BindCondition(const struct FS_ConditionalDataLayers& ConditionalDataLayers_0);
	void BindAllConditions();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ConditionalDataLayersManager_C">();
	}
	static class ABP_ConditionalDataLayersManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ConditionalDataLayersManager_C>();
	}
};
static_assert(alignof(ABP_ConditionalDataLayersManager_C) == 0x000008, "Wrong alignment on ABP_ConditionalDataLayersManager_C");
static_assert(sizeof(ABP_ConditionalDataLayersManager_C) == 0x0002B8, "Wrong size on ABP_ConditionalDataLayersManager_C");
static_assert(offsetof(ABP_ConditionalDataLayersManager_C, UberGraphFrame) == 0x000290, "Member 'ABP_ConditionalDataLayersManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ConditionalDataLayersManager_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_ConditionalDataLayersManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ConditionalDataLayersManager_C, ConditionalDataLayers) == 0x0002A0, "Member 'ABP_ConditionalDataLayersManager_C::ConditionalDataLayers' has a wrong offset!");
static_assert(offsetof(ABP_ConditionalDataLayersManager_C, ConditionIndex) == 0x0002B0, "Member 'ABP_ConditionalDataLayersManager_C::ConditionIndex' has a wrong offset!");
static_assert(offsetof(ABP_ConditionalDataLayersManager_C, ConditionValue) == 0x0002B4, "Member 'ABP_ConditionalDataLayersManager_C::ConditionValue' has a wrong offset!");

}

