#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Name_UniqueMechanics

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Name_UniqueMechanics.WBP_Name_UniqueMechanics_C.ExecuteUbergraph_WBP_Name_UniqueMechanics
// 0x0008 (0x0008 - 0x0000)
struct WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics) == 0x000004, "Wrong alignment on WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics");
static_assert(sizeof(WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics) == 0x000008, "Wrong size on WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics, EntryPoint) == 0x000000, "Member 'WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Name_UniqueMechanics_C_ExecuteUbergraph_WBP_Name_UniqueMechanics::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_Name_UniqueMechanics.WBP_Name_UniqueMechanics_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Name_UniqueMechanics_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Name_UniqueMechanics_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Name_UniqueMechanics_C_PreConstruct");
static_assert(sizeof(WBP_Name_UniqueMechanics_C_PreConstruct) == 0x000001, "Wrong size on WBP_Name_UniqueMechanics_C_PreConstruct");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Name_UniqueMechanics_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Name_UniqueMechanics.WBP_Name_UniqueMechanics_C.SetNameText
// 0x0010 (0x0010 - 0x0000)
struct WBP_Name_UniqueMechanics_C_SetNameText final
{
public:
	class FText                                   MechaName_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Name_UniqueMechanics_C_SetNameText) == 0x000008, "Wrong alignment on WBP_Name_UniqueMechanics_C_SetNameText");
static_assert(sizeof(WBP_Name_UniqueMechanics_C_SetNameText) == 0x000010, "Wrong size on WBP_Name_UniqueMechanics_C_SetNameText");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_SetNameText, MechaName_0) == 0x000000, "Member 'WBP_Name_UniqueMechanics_C_SetNameText::MechaName_0' has a wrong offset!");

// Function WBP_Name_UniqueMechanics.WBP_Name_UniqueMechanics_C.SetStateText
// 0x0060 (0x0060 - 0x0000)
struct WBP_Name_UniqueMechanics_C_SetStateText final
{
public:
	class FText                                   MechaState_0;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            InColorAndOpacity;                                 // 0x0010(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0044(0x0014)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Name_UniqueMechanics_C_SetStateText) == 0x000008, "Wrong alignment on WBP_Name_UniqueMechanics_C_SetStateText");
static_assert(sizeof(WBP_Name_UniqueMechanics_C_SetStateText) == 0x000060, "Wrong size on WBP_Name_UniqueMechanics_C_SetStateText");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_SetStateText, MechaState_0) == 0x000000, "Member 'WBP_Name_UniqueMechanics_C_SetStateText::MechaState_0' has a wrong offset!");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_SetStateText, InColorAndOpacity) == 0x000010, "Member 'WBP_Name_UniqueMechanics_C_SetStateText::InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_SetStateText, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000024, "Member 'WBP_Name_UniqueMechanics_C_SetStateText::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_SetStateText, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000034, "Member 'WBP_Name_UniqueMechanics_C_SetStateText::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_SetStateText, K2Node_MakeStruct_SlateColor) == 0x000044, "Member 'WBP_Name_UniqueMechanics_C_SetStateText::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Name_UniqueMechanics_C_SetStateText, CallFunc_PlayAnimationForward_ReturnValue) == 0x000058, "Member 'WBP_Name_UniqueMechanics_C_SetStateText::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

}

