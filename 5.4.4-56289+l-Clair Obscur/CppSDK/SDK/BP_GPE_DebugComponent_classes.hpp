#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_DebugComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GPE_DebugComponent.BP_GPE_DebugComponent_C
// 0x0060 (0x0100 - 0x00A0)
class UBP_GPE_DebugComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          GPETriggerIsActive;                                // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AActor*, double>                   GPEActivatedByImpulse;                             // 0x00B0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	bool CheckForErrors(TArray<class FText>& ErrorMessages);
	void InverseGPETriggerIsActive();
	void AddImpulseActivation(class AActor* GPE);
	void ReceiveBeginPlay();
	void OnDebugInPlayModeChanged(bool NewValue);
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_GPE_DebugComponent(int32 EntryPoint);

	bool Editor_DrawDebugShapes() const;
	bool Editor_GetDebugShapes(TArray<struct FEditorDebugShape_Arrow>& Arrows, TArray<struct FEditorDebugShape_Arrow>& Lines) const;
	void SelectDebugColor(class AActor* GPE, struct FLinearColor* Color) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GPE_DebugComponent_C">();
	}
	static class UBP_GPE_DebugComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GPE_DebugComponent_C>();
	}
};
static_assert(alignof(UBP_GPE_DebugComponent_C) == 0x000008, "Wrong alignment on UBP_GPE_DebugComponent_C");
static_assert(sizeof(UBP_GPE_DebugComponent_C) == 0x000100, "Wrong size on UBP_GPE_DebugComponent_C");
static_assert(offsetof(UBP_GPE_DebugComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_GPE_DebugComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GPE_DebugComponent_C, GPETriggerIsActive) == 0x0000A8, "Member 'UBP_GPE_DebugComponent_C::GPETriggerIsActive' has a wrong offset!");
static_assert(offsetof(UBP_GPE_DebugComponent_C, GPEActivatedByImpulse) == 0x0000B0, "Member 'UBP_GPE_DebugComponent_C::GPEActivatedByImpulse' has a wrong offset!");

}

