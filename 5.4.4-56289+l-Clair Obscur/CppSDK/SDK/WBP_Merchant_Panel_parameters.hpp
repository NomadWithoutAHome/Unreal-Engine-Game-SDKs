#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Merchant_Panel

#include "Basic.hpp"

#include "S_MerchantItemSellData_structs.hpp"
#include "S_jRPG_PartySlot_structs.hpp"
#include "S_CharacterSelectorParameters_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_BuyItemButton_K2Node_ComponentBoundEvent_6_OnButtonBaseActionProgress__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_FightMerchantButton_K2Node_ComponentBoundEvent_7_OnButtonBaseActionProgress__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature");
static_assert(sizeof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong size on WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature");
static_assert(offsetof(WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Merchant_Panel_C_BndEvt__WBP_Merchant_Panel_LeaveButton_K2Node_ComponentBoundEvent_8_OnButtonBaseActionProgress__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.CreateCharacterSelectorWidget
// 0x0030 (0x0030 - 0x0000)
struct WBP_Merchant_Panel_C_CreateCharacterSelectorWidget final
{
public:
	struct FS_CharacterSelectorParameters         K2Node_MakeStruct_S_CharacterSelectorParameters;   // 0x0000(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UBP_CharacterData_C*>& CharacterDatas)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharacterSelectorPanel_C*          CallFunc_CreateCharacterSelectorWindow_CharacterSelectorWindow; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_CreateCharacterSelectorWidget) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_CreateCharacterSelectorWidget");
static_assert(sizeof(WBP_Merchant_Panel_C_CreateCharacterSelectorWidget) == 0x000030, "Wrong size on WBP_Merchant_Panel_C_CreateCharacterSelectorWidget");
static_assert(offsetof(WBP_Merchant_Panel_C_CreateCharacterSelectorWidget, K2Node_MakeStruct_S_CharacterSelectorParameters) == 0x000000, "Member 'WBP_Merchant_Panel_C_CreateCharacterSelectorWidget::K2Node_MakeStruct_S_CharacterSelectorParameters' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_CreateCharacterSelectorWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Merchant_Panel_C_CreateCharacterSelectorWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_CreateCharacterSelectorWidget, CallFunc_CreateCharacterSelectorWindow_CharacterSelectorWindow) == 0x000018, "Member 'WBP_Merchant_Panel_C_CreateCharacterSelectorWidget::CallFunc_CreateCharacterSelectorWindow_CharacterSelectorWindow' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_CreateCharacterSelectorWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_Merchant_Panel_C_CreateCharacterSelectorWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.CreateMerchantItem
// 0x0188 (0x0188 - 0x0000)
struct WBP_Merchant_Panel_C_CreateMerchantItem final
{
public:
	struct FS_MerchantItemSellData                Item;                                              // 0x0000(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void(class UWBP_Merchant_Item_Row_C* Widget)> K2Node_CreateDelegate_OutputDelegate;    // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Merchant_Item_Row_C*               CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_CreateMerchantItem) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_CreateMerchantItem");
static_assert(sizeof(WBP_Merchant_Panel_C_CreateMerchantItem) == 0x000188, "Wrong size on WBP_Merchant_Panel_C_CreateMerchantItem");
static_assert(offsetof(WBP_Merchant_Panel_C_CreateMerchantItem, Item) == 0x000000, "Member 'WBP_Merchant_Panel_C_CreateMerchantItem::Item' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_CreateMerchantItem, K2Node_CreateDelegate_OutputDelegate) == 0x000170, "Member 'WBP_Merchant_Panel_C_CreateMerchantItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_CreateMerchantItem, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000180, "Member 'WBP_Merchant_Panel_C_CreateMerchantItem::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.ExecuteUbergraph_WBP_Merchant_Panel
// 0x0200 (0x0200 - 0x0000)
struct WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGoldAmount_GoldAmount;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGoldAmount_GoldAmount_1;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1;  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Progress_2;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Progress_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_Progress;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_GetMerchantItem_MerchantItem;             // 0x0088(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_TryBuyItem_ReturnValue;                   // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel");
static_assert(sizeof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel) == 0x000200, "Wrong size on WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, EntryPoint) == 0x000000, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_GetGoldAmount_GoldAmount) == 0x000004, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_GetGoldAmount_GoldAmount' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_GetGoldAmount_GoldAmount_1) == 0x000008, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_GetGoldAmount_GoldAmount_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_GetPlayerController_ReturnValue_1) == 0x000018, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000020, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1) == 0x000030, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_DynamicCast_AsBP_J_RPG_Controller_World_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_ComponentBoundEvent_Button_2) == 0x000040, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_ComponentBoundEvent_Button_1) == 0x000048, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_ComponentBoundEvent_Button) == 0x000050, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_ComponentBoundEvent_Progress_2) == 0x000058, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_ComponentBoundEvent_Progress_2' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_ComponentBoundEvent_Progress_1) == 0x000060, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_ComponentBoundEvent_Progress_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_ComponentBoundEvent_Progress) == 0x000068, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_ComponentBoundEvent_Progress' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, K2Node_Event_IsDesignTime) == 0x000071, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_GetNiagaraComponent_ReturnValue) == 0x000078, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_GetMerchantItem_MerchantItem) == 0x000088, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_GetMerchantItem_MerchantItem' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel, CallFunc_TryBuyItem_ReturnValue) == 0x0001F8, "Member 'WBP_Merchant_Panel_C_ExecuteUbergraph_WBP_Merchant_Panel::CallFunc_TryBuyItem_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.LoadMerchant
// 0x03B0 (0x03B0 - 0x0000)
struct WBP_Merchant_Panel_C_LoadMerchant final
{
public:
	class UBP_MerchantComponent_C*                Merchant;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsItemFound;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FS_MerchantItemSellData> CallFunc_LoadMerchantData_AvailableItems;      // 0x0020(0x0050)(ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0078(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0090(0x0010)(ReferenceParm)
	class UWBP_Merchant_Item_Row_C*               K2Node_DynamicCast_AsWBP_Merchant_Item_Row;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_GetMerchantItem_MerchantItem;             // 0x00B8(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_Map_Find_Value;                           // 0x0238(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_LoadMerchant) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_LoadMerchant");
static_assert(sizeof(WBP_Merchant_Panel_C_LoadMerchant) == 0x0003B0, "Wrong size on WBP_Merchant_Panel_C_LoadMerchant");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, Merchant) == 0x000000, "Member 'WBP_Merchant_Panel_C_LoadMerchant::Merchant' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, IsItemFound) == 0x000008, "Member 'WBP_Merchant_Panel_C_LoadMerchant::IsItemFound' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Merchant_Panel_C_LoadMerchant::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_Merchant_Panel_C_LoadMerchant::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'WBP_Merchant_Panel_C_LoadMerchant::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_LoadMerchantData_AvailableItems) == 0x000020, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_LoadMerchantData_AvailableItems' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'WBP_Merchant_Panel_C_LoadMerchant::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_GetAllEntries_ReturnValue) == 0x000078, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Array_Get_Item) == 0x000088, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Map_Keys_Keys) == 0x000090, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, K2Node_DynamicCast_AsWBP_Merchant_Item_Row) == 0x0000A0, "Member 'WBP_Merchant_Panel_C_LoadMerchant::K2Node_DynamicCast_AsWBP_Merchant_Item_Row' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WBP_Merchant_Panel_C_LoadMerchant::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Array_Get_Item_1) == 0x0000AC, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_GetMerchantItem_MerchantItem) == 0x0000B8, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_GetMerchantItem_MerchantItem' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Array_Length_ReturnValue) == 0x000228, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Less_IntInt_ReturnValue) == 0x00022C, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Array_Length_ReturnValue_1) == 0x000230, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Less_IntInt_ReturnValue_1) == 0x000234, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Map_Find_Value) == 0x000238, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_Map_Find_ReturnValue) == 0x0003A8, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_LoadMerchant, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0003A9, "Member 'WBP_Merchant_Panel_C_LoadMerchant::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.OnCharacterSelectionDoneToFightMerchant
// 0x0038 (0x0038 - 0x0000)
struct WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant final
{
public:
	TArray<class UBP_CharacterData_C*>            CharacterDatas;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_CharacterData_C*                    CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_PartySlot                      K2Node_MakeStruct_S_jRPG_PartySlot;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_jRPG_PartySlot>              K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant");
static_assert(sizeof(WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant) == 0x000038, "Wrong size on WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant");
static_assert(offsetof(WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant, CharacterDatas) == 0x000000, "Member 'WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant::CharacterDatas' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant, K2Node_MakeStruct_S_jRPG_PartySlot) == 0x000018, "Member 'WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant::K2Node_MakeStruct_S_jRPG_PartySlot' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant, K2Node_MakeArray_Array) == 0x000028, "Member 'WBP_Merchant_Panel_C_OnCharacterSelectionDoneToFightMerchant::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.OnMerchantItemFocused
// 0x0198 (0x0198 - 0x0000)
struct WBP_Merchant_Panel_C_OnMerchantItemFocused final
{
public:
	class UWBP_Merchant_Item_Row_C*               Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_GetMerchantItem_MerchantItem;             // 0x0018(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemVisible_ReturnValue;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBuyItem_ReturnValue;                   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_OnMerchantItemFocused) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_OnMerchantItemFocused");
static_assert(sizeof(WBP_Merchant_Panel_C_OnMerchantItemFocused) == 0x000198, "Wrong size on WBP_Merchant_Panel_C_OnMerchantItemFocused");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, Widget) == 0x000000, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::Widget' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, Temp_bool_Variable) == 0x000008, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, Temp_real_Variable) == 0x00000C, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, Temp_real_Variable_1) == 0x000010, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, Temp_byte_Variable) == 0x000014, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, CallFunc_GetMerchantItem_MerchantItem) == 0x000018, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::CallFunc_GetMerchantItem_MerchantItem' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, CallFunc_IsItemVisible_ReturnValue) == 0x000188, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::CallFunc_IsItemVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, CallFunc_CanBuyItem_ReturnValue) == 0x000189, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::CallFunc_CanBuyItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, CallFunc_BooleanAND_ReturnValue) == 0x00018A, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, K2Node_Select_Default) == 0x00018C, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, Temp_byte_Variable_1) == 0x000190, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, Temp_bool_Variable_1) == 0x000191, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_OnMerchantItemFocused, K2Node_Select_Default_1) == 0x000192, "Member 'WBP_Merchant_Panel_C_OnMerchantItemFocused::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Merchant_Panel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Merchant_Panel_C_PreConstruct");
static_assert(sizeof(WBP_Merchant_Panel_C_PreConstruct) == 0x000001, "Wrong size on WBP_Merchant_Panel_C_PreConstruct");
static_assert(offsetof(WBP_Merchant_Panel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Merchant_Panel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.TryGetCharacterDataForItem
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_Merchant_Panel_C_TryGetCharacterDataForItem final
{
public:
	struct FS_MerchantItemSellData                MerchantItem;                                      // 0x0000(0x0170)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0170(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CharacterData_C*>            CallFunc_GetCharacterCollection_Characters;        // 0x0190(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEquipItem_ReturnValue;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_TryGetCharacterDataForItem");
static_assert(sizeof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem) == 0x0001B8, "Wrong size on WBP_Merchant_Panel_C_TryGetCharacterDataForItem");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, MerchantItem) == 0x000000, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::MerchantItem' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CharacterData) == 0x000170, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, Temp_int_Array_Index_Variable) == 0x000178, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, Temp_int_Loop_Counter_Variable) == 0x00017C, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CallFunc_GetCustomGI_ReturnValue) == 0x000188, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CallFunc_GetCharacterCollection_Characters) == 0x000190, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CallFunc_GetCharacterCollection_Characters' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CallFunc_Array_Length_ReturnValue) == 0x0001A0, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CallFunc_Less_IntInt_ReturnValue) == 0x0001B0, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_TryGetCharacterDataForItem, CallFunc_CanEquipItem_ReturnValue) == 0x0001B1, "Member 'WBP_Merchant_Panel_C_TryGetCharacterDataForItem::CallFunc_CanEquipItem_ReturnValue' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.UpdateFightMerchantButtonState
// 0x0005 (0x0005 - 0x0000)
struct WBP_Merchant_Panel_C_UpdateFightMerchantButtonState final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartMerchantBattle_ReturnValue;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_UpdateFightMerchantButtonState) == 0x000001, "Wrong alignment on WBP_Merchant_Panel_C_UpdateFightMerchantButtonState");
static_assert(sizeof(WBP_Merchant_Panel_C_UpdateFightMerchantButtonState) == 0x000005, "Wrong size on WBP_Merchant_Panel_C_UpdateFightMerchantButtonState");
static_assert(offsetof(WBP_Merchant_Panel_C_UpdateFightMerchantButtonState, Temp_bool_Variable) == 0x000000, "Member 'WBP_Merchant_Panel_C_UpdateFightMerchantButtonState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_UpdateFightMerchantButtonState, Temp_byte_Variable) == 0x000001, "Member 'WBP_Merchant_Panel_C_UpdateFightMerchantButtonState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_UpdateFightMerchantButtonState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Merchant_Panel_C_UpdateFightMerchantButtonState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_UpdateFightMerchantButtonState, CallFunc_CanStartMerchantBattle_ReturnValue) == 0x000003, "Member 'WBP_Merchant_Panel_C_UpdateFightMerchantButtonState::CallFunc_CanStartMerchantBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_UpdateFightMerchantButtonState, K2Node_Select_Default) == 0x000004, "Member 'WBP_Merchant_Panel_C_UpdateFightMerchantButtonState::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Merchant_Panel.WBP_Merchant_Panel_C.BP_GetDesiredFocusTarget
// 0x0030 (0x0030 - 0x0000)
struct WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Merchant_Item_Row_C*               K2Node_DynamicCast_AsWBP_Merchant_Item_Row;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget) == 0x000030, "Wrong size on WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsWBP_Merchant_Item_Row) == 0x000020, "Member 'WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsWBP_Merchant_Item_Row' has a wrong offset!");
static_assert(offsetof(WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_Merchant_Panel_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

