#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_JRPG_Jumped

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_JRPG_Jumped.WBP_JRPG_Jumped_C.ExecuteUbergraph_WBP_JRPG_Jumped
// 0x0090 (0x0090 - 0x0000)
struct WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToScreen_ScreenLocation; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToScreen_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped) == 0x000008, "Wrong alignment on WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped");
static_assert(sizeof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped) == 0x000090, "Wrong size on WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, EntryPoint) == 0x000000, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, Temp_bool_Variable) == 0x000004, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, Temp_byte_Variable) == 0x000005, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000050, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, CallFunc_ProjectWorldLocationToScreen_ScreenLocation) == 0x000078, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::CallFunc_ProjectWorldLocationToScreen_ScreenLocation' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, CallFunc_ProjectWorldLocationToScreen_ReturnValue) == 0x000088, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::CallFunc_ProjectWorldLocationToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped, K2Node_Select_Default) == 0x000089, "Member 'WBP_JRPG_Jumped_C_ExecuteUbergraph_WBP_JRPG_Jumped::K2Node_Select_Default' has a wrong offset!");

// Function WBP_JRPG_Jumped.WBP_JRPG_Jumped_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_JRPG_Jumped_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_JRPG_Jumped_C_Tick) == 0x000004, "Wrong alignment on WBP_JRPG_Jumped_C_Tick");
static_assert(sizeof(WBP_JRPG_Jumped_C_Tick) == 0x00003C, "Wrong size on WBP_JRPG_Jumped_C_Tick");
static_assert(offsetof(WBP_JRPG_Jumped_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_JRPG_Jumped_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_JRPG_Jumped_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_JRPG_Jumped_C_Tick::InDeltaTime' has a wrong offset!");

}

