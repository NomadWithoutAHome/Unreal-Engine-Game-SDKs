#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_COV_WeaponElement

#include "Basic.hpp"

#include "EWeaponQuality_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_COV_WeaponElement.WBP_COV_WeaponElement_C
// 0x0058 (0x0360 - 0x0308)
class UWBP_COV_WeaponElement_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_BaseButton_C*                      BaseButton;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponIcon_C*                      WeaponIcon;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponLevel_C*                     WeaponLevel;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    WeaponName;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnAction;                                          // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UWBP_COV_WeaponElement_C* WeaponWidget)> OnNavigated;        // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UBP_ItemInstance_Gear_C*                WeaponInstance;                                    // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    Current_Character_Data;                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_COV_WeaponElement_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseUnfocused__DelegateSignature(class UCommonButtonBase* Button);
	void BPI_OnMarkNotificationAsRead(class UUserWidget* MarkCaller);
	void BPI_ShouldShowNotification(bool* bShouldShow);
	void ExecuteUbergraph_WBP_COV_WeaponElement(int32 EntryPoint);
	void Load_Weapon_State_from_Instance(class UBP_ItemInstance_Gear_C* GearInstance, class UBP_CharacterData_C* CurrentCharacterData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_COV_WeaponElement_C">();
	}
	static class UWBP_COV_WeaponElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_COV_WeaponElement_C>();
	}
};
static_assert(alignof(UWBP_COV_WeaponElement_C) == 0x000008, "Wrong alignment on UWBP_COV_WeaponElement_C");
static_assert(sizeof(UWBP_COV_WeaponElement_C) == 0x000360, "Wrong size on UWBP_COV_WeaponElement_C");
static_assert(offsetof(UWBP_COV_WeaponElement_C, UberGraphFrame) == 0x000308, "Member 'UWBP_COV_WeaponElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, BaseButton) == 0x000310, "Member 'UWBP_COV_WeaponElement_C::BaseButton' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, WeaponIcon) == 0x000318, "Member 'UWBP_COV_WeaponElement_C::WeaponIcon' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, WeaponLevel) == 0x000320, "Member 'UWBP_COV_WeaponElement_C::WeaponLevel' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, WeaponName) == 0x000328, "Member 'UWBP_COV_WeaponElement_C::WeaponName' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, OnAction) == 0x000330, "Member 'UWBP_COV_WeaponElement_C::OnAction' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, OnNavigated) == 0x000340, "Member 'UWBP_COV_WeaponElement_C::OnNavigated' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, WeaponInstance) == 0x000350, "Member 'UWBP_COV_WeaponElement_C::WeaponInstance' has a wrong offset!");
static_assert(offsetof(UWBP_COV_WeaponElement_C, Current_Character_Data) == 0x000358, "Member 'UWBP_COV_WeaponElement_C::Current_Character_Data' has a wrong offset!");

}

