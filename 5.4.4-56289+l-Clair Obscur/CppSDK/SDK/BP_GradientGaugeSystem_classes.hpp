#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GradientGaugeSystem

#include "Basic.hpp"

#include "SandFall_classes.hpp"
#include "EGradientChangeReason_structs.hpp"
#include "EAPChangeReason_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GradientGaugeSystem.BP_GradientGaugeSystem_C
// 0x0038 (0x0060 - 0x0028)
class UBP_GradientGaugeSystem_C final : public UExtendedObject
{
public:
	double                                        CurrentProgress;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AvailableCharges;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAC_jRPG_CharacterBattleStats_C*> SourceCharacters;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         ProgressPerAPSpent;                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCharges;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(double PreviousProgress, int32 PreviousCharges)> OnGradientGaugeChanged; // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ApplyGaugeChangeFromEvent(class UBP_GradientGaugeChangeEvent_C* Event);
	bool CanAffordCharges(int32 Amount);
	void ChangeGradientGauge(double Delta, const class FString& Reason);
	void ConsumeCharge(int32 Amount);
	int32 GetAvailableCharges();
	double GetCurrentProgress();
	void OnCharacterAPChangedEvent(class UBP_BattleEvent_APChange_C* APChange);
	void OnCharacterAPChangedInternal(int32 NewAP, int32 PreviousAP, class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void RegisterSourceCharacter(class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void SetCurrentGradientGauge(int32 NewCharges, double NewProgress, const class FString& Reason);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GradientGaugeSystem_C">();
	}
	static class UBP_GradientGaugeSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GradientGaugeSystem_C>();
	}
};
static_assert(alignof(UBP_GradientGaugeSystem_C) == 0x000008, "Wrong alignment on UBP_GradientGaugeSystem_C");
static_assert(sizeof(UBP_GradientGaugeSystem_C) == 0x000060, "Wrong size on UBP_GradientGaugeSystem_C");
static_assert(offsetof(UBP_GradientGaugeSystem_C, CurrentProgress) == 0x000028, "Member 'UBP_GradientGaugeSystem_C::CurrentProgress' has a wrong offset!");
static_assert(offsetof(UBP_GradientGaugeSystem_C, AvailableCharges) == 0x000030, "Member 'UBP_GradientGaugeSystem_C::AvailableCharges' has a wrong offset!");
static_assert(offsetof(UBP_GradientGaugeSystem_C, SourceCharacters) == 0x000038, "Member 'UBP_GradientGaugeSystem_C::SourceCharacters' has a wrong offset!");
static_assert(offsetof(UBP_GradientGaugeSystem_C, ProgressPerAPSpent) == 0x000048, "Member 'UBP_GradientGaugeSystem_C::ProgressPerAPSpent' has a wrong offset!");
static_assert(offsetof(UBP_GradientGaugeSystem_C, MaxCharges) == 0x00004C, "Member 'UBP_GradientGaugeSystem_C::MaxCharges' has a wrong offset!");
static_assert(offsetof(UBP_GradientGaugeSystem_C, OnGradientGaugeChanged) == 0x000050, "Member 'UBP_GradientGaugeSystem_C::OnGradientGaugeChanged' has a wrong offset!");

}

