#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_Battle_CharacterPortrait

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_Battle_CharacterPortrait.WBP_HUD_Battle_CharacterPortrait_C
// 0x0198 (0x0478 - 0x02E0)
class UWBP_HUD_Battle_CharacterPortrait_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Character_Damaged;                            // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Character_Dead;                               // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Character_Revive;                             // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Appear_Portrait;                              // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Character_Unselected;                         // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Character_Selected;                           // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_BattleEffectsBox_C*                BattleBuffBox;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Character_DeathSprite;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Character_Portrait_Damaged;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Character_Portrait_Selected;                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ForetellSlot;                                      // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BackgroundFade;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LineTop;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LineTop_Damaged;                             // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             OverchargeSlot;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             PerfectionSlot;                                    // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             StainsSlot;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             StanceSlot;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BattleEffectsBox_C*                StatusEffectsBox;                                  // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             TransformMask;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           UniqueMecanic;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharacterShieldCounter_C*          WBP_CharacterShieldCounter;                        // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_CharacterStatusBar_C*          WBP_HUD_LifeBar;                                   // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PassivePopupContainer_C*           WBP_PassivePopupContainer_C_0;                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CharacterBattleStats;                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HitPortraitDuration;                               // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HealthPercentageToDisplayLowHealthPortrait;        // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UBP_BattleBuffInstance_C*, class UWBP_jRPG_BuffSlot_C*> WidgetsByBuff_StatModifier;   // 0x03C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UBP_BattleBuffInstance_C*, class UWBP_jRPG_BuffSlot_C*> WidgetsByBuff_StatusEffects;  // 0x0418(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UUserWidget*                            WBP_UniqueMecanic;                                 // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharacterId;                                       // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Appear();
	void Construct();
	void ExecuteUbergraph_WBP_HUD_Battle_CharacterPortrait(int32 EntryPoint);
	void LoadFromCharacter();
	void OnAPChanged(int32 NewAP, int32 PreviousAP, class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void OnCharacterTurnStart(class UAC_jRPG_CharacterBattleStats_C* Character);
	void OnDead();
	void OnHPChanged(double NewHP, double PreviousHP);
	void OnKickedFromBattle();
	void OnReintegratesBattle(const class UAC_jRPG_CharacterBattleStats_C*& CharacterStats);
	void OnResurrect();
	void OnShieldPointsChanged(int32 CurrentValue, int32 PreviousValue);
	void SetCharacterUniqueMechanic();
	void SetHPValue(int32 HP, int32 MaxHP);
	void SetLowHealthFeedback(bool LowHealth);
	void SetPortrait(double NewHP, double PreviousHP);
	void SetPortraitImage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_Battle_CharacterPortrait_C">();
	}
	static class UWBP_HUD_Battle_CharacterPortrait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_Battle_CharacterPortrait_C>();
	}
};
static_assert(alignof(UWBP_HUD_Battle_CharacterPortrait_C) == 0x000008, "Wrong alignment on UWBP_HUD_Battle_CharacterPortrait_C");
static_assert(sizeof(UWBP_HUD_Battle_CharacterPortrait_C) == 0x000478, "Wrong size on UWBP_HUD_Battle_CharacterPortrait_C");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Anim_Character_Damaged) == 0x0002E8, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Anim_Character_Damaged' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Anim_Character_Dead) == 0x0002F0, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Anim_Character_Dead' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Anim_Character_Revive) == 0x0002F8, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Anim_Character_Revive' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Anim_Appear_Portrait) == 0x000300, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Anim_Appear_Portrait' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Anim_Character_Unselected) == 0x000308, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Anim_Character_Unselected' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Anim_Character_Selected) == 0x000310, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Anim_Character_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, BattleBuffBox) == 0x000318, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::BattleBuffBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Character_DeathSprite) == 0x000320, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Character_DeathSprite' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Character_Portrait_Damaged) == 0x000328, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Character_Portrait_Damaged' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Character_Portrait_Selected) == 0x000330, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Character_Portrait_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, ForetellSlot) == 0x000338, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::ForetellSlot' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Image_BackgroundFade) == 0x000340, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Image_BackgroundFade' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Image_LineTop) == 0x000348, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Image_LineTop' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, Image_LineTop_Damaged) == 0x000350, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::Image_LineTop_Damaged' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, OverchargeSlot) == 0x000358, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::OverchargeSlot' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, PerfectionSlot) == 0x000360, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::PerfectionSlot' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, StainsSlot) == 0x000368, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::StainsSlot' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, StanceSlot) == 0x000370, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::StanceSlot' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, StatusEffectsBox) == 0x000378, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::StatusEffectsBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, TransformMask) == 0x000380, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::TransformMask' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, UniqueMecanic) == 0x000388, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::UniqueMecanic' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, WBP_CharacterShieldCounter) == 0x000390, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::WBP_CharacterShieldCounter' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, WBP_HUD_LifeBar) == 0x000398, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::WBP_HUD_LifeBar' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, WBP_PassivePopupContainer_C_0) == 0x0003A0, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::WBP_PassivePopupContainer_C_0' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, CharacterBattleStats) == 0x0003A8, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::CharacterBattleStats' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, IsSelected) == 0x0003B0, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, HitPortraitDuration) == 0x0003B8, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::HitPortraitDuration' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, HealthPercentageToDisplayLowHealthPortrait) == 0x0003C0, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::HealthPercentageToDisplayLowHealthPortrait' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, WidgetsByBuff_StatModifier) == 0x0003C8, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::WidgetsByBuff_StatModifier' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, WidgetsByBuff_StatusEffects) == 0x000418, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::WidgetsByBuff_StatusEffects' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, WBP_UniqueMecanic) == 0x000468, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::WBP_UniqueMecanic' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_Battle_CharacterPortrait_C, CharacterId) == 0x000470, "Member 'UWBP_HUD_Battle_CharacterPortrait_C::CharacterId' has a wrong offset!");

}

