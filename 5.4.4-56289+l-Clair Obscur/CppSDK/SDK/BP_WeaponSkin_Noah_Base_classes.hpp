#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponSkin_Noah_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_WeaponSkin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WeaponSkin_Noah_Base.BP_WeaponSkin_Noah_Base_C
// 0x0070 (0x04E8 - 0x0478)
class ABP_WeaponSkin_Noah_Base_C final : public ABP_WeaponSkin_C
{
public:
	class UNiagaraComponent*                      Trail_LV;                                          // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_L1V;                                         // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   VersoWeapon;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_L1;                                          // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_R1;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_L;                                           // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      Trail_R;                                           // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    WeaponName_0;                                      // 0x04B0(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          IsVerso;                                           // 0x04C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        NoahWeaponRef;                                     // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        VersoWeaponRef;                                    // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Weapon_L_SM_Handle_BP_WeaponSkin_Noah_Base_C;      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 VersoWeaponRefSK;                                  // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyVersoOverrides(bool IsVerso_0);
	void CheckIsVerso();
	void GetAllTrailsOnWeaponL(TArray<class UNiagaraComponent*>* TrailsArrayL);
	void GetAllTrailsOnWeaponR(TArray<class UNiagaraComponent*>* TrailsArrayR);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WeaponSkin_Noah_Base_C">();
	}
	static class ABP_WeaponSkin_Noah_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WeaponSkin_Noah_Base_C>();
	}
};
static_assert(alignof(ABP_WeaponSkin_Noah_Base_C) == 0x000008, "Wrong alignment on ABP_WeaponSkin_Noah_Base_C");
static_assert(sizeof(ABP_WeaponSkin_Noah_Base_C) == 0x0004E8, "Wrong size on ABP_WeaponSkin_Noah_Base_C");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, Trail_LV) == 0x000478, "Member 'ABP_WeaponSkin_Noah_Base_C::Trail_LV' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, Trail_L1V) == 0x000480, "Member 'ABP_WeaponSkin_Noah_Base_C::Trail_L1V' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, VersoWeapon) == 0x000488, "Member 'ABP_WeaponSkin_Noah_Base_C::VersoWeapon' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, Trail_L1) == 0x000490, "Member 'ABP_WeaponSkin_Noah_Base_C::Trail_L1' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, Trail_R1) == 0x000498, "Member 'ABP_WeaponSkin_Noah_Base_C::Trail_R1' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, Trail_L) == 0x0004A0, "Member 'ABP_WeaponSkin_Noah_Base_C::Trail_L' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, Trail_R) == 0x0004A8, "Member 'ABP_WeaponSkin_Noah_Base_C::Trail_R' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, WeaponName_0) == 0x0004B0, "Member 'ABP_WeaponSkin_Noah_Base_C::WeaponName_0' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, IsVerso) == 0x0004C0, "Member 'ABP_WeaponSkin_Noah_Base_C::IsVerso' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, NoahWeaponRef) == 0x0004C8, "Member 'ABP_WeaponSkin_Noah_Base_C::NoahWeaponRef' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, VersoWeaponRef) == 0x0004D0, "Member 'ABP_WeaponSkin_Noah_Base_C::VersoWeaponRef' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, Weapon_L_SM_Handle_BP_WeaponSkin_Noah_Base_C) == 0x0004D8, "Member 'ABP_WeaponSkin_Noah_Base_C::Weapon_L_SM_Handle_BP_WeaponSkin_Noah_Base_C' has a wrong offset!");
static_assert(offsetof(ABP_WeaponSkin_Noah_Base_C, VersoWeaponRefSK) == 0x0004E0, "Member 'ABP_WeaponSkin_Noah_Base_C::VersoWeaponRefSK' has a wrong offset!");

}

