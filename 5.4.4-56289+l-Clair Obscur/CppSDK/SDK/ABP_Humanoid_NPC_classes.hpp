#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Humanoid_NPC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DragonIKPlugin_structs.hpp"
#include "ABP_Humanoid_NPC_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "IKFootToGround_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "E_NPC_ForceHeadDirection_structs.hpp"
#include "S_IdleNpcParameters_structs.hpp"
#include "S_GestralRandomScaleVariation_structs.hpp"
#include "E_NPC_Body_IdleType_structs.hpp"
#include "E_NPCAnimation_PostureType_structs.hpp"
#include "E_SecondaryMotionBreathingType_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Humanoid_NPC.ABP_Humanoid_NPC_C
// 0x63B0 (0x6720 - 0x0370)
class UABP_Humanoid_NPC_C : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Humanoid_NPC::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;             // 0x0378(0x0060)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03D8(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x03E0(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0488(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0490(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_66;                 // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_65;                 // 0x04D8(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0500(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_34;                      // 0x0570(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_64;                 // 0x0590(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_63;                 // 0x05B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_62;                 // 0x05E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_61;                 // 0x0608(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_60;                 // 0x0630(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_59;                 // 0x0658(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_58;                 // 0x0680(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_57;                 // 0x06A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_56;                 // 0x06D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x06F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x0720(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x0748(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x0770(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x0798(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x07C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x07E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0810(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0838(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x0860(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x0888(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x08B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x08D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x0900(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x0928(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x0950(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x0978(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x09A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x09C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x09F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x0A18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0A40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0A68(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x0A90(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_33;                      // 0x0AD8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x0AF8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_32;                      // 0x0B40(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x0B60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_31;                      // 0x0BA8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x0BC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_30;                      // 0x0C10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x0C30(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_29;                      // 0x0C78(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x0C98(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_28;                      // 0x0CE0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x0D00(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x0D48(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x0D68(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x0DB0(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x0DD0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x0DF0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x0E38(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x0E58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x0E80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0EA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0ED0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0EF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0F20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0F48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x0F70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0F98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0FC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0FE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1010(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1038(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1060(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1088(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x10B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x10D0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x1118(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x1138(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x1180(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x11A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x11E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x1208(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x1250(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x1270(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x12B8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_9;                      // 0x12D8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x13A0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x13C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x1408(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x14A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x14C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x14F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x1518(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1540(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1590(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x15B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x15E0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x1608(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x1628(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1670(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x1690(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x16D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x16F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x1740(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x1760(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1788(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_8;                      // 0x17A8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x1870(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7;                      // 0x1890(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1958(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_6;                      // 0x1978(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1A40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1A68(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x1A90(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x1BB8(0x0128)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x1CE0(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x1D08(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x1E30(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x1F58(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x2080(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x21A8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x22D0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x23F8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x2520(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x2648(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x2770(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x2898(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x29C0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2AE8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x2C10(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x2C30(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x2C50(0x0128)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2D78(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x2D98(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x2DC0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x2DE0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x2EA8(0x0080)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x2F28(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x2FA8(0x0028)()
	struct FAnimNode_DragonAimSolver              AnimGraphNode_DragonAimSolver;                     // 0x2FD0(0x0D80)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_6;                     // 0x3D50(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x3E18(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x3E60(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x3EA8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x3EF0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x3F38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x3F80(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x3FC8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x4010(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x4058(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x40A0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x40E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x4130(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x4178(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x4198(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x4260(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x4350(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x43D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x43F8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x4420(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0x4448(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x4510(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x4558(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x45A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x45E8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x4608(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x46D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x46F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x4720(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x4748(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x4770(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x47B8(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x47D8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x48A0(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x48E8(0x0040)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x4928(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x4948(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x4990(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x49B0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x4A78(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x4AF8(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x4BE8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x4C68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x4C90(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x4CB8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x4D80(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x4DC8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x4E10(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x4E58(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x4E78(0x00C8)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x4F40(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x5008(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x5050(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x5098(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x50C0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x5108(0x0028)()
	struct FAnimNode_FeetToGround                 AnimGraphNode_FeetToGround;                        // 0x5130(0x0430)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x5560(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x5580(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x55A0(0x0048)()
	uint8                                         Pad_55E8[0x8];                                     // 0x55E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_1;                            // 0x55F0(0x0250)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x5840(0x0250)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x5A90(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x5AD8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x5B20(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x5B48(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x5B70(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x5B98(0x00C8)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x5C60(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x5C98(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x5CE0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x5D28(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x5D70(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x5E38(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x5E58(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x5F20(0x0080)()
	struct FS_IdleNpcParameters                   BaseIdleFromAnimComponent;                         // 0x5FA0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                LookAtLocation;                                    // 0x5FF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTalking;                                         // 0x6010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6011[0x7];                                     // 0x6011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   IdleParameters_BaseIdle_Override;                  // 0x6018(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Standing_HandOnHip;                 // 0x6070(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Standing_Relaxed;                   // 0x60C8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Standing_ArmsCrossed;               // 0x6120(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Standing_Thinking;                  // 0x6178(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Standing_HandsBehindBack;           // 0x61D0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Standing_BothHandsOnHips;           // 0x6228(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Standing_ToArmInHand;               // 0x6280(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_SittingOnGround_Forward;            // 0x62D8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_SittingOnSomething;                 // 0x6330(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParameters_Kneeling;                           // 0x6388(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UBlendSpace*                            MovementBlendSpace;                                // 0x63E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x63E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BreathingAdditivePlayRate;                         // 0x63F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F4[0x4];                                     // 0x63F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GestralRandomScaleVariation         GestralRandomScaleStruct;                          // 0x63F8(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAGestral;                                        // 0x6480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NPC_Body_IdleType                           IdleType;                                          // 0x6481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableLookAt;                                      // 0x6482(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NPC_ForceHeadDirection                      ForceHeadDirection;                                // 0x6483(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceHeadDirectionBlendTime;                       // 0x6484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NPC_Body_IdleType                           PreviousIdleType;                                  // 0x6488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IdleChanged;                                       // 0x6489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviousIdleIsSimilarOnChange;                     // 0x648A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPlayRandomAnimationWhenTalking;                 // 0x648B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPlayTransitionIn;                               // 0x648C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPlayTransitionOut;                              // 0x648D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanTransitionToNewIdle;                            // 0x648E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAddHandAdditive;                             // 0x648F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPauseIdleWhenTalking;                        // 0x6490(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInDialogue;                                      // 0x6491(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAddHandAdditiveOnBaseIdle;                   // 0x6492(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldLookAt;                                      // 0x6493(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviousShouldLookAt;                              // 0x6494(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLookAtInterpolation;                            // 0x6495(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PreviousUseLookAtInterpolation;                    // 0x6496(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasCustomIdleWorld;                                // 0x6497(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableIK;                                          // 0x6498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6499[0x7];                                     // 0x6499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          RandomIdleTalkingToPlay;                           // 0x64A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_NPCAnimation_PostureType                    IdlePosture;                                       // 0x64A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64A9[0x7];                                     // 0x64A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPCAnimationComponent_C*            NPCAnimationComponent;                             // 0x64B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Trans_StandingToSitting;                           // 0x64B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Trans_SittingToStanding;                           // 0x64C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   IdleParametersCustom;                              // 0x64C8(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_SittingToKneeling;                            // 0x6520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StandingToKneeling;                           // 0x6528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_KneelingToStanding;                           // 0x6530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_KneelingTOSitting;                            // 0x6538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Aninm_StandingToSittingOnSomething;                // 0x6540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_SittingOnSOmethingToStanding;                 // 0x6548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UAnimSequence*>                  Anim_RandomTalking;                                // 0x6550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Keep_World_Idle_in_Dialogue;                       // 0x6560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6561[0x7];                                     // 0x6561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   IdleParameters_World;                              // 0x6568(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   Dev_CurrentInvalidIdle;                            // 0x65C0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          UpdateBaseIdleStart;                               // 0x6618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BaseIdleNotDefault;                                // 0x6619(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_661A[0x2];                                     // 0x661A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          Stream;                                            // 0x661C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_6624[0x4];                                     // 0x6624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CurrentIdleDialogueAnim;                           // 0x6628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CurrentIdleTransOut;                               // 0x6630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequence*                          CurrentRandomAnimationTalking;                     // 0x6638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        RandomTalkingAnimationStartTime;                   // 0x6640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   CurrentIdleStructCycle;                            // 0x6648(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   BaseIdleStruct;                                    // 0x66A0(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          UseAdditiveRandomTalkingAnim;                      // 0x66F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66F9[0x7];                                     // 0x66F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtLocationInterpolated;                        // 0x6700(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Test;                                              // 0x6718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OwnerIsCharacterWorld;                             // 0x6719(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_SetupTalkingIdle();
	void AnimNotify_UpdateIdleStartDone();
	void AnimNotify_UpdateRandomTalkingAnimationStartTime();
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ApplyAdditive_14B20D4F4511A60721A35A98C7DA4585();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ApplyAdditive_20F235F341DAC3D57A8AB8A4159E8B1C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ApplyAdditive_3F0E8D0B4F5D25587872D2A4F08A327F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ApplyAdditive_6CD8A8DA43B72AF8FD9EC9A71A0411A9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_BlendListByBool_230A360D476169FDC022D49D45D2E292();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_BlendListByBool_B9557AA944446E60FB77B99B330CF891();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_DragonAimSolver_CF6D43D949E847C12B00A4B8DF1D82B7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_FeetToGround_12259E9544D673B434BF83AE25DD763F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_LookAt_25B309634762AE1EBDAFF8B1331B8C5A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_LookAt_D25A3F324232E3CA93CE5192FCC093ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_00174037442815235CCD3BAB5F579E0D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_013A5BBB4CCB4C131339FBA4EFC62766();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_265AF47449B39332A4EC66AE06C19181();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_2753F5FE43956C34E25E698BA7C973A0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_2DE7FA214BB620D736401B9D75595052();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_33B90C114040542C6FAE498CE194977E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_3A13434A40F5F5E3AC4A6CB96B98D724();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_5E6ACC6D473C3EDA2372B7B3CB4E41D3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_73F90BBA4C64DEF1F2E57CA6E3D33945();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_77A0CD8D4E60DA02BC4794B3728FA189();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_7A0D396E403646963F2BBB9A2EC0C214();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_8866A30D48A8ADE0DAA35487E16C989D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_920A915D42B1A2327AFB60A14DCF1DAC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_95CF1A954EF3F86AAC7351A79C950E30();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_B39B5B2640175470015390950BA8D20E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_ModifyBone_B8B32D6E46E830C85A04639E8FA5C983();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_SequenceEvaluator_2E578B0240617DF3CFEE179BCA26B4BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_SequencePlayer_0337F27D4380B7291E6310B9782FAA56();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_SequencePlayer_3008C8A244B5335B79FE3FAD2E1C24EF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_SequencePlayer_979960F849DF56106F7D5F972830CF59();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_SequencePlayer_CA0B46AA4125A882E7A62FAB2951D8B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_00AE5F46406AEEA469F00BB9D55F44AF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_01E1BDEC41AF769598BC2E9514588999();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_046AAD8C47CFC5AA36CA3EA2233E174D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_09B376A444D7D62182747EABFAEB5EB6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_0B7026E34F352C3D70D465B07D6B1155();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_1348D419449BEF0F6488CFAB1AAAE224();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_14CF5AAB4245632DB79112B2F9372021();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_167A0121400CDEF68DE973A43A388FE9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_17B6D76642481AD4FD4E9B83B0415169();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_1FB720C5409C5E8CFCA1E1A31353B14A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_20CDEED5415BE74667A43F9A963695CF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_2676949F410617F3CE8103B72BF29667();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_2811A6F64EA1DE73688748802CF26CC1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_2EAE34E84137ED766873CE8EDB434A4F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_4517098E42454D5C99298CBE0F2C5F3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_48F94E2C464B6DEF5A5D23AC1EA613B3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_4B8196F243EE6A62D8E55F867C66181D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_4FB277564D4DC4375415408CDB256CE3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_50CC6BDA46CEFC5B3E3B68AABAE55BCC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_511A99FF47C3D181C0A7439F29184BFA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_53DE05B84C322D47D26C3D948EC432DC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_6556604A45CCBD5C522F5EA94A6A17D9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_699A9EAC49BE8CB95C0F8083C71347E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_70CAA3CC4590A76982DCB88EF552051E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_70D7108F451BA777BEB23694DED4E8B5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_70FF493746A677EBD733B6BD39B0E2C1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_72C842CD41605F471912F39A1334A312();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_737E1DE7430B7B22C2B870B298F884FC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_786196364D2664698C6A58B0F0AD447A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_7BA1E85046E553A480E7B6B0120B2D09();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_81A3171649D4E1A4EE0176A78EC1CB16();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_855996BA426AEA09C852E08E0097D931();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_86C5FB734A581C8777FC7293D213BA49();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_91F8425447B1A53DC14EEF8FCC4F76D6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_94A2868B4EB415F03E8F328B665130D8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_9730155D453997650776FCB7243B03CD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_9E2875BF43AD51B7E114B2B802448AF5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_9ED72B3346274E996ED08AACFA4D45FB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_9FD8B2204895E32CAC0D9B85FFE56555();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_A55CB89E4CB5A90A3F79C3909889122A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_AE20861147EE7BAEC8A0C08E4C1DF576();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_B4CF86334C9AFA50C3BCC0BB3E12298D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_B96D5B2A4B5803FD209A90B8DE1C54B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_BE628E9345E73BD699B81287C698A1E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_BEAC2E5D49DEC850F6782CA924285F31();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_C871D7DA4608FB5C35F8AB9A6D1F9384();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_CE88D265467E286C6B015A98CCE7ACA2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_D2F8BDED4A598A4E613489A08E96DD50();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_D68A36E24E92279CF9D5CE91774C44AD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_DFAC84984498D9F95B07C988CE35E654();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_E1F77F81434C99D1EF6626B1D2D287A4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_E39DAA3348020B5E0599C6A530F5F140();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_E3CBA29343B004D2450FC1AA320E56CE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_E4C8F0AB4D6A1C40CA610691BF45C0C4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_EF4522E249D4A76FB5188C9258FA0DF7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_F20ADBE74C0D0A3FB3134D8ADC9D68D1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_F3AF9B9842A88523840237A50CDA32FE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_F52ACC6A4A067DE34FBD7FBB45F69837();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_F7F6EE6840E0CD4DEAAE499B10367BE7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Humanoid_NPC_AnimGraphNode_TransitionResult_FAEA2DE24541F341A7C5B48F465DF15F();
	void ExecuteUbergraph_ABP_Humanoid_NPC(int32 EntryPoint);
	void ForceInitialize();
	const struct FS_IdleNpcParameters GetCurrentIdleStruct();
	const struct FS_IdleNpcParameters GetPreviousIdleStruct();
	void InitializeAnimationDataFromComponent();
	void OnBecomeRelevant(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void OnBecomeRelevant_0(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void RetrieveNPCAnimationComponentIfNeeded();
	void SetDefaultIdleParameters();
	void UpdateAnimationDataFromComponent();
	void UpdateCustomIdle();
	void UpdateGestralData();
	void UpdateIdleAnimationData();
	void UpdateIdleAnimationOverride();
	void UpdateIdleOnStateEntry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateITransInOnStateEntry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateITransOutOnStateEntry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateLookAtData();
	void UpdatePosture();
	void UpdateRandomIdleTalkingListOnStateEntry(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateRandomIdleTalkingListOnStateEntry_WithCheck(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);

	bool ShouldUseLookAtInterpolation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Humanoid_NPC_C">();
	}
	static class UABP_Humanoid_NPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Humanoid_NPC_C>();
	}
};
static_assert(alignof(UABP_Humanoid_NPC_C) == 0x000010, "Wrong alignment on UABP_Humanoid_NPC_C");
static_assert(sizeof(UABP_Humanoid_NPC_C) == 0x006720, "Wrong size on UABP_Humanoid_NPC_C");
static_assert(offsetof(UABP_Humanoid_NPC_C, UberGraphFrame) == 0x000370, "Member 'UABP_Humanoid_NPC_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_Humanoid_NPC_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimBlueprintExtension_PropertyAccess) == 0x0003D8, "Member 'UABP_Humanoid_NPC_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimBlueprintExtension_NodeRelevancy) == 0x0003E0, "Member 'UABP_Humanoid_NPC_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimBlueprintExtension_Base) == 0x000488, "Member 'UABP_Humanoid_NPC_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_Root) == 0x000490, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_66) == 0x0004B0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_66' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_65) == 0x0004D8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_65' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendSpacePlayer) == 0x000500, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_34) == 0x000570, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_64) == 0x000590, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_64' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_63) == 0x0005B8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_63' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_62) == 0x0005E0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_62' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_61) == 0x000608, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_61' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_60) == 0x000630, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_60' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_59) == 0x000658, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_59' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_58) == 0x000680, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_58' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_57) == 0x0006A8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_57' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_56) == 0x0006D0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_56' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_55) == 0x0006F8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_54) == 0x000720, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_53) == 0x000748, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_52) == 0x000770, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_51) == 0x000798, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_50) == 0x0007C0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_49) == 0x0007E8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_48) == 0x000810, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_47) == 0x000838, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_46) == 0x000860, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_45) == 0x000888, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_44) == 0x0008B0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_43) == 0x0008D8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_42) == 0x000900, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_41) == 0x000928, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_40) == 0x000950, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_39) == 0x000978, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_38) == 0x0009A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_37) == 0x0009C8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_36) == 0x0009F0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_35) == 0x000A18, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_34) == 0x000A40, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_33) == 0x000A68, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_39) == 0x000A90, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_33) == 0x000AD8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_38) == 0x000AF8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_32) == 0x000B40, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_37) == 0x000B60, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_31) == 0x000BA8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_36) == 0x000BC8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_30) == 0x000C10, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_35) == 0x000C30, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_29) == 0x000C78, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_34) == 0x000C98, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_28) == 0x000CE0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_33) == 0x000D00, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_27) == 0x000D48, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_32) == 0x000D68, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_26) == 0x000DB0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_25) == 0x000DD0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_31) == 0x000DF0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_24) == 0x000E38, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_32) == 0x000E58, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_31) == 0x000E80, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_30) == 0x000EA8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_29) == 0x000ED0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_28) == 0x000EF8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_27) == 0x000F20, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_26) == 0x000F48, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_25) == 0x000F70, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_24) == 0x000F98, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_23) == 0x000FC0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_22) == 0x000FE8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_21) == 0x001010, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_20) == 0x001038, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_19) == 0x001060, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_18) == 0x001088, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_23) == 0x0010B0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_30) == 0x0010D0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_22) == 0x001118, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_29) == 0x001138, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_21) == 0x001180, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_28) == 0x0011A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_20) == 0x0011E8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_27) == 0x001208, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_19) == 0x001250, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_26) == 0x001270, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_18) == 0x0012B8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_9) == 0x0012D8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_9' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_17) == 0x0013A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_25) == 0x0013C0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_16) == 0x001408, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_17) == 0x001428, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_16) == 0x001450, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_15) == 0x001478, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_14) == 0x0014A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_13) == 0x0014C8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_12) == 0x0014F0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_11) == 0x001518, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_10) == 0x001540, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_9) == 0x001568, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_8) == 0x001590, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_7) == 0x0015B8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_6) == 0x0015E0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_15) == 0x001608, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_24) == 0x001628, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_14) == 0x001670, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_23) == 0x001690, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_13) == 0x0016D8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_22) == 0x0016F8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_12) == 0x001740, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_13) == 0x001760, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_11) == 0x001788, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_8) == 0x0017A8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_8' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_10) == 0x001870, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_7) == 0x001890, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_7' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_9) == 0x001958, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_6) == 0x001978, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_6' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_5) == 0x001A40, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_4) == 0x001A68, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_15) == 0x001A90, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_14) == 0x001BB8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_12) == 0x001CE0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_13) == 0x001D08, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_12) == 0x001E30, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_11) == 0x001F58, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_10) == 0x002080, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_9) == 0x0021A8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_8) == 0x0022D0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_7) == 0x0023F8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_6) == 0x002520, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_5) == 0x002648, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_4) == 0x002770, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_3) == 0x002898, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_2) == 0x0029C0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone_1) == 0x002AE8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x002C10, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_LocalToComponentSpace_1) == 0x002C30, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ModifyBone) == 0x002C50, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_8) == 0x002D78, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_11) == 0x002D98, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_7) == 0x002DC0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_5) == 0x002DE0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SaveCachedPose_5) == 0x002EA8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SaveCachedPose_4) == 0x002F28, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_10) == 0x002FA8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_DragonAimSolver) == 0x002FD0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_DragonAimSolver' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ApplyAdditive_6) == 0x003D50, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ApplyAdditive_6' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_21) == 0x003E18, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_20) == 0x003E60, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_19) == 0x003EA8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_18) == 0x003EF0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_17) == 0x003F38, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_16) == 0x003F80, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_15) == 0x003FC8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_14) == 0x004010, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_13) == 0x004058, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_12) == 0x0040A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendListByEnum) == 0x0040E8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_11) == 0x004130, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_6) == 0x004178, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_4) == 0x004198, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_LayeredBoneBlend_1) == 0x004260, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SaveCachedPose_3) == 0x004350, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_9) == 0x0043D0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_8) == 0x0043F8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_7) == 0x004420, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ApplyAdditive_5) == 0x004448, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_10) == 0x004510, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendListByBool_5) == 0x004558, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_9) == 0x0045A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_5) == 0x0045E8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_3) == 0x004608, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_3) == 0x0046D0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_2) == 0x0046F8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult_1) == 0x004720, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_TransitionResult) == 0x004748, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_8) == 0x004770, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_4) == 0x0047B8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ApplyAdditive_4) == 0x0047D8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_7) == 0x0048A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequenceEvaluator) == 0x0048E8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_3) == 0x004928, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_6) == 0x004948, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_2) == 0x004990, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_2) == 0x0049B0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SaveCachedPose_2) == 0x004A78, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_LayeredBoneBlend) == 0x004AF8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SaveCachedPose_1) == 0x004BE8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_6) == 0x004C68, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_5) == 0x004C90, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ApplyAdditive_3) == 0x004CB8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_5) == 0x004D80, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_4) == 0x004DC8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendListByBool_4) == 0x004E10, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult_1) == 0x004E58, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine_1) == 0x004E78, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ApplyAdditive_2) == 0x004F40, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_3) == 0x005008, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendListByBool_3) == 0x005050, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_4) == 0x005098, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendListByBool_2) == 0x0050C0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_3) == 0x005108, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_FeetToGround) == 0x005130, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_FeetToGround' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_LocalToComponentSpace) == 0x005560, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ComponentToLocalSpace) == 0x005580, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_Slot) == 0x0055A0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_LookAt_1) == 0x0055F0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_LookAt_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_LookAt) == 0x005840, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_2) == 0x005A90, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer_1) == 0x005AD8, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_2) == 0x005B20, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose_1) == 0x005B48, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_UseCachedPose) == 0x005B70, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ApplyAdditive_1) == 0x005B98, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_MakeDynamicAdditive) == 0x005C60, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SequencePlayer) == 0x005C98, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendListByBool_1) == 0x005CE0, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_BlendListByBool) == 0x005D28, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_ApplyAdditive) == 0x005D70, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateResult) == 0x005E38, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_StateMachine) == 0x005E58, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, AnimGraphNode_SaveCachedPose) == 0x005F20, "Member 'UABP_Humanoid_NPC_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, BaseIdleFromAnimComponent) == 0x005FA0, "Member 'UABP_Humanoid_NPC_C::BaseIdleFromAnimComponent' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, LookAtLocation) == 0x005FF8, "Member 'UABP_Humanoid_NPC_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IsTalking) == 0x006010, "Member 'UABP_Humanoid_NPC_C::IsTalking' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_BaseIdle_Override) == 0x006018, "Member 'UABP_Humanoid_NPC_C::IdleParameters_BaseIdle_Override' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Standing_HandOnHip) == 0x006070, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Standing_HandOnHip' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Standing_Relaxed) == 0x0060C8, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Standing_Relaxed' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Standing_ArmsCrossed) == 0x006120, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Standing_ArmsCrossed' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Standing_Thinking) == 0x006178, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Standing_Thinking' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Standing_HandsBehindBack) == 0x0061D0, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Standing_HandsBehindBack' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Standing_BothHandsOnHips) == 0x006228, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Standing_BothHandsOnHips' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Standing_ToArmInHand) == 0x006280, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Standing_ToArmInHand' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_SittingOnGround_Forward) == 0x0062D8, "Member 'UABP_Humanoid_NPC_C::IdleParameters_SittingOnGround_Forward' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_SittingOnSomething) == 0x006330, "Member 'UABP_Humanoid_NPC_C::IdleParameters_SittingOnSomething' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_Kneeling) == 0x006388, "Member 'UABP_Humanoid_NPC_C::IdleParameters_Kneeling' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, MovementBlendSpace) == 0x0063E0, "Member 'UABP_Humanoid_NPC_C::MovementBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Speed) == 0x0063E8, "Member 'UABP_Humanoid_NPC_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, BreathingAdditivePlayRate) == 0x0063F0, "Member 'UABP_Humanoid_NPC_C::BreathingAdditivePlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, GestralRandomScaleStruct) == 0x0063F8, "Member 'UABP_Humanoid_NPC_C::GestralRandomScaleStruct' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IsAGestral) == 0x006480, "Member 'UABP_Humanoid_NPC_C::IsAGestral' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleType) == 0x006481, "Member 'UABP_Humanoid_NPC_C::IdleType' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, EnableLookAt) == 0x006482, "Member 'UABP_Humanoid_NPC_C::EnableLookAt' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, ForceHeadDirection) == 0x006483, "Member 'UABP_Humanoid_NPC_C::ForceHeadDirection' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, ForceHeadDirectionBlendTime) == 0x006484, "Member 'UABP_Humanoid_NPC_C::ForceHeadDirectionBlendTime' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, PreviousIdleType) == 0x006488, "Member 'UABP_Humanoid_NPC_C::PreviousIdleType' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleChanged) == 0x006489, "Member 'UABP_Humanoid_NPC_C::IdleChanged' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, PreviousIdleIsSimilarOnChange) == 0x00648A, "Member 'UABP_Humanoid_NPC_C::PreviousIdleIsSimilarOnChange' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CanPlayRandomAnimationWhenTalking) == 0x00648B, "Member 'UABP_Humanoid_NPC_C::CanPlayRandomAnimationWhenTalking' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CanPlayTransitionIn) == 0x00648C, "Member 'UABP_Humanoid_NPC_C::CanPlayTransitionIn' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CanPlayTransitionOut) == 0x00648D, "Member 'UABP_Humanoid_NPC_C::CanPlayTransitionOut' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CanTransitionToNewIdle) == 0x00648E, "Member 'UABP_Humanoid_NPC_C::CanTransitionToNewIdle' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, ShouldAddHandAdditive) == 0x00648F, "Member 'UABP_Humanoid_NPC_C::ShouldAddHandAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, ShouldPauseIdleWhenTalking) == 0x006490, "Member 'UABP_Humanoid_NPC_C::ShouldPauseIdleWhenTalking' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IsInDialogue) == 0x006491, "Member 'UABP_Humanoid_NPC_C::IsInDialogue' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, ShouldAddHandAdditiveOnBaseIdle) == 0x006492, "Member 'UABP_Humanoid_NPC_C::ShouldAddHandAdditiveOnBaseIdle' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, ShouldLookAt) == 0x006493, "Member 'UABP_Humanoid_NPC_C::ShouldLookAt' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, PreviousShouldLookAt) == 0x006494, "Member 'UABP_Humanoid_NPC_C::PreviousShouldLookAt' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, UseLookAtInterpolation) == 0x006495, "Member 'UABP_Humanoid_NPC_C::UseLookAtInterpolation' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, PreviousUseLookAtInterpolation) == 0x006496, "Member 'UABP_Humanoid_NPC_C::PreviousUseLookAtInterpolation' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, HasCustomIdleWorld) == 0x006497, "Member 'UABP_Humanoid_NPC_C::HasCustomIdleWorld' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, EnableIK) == 0x006498, "Member 'UABP_Humanoid_NPC_C::EnableIK' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, RandomIdleTalkingToPlay) == 0x0064A0, "Member 'UABP_Humanoid_NPC_C::RandomIdleTalkingToPlay' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdlePosture) == 0x0064A8, "Member 'UABP_Humanoid_NPC_C::IdlePosture' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, NPCAnimationComponent) == 0x0064B0, "Member 'UABP_Humanoid_NPC_C::NPCAnimationComponent' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Trans_StandingToSitting) == 0x0064B8, "Member 'UABP_Humanoid_NPC_C::Trans_StandingToSitting' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Trans_SittingToStanding) == 0x0064C0, "Member 'UABP_Humanoid_NPC_C::Trans_SittingToStanding' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParametersCustom) == 0x0064C8, "Member 'UABP_Humanoid_NPC_C::IdleParametersCustom' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Anim_SittingToKneeling) == 0x006520, "Member 'UABP_Humanoid_NPC_C::Anim_SittingToKneeling' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Anim_StandingToKneeling) == 0x006528, "Member 'UABP_Humanoid_NPC_C::Anim_StandingToKneeling' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Anim_KneelingToStanding) == 0x006530, "Member 'UABP_Humanoid_NPC_C::Anim_KneelingToStanding' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Anim_KneelingTOSitting) == 0x006538, "Member 'UABP_Humanoid_NPC_C::Anim_KneelingTOSitting' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Aninm_StandingToSittingOnSomething) == 0x006540, "Member 'UABP_Humanoid_NPC_C::Aninm_StandingToSittingOnSomething' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Anim_SittingOnSOmethingToStanding) == 0x006548, "Member 'UABP_Humanoid_NPC_C::Anim_SittingOnSOmethingToStanding' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Anim_RandomTalking) == 0x006550, "Member 'UABP_Humanoid_NPC_C::Anim_RandomTalking' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Keep_World_Idle_in_Dialogue) == 0x006560, "Member 'UABP_Humanoid_NPC_C::Keep_World_Idle_in_Dialogue' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, IdleParameters_World) == 0x006568, "Member 'UABP_Humanoid_NPC_C::IdleParameters_World' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Dev_CurrentInvalidIdle) == 0x0065C0, "Member 'UABP_Humanoid_NPC_C::Dev_CurrentInvalidIdle' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, UpdateBaseIdleStart) == 0x006618, "Member 'UABP_Humanoid_NPC_C::UpdateBaseIdleStart' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, BaseIdleNotDefault) == 0x006619, "Member 'UABP_Humanoid_NPC_C::BaseIdleNotDefault' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Stream) == 0x00661C, "Member 'UABP_Humanoid_NPC_C::Stream' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CurrentIdleDialogueAnim) == 0x006628, "Member 'UABP_Humanoid_NPC_C::CurrentIdleDialogueAnim' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CurrentIdleTransOut) == 0x006630, "Member 'UABP_Humanoid_NPC_C::CurrentIdleTransOut' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CurrentRandomAnimationTalking) == 0x006638, "Member 'UABP_Humanoid_NPC_C::CurrentRandomAnimationTalking' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, RandomTalkingAnimationStartTime) == 0x006640, "Member 'UABP_Humanoid_NPC_C::RandomTalkingAnimationStartTime' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, CurrentIdleStructCycle) == 0x006648, "Member 'UABP_Humanoid_NPC_C::CurrentIdleStructCycle' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, BaseIdleStruct) == 0x0066A0, "Member 'UABP_Humanoid_NPC_C::BaseIdleStruct' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, UseAdditiveRandomTalkingAnim) == 0x0066F8, "Member 'UABP_Humanoid_NPC_C::UseAdditiveRandomTalkingAnim' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, LookAtLocationInterpolated) == 0x006700, "Member 'UABP_Humanoid_NPC_C::LookAtLocationInterpolated' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, Test) == 0x006718, "Member 'UABP_Humanoid_NPC_C::Test' has a wrong offset!");
static_assert(offsetof(UABP_Humanoid_NPC_C, OwnerIsCharacterWorld) == 0x006719, "Member 'UABP_Humanoid_NPC_C::OwnerIsCharacterWorld' has a wrong offset!");

}

