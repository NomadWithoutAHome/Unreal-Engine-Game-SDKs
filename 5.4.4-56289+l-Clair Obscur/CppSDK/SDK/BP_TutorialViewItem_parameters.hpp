#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialViewItem

#include "Basic.hpp"

#include "S_TutorialCardContentData_structs.hpp"


namespace SDK::Params
{

// Function BP_TutorialViewItem.BP_TutorialViewItem_C.GetTutorialDescriptionText
// 0x0010 (0x0010 - 0x0000)
struct BP_TutorialViewItem_C_GetTutorialDescriptionText final
{
public:
	class FText                                   ContentText;                                       // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_TutorialViewItem_C_GetTutorialDescriptionText) == 0x000008, "Wrong alignment on BP_TutorialViewItem_C_GetTutorialDescriptionText");
static_assert(sizeof(BP_TutorialViewItem_C_GetTutorialDescriptionText) == 0x000010, "Wrong size on BP_TutorialViewItem_C_GetTutorialDescriptionText");
static_assert(offsetof(BP_TutorialViewItem_C_GetTutorialDescriptionText, ContentText) == 0x000000, "Member 'BP_TutorialViewItem_C_GetTutorialDescriptionText::ContentText' has a wrong offset!");

// Function BP_TutorialViewItem.BP_TutorialViewItem_C.GetTutorialMedia
// 0x0028 (0x0028 - 0x0000)
struct BP_TutorialViewItem_C_GetTutorialMedia final
{
public:
	TSoftObjectPtr<class UTexture2D>              Media;                                             // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialViewItem_C_GetTutorialMedia) == 0x000008, "Wrong alignment on BP_TutorialViewItem_C_GetTutorialMedia");
static_assert(sizeof(BP_TutorialViewItem_C_GetTutorialMedia) == 0x000028, "Wrong size on BP_TutorialViewItem_C_GetTutorialMedia");
static_assert(offsetof(BP_TutorialViewItem_C_GetTutorialMedia, Media) == 0x000000, "Member 'BP_TutorialViewItem_C_GetTutorialMedia::Media' has a wrong offset!");

// Function BP_TutorialViewItem.BP_TutorialViewItem_C.GetTutorialTitleText
// 0x0010 (0x0010 - 0x0000)
struct BP_TutorialViewItem_C_GetTutorialTitleText final
{
public:
	class FText                                   TitleText;                                         // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_TutorialViewItem_C_GetTutorialTitleText) == 0x000008, "Wrong alignment on BP_TutorialViewItem_C_GetTutorialTitleText");
static_assert(sizeof(BP_TutorialViewItem_C_GetTutorialTitleText) == 0x000010, "Wrong size on BP_TutorialViewItem_C_GetTutorialTitleText");
static_assert(offsetof(BP_TutorialViewItem_C_GetTutorialTitleText, TitleText) == 0x000000, "Member 'BP_TutorialViewItem_C_GetTutorialTitleText::TitleText' has a wrong offset!");

// Function BP_TutorialViewItem.BP_TutorialViewItem_C.InitializeTutorialCardData
// 0x00C0 (0x00C0 - 0x0000)
struct BP_TutorialViewItem_C_InitializeTutorialCardData final
{
public:
	class UDataTable*                             InDataTable;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_TutorialCardContentData             K2Node_MakeStruct_S_TutorialCardContentData;       // 0x0008(0x0058)(HasGetValueTypeHash)
	struct FS_TutorialCardContentData             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialViewItem_C_InitializeTutorialCardData) == 0x000008, "Wrong alignment on BP_TutorialViewItem_C_InitializeTutorialCardData");
static_assert(sizeof(BP_TutorialViewItem_C_InitializeTutorialCardData) == 0x0000C0, "Wrong size on BP_TutorialViewItem_C_InitializeTutorialCardData");
static_assert(offsetof(BP_TutorialViewItem_C_InitializeTutorialCardData, InDataTable) == 0x000000, "Member 'BP_TutorialViewItem_C_InitializeTutorialCardData::InDataTable' has a wrong offset!");
static_assert(offsetof(BP_TutorialViewItem_C_InitializeTutorialCardData, K2Node_MakeStruct_S_TutorialCardContentData) == 0x000008, "Member 'BP_TutorialViewItem_C_InitializeTutorialCardData::K2Node_MakeStruct_S_TutorialCardContentData' has a wrong offset!");
static_assert(offsetof(BP_TutorialViewItem_C_InitializeTutorialCardData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_TutorialViewItem_C_InitializeTutorialCardData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_TutorialViewItem_C_InitializeTutorialCardData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B8, "Member 'BP_TutorialViewItem_C_InitializeTutorialCardData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_TutorialViewItem.BP_TutorialViewItem_C.IsUnlocked
// 0x0010 (0x0010 - 0x0000)
struct BP_TutorialViewItem_C_IsUnlocked final
{
public:
	class UBP_jRPG_GI_Custom_C*                   GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnlocked_0;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHasPlayedTutorial_HasPlayed;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_TutorialViewItem_C_IsUnlocked) == 0x000008, "Wrong alignment on BP_TutorialViewItem_C_IsUnlocked");
static_assert(sizeof(BP_TutorialViewItem_C_IsUnlocked) == 0x000010, "Wrong size on BP_TutorialViewItem_C_IsUnlocked");
static_assert(offsetof(BP_TutorialViewItem_C_IsUnlocked, GameInstance) == 0x000000, "Member 'BP_TutorialViewItem_C_IsUnlocked::GameInstance' has a wrong offset!");
static_assert(offsetof(BP_TutorialViewItem_C_IsUnlocked, IsUnlocked_0) == 0x000008, "Member 'BP_TutorialViewItem_C_IsUnlocked::IsUnlocked_0' has a wrong offset!");
static_assert(offsetof(BP_TutorialViewItem_C_IsUnlocked, CallFunc_CheckHasPlayedTutorial_HasPlayed) == 0x000009, "Member 'BP_TutorialViewItem_C_IsUnlocked::CallFunc_CheckHasPlayedTutorial_HasPlayed' has a wrong offset!");
static_assert(offsetof(BP_TutorialViewItem_C_IsUnlocked, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'BP_TutorialViewItem_C_IsUnlocked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_TutorialViewItem_C_IsUnlocked, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'BP_TutorialViewItem_C_IsUnlocked::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

