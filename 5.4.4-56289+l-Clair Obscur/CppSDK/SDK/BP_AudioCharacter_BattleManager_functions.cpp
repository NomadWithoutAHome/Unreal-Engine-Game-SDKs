#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioCharacter_BattleManager

#include "Basic.hpp"

#include "BP_AudioCharacter_BattleManager_classes.hpp"
#include "BP_AudioCharacter_BattleManager_parameters.hpp"


namespace SDK
{

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayEventBattleLine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLine&             BattleLine                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayEventBattleLine(const struct FS_BattleLine& BattleLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayEventBattleLine");

	Params::BP_AudioCharacter_BattleManager_C_PlayEventBattleLine Parms{};

	Parms.BattleLine = std::move(BattleLine);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.OnDamageReceived
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              BattleDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::OnDamageReceived(class UBP_BattleDamages_C* BattleDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "OnDamageReceived");

	Params::BP_AudioCharacter_BattleManager_C_OnDamageReceived Parms{};

	Parms.BattleDamage = BattleDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayDialogueBattleLineInternal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       SoundAsset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayDialogueBattleLineInternal(class USoundBase* SoundAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayDialogueBattleLineInternal");

	Params::BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal Parms{};

	Parms.SoundAsset = SoundAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.GetBattleLineModel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_BattleLinesModel_Base_C*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UBP_BattleLinesModel_Base_C* UBP_AudioCharacter_BattleManager_C::GetBattleLineModel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "GetBattleLineModel");

	Params::BP_AudioCharacter_BattleManager_C_GetBattleLineModel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.TryInterruptActiveSkillBattleLine
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   HasInterrupted                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::TryInterruptActiveSkillBattleLine(bool* HasInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "TryInterruptActiveSkillBattleLine");

	Params::BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasInterrupted != nullptr)
		*HasInterrupted = Parms.HasInterrupted;
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HasActiveSkillBattleLine
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HasActiveSkillBattleLine(bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HasActiveSkillBattleLine");

	Params::BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlaySkillBattleLineInternal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       SoundAsset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlaySkillBattleLineInternal(class USoundBase* SoundAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlaySkillBattleLineInternal");

	Params::BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal Parms{};

	Parms.SoundAsset = SoundAsset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.StopAllSFXs
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioCharacter_BattleManager_C::StopAllSFXs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "StopAllSFXs");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ProcessTaggedGameplayEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTaggedGameplayEvent&      Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_AudioCharacter_BattleManager_C::ProcessTaggedGameplayEvent(const struct FTaggedGameplayEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "ProcessTaggedGameplayEvent");

	Params::BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent Parms{};

	Parms.Event = std::move(Event);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.RemoveHitOverride
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_BattleHitSoundOverrideHandle& OutHitOverrideHandle                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::RemoveHitOverride(struct FS_BattleHitSoundOverrideHandle& OutHitOverrideHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "RemoveHitOverride");

	Params::BP_AudioCharacter_BattleManager_C_RemoveHitOverride Parms{};

	Parms.OutHitOverrideHandle = std::move(OutHitOverrideHandle);

	UObject::ProcessEvent(Func, &Parms);

	OutHitOverrideHandle = std::move(Parms.OutHitOverrideHandle);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitSoundFromDamageObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              BattleDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayHitSoundFromDamageObject(class UBP_BattleDamages_C* BattleDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayHitSoundFromDamageObject");

	Params::BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject Parms{};

	Parms.BattleDamages = BattleDamages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PushHitOverride
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_BattleHitSound_C*   HitSoundAsset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_BattleHitSoundOverrideHandle& OutHitOverrideHandle                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PushHitOverride(class UBP_DataAsset_BattleHitSound_C* HitSoundAsset, struct FS_BattleHitSoundOverrideHandle& OutHitOverrideHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PushHitOverride");

	Params::BP_AudioCharacter_BattleManager_C_PushHitOverride Parms{};

	Parms.HitSoundAsset = HitSoundAsset;
	Parms.OutHitOverrideHandle = std::move(OutHitOverrideHandle);

	UObject::ProcessEvent(Func, &Parms);

	OutHitOverrideHandle = std::move(Parms.OutHitOverrideHandle);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ResolveHitSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              BattleDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USoundBase**                      Sound                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::ResolveHitSound(class UBP_BattleDamages_C* BattleDamage, class USoundBase** Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "ResolveHitSound");

	Params::BP_AudioCharacter_BattleManager_C_ResolveHitSound Parms{};

	Parms.BattleDamage = BattleDamage;

	UObject::ProcessEvent(Func, &Parms);

	if (Sound != nullptr)
		*Sound = Parms.Sound;
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ResolveHitSoundAsset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              BattleDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UBP_DataAsset_BattleHitSound_C**  HitSoundAsset                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::ResolveHitSoundAsset(class UBP_BattleDamages_C* BattleDamage, class UBP_DataAsset_BattleHitSound_C** HitSoundAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "ResolveHitSoundAsset");

	Params::BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset Parms{};

	Parms.BattleDamage = BattleDamage;

	UObject::ProcessEvent(Func, &Parms);

	if (HitSoundAsset != nullptr)
		*HitSoundAsset = Parms.HitSoundAsset;
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Internal_PlayOnoFromData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnoType                                OnoType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Internal_PlayOnoFromData(EOnoType OnoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Internal_PlayOnoFromData");

	Params::BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData Parms{};

	Parms.OnoType = OnoType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqOno
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnoType                                OnoType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Battle_PlaySeqOno(EOnoType OnoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle_PlaySeqOno");

	Params::BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno Parms{};

	Parms.OnoType = OnoType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.CleanSpawnedAudioComponentList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioCharacter_BattleManager_C::CleanSpawnedAudioComponentList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "CleanSpawnedAudioComponentList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Internal_PlayAudioComponent
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  OriginComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Internal_PlayAudioComponent(class USoundBase* Sound, class USceneComponent* OriginComponent, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Internal_PlayAudioComponent");

	Params::BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent Parms{};

	Parms.Sound = Sound;
	Parms.OriginComponent = OriginComponent;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleDeactivateControlBusMix
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundControlBusMix*              Deactivate_ControlBusMix                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleDeactivateControlBusMix(class USoundControlBusMix* Deactivate_ControlBusMix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleDeactivateControlBusMix");

	Params::BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix Parms{};

	Parms.Deactivate_ControlBusMix = Deactivate_ControlBusMix;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleActivateControlBusMix
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundControlBusMix*              Activate_ControlBusMix                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleActivateControlBusMix(class USoundControlBusMix* Activate_ControlBusMix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleActivateControlBusMix");

	Params::BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix Parms{};

	Parms.Activate_ControlBusMix = Activate_ControlBusMix;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleDeathCommonBodyFall
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleDeathCommonBodyFall(class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleDeathCommonBodyFall");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall Parms{};

	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Stop_AC_SFX_01
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioCharacter_BattleManager_C::Stop_AC_SFX_01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Stop_AC_SFX_01");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.BattleHitBy_CallByBP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleHitBy                            BattleHitBy_CallByBP_0                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::BattleHitBy_CallByBP(EBattleHitBy BattleHitBy_CallByBP_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "BattleHitBy_CallByBP");

	Params::BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP Parms{};

	Parms.BattleHitBy_CallByBP_0 = BattleHitBy_CallByBP_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleDeathCommon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleDeathCommon(class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleDeathCommon");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon Parms{};

	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleHitByCommon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleHitByCommon(class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleHitByCommon");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon Parms{};

	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleHitBy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 BattleHitBy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleHitBy(class UMetaSoundSource* BattleHitBy, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleHitBy");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleHitBy Parms{};

	Parms.BattleHitBy = BattleHitBy;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqStep
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Battle_PlaySeqStep_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRight                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SoundShouldFollow_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Battle_PlaySeqStep(class USoundBase* Battle_PlaySeqStep_0, bool IsRight, class USoundAttenuation* AttenuationOverride, bool SoundShouldFollow_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle_PlaySeqStep");

	Params::BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep Parms{};

	Parms.Battle_PlaySeqStep_0 = Battle_PlaySeqStep_0;
	Parms.IsRight = IsRight;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.SoundShouldFollow_ = SoundShouldFollow_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqVocal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Battle_PlaySeqVocal_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SoundShouldFollow_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Battle_PlaySeqVocal(class USoundBase* Battle_PlaySeqVocal_0, class USoundAttenuation* AttenuationOverride, bool SoundShouldFollow_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle_PlaySeqVocal");

	Params::BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal Parms{};

	Parms.Battle_PlaySeqVocal_0 = Battle_PlaySeqVocal_0;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.SoundShouldFollow_ = SoundShouldFollow_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.BattleCommonSFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleCommonSFX                        Common_SFX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::BattleCommonSFX(EBattleCommonSFX Common_SFX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "BattleCommonSFX");

	Params::BP_AudioCharacter_BattleManager_C_BattleCommonSFX Parms{};

	Parms.Common_SFX = Common_SFX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattlePlaceholder
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Battle_Placeholder                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattlePlaceholder(class USoundBase* Battle_Placeholder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattlePlaceholder");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder Parms{};

	Parms.Battle_Placeholder = Battle_Placeholder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleFoley
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 Battle_Foley                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleFoley(class UMetaSoundSource* Battle_Foley, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleFoley");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleFoley Parms{};

	Parms.Battle_Foley = Battle_Foley;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleFootstep
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFootstepsType                          FootstepType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EPhysicalSurface&                 SurfaceType                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleFootstep(EFootstepsType FootstepType, const struct FVector& Location, const EPhysicalSurface& SurfaceType, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleFootstep");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleFootstep Parms{};

	Parms.FootstepType = FootstepType;
	Parms.Location = std::move(Location);
	Parms.SurfaceType = SurfaceType;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleVocal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 Battle_Vocal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleVocal(class UMetaSoundSource* Battle_Vocal, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleVocal");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleVocal Parms{};

	Parms.Battle_Vocal = Battle_Vocal;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleWeaponRight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 Battle_Weapon_Right                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleWeaponRight(class UMetaSoundSource* Battle_Weapon_Right, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleWeaponRight");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight Parms{};

	Parms.Battle_Weapon_Right = Battle_Weapon_Right;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleWeaponLeft
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 Battle_Weapon_Left                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleWeaponLeft(class UMetaSoundSource* Battle_Weapon_Left, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleWeaponLeft");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft Parms{};

	Parms.Battle_Weapon_Left = Battle_Weapon_Left;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleSFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 Battle_SFX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleSFX(class UMetaSoundSource* Battle_SFX, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleSFX");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleSFX Parms{};

	Parms.Battle_SFX = Battle_SFX;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleUiCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUiBattleType                           Battle_UI_Type                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleUiCharacter(EUiBattleType Battle_UI_Type, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleUiCharacter");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter Parms{};

	Parms.Battle_UI_Type = Battle_UI_Type;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleOno
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnoType                                OnoType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::HandleBattleOno(EOnoType OnoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "HandleBattleOno");

	Params::BP_AudioCharacter_BattleManager_C_HandleBattleOno Parms{};

	Parms.OnoType = OnoType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqFoley
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Battle_PlaySeqFoley_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SoundShouldFollow_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Battle_PlaySeqFoley(class USoundBase* Battle_PlaySeqFoley_0, class USoundAttenuation* AttenuationOverride, bool SoundShouldFollow_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle_PlaySeqFoley");

	Params::BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley Parms{};

	Parms.Battle_PlaySeqFoley_0 = Battle_PlaySeqFoley_0;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.SoundShouldFollow_ = SoundShouldFollow_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Init
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AudioCharacter_BattleManager_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlayWeaponR
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Battle_Weapon_R                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SoundShouldFollow_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Battle_PlayWeaponR(class USoundBase* Battle_Weapon_R, class USoundAttenuation* AttenuationOverride, bool SoundShouldFollow_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle_PlayWeaponR");

	Params::BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR Parms{};

	Parms.Battle_Weapon_R = Battle_Weapon_R;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.SoundShouldFollow_ = SoundShouldFollow_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle Play Weapon L
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Battle_Weapon_L                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SoundShouldFollow_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Battle_Play_Weapon_L(class USoundBase* Battle_Weapon_L, class USoundAttenuation* AttenuationOverride, bool SoundShouldFollow_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle Play Weapon L");

	Params::BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L Parms{};

	Parms.Battle_Weapon_L = Battle_Weapon_L;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.SoundShouldFollow_ = SoundShouldFollow_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqSFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Battle_PlaySeqSFX_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SoundShouldFollow_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Battle_PlaySeqSFX(class USoundBase* Battle_PlaySeqSFX_0, class USoundAttenuation* AttenuationOverride, bool SoundShouldFollow_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle_PlaySeqSFX");

	Params::BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX Parms{};

	Parms.Battle_PlaySeqSFX_0 = Battle_PlaySeqSFX_0;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.SoundShouldFollow_ = SoundShouldFollow_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleWeaponLeft
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 BattleWeaponLeft                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleWeaponLeft(class UMetaSoundSource* BattleWeaponLeft, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleWeaponLeft");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft Parms{};

	Parms.BattleWeaponLeft = BattleWeaponLeft;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleWeaponRight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 BattleWeaponRight                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleWeaponRight(class UMetaSoundSource* BattleWeaponRight, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleWeaponRight");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight Parms{};

	Parms.BattleWeaponRight = BattleWeaponRight;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleVocalEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 BattleVocal                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleVocalEvent(class UMetaSoundSource* BattleVocal, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleVocalEvent");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent Parms{};

	Parms.BattleVocal = BattleVocal;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleSFXEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 BattleSFX                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleSFXEvent(class UMetaSoundSource* BattleSFX, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleSFXEvent");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent Parms{};

	Parms.BattleSFX = BattleSFX;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleFootstepEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFootstepsType                          FootstepType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleFootstepEvent(EFootstepsType FootstepType, const struct FVector& Location, EPhysicalSurface SurfaceType, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleFootstepEvent");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent Parms{};

	Parms.FootstepType = FootstepType;
	Parms.Location = std::move(Location);
	Parms.SurfaceType = SurfaceType;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleFoley
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 BattleFoley                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleFoley(class UMetaSoundSource* BattleFoley, class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleFoley");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleFoley Parms{};

	Parms.BattleFoley = BattleFoley;
	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleUi
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUiBattleType                           UI_Battle_Type                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleUi(EUiBattleType UI_Battle_Type, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleUi");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleUi Parms{};

	Parms.UI_Battle_Type = UI_Battle_Type;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleSoundProto
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       BattlePlaceholder                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleSoundProto(class USoundBase* BattlePlaceholder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleSoundProto");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto Parms{};

	Parms.BattlePlaceholder = BattlePlaceholder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitByEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMetaSoundSource*                 BattleHitBy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayHitByEvent(class UMetaSoundSource* BattleHitBy, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayHitByEvent");

	Params::BP_AudioCharacter_BattleManager_C_PlayHitByEvent Parms{};

	Parms.BattleHitBy = BattleHitBy;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitByCommonEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayHitByCommonEvent(class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayHitByCommonEvent");

	Params::BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent Parms{};

	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AudioCharacter_BattleManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitBy_CallByBP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleHitBy                            Hit_By_CallByBP                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayHitBy_CallByBP(EBattleHitBy Hit_By_CallByBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayHitBy_CallByBP");

	Params::BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP Parms{};

	Parms.Hit_By_CallByBP = Hit_By_CallByBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Deactivate ControlBusMix
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundControlBusMix*              Deactivate_ControlBusMix_0                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Deactivate_ControlBusMix(class USoundControlBusMix* Deactivate_ControlBusMix_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Deactivate ControlBusMix");

	Params::BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix Parms{};

	Parms.Deactivate_ControlBusMix_0 = Deactivate_ControlBusMix_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_Stop_AC_SFX_01
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AudioCharacter_BattleManager_C::Battle_Stop_AC_SFX_01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Battle_Stop_AC_SFX_01");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Activate ControlBusMix
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundControlBusMix*              Activate_ControlBusMix_0                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::Activate_ControlBusMix(class USoundControlBusMix* Activate_ControlBusMix_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "Activate ControlBusMix");

	Params::BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix Parms{};

	Parms.Activate_ControlBusMix_0 = Activate_ControlBusMix_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayDeathCommon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayDeathCommon(class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayDeathCommon");

	Params::BP_AudioCharacter_BattleManager_C_PlayDeathCommon Parms{};

	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleCommonSFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleCommonSFX                        Battle_Common_SFX                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleCommonSFX(EBattleCommonSFX Battle_Common_SFX, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleCommonSFX");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX Parms{};

	Parms.Battle_Common_SFX = Battle_Common_SFX;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayDeathCommon_Bodyfall
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAttenuation*                AttenuationOverride                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldAttachToComponent_                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayDeathCommon_Bodyfall(class USoundAttenuation* AttenuationOverride, bool ShouldAttachToComponent_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayDeathCommon_Bodyfall");

	Params::BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall Parms{};

	Parms.AttenuationOverride = AttenuationOverride;
	Parms.ShouldAttachToComponent_ = ShouldAttachToComponent_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleOno
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOnoType                                OnoType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::PlayBattleOno(EOnoType OnoType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "PlayBattleOno");

	Params::BP_AudioCharacter_BattleManager_C_PlayBattleOno Parms{};

	Parms.OnoType = OnoType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ExecuteUbergraph_BP_AudioCharacter_BattleManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AudioCharacter_BattleManager_C::ExecuteUbergraph_BP_AudioCharacter_BattleManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AudioCharacter_BattleManager_C", "ExecuteUbergraph_BP_AudioCharacter_BattleManager");

	Params::BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

