#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractionObjectBase

#include "Basic.hpp"

#include "BP_InteractionObjectBase_classes.hpp"
#include "BP_InteractionObjectBase_parameters.hpp"


namespace SDK
{

// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_InteractionObjectBase_C::BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_InteractionObjectBase_C_BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_InteractionObjectBase_C_BndEvt__BP_jRPG_InteractionObject_InteractionRange_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.CanInteractWithMount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CanInteract                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::CanInteractWithMount(bool* CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "CanInteractWithMount");

	Params::BP_InteractionObjectBase_C_CanInteractWithMount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract != nullptr)
		*CanInteract = Parms.CanInteract;
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.ExecuteUbergraph_BP_InteractionObjectBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::ExecuteUbergraph_BP_InteractionObjectBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "ExecuteUbergraph_BP_InteractionObjectBase");

	Params::BP_InteractionObjectBase_C_ExecuteUbergraph_BP_InteractionObjectBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.GetInteractionPromptParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFPromptParams*                  PromptParams                                           (Parm, OutParm, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::GetInteractionPromptParams(struct FFPromptParams* PromptParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "GetInteractionPromptParams");

	Params::BP_InteractionObjectBase_C_GetInteractionPromptParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PromptParams != nullptr)
		*PromptParams = std::move(Parms.PromptParams);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.GPETrigger_GetGameplayElementsToActivate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGPEInterfacesReferences*        GameplayElementsToActivate_0                           (Parm, OutParm)

void ABP_InteractionObjectBase_C::GPETrigger_GetGameplayElementsToActivate(struct FGPEInterfacesReferences* GameplayElementsToActivate_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "GPETrigger_GetGameplayElementsToActivate");

	Params::BP_InteractionObjectBase_C_GPETrigger_GetGameplayElementsToActivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GameplayElementsToActivate_0 != nullptr)
		*GameplayElementsToActivate_0 = std::move(Parms.GameplayElementsToActivate_0);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.IsInteractionAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::IsInteractionAvailable(bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "IsInteractionAvailable");

	Params::BP_InteractionObjectBase_C_IsInteractionAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.IsInteractionDone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Done                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::IsInteractionDone(bool* Done)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "IsInteractionDone");

	Params::BP_InteractionObjectBase_C_IsInteractionDone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Done != nullptr)
		*Done = Parms.Done;
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.OnEnemyBattleStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    BattleState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::OnEnemyBattleStateLoaded(bool BattleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "OnEnemyBattleStateLoaded");

	Params::BP_InteractionObjectBase_C_OnEnemyBattleStateLoaded Parms{};

	Parms.BattleState = BattleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.OnInteractionDisabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractionObjectBase_C::OnInteractionDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "OnInteractionDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.OnInteractionEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractionObjectBase_C::OnInteractionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "OnInteractionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.OnInteractionRequested
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       InteractingWorldCharacter                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter, bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "OnInteractionRequested");

	Params::BP_InteractionObjectBase_C_OnInteractionRequested Parms{};

	Parms.InteractingWorldCharacter = InteractingWorldCharacter;
	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.OnObjectInteractionStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractionState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::OnObjectInteractionStateLoaded(bool InteractionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "OnObjectInteractionStateLoaded");

	Params::BP_InteractionObjectBase_C_OnObjectInteractionStateLoaded Parms{};

	Parms.InteractionState = InteractionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_InteractionObjectBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "ReceiveEndPlay");

	Params::BP_InteractionObjectBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.ShouldHideDistantInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_InteractionObjectBase_C::ShouldHideDistantInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "ShouldHideDistantInteraction");

	Params::BP_InteractionObjectBase_C_ShouldHideDistantInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_InteractionObjectBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.GetInteractionFeedbackLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::GetInteractionFeedbackLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "GetInteractionFeedbackLocation");

	Params::BP_InteractionObjectBase_C_GetInteractionFeedbackLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.GetInteractionLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector*                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::GetInteractionLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "GetInteractionLocation");

	Params::BP_InteractionObjectBase_C_GetInteractionLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_InteractionObjectBase.BP_InteractionObjectBase_C.GPE_GetActivationComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UBP_GPE_InternalActivationComponent_C**ActivationComponent                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_InteractionObjectBase_C::GPE_GetActivationComponent(class UBP_GPE_InternalActivationComponent_C** ActivationComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InteractionObjectBase_C", "GPE_GetActivationComponent");

	Params::BP_InteractionObjectBase_C_GPE_GetActivationComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActivationComponent != nullptr)
		*ActivationComponent = Parms.ActivationComponent;
}

}

