#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleLineSettings

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BattleLineSettings.BP_BattleLineSettings_C
// 0x0068 (0x0098 - 0x0030)
class UBP_BattleLineSettings_C final : public UPrimaryDataAsset
{
public:
	double                                        GlobalChanceMultiplier;                            // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnStart_LowHP_Chance;                            // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnStart_FullAP_Chance;                           // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TurnStart_Normal_Chance;                           // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HealsSelf_Chance;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HealsAlly_Chance;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RevivedByAlly_Chance;                              // 0x0060(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RevivingOtherAlly_Chance;                          // 0x0068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OtherAllyHealedByOther_Chance;                     // 0x0070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EnemyKilled_Chance;                                // 0x0078(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeathOtherAlly_Chance;                             // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SelfTargetedByEnemy_Chance;                        // 0x0088(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AllyTargetedByEnemy_Chance;                        // 0x0090(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool RollChanceValue(double Percent) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BattleLineSettings_C">();
	}
	static class UBP_BattleLineSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_BattleLineSettings_C>();
	}
};
static_assert(alignof(UBP_BattleLineSettings_C) == 0x000008, "Wrong alignment on UBP_BattleLineSettings_C");
static_assert(sizeof(UBP_BattleLineSettings_C) == 0x000098, "Wrong size on UBP_BattleLineSettings_C");
static_assert(offsetof(UBP_BattleLineSettings_C, GlobalChanceMultiplier) == 0x000030, "Member 'UBP_BattleLineSettings_C::GlobalChanceMultiplier' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, TurnStart_LowHP_Chance) == 0x000038, "Member 'UBP_BattleLineSettings_C::TurnStart_LowHP_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, TurnStart_FullAP_Chance) == 0x000040, "Member 'UBP_BattleLineSettings_C::TurnStart_FullAP_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, TurnStart_Normal_Chance) == 0x000048, "Member 'UBP_BattleLineSettings_C::TurnStart_Normal_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, HealsSelf_Chance) == 0x000050, "Member 'UBP_BattleLineSettings_C::HealsSelf_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, HealsAlly_Chance) == 0x000058, "Member 'UBP_BattleLineSettings_C::HealsAlly_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, RevivedByAlly_Chance) == 0x000060, "Member 'UBP_BattleLineSettings_C::RevivedByAlly_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, RevivingOtherAlly_Chance) == 0x000068, "Member 'UBP_BattleLineSettings_C::RevivingOtherAlly_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, OtherAllyHealedByOther_Chance) == 0x000070, "Member 'UBP_BattleLineSettings_C::OtherAllyHealedByOther_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, EnemyKilled_Chance) == 0x000078, "Member 'UBP_BattleLineSettings_C::EnemyKilled_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, DeathOtherAlly_Chance) == 0x000080, "Member 'UBP_BattleLineSettings_C::DeathOtherAlly_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, SelfTargetedByEnemy_Chance) == 0x000088, "Member 'UBP_BattleLineSettings_C::SelfTargetedByEnemy_Chance' has a wrong offset!");
static_assert(offsetof(UBP_BattleLineSettings_C, AllyTargetedByEnemy_Chance) == 0x000090, "Member 'UBP_BattleLineSettings_C::AllyTargetedByEnemy_Chance' has a wrong offset!");

}

