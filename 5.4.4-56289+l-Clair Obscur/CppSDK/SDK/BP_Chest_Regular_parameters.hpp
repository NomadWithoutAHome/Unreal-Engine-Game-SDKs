#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Chest_Regular

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_LootTableEntry_structs.hpp"
#include "S_ChestLootTableSetup_structs.hpp"
#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "S_LootTableSection_structs.hpp"
#include "E_jRPG_ItemType_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "S_LootContext_structs.hpp"
#include "S_ChestLootParameters_structs.hpp"
#include "S_ChestFeedbackParameters_structs.hpp"
#include "FPromptParams_structs.hpp"


namespace SDK::Params
{

// Function BP_Chest_Regular.BP_Chest_Regular_C.AddItemsFromChestToInventory
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Chest_Regular_C_AddItemsFromChestToInventory final
{
public:
	TArray<class UBP_GeneratedItemInfo_Base_C*>   local_generatedItems;                              // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FS_LootContext                         local_lootContext;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DialogueSystemComponent_C*          CallFunc_GetDialogueSystemComponent_DialogueSystem; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         CallFunc_ComputeChestLootContext_S_LootContext;    // 0x0020(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      CallFunc_RollChestItems_ItemsToLoot;               // 0x0028(0x0050)()
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_GeneratedItemInfo_Base_C*           CallFunc_AddItemToInventory_GeneratedItem;         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_AddItemsFromChestToInventory) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_AddItemsFromChestToInventory");
static_assert(sizeof(BP_Chest_Regular_C_AddItemsFromChestToInventory) == 0x0000E0, "Wrong size on BP_Chest_Regular_C_AddItemsFromChestToInventory");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, local_generatedItems) == 0x000000, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::local_generatedItems' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, local_lootContext) == 0x000010, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::local_lootContext' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_GetDialogueSystemComponent_DialogueSystem) == 0x000018, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_GetDialogueSystemComponent_DialogueSystem' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_ComputeChestLootContext_S_LootContext) == 0x000020, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_ComputeChestLootContext_S_LootContext' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_RollChestItems_ItemsToLoot) == 0x000028, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_RollChestItems_ItemsToLoot' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Array_Get_Item) == 0x00008C, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Map_Find_Value) == 0x000094, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_GetPlayerController_ReturnValue) == 0x0000A8, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x0000B8, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_GetInventoryManager_ReturnValue) == 0x0000C8, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_AddItemToInventory_GeneratedItem) == 0x0000D0, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_AddItemToInventory_GeneratedItem' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_AddItemsFromChestToInventory, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'BP_Chest_Regular_C_AddItemsFromChestToInventory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.CanInteractWithMount
// 0x0001 (0x0001 - 0x0000)
struct BP_Chest_Regular_C_CanInteractWithMount final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_CanInteractWithMount) == 0x000001, "Wrong alignment on BP_Chest_Regular_C_CanInteractWithMount");
static_assert(sizeof(BP_Chest_Regular_C_CanInteractWithMount) == 0x000001, "Wrong size on BP_Chest_Regular_C_CanInteractWithMount");
static_assert(offsetof(BP_Chest_Regular_C_CanInteractWithMount, CanInteract) == 0x000000, "Member 'BP_Chest_Regular_C_CanInteractWithMount::CanInteract' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.CheckForErrors
// 0x0130 (0x0130 - 0x0000)
struct BP_Chest_Regular_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)(ConstParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ChestLootParameters                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue_1;         // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0098(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x00A8(0x0010)(ConstParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_CheckForErrors");
static_assert(sizeof(BP_Chest_Regular_C_CheckForErrors) == 0x000130, "Wrong size on BP_Chest_Regular_C_CheckForErrors");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_Chest_Regular_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_Chest_Regular_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, Temp_text_Variable) == 0x000018, "Member 'BP_Chest_Regular_C_CheckForErrors::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_IsDataRowHandleSet_ReturnValue) == 0x00002C, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_IsDataRowHandleSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000038, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_IsDataRowHandleSet_ReturnValue_1) == 0x00003A, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_IsDataRowHandleSet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003B, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_BooleanOR_ReturnValue) == 0x00003D, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Array_IsEmpty_ReturnValue) == 0x00003E, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_BooleanAND_ReturnValue) == 0x00003F, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Conv_NameToText_ReturnValue) == 0x000040, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_Chest_Regular_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000098, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, Temp_text_Variable_1) == 0x0000A8, "Member 'BP_Chest_Regular_C_CheckForErrors::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'BP_Chest_Regular_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_Chest_Regular_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_1) == 0x000110, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000118, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_2) == 0x000128, "Member 'BP_Chest_Regular_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.CompareItemTypesForFeedback
// 0x0010 (0x0010 - 0x0000)
struct BP_Chest_Regular_C_CompareItemTypesForFeedback final
{
public:
	E_jRPG_ItemType                               Existing;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               New;                                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBetter;                                          // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemTypeScore_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemTypeScore_ReturnValue_1;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_CompareItemTypesForFeedback) == 0x000004, "Wrong alignment on BP_Chest_Regular_C_CompareItemTypesForFeedback");
static_assert(sizeof(BP_Chest_Regular_C_CompareItemTypesForFeedback) == 0x000010, "Wrong size on BP_Chest_Regular_C_CompareItemTypesForFeedback");
static_assert(offsetof(BP_Chest_Regular_C_CompareItemTypesForFeedback, Existing) == 0x000000, "Member 'BP_Chest_Regular_C_CompareItemTypesForFeedback::Existing' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CompareItemTypesForFeedback, New) == 0x000001, "Member 'BP_Chest_Regular_C_CompareItemTypesForFeedback::New' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CompareItemTypesForFeedback, IsBetter) == 0x000002, "Member 'BP_Chest_Regular_C_CompareItemTypesForFeedback::IsBetter' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CompareItemTypesForFeedback, CallFunc_GetItemTypeScore_ReturnValue) == 0x000004, "Member 'BP_Chest_Regular_C_CompareItemTypesForFeedback::CallFunc_GetItemTypeScore_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CompareItemTypesForFeedback, CallFunc_GetItemTypeScore_ReturnValue_1) == 0x000008, "Member 'BP_Chest_Regular_C_CompareItemTypesForFeedback::CallFunc_GetItemTypeScore_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_CompareItemTypesForFeedback, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Chest_Regular_C_CompareItemTypesForFeedback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.ComputeChestDominantItemType
// 0x01C0 (0x01C0 - 0x0000)
struct BP_Chest_Regular_C_ComputeChestDominantItemType final
{
public:
	E_jRPG_ItemType                               ItemType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               local_currentBestType;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         CallFunc_ComputeChestLootContext_S_LootContext;    // 0x0010(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      CallFunc_RollChestItems_ItemsToLoot;               // 0x0018(0x0050)()
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemStaticDefinitionFromID_Found;      // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticDefinitionFromID_ReturnValue; // 0x0088(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CompareItemTypesForFeedback_IsBetter;     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_ComputeChestDominantItemType) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_ComputeChestDominantItemType");
static_assert(sizeof(BP_Chest_Regular_C_ComputeChestDominantItemType) == 0x0001C0, "Wrong size on BP_Chest_Regular_C_ComputeChestDominantItemType");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, ItemType) == 0x000000, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::ItemType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, local_currentBestType) == 0x000001, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::local_currentBestType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_ComputeChestLootContext_S_LootContext) == 0x000010, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_ComputeChestLootContext_S_LootContext' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_RollChestItems_ItemsToLoot) == 0x000018, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_RollChestItems_ItemsToLoot' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_Array_Get_Item) == 0x00007C, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_GetItemStaticDefinitionFromID_Found) == 0x000085, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_GetItemStaticDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_GetItemStaticDefinitionFromID_ReturnValue) == 0x000088, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_GetItemStaticDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestDominantItemType, CallFunc_CompareItemTypesForFeedback_IsBetter) == 0x0001B8, "Member 'BP_Chest_Regular_C_ComputeChestDominantItemType::CallFunc_CompareItemTypesForFeedback_IsBetter' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.ComputeChestLootContext
// 0x0014 (0x0014 - 0x0000)
struct BP_Chest_Regular_C_ComputeChestLootContext final
{
public:
	struct FS_LootContext                         S_LootContext;                                     // 0x0000(0x0004)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_EncounterLevelOverride;                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeEncounterLevelOverride_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEncounterLevel_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         K2Node_MakeStruct_S_LootContext;                   // 0x0010(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_ComputeChestLootContext) == 0x000004, "Wrong alignment on BP_Chest_Regular_C_ComputeChestLootContext");
static_assert(sizeof(BP_Chest_Regular_C_ComputeChestLootContext) == 0x000014, "Wrong size on BP_Chest_Regular_C_ComputeChestLootContext");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootContext, S_LootContext) == 0x000000, "Member 'BP_Chest_Regular_C_ComputeChestLootContext::S_LootContext' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootContext, local_EncounterLevelOverride) == 0x000004, "Member 'BP_Chest_Regular_C_ComputeChestLootContext::local_EncounterLevelOverride' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootContext, CallFunc_ComputeEncounterLevelOverride_ReturnValue) == 0x000008, "Member 'BP_Chest_Regular_C_ComputeChestLootContext::CallFunc_ComputeEncounterLevelOverride_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootContext, CallFunc_GetEncounterLevel_ReturnValue) == 0x00000C, "Member 'BP_Chest_Regular_C_ComputeChestLootContext::CallFunc_GetEncounterLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootContext, K2Node_MakeStruct_S_LootContext) == 0x000010, "Member 'BP_Chest_Regular_C_ComputeChestLootContext::K2Node_MakeStruct_S_LootContext' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.ComputeChestLootTableSections
// 0x0160 (0x0160 - 0x0000)
struct BP_Chest_Regular_C_ComputeChestLootTableSections final
{
public:
	TArray<struct FS_LootTableSection>            LootTableSections;                                 // 0x0000(0x0010)(Parm, OutParm)
	double                                        RollChanceMultipler;                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_LootTableSection>            local_sections;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FS_LootTableSection>            CallFunc_GetSectionsFromLootTableReferences_LootTableSections; // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0038(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0048(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	struct FS_ChestLootTableSetup                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_LootTableSection>            CallFunc_GetSectionsFromLootTableReferences_LootTableSections_1; // 0x0148(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_ComputeChestLootTableSections) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_ComputeChestLootTableSections");
static_assert(sizeof(BP_Chest_Regular_C_ComputeChestLootTableSections) == 0x000160, "Wrong size on BP_Chest_Regular_C_ComputeChestLootTableSections");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, LootTableSections) == 0x000000, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::LootTableSections' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, RollChanceMultipler) == 0x000010, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::RollChanceMultipler' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, local_sections) == 0x000018, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::local_sections' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_GetSectionsFromLootTableReferences_LootTableSections) == 0x000028, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_GetSectionsFromLootTableReferences_LootTableSections' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_Conv_NameToText_ReturnValue) == 0x000038, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000048, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F8, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_Format_ReturnValue) == 0x000128, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_IsDataRowHandleSet_ReturnValue) == 0x000138, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_IsDataRowHandleSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_GetSectionsFromLootTableReferences_LootTableSections_1) == 0x000148, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_GetSectionsFromLootTableReferences_LootTableSections_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeChestLootTableSections, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000158, "Member 'BP_Chest_Regular_C_ComputeChestLootTableSections::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.ComputeEncounterLevelOverride
// 0x001C (0x001C - 0x0000)
struct BP_Chest_Regular_C_ComputeEncounterLevelOverride final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_EncounterLevelOverride;                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ChestLootParameters                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_ComputeEncounterLevelOverride) == 0x000004, "Wrong alignment on BP_Chest_Regular_C_ComputeEncounterLevelOverride");
static_assert(sizeof(BP_Chest_Regular_C_ComputeEncounterLevelOverride) == 0x00001C, "Wrong size on BP_Chest_Regular_C_ComputeEncounterLevelOverride");
static_assert(offsetof(BP_Chest_Regular_C_ComputeEncounterLevelOverride, ReturnValue) == 0x000000, "Member 'BP_Chest_Regular_C_ComputeEncounterLevelOverride::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeEncounterLevelOverride, local_EncounterLevelOverride) == 0x000004, "Member 'BP_Chest_Regular_C_ComputeEncounterLevelOverride::local_EncounterLevelOverride' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeEncounterLevelOverride, CallFunc_IsDataRowHandleSet_ReturnValue) == 0x000008, "Member 'BP_Chest_Regular_C_ComputeEncounterLevelOverride::CallFunc_IsDataRowHandleSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeEncounterLevelOverride, CallFunc_GetDataTableRowFromName_OutRow) == 0x00000C, "Member 'BP_Chest_Regular_C_ComputeEncounterLevelOverride::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeEncounterLevelOverride, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000014, "Member 'BP_Chest_Regular_C_ComputeEncounterLevelOverride::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputeEncounterLevelOverride, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000018, "Member 'BP_Chest_Regular_C_ComputeEncounterLevelOverride::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.ComputePreviewChestItemType
// 0x01B0 (0x01B0 - 0x0000)
struct BP_Chest_Regular_C_ComputePreviewChestItemType final
{
public:
	E_jRPG_ItemType                               ItemType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               local_currentBestType;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_LootTableSection>            CallFunc_ComputeChestLootTableSections_LootTableSections; // 0x0018(0x0010)(ReferenceParm)
	double                                        CallFunc_ComputeChestLootTableSections_RollChanceMultipler; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootTableSection                    CallFunc_Array_Get_Item;                           // 0x0030(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LootTableEntry                      CallFunc_Array_Get_Item_1;                         // 0x0058(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemStaticDefinitionFromID_Found;      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticDefinitionFromID_ReturnValue; // 0x0070(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareItemTypesForFeedback_IsBetter;     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_ComputePreviewChestItemType) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_ComputePreviewChestItemType");
static_assert(sizeof(BP_Chest_Regular_C_ComputePreviewChestItemType) == 0x0001B0, "Wrong size on BP_Chest_Regular_C_ComputePreviewChestItemType");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, ItemType) == 0x000000, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::ItemType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, local_currentBestType) == 0x000001, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::local_currentBestType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_ComputeChestLootTableSections_LootTableSections) == 0x000018, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_ComputeChestLootTableSections_LootTableSections' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_ComputeChestLootTableSections_RollChanceMultipler) == 0x000028, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_ComputeChestLootTableSections_RollChanceMultipler' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_GetItemStaticDefinitionFromID_Found) == 0x00006C, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_GetItemStaticDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_GetItemStaticDefinitionFromID_ReturnValue) == 0x000070, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_GetItemStaticDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A0, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A4, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ComputePreviewChestItemType, CallFunc_CompareItemTypesForFeedback_IsBetter) == 0x0001A8, "Member 'BP_Chest_Regular_C_ComputePreviewChestItemType::CallFunc_CompareItemTypesForFeedback_IsBetter' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.ConstructInteractionPopUpText
// 0x0248 (0x0248 - 0x0000)
struct BP_Chest_Regular_C_ConstructInteractionPopUpText final
{
public:
	class FText                                   PopUpText;                                         // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   Item_Description1;                                 // 0x0010(0x0010)(Parm, OutParm)
	class UTexture2D*                             Item_Icon1;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Items_amount1;                                     // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Items_amount;                                      // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Item_Icon;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Item_Description;                                  // 0x0038(0x0010)(Edit, BlueprintVisible)
	class FText                                   PopUpTextLOCAL;                                    // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0238(0x0010)()
};
static_assert(alignof(BP_Chest_Regular_C_ConstructInteractionPopUpText) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_ConstructInteractionPopUpText");
static_assert(sizeof(BP_Chest_Regular_C_ConstructInteractionPopUpText) == 0x000248, "Wrong size on BP_Chest_Regular_C_ConstructInteractionPopUpText");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, PopUpText) == 0x000000, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::PopUpText' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Item_Description1) == 0x000010, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Item_Description1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Item_Icon1) == 0x000020, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Item_Icon1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Items_amount1) == 0x000028, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Items_amount1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Items_amount) == 0x00002C, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Items_amount' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Item_Icon) == 0x000030, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Item_Icon' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Item_Description) == 0x000038, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Item_Description' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, PopUpTextLOCAL) == 0x000048, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::PopUpTextLOCAL' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B8, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Less_IntInt_ReturnValue) == 0x0001B9, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Map_Find_Value) == 0x0001BC, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Map_Find_ReturnValue) == 0x0001C0, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001C8, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, K2Node_DynamicCast_AsTexture_2D) == 0x0001D0, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, K2Node_MakeStruct_FormatArgumentData) == 0x0001E0, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, K2Node_MakeArray_Array) == 0x000228, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ConstructInteractionPopUpText, CallFunc_Format_ReturnValue) == 0x000238, "Member 'BP_Chest_Regular_C_ConstructInteractionPopUpText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.ExecuteUbergraph_BP_Chest_Regular
// 0x0088 (0x0088 - 0x0000)
struct BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   K2Node_DynamicCast_AsForce_Feedback_Effect;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetObjectInteractionState_InteractionState; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_InteractingWorldCharacter;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InteractionState;                     // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Interaction_C>    CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular");
static_assert(sizeof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular) == 0x000088, "Wrong size on BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, EntryPoint) == 0x000000, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, Temp_object_Variable) == 0x000008, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, K2Node_DynamicCast_AsForce_Feedback_Effect) == 0x000010, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::K2Node_DynamicCast_AsForce_Feedback_Effect' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000019, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_GetObjectInteractionState_InteractionState) == 0x00001A, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_GetObjectInteractionState_InteractionState' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, K2Node_Event_InteractingWorldCharacter) == 0x000020, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::K2Node_Event_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, K2Node_Event_Instant) == 0x000028, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, K2Node_Event_InteractionState) == 0x00002B, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::K2Node_Event_InteractionState' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_GetInteractionSystem_ReturnValue) == 0x000030, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000050, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput) == 0x000058, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, K2Node_CustomEvent_Loaded) == 0x000070, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular, K2Node_CreateDelegate_OutputDelegate) == 0x000078, "Member 'BP_Chest_Regular_C_ExecuteUbergraph_BP_Chest_Regular::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.FindDuplicateID
// 0x0038 (0x0038 - 0x0000)
struct BP_Chest_Regular_C_FindDuplicateID final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Chest_Regular_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Chest_Regular_C*                    CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_FindDuplicateID) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_FindDuplicateID");
static_assert(sizeof(BP_Chest_Regular_C_FindDuplicateID) == 0x000038, "Wrong size on BP_Chest_Regular_C_FindDuplicateID");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, ReturnValue) == 0x000000, "Member 'BP_Chest_Regular_C_FindDuplicateID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Chest_Regular_C_FindDuplicateID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Chest_Regular_C_FindDuplicateID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000032, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_FindDuplicateID, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'BP_Chest_Regular_C_FindDuplicateID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.GenerateObjectID
// 0x0048 (0x0048 - 0x0000)
struct BP_Chest_Regular_C_GenerateObjectID final
{
public:
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindDuplicateID_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_GenerateObjectID) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_GenerateObjectID");
static_assert(sizeof(BP_Chest_Regular_C_GenerateObjectID) == 0x000048, "Wrong size on BP_Chest_Regular_C_GenerateObjectID");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_IsPackagedBuild_ReturnValue) == 0x000000, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_FindDuplicateID_ReturnValue) == 0x000001, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_FindDuplicateID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_NewGuid_ReturnValue) == 0x000004, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_NewGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000014, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_Conv_GuidToString_ReturnValue) == 0x000018, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GenerateObjectID, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_Chest_Regular_C_GenerateObjectID::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.GetInteractionPromptParams
// 0x0030 (0x0030 - 0x0000)
struct BP_Chest_Regular_C_GetInteractionPromptParams final
{
public:
	struct FFPromptParams                         PromptParams;                                      // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FFPromptParams                         K2Node_MakeStruct_FPromptParams;                   // 0x0018(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_GetInteractionPromptParams) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_GetInteractionPromptParams");
static_assert(sizeof(BP_Chest_Regular_C_GetInteractionPromptParams) == 0x000030, "Wrong size on BP_Chest_Regular_C_GetInteractionPromptParams");
static_assert(offsetof(BP_Chest_Regular_C_GetInteractionPromptParams, PromptParams) == 0x000000, "Member 'BP_Chest_Regular_C_GetInteractionPromptParams::PromptParams' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetInteractionPromptParams, K2Node_MakeStruct_FPromptParams) == 0x000018, "Member 'BP_Chest_Regular_C_GetInteractionPromptParams::K2Node_MakeStruct_FPromptParams' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.GetItemTypeScore
// 0x0038 (0x0038 - 0x0000)
struct BP_Chest_Regular_C_GetItemTypeScore final
{
public:
	E_jRPG_ItemType                               ItemType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_GetItemTypeScore) == 0x000004, "Wrong alignment on BP_Chest_Regular_C_GetItemTypeScore");
static_assert(sizeof(BP_Chest_Regular_C_GetItemTypeScore) == 0x000038, "Wrong size on BP_Chest_Regular_C_GetItemTypeScore");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, ItemType) == 0x000000, "Member 'BP_Chest_Regular_C_GetItemTypeScore::ItemType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, ReturnValue) == 0x000004, "Member 'BP_Chest_Regular_C_GetItemTypeScore::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_byte_Variable) == 0x000008, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable) == 0x00000C, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_1) == 0x000010, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_2) == 0x000014, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_3) == 0x000018, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_4) == 0x00001C, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_5) == 0x000020, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_6) == 0x000024, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_7) == 0x000028, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_8) == 0x00002C, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, Temp_int_Variable_9) == 0x000030, "Member 'BP_Chest_Regular_C_GetItemTypeScore::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetItemTypeScore, K2Node_Select_Default) == 0x000034, "Member 'BP_Chest_Regular_C_GetItemTypeScore::K2Node_Select_Default' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.GetSectionsFromLootTableReferences
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Chest_Regular_C_GetSectionsFromLootTableReferences final
{
public:
	TArray<struct FLootTableReference>            LootTableReferences_0;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_LootTableSection>            LootTableSections;                                 // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_LootTableSection>            Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLootTableReference                    CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(NoDestructor)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0068(0x0010)(ReferenceParm)
	TArray<struct FS_LootTableSection>            Temp_wildcard_Temp_buffer_array_Variable;          // 0x0078(0x0010)(ConstParm, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootTableSection                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_GetSectionsFromLootTableReferences");
static_assert(sizeof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences) == 0x0000C0, "Wrong size on BP_Chest_Regular_C_GetSectionsFromLootTableReferences");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, LootTableReferences_0) == 0x000000, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::LootTableReferences_0' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, LootTableSections) == 0x000010, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::LootTableSections' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000030, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000068, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, Temp_wildcard_Temp_buffer_array_Variable) == 0x000078, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetSectionsFromLootTableReferences, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_Chest_Regular_C_GetSectionsFromLootTableReferences::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BP_Chest_Regular_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_OnInteractionRequested");
static_assert(sizeof(BP_Chest_Regular_C_OnInteractionRequested) == 0x000010, "Wrong size on BP_Chest_Regular_C_OnInteractionRequested");
static_assert(offsetof(BP_Chest_Regular_C_OnInteractionRequested, InteractingWorldCharacter) == 0x000000, "Member 'BP_Chest_Regular_C_OnInteractionRequested::InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BP_Chest_Regular_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.OnLoaded_3A9C66874010891688933A9C2368EED3
// 0x0008 (0x0008 - 0x0000)
struct BP_Chest_Regular_C_OnLoaded_3A9C66874010891688933A9C2368EED3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_OnLoaded_3A9C66874010891688933A9C2368EED3) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_OnLoaded_3A9C66874010891688933A9C2368EED3");
static_assert(sizeof(BP_Chest_Regular_C_OnLoaded_3A9C66874010891688933A9C2368EED3) == 0x000008, "Wrong size on BP_Chest_Regular_C_OnLoaded_3A9C66874010891688933A9C2368EED3");
static_assert(offsetof(BP_Chest_Regular_C_OnLoaded_3A9C66874010891688933A9C2368EED3, Loaded) == 0x000000, "Member 'BP_Chest_Regular_C_OnLoaded_3A9C66874010891688933A9C2368EED3::Loaded' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.OnObjectInteractionStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_Chest_Regular_C_OnObjectInteractionStateLoaded final
{
public:
	bool                                          InteractionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong alignment on BP_Chest_Regular_C_OnObjectInteractionStateLoaded");
static_assert(sizeof(BP_Chest_Regular_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong size on BP_Chest_Regular_C_OnObjectInteractionStateLoaded");
static_assert(offsetof(BP_Chest_Regular_C_OnObjectInteractionStateLoaded, InteractionState) == 0x000000, "Member 'BP_Chest_Regular_C_OnObjectInteractionStateLoaded::InteractionState' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.RollChestItems
// 0x01F8 (0x01F8 - 0x0000)
struct BP_Chest_Regular_C_RollChestItems final
{
public:
	struct FS_LootContext                         LootContext;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      ItemsToLoot_0;                                     // 0x0008(0x0050)(Parm, OutParm)
	TMap<class FName, int32>                      local_rolledItems;                                 // 0x0058(0x0050)(Edit, BlueprintVisible)
	TArray<class UBP_GeneratedItemInfo_Base_C*>   local_generatedItems;                              // 0x00A8(0x0010)(Edit, BlueprintVisible)
	struct FS_LootContext                         local_lootContext;                                 // 0x00B8(0x0004)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_LootTableSection>            CallFunc_ComputeChestLootTableSections_LootTableSections; // 0x00D0(0x0010)(ReferenceParm)
	double                                        CallFunc_ComputeChestLootTableSections_RollChanceMultipler; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0118(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_LootSystemComponent_C*              CallFunc_GetLootSystem_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_LootTableEntry>              CallFunc_RollLootTableSectionList_RolledLootEntries; // 0x0188(0x0010)(ReferenceParm)
	struct FS_LootTableEntry                      CallFunc_Array_Get_Item;                           // 0x0198(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x01C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_RollChestItems) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_RollChestItems");
static_assert(sizeof(BP_Chest_Regular_C_RollChestItems) == 0x0001F8, "Wrong size on BP_Chest_Regular_C_RollChestItems");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, LootContext) == 0x000000, "Member 'BP_Chest_Regular_C_RollChestItems::LootContext' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, ItemsToLoot_0) == 0x000008, "Member 'BP_Chest_Regular_C_RollChestItems::ItemsToLoot_0' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, local_rolledItems) == 0x000058, "Member 'BP_Chest_Regular_C_RollChestItems::local_rolledItems' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, local_generatedItems) == 0x0000A8, "Member 'BP_Chest_Regular_C_RollChestItems::local_generatedItems' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, local_lootContext) == 0x0000B8, "Member 'BP_Chest_Regular_C_RollChestItems::local_lootContext' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'BP_Chest_Regular_C_RollChestItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'BP_Chest_Regular_C_RollChestItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, Temp_int_Array_Index_Variable_1) == 0x0000C8, "Member 'BP_Chest_Regular_C_RollChestItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_ComputeChestLootTableSections_LootTableSections) == 0x0000D0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_ComputeChestLootTableSections_LootTableSections' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_ComputeChestLootTableSections_RollChanceMultipler) == 0x0000E0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_ComputeChestLootTableSections_RollChanceMultipler' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, Temp_int_Loop_Counter_Variable_1) == 0x0000E8, "Member 'BP_Chest_Regular_C_RollChestItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_GetDisplayName_ReturnValue) == 0x0000F0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Conv_StringToText_ReturnValue) == 0x000108, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, K2Node_MakeStruct_FormatArgumentData) == 0x000118, "Member 'BP_Chest_Regular_C_RollChestItems::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, K2Node_MakeArray_Array) == 0x000160, "Member 'BP_Chest_Regular_C_RollChestItems::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Format_ReturnValue) == 0x000170, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_GetLootSystem_ReturnValue) == 0x000180, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_GetLootSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_RollLootTableSectionList_RolledLootEntries) == 0x000188, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_RollLootTableSectionList_RolledLootEntries' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Less_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Map_Find_Value) == 0x0001B0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Map_Find_ReturnValue) == 0x0001B4, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001B8, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Map_Keys_Keys) == 0x0001C0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Array_Get_Item_1) == 0x0001D4, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001DC, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Map_Find_Value_1) == 0x0001E0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Map_Find_ReturnValue_1) == 0x0001E4, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Map_Find_Value_2) == 0x0001E8, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Map_Find_ReturnValue_2) == 0x0001EC, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_RollChestItems, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001F0, "Member 'BP_Chest_Regular_C_RollChestItems::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.UpdateFeedbackParameters
// 0x0088 (0x0088 - 0x0000)
struct BP_Chest_Regular_C_UpdateFeedbackParameters final
{
public:
	struct FS_ChestFeedbackParameters             ChestFeedbackParameters;                           // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_UpdateFeedbackParameters) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_UpdateFeedbackParameters");
static_assert(sizeof(BP_Chest_Regular_C_UpdateFeedbackParameters) == 0x000088, "Wrong size on BP_Chest_Regular_C_UpdateFeedbackParameters");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParameters, ChestFeedbackParameters) == 0x000000, "Member 'BP_Chest_Regular_C_UpdateFeedbackParameters::ChestFeedbackParameters' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParameters, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000068, "Member 'BP_Chest_Regular_C_UpdateFeedbackParameters::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000080, "Member 'BP_Chest_Regular_C_UpdateFeedbackParameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.UpdateFeedbackParametersFromLoot
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot final
{
public:
	E_jRPG_ItemType                               local_currentBestType;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               CallFunc_ComputePreviewChestItemType_ItemType;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ChestFeedbackParameters             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ItemType                               CallFunc_ComputeChestDominantItemType_ItemType;    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot");
static_assert(sizeof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot) == 0x0000A8, "Wrong size on BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, local_currentBestType) == 0x000000, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::local_currentBestType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_IsDataRowHandleSet_ReturnValue) == 0x000001, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_IsDataRowHandleSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_ComputePreviewChestItemType_ItemType) == 0x000018, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_ComputePreviewChestItemType_ItemType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_Conv_StringToName_ReturnValue) == 0x00001C, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000091, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_BooleanOR_ReturnValue) == 0x000092, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_ComputeChestDominantItemType_ItemType) == 0x000093, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_ComputeChestDominantItemType_ItemType' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_GetGameInstance_ReturnValue) == 0x000098, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_Chest_Regular_C_UpdateFeedbackParametersFromLoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.UpdateVisuals
// 0x0002 (0x0002 - 0x0000)
struct BP_Chest_Regular_C_UpdateVisuals final
{
public:
	bool                                          CallFunc_GetObjectInteractionState_InteractionState; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_UpdateVisuals) == 0x000001, "Wrong alignment on BP_Chest_Regular_C_UpdateVisuals");
static_assert(sizeof(BP_Chest_Regular_C_UpdateVisuals) == 0x000002, "Wrong size on BP_Chest_Regular_C_UpdateVisuals");
static_assert(offsetof(BP_Chest_Regular_C_UpdateVisuals, CallFunc_GetObjectInteractionState_InteractionState) == 0x000000, "Member 'BP_Chest_Regular_C_UpdateVisuals::CallFunc_GetObjectInteractionState_InteractionState' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UpdateVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Chest_Regular_C_UpdateVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BP_Chest_Regular_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsInPlayMode_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_Chest_Regular_C_UserConstructionScript");
static_assert(sizeof(BP_Chest_Regular_C_UserConstructionScript) == 0x000002, "Wrong size on BP_Chest_Regular_C_UserConstructionScript");
static_assert(offsetof(BP_Chest_Regular_C_UserConstructionScript, CallFunc_IsInPlayMode_ReturnValue) == 0x000000, "Member 'BP_Chest_Regular_C_UserConstructionScript::CallFunc_IsInPlayMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Chest_Regular_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Chest_Regular.BP_Chest_Regular_C.GetInteractionLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_Chest_Regular_C_GetInteractionLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Chest_Regular_C_GetInteractionLocation) == 0x000008, "Wrong alignment on BP_Chest_Regular_C_GetInteractionLocation");
static_assert(sizeof(BP_Chest_Regular_C_GetInteractionLocation) == 0x000030, "Wrong size on BP_Chest_Regular_C_GetInteractionLocation");
static_assert(offsetof(BP_Chest_Regular_C_GetInteractionLocation, Location) == 0x000000, "Member 'BP_Chest_Regular_C_GetInteractionLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_Chest_Regular_C_GetInteractionLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_Chest_Regular_C_GetInteractionLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

}

