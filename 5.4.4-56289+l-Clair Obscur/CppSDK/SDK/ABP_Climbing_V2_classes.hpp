#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Climbing_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_Climbing_V2_structs.hpp"
#include "E_Climbing_Direction_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "E_ClimbingComponentState_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Climbing_V2.ABP_Climbing_V2_C
// 0x0620 (0x0990 - 0x0370)
class UABP_Climbing_V2_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Climbing_V2::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;              // 0x0378(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x03B8(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0400(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x04A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x04C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x04F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0518(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0540(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0568(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0590(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x05B8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0600(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0620(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0668(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0688(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x06F8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0718(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0740(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0788(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x07F0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0810(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0880(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x08A0(0x00C8)()
	E_ClimbingComponentState                      ClimbingState;                                     // 0x0968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          ClimbingDirection;                                 // 0x0969(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96A[0x6];                                      // 0x096A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DistanceToNextHold;                                // 0x0970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceAboveWhichAHoldIsLong;                     // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ClimbingComponent_C*                ClimbingComponentReference;                        // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToPerformAnimation;                            // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_OnAnimationInterrupted();
	void AnimNotify_OnClimbingMovementDone();
	void AnimNotify_OnStartClimbAnimationDone();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_SequencePlayer_64CE3B384B4F57DA7F123E8DFE98AB52();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_SequencePlayer_A8A4CAA24A67F4D37C97C1AE900C31FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_SequencePlayer_F5E121D5483BAE4BA7B9A099437F40B7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_SequencePlayer_FA598A834A5E09DDE5873CA101D50A50();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_0558962E42C90F242FA5CFBD6D0EFF90();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_312FB91F4F10CA5E3EC9A4A6AB072AC5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_347C64A0443AE0B50DEF04B3D7B4B2E2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_42DBB77A4D32489FDEDBD09856644693();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_8674908A41B1505896FFB6925AD5B643();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_964CC3134D0FFAA60BB6F0A8EA44F0AF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_A17B3EED4899DD941B7355B8B5C60BB7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Climbing_V2_AnimGraphNode_TransitionResult_C03582CA44B0D0E569DD858C658CF092();
	void ExecuteUbergraph_ABP_Climbing_V2(int32 EntryPoint);
	double GetAnimationPlayRate();
	void UpdateClimbingComponentData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Climbing_V2_C">();
	}
	static class UABP_Climbing_V2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Climbing_V2_C>();
	}
};
static_assert(alignof(UABP_Climbing_V2_C) == 0x000010, "Wrong alignment on UABP_Climbing_V2_C");
static_assert(sizeof(UABP_Climbing_V2_C) == 0x000990, "Wrong size on UABP_Climbing_V2_C");
static_assert(offsetof(UABP_Climbing_V2_C, UberGraphFrame) == 0x000370, "Member 'UABP_Climbing_V2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_Climbing_V2_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UABP_Climbing_V2_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UABP_Climbing_V2_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_Root) == 0x000398, "Member 'UABP_Climbing_V2_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_Slot) == 0x0003B8, "Member 'UABP_Climbing_V2_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_11) == 0x000400, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_10) == 0x000428, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_9) == 0x000450, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_8) == 0x000478, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_7) == 0x0004A0, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_6) == 0x0004C8, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_5) == 0x0004F0, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_4) == 0x000518, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_3) == 0x000540, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_2) == 0x000568, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult_1) == 0x000590, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_SequencePlayer_3) == 0x0005B8, "Member 'UABP_Climbing_V2_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_StateResult_5) == 0x000600, "Member 'UABP_Climbing_V2_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_SequencePlayer_2) == 0x000620, "Member 'UABP_Climbing_V2_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_StateResult_4) == 0x000668, "Member 'UABP_Climbing_V2_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000688, "Member 'UABP_Climbing_V2_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_StateResult_3) == 0x0006F8, "Member 'UABP_Climbing_V2_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_TransitionResult) == 0x000718, "Member 'UABP_Climbing_V2_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_SequencePlayer_1) == 0x000740, "Member 'UABP_Climbing_V2_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_StateResult_2) == 0x000788, "Member 'UABP_Climbing_V2_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_SequencePlayer) == 0x0007A8, "Member 'UABP_Climbing_V2_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_StateResult_1) == 0x0007F0, "Member 'UABP_Climbing_V2_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_BlendSpacePlayer) == 0x000810, "Member 'UABP_Climbing_V2_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_StateResult) == 0x000880, "Member 'UABP_Climbing_V2_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, AnimGraphNode_StateMachine) == 0x0008A0, "Member 'UABP_Climbing_V2_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, ClimbingState) == 0x000968, "Member 'UABP_Climbing_V2_C::ClimbingState' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, ClimbingDirection) == 0x000969, "Member 'UABP_Climbing_V2_C::ClimbingDirection' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, DistanceToNextHold) == 0x000970, "Member 'UABP_Climbing_V2_C::DistanceToNextHold' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, DistanceAboveWhichAHoldIsLong) == 0x000978, "Member 'UABP_Climbing_V2_C::DistanceAboveWhichAHoldIsLong' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, ClimbingComponentReference) == 0x000980, "Member 'UABP_Climbing_V2_C::ClimbingComponentReference' has a wrong offset!");
static_assert(offsetof(UABP_Climbing_V2_C, TimeToPerformAnimation) == 0x000988, "Member 'UABP_Climbing_V2_C::TimeToPerformAnimation' has a wrong offset!");

}

