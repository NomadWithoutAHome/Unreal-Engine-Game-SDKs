#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_InternalActivationComponent

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GPE_InternalActivationComponent.BP_GPE_InternalActivationComponent_C
// 0x0070 (0x0110 - 0x00A0)
class UBP_GPE_InternalActivationComponent_C final : public UActorComponent
{
public:
	TMulticastInlineDelegate<void(bool Activated)> OnActivationChanged;                              // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UObject*>                        ActivatorList;                                     // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UObject*>                        DeactivatorList;                                   // 0x00C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(bool Activated)> OnInstantActivationChanged;                       // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool Instant)>  OnActivatorsChanged;                               // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool Instant)>  OnDeactivatorsChanged;                             // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnBehaviorExecuted;                                // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AddActivation(class UObject* Activator, bool Instant, const class FString& DebugName);
	void AddActivationInternal(class UObject* Activator, bool Instant, const class FString& DebugName, bool* HasActivationChanged);
	void AddCustomActivation(class UObject* Activator, bool Instant, const class FString& DebugName);
	void GetActivatorList(TArray<class UObject*>* Activators);
	void GetDeactivatorList(TArray<class UObject*>* Deactivators);
	bool IsActivated();
	bool IsDeactivated();
	void OnActivationChangedInternal(bool Instant);
	void RemoveActivation(class UObject* Activator, bool Instant);
	void RemoveActivationInternal(class UObject* Activator, bool Instant, bool* HasActivationChanged);
	void RemoveCustomActivation(class AActor* Activator, bool Instant);
	void SendImpulse(class AActor* Activator);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GPE_InternalActivationComponent_C">();
	}
	static class UBP_GPE_InternalActivationComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GPE_InternalActivationComponent_C>();
	}
};
static_assert(alignof(UBP_GPE_InternalActivationComponent_C) == 0x000008, "Wrong alignment on UBP_GPE_InternalActivationComponent_C");
static_assert(sizeof(UBP_GPE_InternalActivationComponent_C) == 0x000110, "Wrong size on UBP_GPE_InternalActivationComponent_C");
static_assert(offsetof(UBP_GPE_InternalActivationComponent_C, OnActivationChanged) == 0x0000A0, "Member 'UBP_GPE_InternalActivationComponent_C::OnActivationChanged' has a wrong offset!");
static_assert(offsetof(UBP_GPE_InternalActivationComponent_C, ActivatorList) == 0x0000B0, "Member 'UBP_GPE_InternalActivationComponent_C::ActivatorList' has a wrong offset!");
static_assert(offsetof(UBP_GPE_InternalActivationComponent_C, DeactivatorList) == 0x0000C0, "Member 'UBP_GPE_InternalActivationComponent_C::DeactivatorList' has a wrong offset!");
static_assert(offsetof(UBP_GPE_InternalActivationComponent_C, OnInstantActivationChanged) == 0x0000D0, "Member 'UBP_GPE_InternalActivationComponent_C::OnInstantActivationChanged' has a wrong offset!");
static_assert(offsetof(UBP_GPE_InternalActivationComponent_C, OnActivatorsChanged) == 0x0000E0, "Member 'UBP_GPE_InternalActivationComponent_C::OnActivatorsChanged' has a wrong offset!");
static_assert(offsetof(UBP_GPE_InternalActivationComponent_C, OnDeactivatorsChanged) == 0x0000F0, "Member 'UBP_GPE_InternalActivationComponent_C::OnDeactivatorsChanged' has a wrong offset!");
static_assert(offsetof(UBP_GPE_InternalActivationComponent_C, OnBehaviorExecuted) == 0x000100, "Member 'UBP_GPE_InternalActivationComponent_C::OnBehaviorExecuted' has a wrong offset!");

}

