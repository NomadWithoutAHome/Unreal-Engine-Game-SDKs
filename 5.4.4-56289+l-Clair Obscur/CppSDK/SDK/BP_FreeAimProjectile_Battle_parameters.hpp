#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimProjectile_Battle

#include "Basic.hpp"

#include "EAttackType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FreeAimProjectile_Battle.BP_FreeAimProjectile_Battle_C.ExecuteUbergraph_BP_FreeAimProjectile_Battle
// 0x00E0 (0x00E0 - 0x0000)
struct BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BattleProp_Base_C*                  K2Node_DynamicCast_AsBP_Battle_Prop_Base;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue; // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle) == 0x000008, "Wrong alignment on BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle");
static_assert(sizeof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle) == 0x0000E0, "Wrong size on BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, EntryPoint) == 0x000000, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_byte_Variable) == 0x000004, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable) == 0x000008, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_1) == 0x000018, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_2) == 0x000028, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_3) == 0x000038, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_4) == 0x000048, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_5) == 0x000058, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_6) == 0x000068, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_7) == 0x000078, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, Temp_struct_Variable_8) == 0x000088, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000098, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, K2Node_Event_OtherActor) == 0x0000A8, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, K2Node_DynamicCast_AsBP_Battle_Prop_Base) == 0x0000B0, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::K2Node_DynamicCast_AsBP_Battle_Prop_Base' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, K2Node_Select_Default) == 0x0000BC, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle, CallFunc_Divide_LinearColorLinearColor_ReturnValue) == 0x0000CC, "Member 'BP_FreeAimProjectile_Battle_C_ExecuteUbergraph_BP_FreeAimProjectile_Battle::CallFunc_Divide_LinearColorLinearColor_ReturnValue' has a wrong offset!");

// Function BP_FreeAimProjectile_Battle.BP_FreeAimProjectile_Battle_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_FreeAimProjectile_Battle_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimProjectile_Battle_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_FreeAimProjectile_Battle_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_FreeAimProjectile_Battle_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_FreeAimProjectile_Battle_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_FreeAimProjectile_Battle_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_FreeAimProjectile_Battle_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

