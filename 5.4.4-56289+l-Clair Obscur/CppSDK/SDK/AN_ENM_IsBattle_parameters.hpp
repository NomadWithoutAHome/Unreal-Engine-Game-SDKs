#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AN_ENM_IsBattle

#include "Basic.hpp"

#include "EBattleAudioContainerComponents_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AN_ENM_IsBattle.AN_ENM_IsBattle_C.GetAudioComponentBattle
// 0x0078 (0x0078 - 0x0000)
struct AN_ENM_IsBattle_C_GetAudioComponentBattle final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BattleComponent;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EBattleAudioContainerComponents               Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleAudioCharacter_GetComponents_C> K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_SFX;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Weapon_L; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Weapon_R; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foley;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Vocal;  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foot_L; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foot_R; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_HitBy;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AN_ENM_IsBattle_C_GetAudioComponentBattle) == 0x000008, "Wrong alignment on AN_ENM_IsBattle_C_GetAudioComponentBattle");
static_assert(sizeof(AN_ENM_IsBattle_C_GetAudioComponentBattle) == 0x000078, "Wrong size on AN_ENM_IsBattle_C_GetAudioComponentBattle");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, Owner) == 0x000000, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::Owner' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, BattleComponent) == 0x000008, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::BattleComponent' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, Temp_byte_Variable) == 0x000010, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components) == 0x000018, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_SFX) == 0x000030, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_SFX' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_Weapon_L) == 0x000038, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_Weapon_L' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_Weapon_R) == 0x000040, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_Weapon_R' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_Foley) == 0x000048, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_Foley' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_Vocal) == 0x000050, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_Vocal' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_Foot_L) == 0x000058, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_Foot_L' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_Foot_R) == 0x000060, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_Foot_R' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, CallFunc_GetBattleAudioContainerComponents_HitBy) == 0x000068, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::CallFunc_GetBattleAudioContainerComponents_HitBy' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentBattle, K2Node_Select_Default) == 0x000070, "Member 'AN_ENM_IsBattle_C_GetAudioComponentBattle::K2Node_Select_Default' has a wrong offset!");

// Function AN_ENM_IsBattle.AN_ENM_IsBattle_C.GetAudioComponentEnviro
// 0x0010 (0x0010 - 0x0000)
struct AN_ENM_IsBattle_C_GetAudioComponentEnviro final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        EnviroComponent;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AN_ENM_IsBattle_C_GetAudioComponentEnviro) == 0x000008, "Wrong alignment on AN_ENM_IsBattle_C_GetAudioComponentEnviro");
static_assert(sizeof(AN_ENM_IsBattle_C_GetAudioComponentEnviro) == 0x000010, "Wrong size on AN_ENM_IsBattle_C_GetAudioComponentEnviro");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentEnviro, Owner) == 0x000000, "Member 'AN_ENM_IsBattle_C_GetAudioComponentEnviro::Owner' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_GetAudioComponentEnviro, EnviroComponent) == 0x000008, "Member 'AN_ENM_IsBattle_C_GetAudioComponentEnviro::EnviroComponent' has a wrong offset!");

// Function AN_ENM_IsBattle.AN_ENM_IsBattle_C.PlayBattleSound
// 0x0040 (0x0040 - 0x0000)
struct AN_ENM_IsBattle_C_PlayBattleSound final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetAudioComponentBattle_BattleComponent;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AN_ENM_IsBattle_C_PlayBattleSound) == 0x000008, "Wrong alignment on AN_ENM_IsBattle_C_PlayBattleSound");
static_assert(sizeof(AN_ENM_IsBattle_C_PlayBattleSound) == 0x000040, "Wrong size on AN_ENM_IsBattle_C_PlayBattleSound");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayBattleSound, Owner) == 0x000000, "Member 'AN_ENM_IsBattle_C_PlayBattleSound::Owner' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayBattleSound, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'AN_ENM_IsBattle_C_PlayBattleSound::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayBattleSound, CallFunc_GetAudioComponentBattle_BattleComponent) == 0x000010, "Member 'AN_ENM_IsBattle_C_PlayBattleSound::CallFunc_GetAudioComponentBattle_BattleComponent' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayBattleSound, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'AN_ENM_IsBattle_C_PlayBattleSound::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayBattleSound, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'AN_ENM_IsBattle_C_PlayBattleSound::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayBattleSound, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000038, "Member 'AN_ENM_IsBattle_C_PlayBattleSound::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function AN_ENM_IsBattle.AN_ENM_IsBattle_C.PlayEnviroSound
// 0x0048 (0x0048 - 0x0000)
struct AN_ENM_IsBattle_C_PlayEnviroSound final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AudioCharacter_GetComponents_C> K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_GetAudioComponentByType_AudioComponent;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AN_ENM_IsBattle_C_PlayEnviroSound) == 0x000008, "Wrong alignment on AN_ENM_IsBattle_C_PlayEnviroSound");
static_assert(sizeof(AN_ENM_IsBattle_C_PlayEnviroSound) == 0x000048, "Wrong size on AN_ENM_IsBattle_C_PlayEnviroSound");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayEnviroSound, Owner) == 0x000000, "Member 'AN_ENM_IsBattle_C_PlayEnviroSound::Owner' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayEnviroSound, K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components) == 0x000008, "Member 'AN_ENM_IsBattle_C_PlayEnviroSound::K2Node_DynamicCast_AsBPI_Audio_Character_Get_Components' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayEnviroSound, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AN_ENM_IsBattle_C_PlayEnviroSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayEnviroSound, CallFunc_GetAudioComponentByType_AudioComponent) == 0x000020, "Member 'AN_ENM_IsBattle_C_PlayEnviroSound::CallFunc_GetAudioComponentByType_AudioComponent' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayEnviroSound, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'AN_ENM_IsBattle_C_PlayEnviroSound::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_PlayEnviroSound, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000040, "Member 'AN_ENM_IsBattle_C_PlayEnviroSound::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function AN_ENM_IsBattle.AN_ENM_IsBattle_C.Received_Notify
// 0x0070 (0x0070 - 0x0000)
struct AN_ENM_IsBattle_C_Received_Notify final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAnimNotifyEventReference              EventReference;                                    // 0x0010(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Enemy_Battle_Base_C*           K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base;   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AN_ENM_IsBattle_C_Received_Notify) == 0x000008, "Wrong alignment on AN_ENM_IsBattle_C_Received_Notify");
static_assert(sizeof(AN_ENM_IsBattle_C_Received_Notify) == 0x000070, "Wrong size on AN_ENM_IsBattle_C_Received_Notify");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, MeshComp) == 0x000000, "Member 'AN_ENM_IsBattle_C_Received_Notify::MeshComp' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, Animation) == 0x000008, "Member 'AN_ENM_IsBattle_C_Received_Notify::Animation' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, EventReference) == 0x000010, "Member 'AN_ENM_IsBattle_C_Received_Notify::EventReference' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, ReturnValue) == 0x000040, "Member 'AN_ENM_IsBattle_C_Received_Notify::ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'AN_ENM_IsBattle_C_Received_Notify::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base) == 0x000050, "Member 'AN_ENM_IsBattle_C_Received_Notify::K2Node_DynamicCast_AsBP_J_RPG_Enemy_Battle_Base' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'AN_ENM_IsBattle_C_Received_Notify::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless) == 0x000060, "Member 'AN_ENM_IsBattle_C_Received_Notify::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless' has a wrong offset!");
static_assert(offsetof(AN_ENM_IsBattle_C_Received_Notify, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'AN_ENM_IsBattle_C_Received_Notify::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

