#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuestSystem

#include "Basic.hpp"

#include "S_QuestStatusData_structs.hpp"
#include "E_QuestStatus_structs.hpp"
#include "SandFall_structs.hpp"
#include "SandFall_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_QuestSystem.BP_QuestSystem_C
// 0x00A0 (0x00C8 - 0x0028)
class UBP_QuestSystem_C final : public UExtendedObject
{
public:
	TMap<class FName, struct FS_QuestStatusData>  QuestStatuses;                                     // 0x0028(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMulticastInlineDelegate<void(class FName QuestName, E_QuestStatus Stauts)> OnQuestStatusChanged; // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FQuestObjectiveIdentifier& QuestObjective, E_QuestStatus Status)> OnObjectiveStatusChanged; // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          ShouldDispatchModifications;                       // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnAnyQuestStatusChanged;                           // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnAnyObjectiveStatusChanged;                       // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USF_ActivityWrapper*                    MainQuestActivity;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ASSERT_InvalidDebugReason(class FName QuestName);
	void ASSERT_ObjectiveNotFound(class FName QuestName, class FName ObjectiveName);
	void ASSERT_QuestNotFound(class FName QuestName);
	void FindQuestStatusData(class FName& QuestName, struct FS_QuestStatusData* Status, bool* Found);
	void GetObjectiveList(class FName& QuestName, TArray<struct FQuestObjectiveIdentifier>* Objectives);
	void GetObjectiveStatus(struct FQuestObjectiveIdentifier& QuestObjective, E_QuestStatus* Status);
	void GetQuestList(TArray<class FName>* Quests);
	void GetQuestStatus(class FName& QuestName, E_QuestStatus* Status);
	void Initialize();
	void LoadState(TMap<class FName, struct FS_QuestStatusData>& InQuestStatuses);
	void ResetAllActivities();
	void ResetState();
	void SaveState(TMap<class FName, struct FS_QuestStatusData>& InQuestStatuses);
	void SetObjectiveStatus(struct FQuestObjectiveIdentifier& QuestObjective, E_QuestStatus Status, const class FString& DebugReason);
	void SetObjectiveStatusInternal(class FName& QuestName, class FName& ObjectiveName, E_QuestStatus Status, bool* HasUpdated);
	void SetQuestStatus(class FName& QuestName, E_QuestStatus Status, const class FString& DebugReason);
	void UpdateActivityStatus(class FName QuestName, E_QuestStatus Status);
	void UpdateActivitySubTaskStatus(class FName ObjectiveName, E_QuestStatus Status);
	void ValidateQuestData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuestSystem_C">();
	}
	static class UBP_QuestSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_QuestSystem_C>();
	}
};
static_assert(alignof(UBP_QuestSystem_C) == 0x000008, "Wrong alignment on UBP_QuestSystem_C");
static_assert(sizeof(UBP_QuestSystem_C) == 0x0000C8, "Wrong size on UBP_QuestSystem_C");
static_assert(offsetof(UBP_QuestSystem_C, QuestStatuses) == 0x000028, "Member 'UBP_QuestSystem_C::QuestStatuses' has a wrong offset!");
static_assert(offsetof(UBP_QuestSystem_C, OnQuestStatusChanged) == 0x000078, "Member 'UBP_QuestSystem_C::OnQuestStatusChanged' has a wrong offset!");
static_assert(offsetof(UBP_QuestSystem_C, OnObjectiveStatusChanged) == 0x000088, "Member 'UBP_QuestSystem_C::OnObjectiveStatusChanged' has a wrong offset!");
static_assert(offsetof(UBP_QuestSystem_C, ShouldDispatchModifications) == 0x000098, "Member 'UBP_QuestSystem_C::ShouldDispatchModifications' has a wrong offset!");
static_assert(offsetof(UBP_QuestSystem_C, OnAnyQuestStatusChanged) == 0x0000A0, "Member 'UBP_QuestSystem_C::OnAnyQuestStatusChanged' has a wrong offset!");
static_assert(offsetof(UBP_QuestSystem_C, OnAnyObjectiveStatusChanged) == 0x0000B0, "Member 'UBP_QuestSystem_C::OnAnyObjectiveStatusChanged' has a wrong offset!");
static_assert(offsetof(UBP_QuestSystem_C, MainQuestActivity) == 0x0000C0, "Member 'UBP_QuestSystem_C::MainQuestActivity' has a wrong offset!");

}

