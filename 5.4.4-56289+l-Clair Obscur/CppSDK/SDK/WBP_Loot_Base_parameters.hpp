#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Loot_Base

#include "Basic.hpp"

#include "S_MerchantItemQueueData_structs.hpp"
#include "S_LootContext_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Loot_Base.WBP_Loot_Base_C.SetBoughtItemData
// 0x0140 (0x0140 - 0x0000)
struct WBP_Loot_Base_C_SetBoughtItemData final
{
public:
	struct FS_MerchantItemQueueData               BoughtItem;                                        // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0138(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Loot_Base_C_SetBoughtItemData) == 0x000008, "Wrong alignment on WBP_Loot_Base_C_SetBoughtItemData");
static_assert(sizeof(WBP_Loot_Base_C_SetBoughtItemData) == 0x000140, "Wrong size on WBP_Loot_Base_C_SetBoughtItemData");
static_assert(offsetof(WBP_Loot_Base_C_SetBoughtItemData, BoughtItem) == 0x000000, "Member 'WBP_Loot_Base_C_SetBoughtItemData::BoughtItem' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_SetBoughtItemData, Quantity) == 0x000138, "Member 'WBP_Loot_Base_C_SetBoughtItemData::Quantity' has a wrong offset!");

// Function WBP_Loot_Base.WBP_Loot_Base_C.SetItemData
// 0x0010 (0x0010 - 0x0000)
struct WBP_Loot_Base_C_SetItemData final
{
public:
	class UBP_GeneratedItemInfo_Base_C*           GeneratedItemInfo;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         LootContext;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Loot_Base_C_SetItemData) == 0x000008, "Wrong alignment on WBP_Loot_Base_C_SetItemData");
static_assert(sizeof(WBP_Loot_Base_C_SetItemData) == 0x000010, "Wrong size on WBP_Loot_Base_C_SetItemData");
static_assert(offsetof(WBP_Loot_Base_C_SetItemData, GeneratedItemInfo) == 0x000000, "Member 'WBP_Loot_Base_C_SetItemData::GeneratedItemInfo' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_SetItemData, LootContext) == 0x000008, "Member 'WBP_Loot_Base_C_SetItemData::LootContext' has a wrong offset!");

// Function WBP_Loot_Base.WBP_Loot_Base_C.GetVirtualTreeParent
// 0x0028 (0x0028 - 0x0000)
struct WBP_Loot_Base_C_GetVirtualTreeParent final
{
public:
	class UCommonActivatableWidget*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PauseMenu_C*                       CallFunc_GetPauseMenuWidget_PauseMenuWidget;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Loot_Base_C_GetVirtualTreeParent) == 0x000008, "Wrong alignment on WBP_Loot_Base_C_GetVirtualTreeParent");
static_assert(sizeof(WBP_Loot_Base_C_GetVirtualTreeParent) == 0x000028, "Wrong size on WBP_Loot_Base_C_GetVirtualTreeParent");
static_assert(offsetof(WBP_Loot_Base_C_GetVirtualTreeParent, ReturnValue) == 0x000000, "Member 'WBP_Loot_Base_C_GetVirtualTreeParent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_GetVirtualTreeParent, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WBP_Loot_Base_C_GetVirtualTreeParent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_GetVirtualTreeParent, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x000010, "Member 'WBP_Loot_Base_C_GetVirtualTreeParent::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_GetVirtualTreeParent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Loot_Base_C_GetVirtualTreeParent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_GetVirtualTreeParent, CallFunc_GetPauseMenuWidget_PauseMenuWidget) == 0x000020, "Member 'WBP_Loot_Base_C_GetVirtualTreeParent::CallFunc_GetPauseMenuWidget_PauseMenuWidget' has a wrong offset!");

// Function WBP_Loot_Base.WBP_Loot_Base_C.SetOwnerQueue
// 0x0030 (0x0030 - 0x0000)
struct WBP_Loot_Base_C_SetOwnerQueue final
{
public:
	class UWBP_HUD_LootQueue_C*                   InOwnerQueue;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPaused_IsPaused;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Loot_Base_C_SetOwnerQueue) == 0x000008, "Wrong alignment on WBP_Loot_Base_C_SetOwnerQueue");
static_assert(sizeof(WBP_Loot_Base_C_SetOwnerQueue) == 0x000030, "Wrong size on WBP_Loot_Base_C_SetOwnerQueue");
static_assert(offsetof(WBP_Loot_Base_C_SetOwnerQueue, InOwnerQueue) == 0x000000, "Member 'WBP_Loot_Base_C_SetOwnerQueue::InOwnerQueue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_SetOwnerQueue, CallFunc_GetIsPaused_IsPaused) == 0x000008, "Member 'WBP_Loot_Base_C_SetOwnerQueue::CallFunc_GetIsPaused_IsPaused' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_SetOwnerQueue, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_Loot_Base_C_SetOwnerQueue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_SetOwnerQueue, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_Loot_Base_C_SetOwnerQueue::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_SetOwnerQueue, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'WBP_Loot_Base_C_SetOwnerQueue::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_Loot_Base.WBP_Loot_Base_C.ExecuteUbergraph_WBP_Loot_Base
// 0x0058 (0x0058 - 0x0000)
struct WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base) == 0x000008, "Wrong alignment on WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base");
static_assert(sizeof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base) == 0x000058, "Wrong size on WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, EntryPoint) == 0x000000, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000034, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, CallFunc_IsActivated_ReturnValue) == 0x000044, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, CallFunc_PlayAnimationForward_ReturnValue) == 0x000048, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000050, "Member 'WBP_Loot_Base_C_ExecuteUbergraph_WBP_Loot_Base::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

}

