#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Face_PostProcess_AnimBP_MainChar

#include "Basic.hpp"

#include "RigLogicModule_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Face_PostProcess_AnimBP_MainChar.Face_PostProcess_AnimBP_MainChar_C
// 0x05C0 (0x0930 - 0x0370)
class UFace_PostProcess_AnimBP_MainChar_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0388(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0408(0x0028)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x0430(0x00F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0520(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0540(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x0560(0x0128)()
	struct FAnimNode_ApplyLimits                  AnimGraphNode_ApplyLimits;                         // 0x0688(0x00E8)()
	struct FAnimNode_RigLogic                     AnimGraphNode_RigLogic;                            // 0x0770(0x0060)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x07D0(0x00B8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0888(0x0020)()
	double                                        __CustomProperty_neckCorrMultD_EDEA17A84E0A0AAC955D119D2AB37313; // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_neckCorrMultM_EDEA17A84E0A0AAC955D119D2AB37313; // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        __CustomProperty_neckCorrMultU_EDEA17A84E0A0AAC955D119D2AB37313; // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BodyTypeIndex;                                     // 0x08C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CineCharacter_Main_C*               CineCharacterOwner;                                // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UABP_Facial_Cine_Main_C*                As_ABP_Facial_Cine_Main;                           // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         Eye_Left_Right;                                    // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Eye_Up_Down;                                       // 0x08DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyesUp_Dev;                                        // 0x08E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyesDown_Dev;                                      // 0x08E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeRight_Dev;                                      // 0x08E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EyeLeft_Dev;                                       // 0x08EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCineCharacter;                                   // 0x08F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Look_At_Location;                                  // 0x08F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasNPCAnimationComponent;                          // 0x0910(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPCAnimationComponent_C*            NPCAnimationComponent;                             // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldNPCLookAt;                                   // 0x0920(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_Face_PostProcess_AnimBP_MainChar(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Face_PostProcess_AnimBP_MainChar_C">();
	}
	static class UFace_PostProcess_AnimBP_MainChar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFace_PostProcess_AnimBP_MainChar_C>();
	}
};
static_assert(alignof(UFace_PostProcess_AnimBP_MainChar_C) == 0x000010, "Wrong alignment on UFace_PostProcess_AnimBP_MainChar_C");
static_assert(sizeof(UFace_PostProcess_AnimBP_MainChar_C) == 0x000930, "Wrong size on UFace_PostProcess_AnimBP_MainChar_C");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, UberGraphFrame) == 0x000370, "Member 'UFace_PostProcess_AnimBP_MainChar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_SaveCachedPose) == 0x000388, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_UseCachedPose) == 0x000408, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_CopyBone) == 0x000430, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_LocalToComponentSpace) == 0x000520, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_ComponentToLocalSpace) == 0x000540, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_ModifyBone) == 0x000560, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_ApplyLimits) == 0x000688, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_ApplyLimits' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_RigLogic) == 0x000770, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_RigLogic' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_LinkedInputPose) == 0x0007D0, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, AnimGraphNode_Root) == 0x000888, "Member 'UFace_PostProcess_AnimBP_MainChar_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, __CustomProperty_neckCorrMultD_EDEA17A84E0A0AAC955D119D2AB37313) == 0x0008A8, "Member 'UFace_PostProcess_AnimBP_MainChar_C::__CustomProperty_neckCorrMultD_EDEA17A84E0A0AAC955D119D2AB37313' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, __CustomProperty_neckCorrMultM_EDEA17A84E0A0AAC955D119D2AB37313) == 0x0008B0, "Member 'UFace_PostProcess_AnimBP_MainChar_C::__CustomProperty_neckCorrMultM_EDEA17A84E0A0AAC955D119D2AB37313' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, __CustomProperty_neckCorrMultU_EDEA17A84E0A0AAC955D119D2AB37313) == 0x0008B8, "Member 'UFace_PostProcess_AnimBP_MainChar_C::__CustomProperty_neckCorrMultU_EDEA17A84E0A0AAC955D119D2AB37313' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, BodyTypeIndex) == 0x0008C0, "Member 'UFace_PostProcess_AnimBP_MainChar_C::BodyTypeIndex' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, CineCharacterOwner) == 0x0008C8, "Member 'UFace_PostProcess_AnimBP_MainChar_C::CineCharacterOwner' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, As_ABP_Facial_Cine_Main) == 0x0008D0, "Member 'UFace_PostProcess_AnimBP_MainChar_C::As_ABP_Facial_Cine_Main' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, Eye_Left_Right) == 0x0008D8, "Member 'UFace_PostProcess_AnimBP_MainChar_C::Eye_Left_Right' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, Eye_Up_Down) == 0x0008DC, "Member 'UFace_PostProcess_AnimBP_MainChar_C::Eye_Up_Down' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, EyesUp_Dev) == 0x0008E0, "Member 'UFace_PostProcess_AnimBP_MainChar_C::EyesUp_Dev' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, EyesDown_Dev) == 0x0008E4, "Member 'UFace_PostProcess_AnimBP_MainChar_C::EyesDown_Dev' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, EyeRight_Dev) == 0x0008E8, "Member 'UFace_PostProcess_AnimBP_MainChar_C::EyeRight_Dev' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, EyeLeft_Dev) == 0x0008EC, "Member 'UFace_PostProcess_AnimBP_MainChar_C::EyeLeft_Dev' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, IsCineCharacter) == 0x0008F0, "Member 'UFace_PostProcess_AnimBP_MainChar_C::IsCineCharacter' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, Look_At_Location) == 0x0008F8, "Member 'UFace_PostProcess_AnimBP_MainChar_C::Look_At_Location' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, HasNPCAnimationComponent) == 0x000910, "Member 'UFace_PostProcess_AnimBP_MainChar_C::HasNPCAnimationComponent' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, NPCAnimationComponent) == 0x000918, "Member 'UFace_PostProcess_AnimBP_MainChar_C::NPCAnimationComponent' has a wrong offset!");
static_assert(offsetof(UFace_PostProcess_AnimBP_MainChar_C, ShouldNPCLookAt) == 0x000920, "Member 'UFace_PostProcess_AnimBP_MainChar_C::ShouldNPCLookAt' has a wrong offset!");

}

