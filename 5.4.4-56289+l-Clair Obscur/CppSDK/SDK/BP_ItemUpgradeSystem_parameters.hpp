#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemUpgradeSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EWeaponQuality_structs.hpp"
#include "S_ItemQuantityList_structs.hpp"
#include "S_ItemQuantity_structs.hpp"
#include "S_WeaponInstanceData_structs.hpp"
#include "S_ItemQuantityPerWeaponUpgrade_structs.hpp"
#include "S_WeaponInstanceHandle_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "S_LootContext_structs.hpp"
#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "S_WeaponDefinition_structs.hpp"
#include "S_WeaponScalingLevel_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.AddWeaponToInventory
// 0x03E8 (0x03E8 - 0x0000)
struct BP_ItemUpgradeSystem_C_AddWeaponToInventory final
{
public:
	struct FS_WeaponInstanceHandle                WeaponInstanceHandle;                              // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousLevel;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  local_existingWeaponInstanceData;                  // 0x0010(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  Temp_struct_Variable;                              // 0x0120(0x0110)(ConstParm, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0248(0x0010)()
	class UBP_ItemInstance_Gear_Weapon_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon; // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0268(0x0048)(HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  CallFunc_GetWeaponInstanceData_ReturnValue;        // 0x02B0(0x0110)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x03C0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_AddWeaponToInventory) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_AddWeaponToInventory");
static_assert(sizeof(BP_ItemUpgradeSystem_C_AddWeaponToInventory) == 0x0003E8, "Wrong size on BP_ItemUpgradeSystem_C_AddWeaponToInventory");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, WeaponInstanceHandle) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::WeaponInstanceHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, PreviousLevel) == 0x00000C, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::PreviousLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, local_existingWeaponInstanceData) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::local_existingWeaponInstanceData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, Temp_struct_Variable) == 0x000120, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, CallFunc_GetInventoryManager_ReturnValue) == 0x000230, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000238, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, CallFunc_IsValid_ReturnValue) == 0x000240, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, CallFunc_Conv_NameToText_ReturnValue) == 0x000248, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon) == 0x000258, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, K2Node_DynamicCast_bSuccess) == 0x000260, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, K2Node_MakeStruct_FormatArgumentData) == 0x000268, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, CallFunc_GetWeaponInstanceData_ReturnValue) == 0x0002B0, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::CallFunc_GetWeaponInstanceData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, K2Node_MakeArray_Array) == 0x0003C0, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, CallFunc_Format_ReturnValue) == 0x0003D0, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_AddWeaponToInventory, CallFunc_Array_Add_ReturnValue) == 0x0003E0, "Member 'BP_ItemUpgradeSystem_C_AddWeaponToInventory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.ComputeWeaponInstanceData
// 0x0690 (0x0690 - 0x0000)
struct BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData final
{
public:
	struct FS_WeaponInstanceHandle                WeaponHandle;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponInstanceData                  WeaponInstanceData;                                // 0x0010(0x0110)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                local_weaponHandle;                                // 0x0120(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponInstanceData                  K2Node_MakeStruct_S_WeaponInstanceData;            // 0x0130(0x0110)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0250(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0298(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x02A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02B8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0300(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0348(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0358(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWeaponDefinition_Found;                // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_OutRow;               // 0x0390(0x00F0)(HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetWeaponQualityForUpgradeLevel_Quality;  // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponScalingLevel                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x04B0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_2;            // 0x04D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x04E8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0530(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  K2Node_MakeStruct_S_WeaponInstanceData_1;          // 0x0580(0x0110)(HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData");
static_assert(sizeof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData) == 0x000690, "Wrong size on BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, WeaponHandle) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::WeaponHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, WeaponInstanceData) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::WeaponInstanceData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, local_weaponHandle) == 0x000120, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::local_weaponHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x00012C, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeStruct_S_WeaponInstanceData) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeStruct_S_WeaponInstanceData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000240, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000248, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeStruct_FormatArgumentData) == 0x000250, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Conv_NameToText_ReturnValue) == 0x000298, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0002A8, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002B8, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeStruct_FormatArgumentData_2) == 0x000300, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeArray_Array) == 0x000348, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeArray_Array_1) == 0x000358, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Format_ReturnValue) == 0x000368, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Format_ReturnValue_1) == 0x000378, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000388, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_GetWeaponDefinition_Found) == 0x000389, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_GetWeaponDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_GetWeaponDefinition_OutRow) == 0x000390, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_GetWeaponDefinition_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_GetWeaponQualityForUpgradeLevel_Quality) == 0x000480, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_GetWeaponQualityForUpgradeLevel_Quality' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Conv_IntToString_ReturnValue) == 0x000488, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Concat_StrStr_ReturnValue) == 0x000498, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Conv_StringToName_ReturnValue) == 0x0004A8, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0004B0, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004D0, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Conv_NameToText_ReturnValue_2) == 0x0004D8, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Conv_NameToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeStruct_FormatArgumentData_3) == 0x0004E8, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeArray_Array_2) == 0x000530, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000540, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Format_ReturnValue_2) == 0x000548, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000558, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Round_ReturnValue) == 0x000560, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000568, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000570, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Round_ReturnValue_1) == 0x000578, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, CallFunc_Round_ReturnValue_2) == 0x00057C, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData, K2Node_MakeStruct_S_WeaponInstanceData_1) == 0x000580, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponInstanceData::K2Node_MakeStruct_S_WeaponInstanceData_1' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.ComputeWeaponUnlockedPassivesFromID
// 0x00F0 (0x00F0 - 0x0000)
struct BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID final
{
public:
	class FName                                   WeaponID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ActivePassiveEffectIDs;                            // 0x0008(0x0010)(Parm, OutParm)
	TMap<EWeaponQuality, class FName>             local_passiveByLevel;                              // 0x0018(0x0050)(Edit, BlueprintVisible)
	EWeaponQuality                                local_weaponQuality;                               // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EWeaponQuality, class FName>             K2Node_MakeVariable_MakeVariableOutput;            // 0x0070(0x0050)()
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x00E0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID");
static_assert(sizeof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID) == 0x0000F0, "Wrong size on BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, WeaponID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::WeaponID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, ActivePassiveEffectIDs) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::ActivePassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, local_passiveByLevel) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::local_passiveByLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, local_weaponQuality) == 0x000068, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::local_weaponQuality' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, K2Node_MakeVariable_MakeVariableOutput) == 0x000070, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x0000C0, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, CallFunc_FindItemInstanceByID_ItemInstance) == 0x0000C8, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x0000D0, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x0000E0, "Member 'BP_ItemUpgradeSystem_C_ComputeWeaponUnlockedPassivesFromID::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.CreateInventorySaveState
// 0x0090 (0x0090 - 0x0000)
struct BP_ItemUpgradeSystem_C_CreateInventorySaveState final
{
public:
	TArray<struct FS_WeaponInstanceHandle>        WeaponHandles;                                     // 0x0000(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_WeaponInstanceHandle>        Temp_wildcard_Temp_buffer_array_Variable;          // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FS_WeaponInstanceHandle>        Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ItemInstance_Base_C*>        CallFunc_Map_Values_Values;                        // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                K2Node_MakeStruct_S_WeaponInstanceHandle;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_CreateInventorySaveState) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_CreateInventorySaveState");
static_assert(sizeof(BP_ItemUpgradeSystem_C_CreateInventorySaveState) == 0x000090, "Wrong size on BP_ItemUpgradeSystem_C_CreateInventorySaveState");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, WeaponHandles) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::WeaponHandles' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, Temp_wildcard_Temp_buffer_array_Variable) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_Map_Values_Values) == 0x000040, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000068, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_GetCurrentLevel_ReturnValue) == 0x000074, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000078, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, K2Node_MakeStruct_S_WeaponInstanceHandle) == 0x000080, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::K2Node_MakeStruct_S_WeaponInstanceHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateInventorySaveState, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BP_ItemUpgradeSystem_C_CreateInventorySaveState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.CreateItemInstanceInternal
// 0x0150 (0x0150 - 0x0000)
struct BP_ItemUpgradeSystem_C_CreateItemInstanceInternal final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0138(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetItemInstanceClassFromData_ReturnValue; // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_CreateItemInstanceInternal) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_CreateItemInstanceInternal");
static_assert(sizeof(BP_ItemUpgradeSystem_C_CreateItemInstanceInternal) == 0x000150, "Wrong size on BP_ItemUpgradeSystem_C_CreateItemInstanceInternal");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceInternal, ItemStaticData) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceInternal::ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceInternal, Quantity) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceInternal::Quantity' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceInternal, ItemInstance) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceInternal::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceInternal, CallFunc_GetItemInstanceClassFromData_ReturnValue) == 0x000140, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceInternal::CallFunc_GetItemInstanceClassFromData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceInternal, CallFunc_SpawnObject_ReturnValue) == 0x000148, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceInternal::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.CreateItemInstanceTransient
// 0x0148 (0x0148 - 0x0000)
struct BP_ItemUpgradeSystem_C_CreateItemInstanceTransient final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0138(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_CreateItemInstanceInternal_ItemInstance;  // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_CreateItemInstanceTransient) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_CreateItemInstanceTransient");
static_assert(sizeof(BP_ItemUpgradeSystem_C_CreateItemInstanceTransient) == 0x000148, "Wrong size on BP_ItemUpgradeSystem_C_CreateItemInstanceTransient");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceTransient, ItemStaticData) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceTransient::ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceTransient, Quantity) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceTransient::Quantity' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceTransient, ItemInstance) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceTransient::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_CreateItemInstanceTransient, CallFunc_CreateItemInstanceInternal_ItemInstance) == 0x000140, "Member 'BP_ItemUpgradeSystem_C_CreateItemInstanceTransient::CallFunc_CreateItemInstanceInternal_ItemInstance' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.ExecuteUbergraph_BP_ItemUpgradeSystem
// 0x01E8 (0x01E8 - 0x0000)
struct BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WeaponID;                       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewLevel;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_WeaponID_1;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x00E8(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance_1;      // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear_1;      // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue_1;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0180(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem");
static_assert(sizeof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem) == 0x0001E8, "Wrong size on BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, EntryPoint) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_CustomEvent_WeaponID) == 0x000004, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_CustomEvent_WeaponID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_CustomEvent_NewLevel) == 0x00000C, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_CustomEvent_NewLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000070, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x000078, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000080, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_GetCurrentLevel_ReturnValue) == 0x00008C, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_CustomEvent_WeaponID_1) == 0x000098, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_CustomEvent_WeaponID_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0000E8, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_Format_ReturnValue) == 0x000150, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_FindItemInstanceByID_ItemInstance_1) == 0x000160, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_FindItemInstanceByID_ItemInstance_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_DynamicCast_AsBP_Item_Instance_Gear_1) == 0x000168, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_DynamicCast_AsBP_Item_Instance_Gear_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_GetCurrentLevel_ReturnValue_1) == 0x000174, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_GetCurrentLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000178, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_MakeStruct_FormatArgumentData_3) == 0x000180, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, K2Node_MakeArray_Array_1) == 0x0001C8, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem, CallFunc_Format_ReturnValue_1) == 0x0001D8, "Member 'BP_ItemUpgradeSystem_C_ExecuteUbergraph_BP_ItemUpgradeSystem::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.FindItemInstanceByID
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemUpgradeSystem_C_FindItemInstanceByID final
{
public:
	class FName                                   ItemDefinitionID;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_FindItemInstanceByID) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_FindItemInstanceByID");
static_assert(sizeof(BP_ItemUpgradeSystem_C_FindItemInstanceByID) == 0x000020, "Wrong size on BP_ItemUpgradeSystem_C_FindItemInstanceByID");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindItemInstanceByID, ItemDefinitionID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_FindItemInstanceByID::ItemDefinitionID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindItemInstanceByID, ItemInstance) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_FindItemInstanceByID::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindItemInstanceByID, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_FindItemInstanceByID::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindItemInstanceByID, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_FindItemInstanceByID::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.FindWeaponInstanceByWeaponID
// 0x0120 (0x0120 - 0x0000)
struct BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID final
{
public:
	class FName                                   WeaponDefinitionID;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WeaponIndex;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  WeaponInstanceData;                                // 0x0010(0x0110)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID");
static_assert(sizeof(BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID) == 0x000120, "Wrong size on BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID, WeaponDefinitionID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID::WeaponDefinitionID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID, Found) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID::Found' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID, WeaponIndex) == 0x00000C, "Member 'BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID::WeaponIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID, WeaponInstanceData) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_FindWeaponInstanceByWeaponID::WeaponInstanceData' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetAllItemInstances
// 0x0020 (0x0020 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetAllItemInstances final
{
public:
	TArray<class UBP_ItemInstance_Base_C*>        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<class UBP_ItemInstance_Base_C*>        CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetAllItemInstances) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetAllItemInstances");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetAllItemInstances) == 0x000020, "Wrong size on BP_ItemUpgradeSystem_C_GetAllItemInstances");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetAllItemInstances, ReturnValue) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetAllItemInstances::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetAllItemInstances, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_GetAllItemInstances::CallFunc_Map_Values_Values' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetItemInstanceClassFromData
// 0x0148 (0x0148 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UClass*                                 ReturnValue;                                       // 0x0130(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetItemInstanceClass_ReturnValue;         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData) == 0x000148, "Wrong size on BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData, ItemStaticData) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData::ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData, ReturnValue) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData, CallFunc_GetItemInstanceClass_ReturnValue) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData::CallFunc_GetItemInstanceClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceClassFromData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetItemInstanceUpgradeCost
// 0x0078 (0x0078 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost final
{
public:
	class UBP_ItemInstance_Gear_C*                GearItemInstance;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ItemQuantity>                ItemQuantities;                                    // 0x0008(0x0010)(Parm, OutParm)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemQuantityPerWeaponUpgrade        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0020)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ItemQuantity>                K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost) == 0x000078, "Wrong size on BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, GearItemInstance) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::GearItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, ItemQuantities) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::ItemQuantities' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, CallFunc_GetCurrentLevel_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost, K2Node_MakeArray_Array) == 0x000068, "Member 'BP_ItemUpgradeSystem_C_GetItemInstanceUpgradeCost::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetItemUpgradeCost
// 0x0058 (0x0058 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetItemUpgradeCost final
{
public:
	class FName                                   WeaponDefinitionID;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ItemQuantity>                ItemQuantities;                                    // 0x0008(0x0010)(Parm, OutParm)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetWeaponQualityForUpgradeLevel_Quality;  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemQuantityList                    CallFunc_Map_Find_Value;                           // 0x0040(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetItemUpgradeCost");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost) == 0x000058, "Wrong size on BP_ItemUpgradeSystem_C_GetItemUpgradeCost");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, WeaponDefinitionID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::WeaponDefinitionID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, ItemQuantities) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::ItemQuantities' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, CallFunc_GetCustomGI_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, CallFunc_GetCurrentLevel_ReturnValue) == 0x000034, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, CallFunc_GetWeaponQualityForUpgradeLevel_Quality) == 0x00003C, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::CallFunc_GetWeaponQualityForUpgradeLevel_Quality' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, CallFunc_Map_Find_Value) == 0x000040, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetItemUpgradeCost, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'BP_ItemUpgradeSystem_C_GetItemUpgradeCost::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetOrCreateItemInstance
// 0x0168 (0x0168 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetOrCreateItemInstance final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0138(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                Temp_wildcard_Variable;                            // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_CreateItemInstanceInternal_ItemInstance;  // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetOrCreateItemInstance");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance) == 0x000168, "Wrong size on BP_ItemUpgradeSystem_C_GetOrCreateItemInstance");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, ItemStaticData) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, Quantity) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::Quantity' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, ItemInstance) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, Temp_wildcard_Variable) == 0x000140, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, CallFunc_CreateItemInstanceInternal_ItemInstance) == 0x000148, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::CallFunc_CreateItemInstanceInternal_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, CallFunc_GetItemDefinitionID_ReturnValue) == 0x000150, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000158, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetOrCreateItemInstance, CallFunc_IsValid_ReturnValue) == 0x000160, "Member 'BP_ItemUpgradeSystem_C_GetOrCreateItemInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetShardForConsumable
// 0x001C (0x001C - 0x0000)
struct BP_ItemUpgradeSystem_C_GetShardForConsumable final
{
public:
	class FName                                   ConsumableID;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ShardID;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetShardForConsumable) == 0x000004, "Wrong alignment on BP_ItemUpgradeSystem_C_GetShardForConsumable");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetShardForConsumable) == 0x00001C, "Wrong size on BP_ItemUpgradeSystem_C_GetShardForConsumable");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardForConsumable, ConsumableID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetShardForConsumable::ConsumableID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardForConsumable, ShardID) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_GetShardForConsumable::ShardID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardForConsumable, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_GetShardForConsumable::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardForConsumable, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_GetShardForConsumable::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetShardItemUpgradeItemRow
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow final
{
public:
	class UBP_DataAsset_Item_Shard_C*             ShardItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    UpgradeItemRow;                                    // 0x0008(0x0010)(Parm, OutParm, NoDestructor)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow) == 0x0000A8, "Wrong size on BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, ShardItem) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::ShardItem' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, UpgradeItemRow) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::UpgradeItemRow' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, CallFunc_IsDataRowHandleSet_ReturnValue) == 0x000038, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::CallFunc_IsDataRowHandleSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_ItemUpgradeSystem_C_GetShardItemUpgradeItemRow::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetUpgradedConsumableItemFromShard
// 0x0040 (0x0040 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard final
{
public:
	class FName                                   ShardStaticDataID;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, NoDestructor)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Shard_C*             CallFunc_Map_Find_Value_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetUpgradeLevelConsumableRow_ReturnValue; // 0x0030(0x0010)(NoDestructor)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard) == 0x000040, "Wrong size on BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard, ShardStaticDataID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard::ShardStaticDataID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard, ReturnValue) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard, CallFunc_Map_Find_Value) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard, CallFunc_Map_Find_Value_1) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard, CallFunc_Map_Find_ReturnValue_1) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard, CallFunc_GetUpgradeLevelConsumableRow_ReturnValue) == 0x000030, "Member 'BP_ItemUpgradeSystem_C_GetUpgradedConsumableItemFromShard::CallFunc_GetUpgradeLevelConsumableRow_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetUpgradeResourceList
// 0x0090 (0x0090 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetUpgradeResourceList final
{
public:
	TArray<struct FDataTableRowHandle>            UpgradeResourcesList;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FDataTableRowHandle>            local_upgradeItems;                                // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EWeaponQuality>                        CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ReferenceParm)
	EWeaponQuality                                CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemQuantityList                    CallFunc_Map_Find_Value;                           // 0x0050(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemQuantity                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetUpgradeResourceList");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList) == 0x000090, "Wrong size on BP_ItemUpgradeSystem_C_GetUpgradeResourceList");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, UpgradeResourcesList) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::UpgradeResourcesList' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, local_upgradeItems) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::local_upgradeItems' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Array_AddUnique_ReturnValue) == 0x000088, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetUpgradeResourceList, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_ItemUpgradeSystem_C_GetUpgradeResourceList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetWeaponQualityForUpgradeLevel
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel final
{
public:
	int32                                         UpgradeLevel;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                Quality;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetWeaponQualityForUpgradeLevel_Quality;  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel) == 0x000004, "Wrong alignment on BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel) == 0x000008, "Wrong size on BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel, UpgradeLevel) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel::UpgradeLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel, Quality) == 0x000004, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel::Quality' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel, CallFunc_GetWeaponQualityForUpgradeLevel_Quality) == 0x000005, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityForUpgradeLevel::CallFunc_GetWeaponQualityForUpgradeLevel_Quality' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.GetWeaponQualityLevel
// 0x0030 (0x0030 - 0x0000)
struct BP_ItemUpgradeSystem_C_GetWeaponQualityLevel final
{
public:
	class FName                                   WeaponDefinitionID;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                Quality;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_Weapon_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_GetWeaponQualityLevel");
static_assert(sizeof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel) == 0x000030, "Wrong size on BP_ItemUpgradeSystem_C_GetWeaponQualityLevel");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel, WeaponDefinitionID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityLevel::WeaponDefinitionID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel, Quality) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityLevel::Quality' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel, CallFunc_GetCustomGI_ReturnValue) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityLevel::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityLevel::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityLevel::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_GetWeaponQualityLevel, CallFunc_GetCurrentQuality_Quality) == 0x000029, "Member 'BP_ItemUpgradeSystem_C_GetWeaponQualityLevel::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.Initialize
// 0x0168 (0x0168 - 0x0000)
struct BP_ItemUpgradeSystem_C_Initialize final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetItemStaticDefinitionRowNames_OutRowNames; // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemStaticDefinitionFromID_Found;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticDefinitionFromID_ReturnValue; // 0x0030(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_Initialize) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_Initialize");
static_assert(sizeof(BP_ItemUpgradeSystem_C_Initialize) == 0x000168, "Wrong size on BP_ItemUpgradeSystem_C_Initialize");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ItemUpgradeSystem_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_GetItemStaticDefinitionRowNames_OutRowNames) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_GetItemStaticDefinitionRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_GetItemStaticDefinitionFromID_Found) == 0x00002C, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_GetItemStaticDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_GetItemStaticDefinitionFromID_ReturnValue) == 0x000030, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_GetItemStaticDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Initialize, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000161, "Member 'BP_ItemUpgradeSystem_C_Initialize::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.IsItemConsumableUpgrade
// 0x0040 (0x0040 - 0x0000)
struct BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_DataAsset_Item_Shard_C*>     CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Shard_C*             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade");
static_assert(sizeof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade) == 0x000040, "Wrong size on BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, ItemId) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::ItemId' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, ReturnValue) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000039, "Member 'BP_ItemUpgradeSystem_C_IsItemConsumableUpgrade::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.IsShardUpgradable
// 0x0048 (0x0048 - 0x0000)
struct BP_ItemUpgradeSystem_C_IsShardUpgradable final
{
public:
	class FName                                   ShardName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShardUpgradable_0;                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Shard_C*             CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            CallFunc_GetConsumablesList_ConsumableItemPerLevel; // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_IsShardUpgradable) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_IsShardUpgradable");
static_assert(sizeof(BP_ItemUpgradeSystem_C_IsShardUpgradable) == 0x000048, "Wrong size on BP_ItemUpgradeSystem_C_IsShardUpgradable");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, ShardName) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::ShardName' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, IsShardUpgradable_0) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::IsShardUpgradable_0' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_Map_Find_Value) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_Map_Find_Value_1) == 0x00001C, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_Map_Find_ReturnValue_1) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_GetConsumablesList_ConsumableItemPerLevel) == 0x000028, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_GetConsumablesList_ConsumableItemPerLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_IsShardUpgradable, CallFunc_BooleanAND_ReturnValue_1) == 0x000042, "Member 'BP_ItemUpgradeSystem_C_IsShardUpgradable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.LoadInventoryState
// 0x0350 (0x0350 - 0x0000)
struct BP_ItemUpgradeSystem_C_LoadInventoryState final
{
public:
	TArray<struct FS_WeaponInstanceHandle>        WeaponHandles;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         local_MaxShardUpgradeLevel;                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                local_currentSaveData;                             // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FS_WeaponInstanceHandle> local_idToSaveData;                            // 0x0020(0x0050)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                CallFunc_Array_Get_Item;                           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00C8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Shard_C*             CallFunc_Map_Find_Value;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            CallFunc_GetConsumablesList_ConsumableItemPerLevel; // 0x00F8(0x0010)(ReferenceParm)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item_2;                         // 0x0108(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfThereIsItemInInventory_Success_;   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_; // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckIfThereIsItemInInventory_ItemIndex;  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_DynamicData               CallFunc_Array_Get_Item_3;                         // 0x0138(0x0138)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_GetOrCreateItemInstance_ItemInstance;     // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_ItemInstance_Base_C*>        CallFunc_Map_Values_Values;                        // 0x0280(0x0010)(ReferenceParm)
	class UBP_ItemInstance_Base_C*                CallFunc_Array_Get_Item_4;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x02A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02B8(0x0048)(HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                K2Node_MakeStruct_S_WeaponInstanceHandle;          // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0310(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceHandle                CallFunc_Map_Find_Value_1;                         // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_LoadInventoryState) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_LoadInventoryState");
static_assert(sizeof(BP_ItemUpgradeSystem_C_LoadInventoryState) == 0x000350, "Wrong size on BP_ItemUpgradeSystem_C_LoadInventoryState");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, WeaponHandles) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::WeaponHandles' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, local_MaxShardUpgradeLevel) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::local_MaxShardUpgradeLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, local_currentSaveData) == 0x000014, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::local_currentSaveData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, local_idToSaveData) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::local_idToSaveData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Loop_Counter_Variable_2) == 0x00008C, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Loop_Counter_Variable_3) == 0x000094, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Array_Index_Variable_2) == 0x000098, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Loop_Counter_Variable_4) == 0x0000A0, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A8, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Array_Index_Variable_3) == 0x0000AC, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, Temp_int_Array_Index_Variable_4) == 0x0000B0, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Get_Item) == 0x0000B4, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_GetInventoryManager_ReturnValue) == 0x0000C0, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Map_Keys_Keys) == 0x0000C8, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_GetConsumablesList_ConsumableItemPerLevel) == 0x0000F8, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_GetConsumablesList_ConsumableItemPerLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Find_ReturnValue) == 0x00011C, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Less_IntInt_ReturnValue_2) == 0x000120, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Max_ReturnValue) == 0x000124, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_GetCustomGI_ReturnValue) == 0x000128, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_CheckIfThereIsItemInInventory_Success_) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_CheckIfThereIsItemInInventory_Success_' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_) == 0x000131, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_CheckIfThereIsItemInInventory_IsItemFullyStacked_' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_CheckIfThereIsItemInInventory_ItemIndex) == 0x000134, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_CheckIfThereIsItemInInventory_ItemIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Get_Item_3) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Length_ReturnValue_3) == 0x000270, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Less_IntInt_ReturnValue_3) == 0x000274, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_GetOrCreateItemInstance_ItemInstance) == 0x000278, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_GetOrCreateItemInstance_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Map_Values_Values) == 0x000280, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Get_Item_4) == 0x000290, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Array_Length_ReturnValue_4) == 0x000298, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_GetItemDefinitionID_ReturnValue) == 0x00029C, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Less_IntInt_ReturnValue_4) == 0x0002A4, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Conv_NameToText_ReturnValue) == 0x0002A8, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, K2Node_MakeStruct_FormatArgumentData) == 0x0002B8, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, K2Node_MakeStruct_S_WeaponInstanceHandle) == 0x000300, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::K2Node_MakeStruct_S_WeaponInstanceHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, K2Node_MakeArray_Array) == 0x000310, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Format_ReturnValue) == 0x000320, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Map_Find_Value_1) == 0x000330, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, CallFunc_Map_Find_ReturnValue_1) == 0x00033C, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000340, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadInventoryState, K2Node_DynamicCast_bSuccess) == 0x000348, "Member 'BP_ItemUpgradeSystem_C_LoadInventoryState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.LoadShardDefinition
// 0x0180 (0x0180 - 0x0000)
struct BP_ItemUpgradeSystem_C_LoadShardDefinition final
{
public:
	struct FS_jRPG_Item_StaticData                ShardItemDefinition;                               // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Item_Shard_C*             K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard;     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            CallFunc_GetConsumablesList_ConsumableItemPerLevel; // 0x0148(0x0010)(ReferenceParm)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0158(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0178(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_LoadShardDefinition) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_LoadShardDefinition");
static_assert(sizeof(BP_ItemUpgradeSystem_C_LoadShardDefinition) == 0x000180, "Wrong size on BP_ItemUpgradeSystem_C_LoadShardDefinition");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, ShardItemDefinition) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::ShardItemDefinition' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, CallFunc_GetConsumablesList_ConsumableItemPerLevel) == 0x000148, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::CallFunc_GetConsumablesList_ConsumableItemPerLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, Temp_int_Loop_Counter_Variable) == 0x00016C, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, CallFunc_Add_IntInt_ReturnValue) == 0x000174, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_LoadShardDefinition, Temp_int_Variable) == 0x000178, "Member 'BP_ItemUpgradeSystem_C_LoadShardDefinition::Temp_int_Variable' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.OnItemAddedToInventory
// 0x0168 (0x0168 - 0x0000)
struct BP_ItemUpgradeSystem_C_OnItemAddedToInventory final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         LootContext;                                       // 0x0134(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GeneratedItemInfo_Base_C*           GeneratedItemInfo;                                 // 0x0138(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         local_newUpgradeLevel;                             // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_previousConsumableItemID;                    // 0x0144(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_associatedShardID;                           // 0x014C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_GetOrCreateItemInstance_ItemInstance;     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GeneratedItemInfo_Base_C*           CallFunc_GenerateItem_GeneratedItemInfo;           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_OnItemAddedToInventory");
static_assert(sizeof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory) == 0x000168, "Wrong size on BP_ItemUpgradeSystem_C_OnItemAddedToInventory");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, ItemStaticData) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, Quantity) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::Quantity' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, LootContext) == 0x000134, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::LootContext' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, GeneratedItemInfo) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::GeneratedItemInfo' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, local_newUpgradeLevel) == 0x000140, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::local_newUpgradeLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, local_previousConsumableItemID) == 0x000144, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::local_previousConsumableItemID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, local_associatedShardID) == 0x00014C, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::local_associatedShardID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, CallFunc_GetOrCreateItemInstance_ItemInstance) == 0x000158, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::CallFunc_GetOrCreateItemInstance_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemAddedToInventory, CallFunc_GenerateItem_GeneratedItemInfo) == 0x000160, "Member 'BP_ItemUpgradeSystem_C_OnItemAddedToInventory::CallFunc_GenerateItem_GeneratedItemInfo' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.OnItemRemovedFromInventory
// 0x0170 (0x0170 - 0x0000)
struct BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory final
{
public:
	struct FS_jRPG_Item_StaticData                ItemStaticData;                                    // 0x0000(0x0130)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0130(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingQuantity;                                 // 0x0134(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_newUpgradeLevel;                             // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_previousConsumableItemID;                    // 0x013C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   local_associatedShardID;                           // 0x0144(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuantity_ReturnValue;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_wildcard_Variable;                            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory");
static_assert(sizeof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory) == 0x000170, "Wrong size on BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, ItemStaticData) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, Amount) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::Amount' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, RemainingQuantity) == 0x000134, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::RemainingQuantity' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, local_newUpgradeLevel) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::local_newUpgradeLevel' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, local_previousConsumableItemID) == 0x00013C, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::local_previousConsumableItemID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, local_associatedShardID) == 0x000144, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::local_associatedShardID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, CallFunc_FindItemInstanceByID_ItemInstance) == 0x000150, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, CallFunc_Map_Remove_ReturnValue) == 0x000158, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, CallFunc_IsValid_ReturnValue) == 0x000159, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, CallFunc_GetQuantity_ReturnValue) == 0x00015C, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::CallFunc_GetQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, CallFunc_Subtract_IntInt_ReturnValue) == 0x000160, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, Temp_wildcard_Variable) == 0x000164, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x000168, "Member 'BP_ItemUpgradeSystem_C_OnItemRemovedFromInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.ResetState
// 0x0030 (0x0030 - 0x0000)
struct BP_ItemUpgradeSystem_C_ResetState final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_ResetState) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_ResetState");
static_assert(sizeof(BP_ItemUpgradeSystem_C_ResetState) == 0x000030, "Wrong size on BP_ItemUpgradeSystem_C_ResetState");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_ResetState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ItemUpgradeSystem_C_ResetState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_ResetState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, Temp_int_Variable) == 0x00000C, "Member 'BP_ItemUpgradeSystem_C_ResetState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_ResetState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_ResetState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_ItemUpgradeSystem_C_ResetState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_ResetState, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ItemUpgradeSystem_C_ResetState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.Sandfall_Debug_SetGearLevel
// 0x000C (0x000C - 0x0000)
struct BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel final
{
public:
	class FName                                   WeaponID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLevel;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel) == 0x000004, "Wrong alignment on BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel");
static_assert(sizeof(BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel) == 0x00000C, "Wrong size on BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel, WeaponID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel::WeaponID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel, NewLevel) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_Sandfall_Debug_SetGearLevel::NewLevel' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.Sandfall_Debug_UpgradeWeapon
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemUpgradeSystem_C_Sandfall_Debug_UpgradeWeapon final
{
public:
	class FName                                   WeaponID;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_Sandfall_Debug_UpgradeWeapon) == 0x000004, "Wrong alignment on BP_ItemUpgradeSystem_C_Sandfall_Debug_UpgradeWeapon");
static_assert(sizeof(BP_ItemUpgradeSystem_C_Sandfall_Debug_UpgradeWeapon) == 0x000008, "Wrong size on BP_ItemUpgradeSystem_C_Sandfall_Debug_UpgradeWeapon");
static_assert(offsetof(BP_ItemUpgradeSystem_C_Sandfall_Debug_UpgradeWeapon, WeaponID) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_Sandfall_Debug_UpgradeWeapon::WeaponID' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.UpdateWeaponInstance
// 0x0228 (0x0228 - 0x0000)
struct BP_ItemUpgradeSystem_C_UpdateWeaponInstance final
{
public:
	struct FS_WeaponInstanceData                  WeaponInstanceData;                                // 0x0000(0x0110)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_FindWeaponInstanceByWeaponID_Found;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindWeaponInstanceByWeaponID_WeaponIndex; // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  CallFunc_FindWeaponInstanceByWeaponID_WeaponInstanceData; // 0x0118(0x0110)(HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_UpdateWeaponInstance) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_UpdateWeaponInstance");
static_assert(sizeof(BP_ItemUpgradeSystem_C_UpdateWeaponInstance) == 0x000228, "Wrong size on BP_ItemUpgradeSystem_C_UpdateWeaponInstance");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpdateWeaponInstance, WeaponInstanceData) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_UpdateWeaponInstance::WeaponInstanceData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpdateWeaponInstance, CallFunc_FindWeaponInstanceByWeaponID_Found) == 0x000110, "Member 'BP_ItemUpgradeSystem_C_UpdateWeaponInstance::CallFunc_FindWeaponInstanceByWeaponID_Found' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpdateWeaponInstance, CallFunc_FindWeaponInstanceByWeaponID_WeaponIndex) == 0x000114, "Member 'BP_ItemUpgradeSystem_C_UpdateWeaponInstance::CallFunc_FindWeaponInstanceByWeaponID_WeaponIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpdateWeaponInstance, CallFunc_FindWeaponInstanceByWeaponID_WeaponInstanceData) == 0x000118, "Member 'BP_ItemUpgradeSystem_C_UpdateWeaponInstance::CallFunc_FindWeaponInstanceByWeaponID_WeaponInstanceData' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.UpgradeShardToNextLevel
// 0x00C0 (0x00C0 - 0x0000)
struct BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel final
{
public:
	class FName                                   ShardName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUpgradeSuccessful;                              // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShardUpgradable_IsShardUpgradable;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue; // 0x0020(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue_1; // 0x0030(0x0010)(NoDestructor)
	class UBP_DataAsset_Item_Shard_C*             CallFunc_Map_Find_Value_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ItemQuantity>                CallFunc_GetShardUpgradeCost_RequiredItems;        // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemQuantity                        CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindItemCountFromInventory_Quantity;      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GeneratedItemInfo_Base_C*           CallFunc_AddItemToInventory_GeneratedItem;         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffordItemCosts_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel");
static_assert(sizeof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel) == 0x0000C0, "Wrong size on BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, ShardName) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::ShardName' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, bIsUpgradeSuccessful) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::bIsUpgradeSuccessful' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_IsShardUpgradable_IsShardUpgradable) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_IsShardUpgradable_IsShardUpgradable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Map_Find_Value) == 0x000014, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue_1) == 0x000030, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_GetUpgradedConsumableItemFromShard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Map_Find_Value_1) == 0x000040, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Map_Find_ReturnValue_1) == 0x000048, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_GetInventoryManager_ReturnValue) == 0x000050, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_GetShardUpgradeCost_RequiredItems) == 0x000058, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_GetShardUpgradeCost_RequiredItems' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, Temp_int_Variable) == 0x000090, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_GetInventoryManager_ReturnValue_1) == 0x000098, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_GetInventoryManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_FindItemCountFromInventory_Quantity) == 0x0000A0, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_FindItemCountFromInventory_Quantity' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_AddItemToInventory_GeneratedItem) == 0x0000A8, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_AddItemToInventory_GeneratedItem' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_GetInventoryManager_ReturnValue_2) == 0x0000B0, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_GetInventoryManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel, CallFunc_CanAffordItemCosts_ReturnValue) == 0x0000B8, "Member 'BP_ItemUpgradeSystem_C_UpgradeShardToNextLevel::CallFunc_CanAffordItemCosts_ReturnValue' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.UpgradeWeaponFromHandle
// 0x0238 (0x0238 - 0x0000)
struct BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle final
{
public:
	struct FS_WeaponInstanceHandle                WeaponHandle;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponInstanceData                  UpgradedWeaponData;                                // 0x0010(0x0110)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   local_weaponID;                                    // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  local_existingWeaponData;                          // 0x0128(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle");
static_assert(sizeof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle) == 0x000238, "Wrong size on BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle, WeaponHandle) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle::WeaponHandle' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle, UpgradedWeaponData) == 0x000010, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle::UpgradedWeaponData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle, local_weaponID) == 0x000120, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle::local_weaponID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle, local_existingWeaponData) == 0x000128, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromHandle::local_existingWeaponData' has a wrong offset!");

// Function BP_ItemUpgradeSystem.BP_ItemUpgradeSystem_C.UpgradeWeaponFromInstance
// 0x02A8 (0x02A8 - 0x0000)
struct BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance final
{
public:
	class UBP_ItemInstance_Gear_C*                ItemInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugReason;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   local_weaponID;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponInstanceData                  local_existingWeaponData;                          // 0x0020(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0138(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_CharacterData_C*>            CallFunc_GetCharactersForWeapon_ReturnValue;       // 0x0278(0x0010)(ReferenceParm)
	class UBP_CharacterData_C*                    CallFunc_Array_Get_Item;                           // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEquippedWeaponItemInstance_Valid;      // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296[0x2];                                      // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         CallFunc_GetEquippedWeaponItemInstance_ReturnValue; // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance) == 0x000008, "Wrong alignment on BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance");
static_assert(sizeof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance) == 0x0002A8, "Wrong size on BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, ItemInstance) == 0x000000, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, DebugReason) == 0x000008, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::DebugReason' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, local_weaponID) == 0x000018, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::local_weaponID' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, local_existingWeaponData) == 0x000020, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::local_existingWeaponData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_GetItemStaticData_ItemStaticData) == 0x000138, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, Temp_int_Loop_Counter_Variable) == 0x000268, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00026C, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_GetInventoryManager_ReturnValue) == 0x000270, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_GetCharactersForWeapon_ReturnValue) == 0x000278, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_GetCharactersForWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_Array_Get_Item) == 0x000288, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_Array_Length_ReturnValue) == 0x000290, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000294, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_GetEquippedWeaponItemInstance_Valid) == 0x000295, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_GetEquippedWeaponItemInstance_Valid' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_GetEquippedWeaponItemInstance_ReturnValue) == 0x000298, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_GetEquippedWeaponItemInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002A0, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance, CallFunc_BooleanAND_ReturnValue) == 0x0002A1, "Member 'BP_ItemUpgradeSystem_C_UpgradeWeaponFromInstance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

