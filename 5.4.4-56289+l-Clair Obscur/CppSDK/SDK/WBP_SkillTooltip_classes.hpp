#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillTooltip

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SkillTooltip.WBP_SkillTooltip_C
// 0x0048 (0x0350 - 0x0308)
class UWBP_SkillTooltip_C final : public UCommonUserWidget
{
public:
	class UWBP_HUD_AP_ICO_C*                      APIcon;                                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDynamicEntryBox*                       DynamicEntryBox_AdditionalEffects;                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           LockedBox;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LockItemText;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   SkillDescription;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       SkillIcon;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    SkillName;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             TooltipGrid;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             SkillIconDT;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CreateAdditionalEffect(class UWidget* Content, bool IsOvercharged, bool bShowBackground, double Size);
	void SetSkillUnlockData(class UBP_DataAsset_Skill_C* SkillData, bool IsSecretLocked);
	void Set_Skill_Data(class UBP_DataAsset_Skill_C* InSkillData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SkillTooltip_C">();
	}
	static class UWBP_SkillTooltip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SkillTooltip_C>();
	}
};
static_assert(alignof(UWBP_SkillTooltip_C) == 0x000008, "Wrong alignment on UWBP_SkillTooltip_C");
static_assert(sizeof(UWBP_SkillTooltip_C) == 0x000350, "Wrong size on UWBP_SkillTooltip_C");
static_assert(offsetof(UWBP_SkillTooltip_C, APIcon) == 0x000308, "Member 'UWBP_SkillTooltip_C::APIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, DynamicEntryBox_AdditionalEffects) == 0x000310, "Member 'UWBP_SkillTooltip_C::DynamicEntryBox_AdditionalEffects' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, LockedBox) == 0x000318, "Member 'UWBP_SkillTooltip_C::LockedBox' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, LockItemText) == 0x000320, "Member 'UWBP_SkillTooltip_C::LockItemText' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, SkillDescription) == 0x000328, "Member 'UWBP_SkillTooltip_C::SkillDescription' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, SkillIcon) == 0x000330, "Member 'UWBP_SkillTooltip_C::SkillIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, SkillName) == 0x000338, "Member 'UWBP_SkillTooltip_C::SkillName' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, TooltipGrid) == 0x000340, "Member 'UWBP_SkillTooltip_C::TooltipGrid' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTooltip_C, SkillIconDT) == 0x000348, "Member 'UWBP_SkillTooltip_C::SkillIconDT' has a wrong offset!");

}

