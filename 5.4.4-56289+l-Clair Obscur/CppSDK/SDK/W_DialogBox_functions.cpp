#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DialogBox

#include "Basic.hpp"

#include "W_DialogBox_classes.hpp"
#include "W_DialogBox_parameters.hpp"


namespace SDK
{

// Function W_DialogBox.W_DialogBox_C.BndEvt__NPCButton_K2Node_ComponentBoundEvent_30_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_DialogBox_C::BndEvt__NPCButton_K2Node_ComponentBoundEvent_30_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "BndEvt__NPCButton_K2Node_ComponentBoundEvent_30_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DialogBox.W_DialogBox_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DialogBox_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DialogBox.W_DialogBox_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_DialogBox_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DialogBox.W_DialogBox_C.Dialog
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventId_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SwitchID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FText&                      DialogText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_DialogBox_C::Dialog(class FName EventId_0, int32 SwitchID, const class FText& DialogText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "Dialog");

	Params::W_DialogBox_C_Dialog Parms{};

	Parms.EventId_0 = EventId_0;
	Parms.SwitchID = SwitchID;
	Parms.DialogText = std::move(DialogText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DialogBox.W_DialogBox_C.EKeyEvent
// (BlueprintCallable, BlueprintEvent)

void UW_DialogBox_C::EKeyEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "EKeyEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DialogBox.W_DialogBox_C.ExecuteUbergraph_W_DialogBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DialogBox_C::ExecuteUbergraph_W_DialogBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "ExecuteUbergraph_W_DialogBox");

	Params::W_DialogBox_C_ExecuteUbergraph_W_DialogBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DialogBox.W_DialogBox_C.MakeResponseBoxVisible
// (BlueprintCallable, BlueprintEvent)

void UW_DialogBox_C::MakeResponseBoxVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "MakeResponseBoxVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_DialogBox.W_DialogBox_C.NPCImageVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UW_DialogBox_C::NPCImageVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "NPCImageVisibility");

	Params::W_DialogBox_C_NPCImageVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_DialogBox.W_DialogBox_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UW_DialogBox_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "OnRemovedFromFocusPath");

	Params::W_DialogBox_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_DialogBox.W_DialogBox_C.SetNameText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UW_DialogBox_C::SetNameText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "SetNameText");

	Params::W_DialogBox_C_SetNameText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_DialogBox.W_DialogBox_C.SetNPCDialog
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_DialogBox_C::SetNPCDialog(double Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_DialogBox_C", "SetNPCDialog");

	Params::W_DialogBox_C_SetNPCDialog Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}

}

