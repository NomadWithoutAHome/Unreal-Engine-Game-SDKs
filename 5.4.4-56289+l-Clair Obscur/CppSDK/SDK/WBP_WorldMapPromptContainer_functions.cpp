#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WorldMapPromptContainer

#include "Basic.hpp"

#include "WBP_WorldMapPromptContainer_classes.hpp"
#include "WBP_WorldMapPromptContainer_parameters.hpp"


namespace SDK
{

// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_WorldMapPromptContainer_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.ExecuteUbergraph_WBP_WorldMapPromptContainer
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_WorldMapPromptContainer_C::ExecuteUbergraph_WBP_WorldMapPromptContainer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "ExecuteUbergraph_WBP_WorldMapPromptContainer");

	Params::WBP_WorldMapPromptContainer_C_ExecuteUbergraph_WBP_WorldMapPromptContainer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.OnAnyWorldMapCapacityUnlocked
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_WorldMapPromptContainer_C::OnAnyWorldMapCapacityUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "OnAnyWorldMapCapacityUnlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.OnDismountRequested
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_WorldMapPromptContainer_C::OnDismountRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "OnDismountRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.OnMountRequested
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_WorldMapPromptContainer_C::OnMountRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "OnMountRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.SetCampPossible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanCamp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_WorldMapPromptContainer_C::SetCampPossible(bool CanCamp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "SetCampPossible");

	Params::WBP_WorldMapPromptContainer_C_SetCampPossible Parms{};

	Parms.CanCamp = CanCamp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.SetIsFlying
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFlying                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_WorldMapPromptContainer_C::SetIsFlying(bool IsFlying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "SetIsFlying");

	Params::WBP_WorldMapPromptContainer_C_SetIsFlying Parms{};

	Parms.IsFlying = IsFlying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.SetLandPossible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanLand                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_WorldMapPromptContainer_C::SetLandPossible(bool CanLand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "SetLandPossible");

	Params::WBP_WorldMapPromptContainer_C_SetLandPossible Parms{};

	Parms.CanLand = CanLand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_WorldMapPromptContainer.WBP_WorldMapPromptContainer_C.SetMountPossible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanMount                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_WorldMapPromptContainer_C::SetMountPossible(bool CanMount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_WorldMapPromptContainer_C", "SetMountPossible");

	Params::WBP_WorldMapPromptContainer_C_SetMountPossible Parms{};

	Parms.CanMount = CanMount;

	UObject::ProcessEvent(Func, &Parms);
}

}

