#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Humanoid_NPC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "S_IdleNpcParameters_structs.hpp"
#include "E_SecondaryMotionBreathingType_structs.hpp"
#include "E_NPC_ForceHeadDirection_structs.hpp"
#include "E_NPC_Body_IdleType_structs.hpp"


namespace SDK::Params
{

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Humanoid_NPC_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Humanoid_NPC_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_AnimGraph");
static_assert(sizeof(ABP_Humanoid_NPC_C_AnimGraph) == 0x000010, "Wrong size on ABP_Humanoid_NPC_C_AnimGraph");
static_assert(offsetof(ABP_Humanoid_NPC_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Humanoid_NPC_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Humanoid_NPC_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Humanoid_NPC_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Humanoid_NPC_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Humanoid_NPC_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Humanoid_NPC_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Humanoid_NPC_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.ExecuteUbergraph_ABP_Humanoid_NPC
// 0x0810 (0x0810 - 0x0000)
struct ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2; // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_3; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_4; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_5; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_6; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_6;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_7; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_7;     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_11;         // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_12;         // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_8; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_13;         // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_8;     // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_14;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_15;         // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_16;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   CallFunc_GetPreviousIdleStruct_ReturnValue;        // 0x00C8(0x0058)(HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue;         // 0x0120(0x0058)(HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_4;                              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_187[0x1];                                      // 0x0187(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_9; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_9;     // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_10; // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_17;         // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19E[0x2];                                      // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_10;    // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_11; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_11;    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7[0x1];                                      // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_12; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12; // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_12;    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3[0x1];                                      // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13; // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_13; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_13;    // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_14; // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_34;                // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7[0x1];                                      // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14; // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15; // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_14;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_15; // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_15;    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_6;                              // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_35;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_36;                // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_37;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue_1;       // 0x0200(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_38;                // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_39;                // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_40;                // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_18;         // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_41;                // 0x025F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_42;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_7;                              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_19;         // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_43;                // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_44;                // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_25;       // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_45;                // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_20;         // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_46;                // 0x026F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_47;                // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_8;                              // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NPC_ForceHeadDirection                      Temp_byte_Variable;                                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_12;                             // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_5;        // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_6;        // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_7;        // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_8;        // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_8;        // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_9;        // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_9;        // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_10;       // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_10;       // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_11;       // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_11;       // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_12;       // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_13;       // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_16; // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_13;                             // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16; // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_16;    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17; // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_21;         // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0460(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_17; // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0470(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_17;    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_2;                            // 0x0480(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue_2;       // 0x0488(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_22;         // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_48;                // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_49;                // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_50;                // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SecondaryMotionBreathingType                Temp_byte_Variable_1;                              // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_51;                // 0x04E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_26;       // 0x04E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F9[0x7];                                      // 0x04F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_52;                // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_53;                // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_54;                // 0x050A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_55;                // 0x050B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_56;                // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_23;         // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_14;                             // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_57;                // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_58;                // 0x0515(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_516[0x2];                                      // 0x0516(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_15;                             // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0520(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue_3;       // 0x0588(0x0058)(HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_2;                           // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x05F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_59;                // 0x05F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F3[0x5];                                      // 0x05F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_3;                           // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_4;                           // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_5;                           // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseLookAtInterpolation_ReturnValue; // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_6;                           // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue_4;       // 0x0630(0x0058)(HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Random_OutItem;                     // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69C[0x4];                                      // 0x069C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPCAnimationComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_24;         // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AA[0x6];                                      // 0x06AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x06C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1;  // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_2;  // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3;  // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_3;  // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4;  // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_4;  // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5;  // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_5;  // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6;  // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_6;  // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7;  // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_7;  // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_8;  // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8;  // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_2_ImplicitCast; // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_3_ImplicitCast; // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9;  // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_9;  // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_10; // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10; // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11; // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_11; // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_12; // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12; // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_13; // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_13; // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_14; // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_14; // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_15; // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_15; // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_16; // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_16; // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_17; // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_17; // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_15_ImplicitCast; // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC) == 0x000010, "Wrong alignment on ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC");
static_assert(sizeof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC) == 0x000810, "Wrong size on ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, EntryPoint) == 0x000000, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000006, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000008, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_1) == 0x000009, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_2) == 0x00000A, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_3) == 0x00000C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_4) == 0x00000E, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000F, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_5) == 0x000010, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000011, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_6) == 0x000012, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000013, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000014, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_7) == 0x000015, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_8) == 0x000016, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000017, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_9) == 0x000018, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000019, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x00001A, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00001B, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00001C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00001D, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_10) == 0x00001E, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable) == 0x00001F, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue) == 0x000020, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1) == 0x000024, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000028, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x00002C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000031, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000032, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable) == 0x000034, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x000038, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2) == 0x00003C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000044, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_3) == 0x00004C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_1) == 0x000054, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_1) == 0x000058, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x00005C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_4) == 0x000060, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x000064, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x000068, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_5) == 0x00006C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x000070, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000071, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x000072, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x000073, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_11) == 0x000074, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_12) == 0x000075, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_13) == 0x000076, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_14) == 0x000077, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x000078, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x00007C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_2) == 0x000080, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_6) == 0x000084, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_6) == 0x000088, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_15) == 0x000089, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x00008A, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7) == 0x00008C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_7) == 0x000090, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_7) == 0x000094, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x000095, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable_1) == 0x000096, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x000097, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_3) == 0x000098, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_16) == 0x000099, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_17) == 0x00009A, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x00009B, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x00009C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_11) == 0x00009D, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_18) == 0x00009E, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_19) == 0x00009F, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_20) == 0x0000A0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x0000A1, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_21) == 0x0000A2, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_22) == 0x0000A3, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_12) == 0x0000A4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_23) == 0x0000A5, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_8) == 0x0000A8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_24) == 0x0000AC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8) == 0x0000B0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_13) == 0x0000B4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_8) == 0x0000B5, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_25) == 0x0000B6, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x0000B7, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_14) == 0x0000B8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_26) == 0x0000B9, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x0000BA, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_27) == 0x0000BB, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0000BC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_15) == 0x0000BD, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0000BE, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_28) == 0x0000BF, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_16) == 0x0000C0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_29) == 0x0000C1, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_2) == 0x0000C4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetPreviousIdleStruct_ReturnValue) == 0x0000C8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetPreviousIdleStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetCurrentIdleStruct_ReturnValue) == 0x000120, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetCurrentIdleStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_3) == 0x000178, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x00017C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_4) == 0x000180, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_30) == 0x000184, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue) == 0x000185, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_1) == 0x000186, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9) == 0x000188, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_9) == 0x00018C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_5) == 0x000190, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_9) == 0x000194, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_4) == 0x000195, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_10) == 0x000198, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_5) == 0x00019C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_17) == 0x00019D, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10) == 0x0001A0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_10) == 0x0001A4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11) == 0x0001A8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_11) == 0x0001AC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_11) == 0x0001B0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_31) == 0x0001B1, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x0001B2, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_32) == 0x0001B3, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x0001B4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_33) == 0x0001B5, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_6) == 0x0001B6, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_12) == 0x0001B8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12) == 0x0001BC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001C0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_12) == 0x0001C1, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_7) == 0x0001C2, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13) == 0x0001C4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_13) == 0x0001C8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_13) == 0x0001CC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001CD, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_8) == 0x0001CE, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x0001CF, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_14) == 0x0001D0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_9) == 0x0001D4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_34) == 0x0001D5, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x0001D6, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14) == 0x0001D8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15) == 0x0001DC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_14) == 0x0001E0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_15) == 0x0001E4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_15) == 0x0001E8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_6) == 0x0001EC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_35) == 0x0001F0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_10) == 0x0001F1, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_4) == 0x0001F2, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_5) == 0x0001F3, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_11) == 0x0001F4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_36) == 0x0001F5, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_6) == 0x0001F6, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_7) == 0x0001F7, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_37) == 0x0001F8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetCurrentIdleStruct_ReturnValue_1) == 0x000200, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetCurrentIdleStruct_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000258, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_12) == 0x000259, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_38) == 0x00025A, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_39) == 0x00025B, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_8) == 0x00025C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_40) == 0x00025D, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_18) == 0x00025E, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_41) == 0x00025F, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_42) == 0x000260, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_7) == 0x000264, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanOR_ReturnValue_13) == 0x000268, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_19) == 0x000269, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_43) == 0x00026A, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_44) == 0x00026B, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_25) == 0x00026C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_45) == 0x00026D, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_20) == 0x00026E, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_46) == 0x00026F, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_47) == 0x000270, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_8) == 0x000274, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_9) == 0x000278, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_10) == 0x00027C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_11) == 0x000280, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_byte_Variable) == 0x000284, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_12) == 0x000288, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000290, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000298, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0002B0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0002C8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0002D0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x0002D8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x0002F0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000308, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000310, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x000318, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_5) == 0x000330, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000348, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x000350, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_6) == 0x000358, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_7) == 0x000370, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x000388, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_8) == 0x000390, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_8) == 0x000398, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_9) == 0x0003B0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_9) == 0x0003C8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_10) == 0x0003D0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_10) == 0x0003D8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_11) == 0x0003F0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Divide_DoubleDouble_ReturnValue_11) == 0x000408, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Divide_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_12) == 0x000410, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_DoubleToVector_ReturnValue_13) == 0x000428, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_DoubleToVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_16) == 0x000440, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_13) == 0x000444, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable_2) == 0x000448, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16) == 0x00044C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_16) == 0x000450, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17) == 0x000454, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_21) == 0x000458, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_object_Variable) == 0x000460, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_17) == 0x000468, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_object_Variable_1) == 0x000470, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_ReturnValue_17) == 0x000478, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_object_Variable_2) == 0x000480, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetCurrentIdleStruct_ReturnValue_2) == 0x000488, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetCurrentIdleStruct_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_22) == 0x0004E0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_48) == 0x0004E1, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_49) == 0x0004E2, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_50) == 0x0004E3, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_byte_Variable_1) == 0x0004E4, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_9) == 0x0004E5, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_51) == 0x0004E6, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_26) == 0x0004E7, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable_3) == 0x0004E8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Select_Default) == 0x0004F0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable_4) == 0x0004F8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_SelectFloat_ReturnValue) == 0x000500, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_52) == 0x000508, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_53) == 0x000509, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_54) == 0x00050A, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_55) == 0x00050B, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_56) == 0x00050C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_23) == 0x00050D, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_14) == 0x000510, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_57) == 0x000514, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_58) == 0x000515, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_real_Variable_15) == 0x000518, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_real_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable_5) == 0x00051C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000520, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable_6) == 0x000580, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetCurrentIdleStruct_ReturnValue_3) == 0x000588, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetCurrentIdleStruct_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Select_Default_1) == 0x0005E0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Select_Default_2) == 0x0005E8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, Temp_bool_Variable_7) == 0x0005F0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Not_PreBool_ReturnValue_10) == 0x0005F1, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_BooleanAND_ReturnValue_59) == 0x0005F2, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_BooleanAND_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Select_Default_3) == 0x0005F8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Select_Default_4) == 0x000600, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Select_Default_5) == 0x000604, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_ShouldUseLookAtInterpolation_ReturnValue) == 0x000608, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_ShouldUseLookAtInterpolation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Event_DeltaTimeX) == 0x00060C, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_SelectVector_ReturnValue) == 0x000610, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_Select_Default_6) == 0x000628, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetCurrentIdleStruct_ReturnValue_4) == 0x000630, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetCurrentIdleStruct_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000688, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Array_Random_OutItem) == 0x000690, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Array_Random_OutIndex) == 0x000698, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_GetComponentByClass_ReturnValue) == 0x0006A0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_IsValid_ReturnValue_1) == 0x0006A8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_NotEqual_ByteByte_ReturnValue_24) == 0x0006A9, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_NotEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0006B0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_RandomFloatInRange_ReturnValue) == 0x0006B8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_CreateDelegate_OutputDelegate) == 0x0006C0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x0006D0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1) == 0x0006D8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0006E0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x0006E8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x0006F0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_2) == 0x0006F8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3) == 0x000700, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_3) == 0x000708, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4) == 0x000710, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_4) == 0x000718, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5) == 0x000720, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_5) == 0x000728, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6) == 0x000730, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_6) == 0x000738, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7) == 0x000740, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_7) == 0x000748, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_8) == 0x000750, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8) == 0x000758, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_StructMemberSet___FloatProperty_2_ImplicitCast) == 0x000760, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_StructMemberSet___FloatProperty_2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_StructMemberSet___FloatProperty_3_ImplicitCast) == 0x000764, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_StructMemberSet___FloatProperty_3_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9) == 0x000768, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_9) == 0x000770, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_10) == 0x000778, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10) == 0x000780, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11) == 0x000788, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_11) == 0x000790, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_12) == 0x000798, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12) == 0x0007A0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_13) == 0x0007A8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_13) == 0x0007B0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_14) == 0x0007B8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_14) == 0x0007C0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_15) == 0x0007C8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_15) == 0x0007D0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_16) == 0x0007D8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_16) == 0x0007E0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_17) == 0x0007E8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_17) == 0x0007F0, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_StructMemberSet___FloatProperty_15_ImplicitCast) == 0x0007F8, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_StructMemberSet___FloatProperty_15_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x0007FC, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000800, "Member 'ABP_Humanoid_NPC_C_ExecuteUbergraph_ABP_Humanoid_NPC::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.GetCurrentIdleStruct
// 0x0110 (0x0110 - 0x0000)
struct ABP_Humanoid_NPC_C_GetCurrentIdleStruct final
{
public:
	struct FS_IdleNpcParameters                   ReturnValue;                                       // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_NPC_Body_IdleType                           Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   K2Node_Select_Default;                             // 0x0060(0x0058)(ConstParm, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   K2Node_Select_Default_1;                           // 0x00B8(0x0058)(ConstParm, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_GetCurrentIdleStruct) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_GetCurrentIdleStruct");
static_assert(sizeof(ABP_Humanoid_NPC_C_GetCurrentIdleStruct) == 0x000110, "Wrong size on ABP_Humanoid_NPC_C_GetCurrentIdleStruct");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetCurrentIdleStruct, ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_GetCurrentIdleStruct::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetCurrentIdleStruct, Temp_bool_Variable) == 0x000058, "Member 'ABP_Humanoid_NPC_C_GetCurrentIdleStruct::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetCurrentIdleStruct, Temp_byte_Variable) == 0x000059, "Member 'ABP_Humanoid_NPC_C_GetCurrentIdleStruct::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetCurrentIdleStruct, K2Node_Select_Default) == 0x000060, "Member 'ABP_Humanoid_NPC_C_GetCurrentIdleStruct::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetCurrentIdleStruct, K2Node_Select_Default_1) == 0x0000B8, "Member 'ABP_Humanoid_NPC_C_GetCurrentIdleStruct::K2Node_Select_Default_1' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.GetPreviousIdleStruct
// 0x0110 (0x0110 - 0x0000)
struct ABP_Humanoid_NPC_C_GetPreviousIdleStruct final
{
public:
	struct FS_IdleNpcParameters                   ReturnValue;                                       // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	E_NPC_Body_IdleType                           Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   K2Node_Select_Default;                             // 0x0060(0x0058)(ConstParm, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   K2Node_Select_Default_1;                           // 0x00B8(0x0058)(ConstParm, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_GetPreviousIdleStruct) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_GetPreviousIdleStruct");
static_assert(sizeof(ABP_Humanoid_NPC_C_GetPreviousIdleStruct) == 0x000110, "Wrong size on ABP_Humanoid_NPC_C_GetPreviousIdleStruct");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetPreviousIdleStruct, ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_GetPreviousIdleStruct::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetPreviousIdleStruct, Temp_byte_Variable) == 0x000058, "Member 'ABP_Humanoid_NPC_C_GetPreviousIdleStruct::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetPreviousIdleStruct, Temp_bool_Variable) == 0x000059, "Member 'ABP_Humanoid_NPC_C_GetPreviousIdleStruct::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetPreviousIdleStruct, K2Node_Select_Default) == 0x000060, "Member 'ABP_Humanoid_NPC_C_GetPreviousIdleStruct::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_GetPreviousIdleStruct, K2Node_Select_Default_1) == 0x0000B8, "Member 'ABP_Humanoid_NPC_C_GetPreviousIdleStruct::K2Node_Select_Default_1' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.InitializeAnimationDataFromComponent
// 0x0001 (0x0001 - 0x0000)
struct ABP_Humanoid_NPC_C_InitializeAnimationDataFromComponent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_InitializeAnimationDataFromComponent) == 0x000001, "Wrong alignment on ABP_Humanoid_NPC_C_InitializeAnimationDataFromComponent");
static_assert(sizeof(ABP_Humanoid_NPC_C_InitializeAnimationDataFromComponent) == 0x000001, "Wrong size on ABP_Humanoid_NPC_C_InitializeAnimationDataFromComponent");
static_assert(offsetof(ABP_Humanoid_NPC_C_InitializeAnimationDataFromComponent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_InitializeAnimationDataFromComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.OnBecomeRelevant
// 0x0068 (0x0068 - 0x0000)
struct ABP_Humanoid_NPC_C_OnBecomeRelevant final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Random_OutItem;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0048(0x0010)(NoDestructor)
	struct FSequencePlayerReference               CallFunc_SetStartPosition_ReturnValue;             // 0x0058(0x0010)(NoDestructor)
};
static_assert(alignof(ABP_Humanoid_NPC_C_OnBecomeRelevant) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_OnBecomeRelevant");
static_assert(sizeof(ABP_Humanoid_NPC_C_OnBecomeRelevant) == 0x000068, "Wrong size on ABP_Humanoid_NPC_C_OnBecomeRelevant");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, Context) == 0x000000, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::Context' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, Node) == 0x000010, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::Node' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000034, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, CallFunc_Array_Random_OutItem) == 0x000038, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, CallFunc_Array_Random_OutIndex) == 0x000040, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, CallFunc_SetSequence_ReturnValue) == 0x000048, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::CallFunc_SetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant, CallFunc_SetStartPosition_ReturnValue) == 0x000058, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant::CallFunc_SetStartPosition_ReturnValue' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.OnBecomeRelevant_0
// 0x0020 (0x0020 - 0x0000)
struct ABP_Humanoid_NPC_C_OnBecomeRelevant_0 final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(ABP_Humanoid_NPC_C_OnBecomeRelevant_0) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_OnBecomeRelevant_0");
static_assert(sizeof(ABP_Humanoid_NPC_C_OnBecomeRelevant_0) == 0x000020, "Wrong size on ABP_Humanoid_NPC_C_OnBecomeRelevant_0");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant_0, Context) == 0x000000, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant_0::Context' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_OnBecomeRelevant_0, Node) == 0x000010, "Member 'ABP_Humanoid_NPC_C_OnBecomeRelevant_0::Node' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.RetrieveNPCAnimationComponentIfNeeded
// 0x0020 (0x0020 - 0x0000)
struct ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NPCAnimationComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded");
static_assert(sizeof(ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded) == 0x000020, "Wrong size on ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded");
static_assert(offsetof(ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'ABP_Humanoid_NPC_C_RetrieveNPCAnimationComponentIfNeeded::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.SetDefaultIdleParameters
// 0x0068 (0x0068 - 0x0000)
struct ABP_Humanoid_NPC_C_SetDefaultIdleParameters final
{
public:
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue;         // 0x0000(0x0058)(HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Random_OutItem;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_SetDefaultIdleParameters");
static_assert(sizeof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters) == 0x000068, "Wrong size on ABP_Humanoid_NPC_C_SetDefaultIdleParameters");
static_assert(offsetof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters, CallFunc_GetCurrentIdleStruct_ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_SetDefaultIdleParameters::CallFunc_GetCurrentIdleStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters, CallFunc_Array_Random_OutItem) == 0x000058, "Member 'ABP_Humanoid_NPC_C_SetDefaultIdleParameters::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters, CallFunc_Array_Random_OutIndex) == 0x000060, "Member 'ABP_Humanoid_NPC_C_SetDefaultIdleParameters::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000064, "Member 'ABP_Humanoid_NPC_C_SetDefaultIdleParameters::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000065, "Member 'ABP_Humanoid_NPC_C_SetDefaultIdleParameters::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_SetDefaultIdleParameters, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'ABP_Humanoid_NPC_C_SetDefaultIdleParameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateAnimationDataFromComponent
// 0x0002 (0x0002 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent) == 0x000001, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent) == 0x000002, "Wrong size on ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ABP_Humanoid_NPC_C_UpdateAnimationDataFromComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateCustomIdle
// 0x0010 (0x0010 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateCustomIdle final
{
public:
	class UAnimSequence*                          CallFunc_Array_Random_OutItem;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateCustomIdle) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateCustomIdle");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateCustomIdle) == 0x000010, "Wrong size on ABP_Humanoid_NPC_C_UpdateCustomIdle");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateCustomIdle, CallFunc_Array_Random_OutItem) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateCustomIdle::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateCustomIdle, CallFunc_Array_Random_OutIndex) == 0x000008, "Member 'ABP_Humanoid_NPC_C_UpdateCustomIdle::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateGestralData
// 0x0018 (0x0018 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateGestralData final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_GestralVariationComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateGestralData) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateGestralData");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateGestralData) == 0x000018, "Wrong size on ABP_Humanoid_NPC_C_UpdateGestralData");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateGestralData, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateGestralData::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateGestralData, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'ABP_Humanoid_NPC_C_UpdateGestralData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateGestralData, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_Humanoid_NPC_C_UpdateGestralData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateIdleAnimationData
// 0x0228 (0x0228 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateIdleAnimationData final
{
public:
	struct FS_IdleNpcParameters                   PreviousIdleStruct;                                // 0x0000(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   CurrentIdleStruct;                                 // 0x0058(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   CallFunc_GetPreviousIdleStruct_ReturnValue;        // 0x00C8(0x0058)(HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   K2Node_Select_Default;                             // 0x0120(0x0058)(ConstParm, HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   K2Node_Select_Default_1;                           // 0x0178(0x0058)(HasGetValueTypeHash)
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue;         // 0x01D0(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateIdleAnimationData");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData) == 0x000228, "Wrong size on ABP_Humanoid_NPC_C_UpdateIdleAnimationData");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, PreviousIdleStruct) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::PreviousIdleStruct' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CurrentIdleStruct) == 0x000058, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CurrentIdleStruct' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, Temp_bool_Variable) == 0x0000B0, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_IsValid_ReturnValue_1) == 0x0000B2, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, Temp_bool_Variable_1) == 0x0000B3, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000C0, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_IsValid_ReturnValue_2) == 0x0000C1, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000C2, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_IsValid_ReturnValue_3) == 0x0000C3, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_IsValid_ReturnValue_4) == 0x0000C4, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_GetPreviousIdleStruct_ReturnValue) == 0x0000C8, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_GetPreviousIdleStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, K2Node_Select_Default) == 0x000120, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, K2Node_Select_Default_1) == 0x000178, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationData, CallFunc_GetCurrentIdleStruct_ReturnValue) == 0x0001D0, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationData::CallFunc_GetCurrentIdleStruct_ReturnValue' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateIdleAnimationOverride
// 0x0002 (0x0002 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride) == 0x000001, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride) == 0x000002, "Wrong size on ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'ABP_Humanoid_NPC_C_UpdateIdleAnimationOverride::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateIdleOnStateEntry
// 0x0078 (0x0078 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0050(0x0010)(NoDestructor)
	struct FSequencePlayerReference               CallFunc_SetPlayRate_ReturnValue;                  // 0x0060(0x0010)(NoDestructor)
	float                                         K2Node_Select_Option_0_ImplicitCast;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_1_ImplicitCast;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry) == 0x000078, "Wrong size on ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, Context) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::Context' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, Node) == 0x000010, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::Node' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, Temp_bool_Variable) == 0x000020, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000028, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000038, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, Temp_bool_Variable_1) == 0x000039, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, K2Node_Select_Default) == 0x000040, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, K2Node_Select_Default_1) == 0x000048, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, CallFunc_SetSequence_ReturnValue) == 0x000050, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::CallFunc_SetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, CallFunc_SetPlayRate_ReturnValue) == 0x000060, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::CallFunc_SetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, K2Node_Select_Option_0_ImplicitCast) == 0x000070, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry, K2Node_Select_Option_1_ImplicitCast) == 0x000074, "Member 'ABP_Humanoid_NPC_C_UpdateIdleOnStateEntry::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateITransInOnStateEntry
// 0x00C8 (0x00C8 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue;         // 0x0038(0x0058)(HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Array_Random_OutItem;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x00A0(0x0010)(NoDestructor)
	struct FSequencePlayerReference               CallFunc_SetPlayRate_ReturnValue;                  // 0x00B0(0x0010)(NoDestructor)
	float                                         CallFunc_SetPlayRate_PlayRate_ImplicitCast;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry) == 0x0000C8, "Wrong size on ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, Context) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::Context' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, Node) == 0x000010, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::Node' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_GetCurrentIdleStruct_ReturnValue) == 0x000038, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_GetCurrentIdleStruct_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_Array_Random_OutItem) == 0x000090, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_Array_Random_OutIndex) == 0x000098, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_SetSequence_ReturnValue) == 0x0000A0, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_SetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_SetPlayRate_ReturnValue) == 0x0000B0, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_SetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry, CallFunc_SetPlayRate_PlayRate_ImplicitCast) == 0x0000C0, "Member 'ABP_Humanoid_NPC_C_UpdateITransInOnStateEntry::CallFunc_SetPlayRate_PlayRate_ImplicitCast' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateITransOutOnStateEntry
// 0x0060 (0x0060 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0038(0x0010)(NoDestructor)
	struct FSequencePlayerReference               CallFunc_SetPlayRate_ReturnValue;                  // 0x0048(0x0010)(NoDestructor)
	float                                         CallFunc_SetPlayRate_PlayRate_ImplicitCast;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry) == 0x000060, "Wrong size on ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry, Context) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry::Context' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry, Node) == 0x000010, "Member 'ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry::Node' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry, CallFunc_SetSequence_ReturnValue) == 0x000038, "Member 'ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry::CallFunc_SetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry, CallFunc_SetPlayRate_ReturnValue) == 0x000048, "Member 'ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry::CallFunc_SetPlayRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry, CallFunc_SetPlayRate_PlayRate_ImplicitCast) == 0x000058, "Member 'ABP_Humanoid_NPC_C_UpdateITransOutOnStateEntry::CallFunc_SetPlayRate_PlayRate_ImplicitCast' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateLookAtData
// 0x0040 (0x0040 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateLookAtData final
{
public:
	float                                         Temp_real_Variable;                                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateLookAtData) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateLookAtData");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateLookAtData) == 0x000040, "Wrong size on ABP_Humanoid_NPC_C_UpdateLookAtData");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, Temp_real_Variable) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000004, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000005, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, Temp_real_Variable_1) == 0x000008, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, Temp_bool_Variable) == 0x000018, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, K2Node_Select_Default) == 0x00001C, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, CallFunc_VInterpTo_ReturnValue) == 0x000020, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateLookAtData, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000038, "Member 'ABP_Humanoid_NPC_C_UpdateLookAtData::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdatePosture
// 0x0058 (0x0058 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdatePosture final
{
public:
	struct FS_IdleNpcParameters                   CallFunc_GetCurrentIdleStruct_ReturnValue;         // 0x0000(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdatePosture) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdatePosture");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdatePosture) == 0x000058, "Wrong size on ABP_Humanoid_NPC_C_UpdatePosture");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdatePosture, CallFunc_GetCurrentIdleStruct_ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdatePosture::CallFunc_GetCurrentIdleStruct_ReturnValue' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateRandomIdleTalkingListOnStateEntry
// 0x0068 (0x0068 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class UAnimSequence*                          local_AnimTalking;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0040(0x0010)(NoDestructor)
	struct FSequencePlayerReference               CallFunc_SetStartPosition_ReturnValue;             // 0x0050(0x0010)(NoDestructor)
	float                                         CallFunc_SetStartPosition_StartPosition_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry) == 0x000068, "Wrong size on ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, Context) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::Context' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, Node) == 0x000010, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::Node' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, local_AnimTalking) == 0x000020, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::local_AnimTalking' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000028, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000038, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, CallFunc_SetSequence_ReturnValue) == 0x000040, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::CallFunc_SetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, CallFunc_SetStartPosition_ReturnValue) == 0x000050, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::CallFunc_SetStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry, CallFunc_SetStartPosition_StartPosition_ImplicitCast) == 0x000060, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry::CallFunc_SetStartPosition_StartPosition_ImplicitCast' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.UpdateRandomIdleTalkingListOnStateEntry_WithCheck
// 0x0068 (0x0068 - 0x0000)
struct ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class UAnimSequence*                          local_AnimTalking;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0028(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0040(0x0010)(NoDestructor)
	struct FSequencePlayerReference               CallFunc_SetStartPosition_ReturnValue;             // 0x0050(0x0010)(NoDestructor)
	float                                         CallFunc_SetStartPosition_StartPosition_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck) == 0x000008, "Wrong alignment on ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck");
static_assert(sizeof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck) == 0x000068, "Wrong size on ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, Context) == 0x000000, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::Context' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, Node) == 0x000010, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::Node' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, local_AnimTalking) == 0x000020, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::local_AnimTalking' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000028, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000038, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, CallFunc_SetSequence_ReturnValue) == 0x000040, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::CallFunc_SetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, CallFunc_SetStartPosition_ReturnValue) == 0x000050, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::CallFunc_SetStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck, CallFunc_SetStartPosition_StartPosition_ImplicitCast) == 0x000060, "Member 'ABP_Humanoid_NPC_C_UpdateRandomIdleTalkingListOnStateEntry_WithCheck::CallFunc_SetStartPosition_StartPosition_ImplicitCast' has a wrong offset!");

// Function ABP_Humanoid_NPC.ABP_Humanoid_NPC_C.ShouldUseLookAtInterpolation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation) == 0x000001, "Wrong alignment on ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation");
static_assert(sizeof(ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation) == 0x000004, "Wrong size on ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation");
static_assert(offsetof(ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation, ReturnValue) == 0x000000, "Member 'ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'ABP_Humanoid_NPC_C_ShouldUseLookAtInterpolation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

