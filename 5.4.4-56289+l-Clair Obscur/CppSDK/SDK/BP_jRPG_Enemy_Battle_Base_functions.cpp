#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_Enemy_Battle_Base

#include "Basic.hpp"

#include "BP_jRPG_Enemy_Battle_Base_classes.hpp"
#include "BP_jRPG_Enemy_Battle_Base_parameters.hpp"


namespace SDK
{

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireSpecificTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DesiredTargetIndex                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AcquireRandomTargetIfWantedTargetDead                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_jRPG_Character_Battle_Base_C**TargetRef                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsTargetDead                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireSpecificTarget(int32 DesiredTargetIndex, bool AcquireRandomTargetIfWantedTargetDead, class ABP_jRPG_Character_Battle_Base_C** TargetRef, bool* IsTargetDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireSpecificTarget");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget Parms{};

	Parms.DesiredTargetIndex = DesiredTargetIndex;
	Parms.AcquireRandomTargetIfWantedTargetDead = AcquireRandomTargetIfWantedTargetDead;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetRef != nullptr)
		*TargetRef = Parms.TargetRef;

	if (IsTargetDead != nullptr)
		*IsTargetDead = Parms.IsTargetDead;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireSpecificTargetFromActorRef
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* ActorRefTarget                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_jRPG_Character_Battle_Base_C**TargetRef                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireSpecificTargetFromActorRef(class ABP_jRPG_Character_Battle_Base_C* ActorRefTarget, class ABP_jRPG_Character_Battle_Base_C** TargetRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireSpecificTargetFromActorRef");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef Parms{};

	Parms.ActorRefTarget = ActorRefTarget;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetRef != nullptr)
		*TargetRef = Parms.TargetRef;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetAllEnemies
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_jRPG_Character_Battle_Base_C*>*Target_Enemies                                         (Parm, OutParm)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireTargetAllEnemies(TArray<class ABP_jRPG_Character_Battle_Base_C*>* Target_Enemies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireTargetAllEnemies");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target_Enemies != nullptr)
		*Target_Enemies = std::move(Parms.Target_Enemies);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetAllHeroes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnlyAlive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_jRPG_Character_Battle_Base_C*>*Target_Heroes                                          (Parm, OutParm)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireTargetAllHeroes(bool OnlyAlive, TArray<class ABP_jRPG_Character_Battle_Base_C*>* Target_Heroes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireTargetAllHeroes");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes Parms{};

	Parms.OnlyAlive = OnlyAlive;

	UObject::ProcessEvent(Func, &Parms);

	if (Target_Heroes != nullptr)
		*Target_Heroes = std::move(Parms.Target_Heroes);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetMiddleHero
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RandomIfDead                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_jRPG_Character_Battle_Base_C**Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireTargetMiddleHero(bool RandomIfDead, class ABP_jRPG_Character_Battle_Base_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireTargetMiddleHero");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero Parms{};

	Parms.RandomIfDead = RandomIfDead;

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetRandomHero
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C**Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireTargetRandomHero(class ABP_jRPG_Character_Battle_Base_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireTargetRandomHero");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetWithHigherHealth
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C**Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireTargetWithHigherHealth(class ABP_jRPG_Character_Battle_Base_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireTargetWithHigherHealth");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetWithLowerHealth
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C**Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::AcquireTargetWithLowerHealth(class ABP_jRPG_Character_Battle_Base_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AcquireTargetWithLowerHealth");

	Params::BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AfterTutoEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::AfterTutoEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "AfterTutoEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// double                                  NewHP                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PreviousHP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature(double NewHP, double PreviousHP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature");

	Params::BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature Parms{};

	Parms.NewHP = NewHP;
	Parms.PreviousHP = PreviousHP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.Clear Hero Targeting
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::Clear_Hero_Targeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "Clear Hero Targeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.ClearAcquiredTargets
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::ClearAcquiredTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "ClearAcquiredTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.DEBUG_CheckDisintegrationComponents
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>&          MeshComponents                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::DEBUG_CheckDisintegrationComponents(TArray<class UMeshComponent*>& MeshComponents, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "DEBUG_CheckDisintegrationComponents");

	Params::BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents Parms{};

	Parms.MeshComponents = std::move(MeshComponents);

	UObject::ProcessEvent(Func, &Parms);

	MeshComponents = std::move(Parms.MeshComponents);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.DebugSkipTurn
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::DebugSkipTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "DebugSkipTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.Desaturation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::Desaturation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "Desaturation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.DesintegrateOnDeath
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::DesintegrateOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "DesintegrateOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.Die_Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::Die_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "Die_Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.Die_Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::Die_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "Die_Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.DONTUSEAcquireTargetWithHighestApAmount
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C**Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::DONTUSEAcquireTargetWithHighestApAmount(class ABP_jRPG_Character_Battle_Base_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "DONTUSEAcquireTargetWithHighestApAmount");

	Params::BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.EndLastStandMove
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::EndLastStandMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "EndLastStandMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base");

	Params::BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetAllEnemies_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_jRPG_Character_Battle_Base_C*>*Enemies                                                (Parm, OutParm)

void ABP_jRPG_Enemy_Battle_Base_C::GetAllEnemies_0(TArray<class ABP_jRPG_Character_Battle_Base_C*>* Enemies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "GetAllEnemies_0");

	Params::BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enemies != nullptr)
		*Enemies = std::move(Parms.Enemies);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetCharacterAtBattleSpotIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BattleSpotIndex_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IncludedKickedCharacters                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_jRPG_Character_Battle_Base_C**Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::GetCharacterAtBattleSpotIndex(int32 BattleSpotIndex_0, bool IncludedKickedCharacters, class ABP_jRPG_Character_Battle_Base_C** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "GetCharacterAtBattleSpotIndex");

	Params::BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex Parms{};

	Parms.BattleSpotIndex_0 = BattleSpotIndex_0;
	Parms.IncludedKickedCharacters = IncludedKickedCharacters;

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetExtraDisintegrationComponents
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>*          MeshComponent                                          (Parm, OutParm, ContainsInstancedReference)

void ABP_jRPG_Enemy_Battle_Base_C::GetExtraDisintegrationComponents(TArray<class UMeshComponent*>* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "GetExtraDisintegrationComponents");

	Params::BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshComponent != nullptr)
		*MeshComponent = std::move(Parms.MeshComponent);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetMiddleHeroForFeedback
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C**MiddleHero                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::GetMiddleHeroForFeedback(class ABP_jRPG_Character_Battle_Base_C** MiddleHero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "GetMiddleHeroForFeedback");

	Params::BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MiddleHero != nullptr)
		*MiddleHero = Parms.MiddleHero;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetRandomEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C**Output                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::GetRandomEnemy(class ABP_jRPG_Character_Battle_Base_C** Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "GetRandomEnemy");

	Params::BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.InvertDesintegrateOnDeath
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::InvertDesintegrateOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "InvertDesintegrateOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.JumpStandardSlowmo
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::JumpStandardSlowmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "JumpStandardSlowmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.OnDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DeathByCounter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::OnDeath(bool DeathByCounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "OnDeath");

	Params::BP_jRPG_Enemy_Battle_Base_C_OnDeath Parms{};

	Parms.DeathByCounter = DeathByCounter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.OnTurnEnded
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::OnTurnEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "OnTurnEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.OnTurnStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::OnTurnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "OnTurnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.SetCurrentIdleState_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_EnemyIdleState                        CurrentIdleState_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::SetCurrentIdleState_0(E_EnemyIdleState CurrentIdleState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "SetCurrentIdleState_0");

	Params::BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0 Parms{};

	Parms.CurrentIdleState_0 = CurrentIdleState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.SetIsSkillSummon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::SetIsSkillSummon(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "SetIsSkillSummon");

	Params::BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.SkillSummon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DelayBeforeInversion                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Enemy_Battle_Base_C::SkillSummon(double DelayBeforeInversion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "SkillSummon");

	Params::BP_jRPG_Enemy_Battle_Base_C_SkillSummon Parms{};

	Parms.DelayBeforeInversion = DelayBeforeInversion;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.Summon__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::Summon__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "Summon__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.Summon__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Enemy_Battle_Base_C::Summon__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Enemy_Battle_Base_C", "Summon__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

