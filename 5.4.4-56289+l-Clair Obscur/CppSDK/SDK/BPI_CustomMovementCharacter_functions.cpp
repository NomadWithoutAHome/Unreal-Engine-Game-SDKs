#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CustomMovementCharacter

#include "Basic.hpp"

#include "BPI_CustomMovementCharacter_classes.hpp"
#include "BPI_CustomMovementCharacter_parameters.hpp"


namespace SDK
{

// Function BPI_CustomMovementCharacter.BPI_CustomMovementCharacter_C.GetCustomMovement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CustomMovementComponent_C**   CustomMovement                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMovementCharacter_C::GetCustomMovement(class UBP_CustomMovementComponent_C** CustomMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMovementCharacter_C", "GetCustomMovement");

	Params::BPI_CustomMovementCharacter_C_GetCustomMovement Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (CustomMovement != nullptr)
		*CustomMovement = Parms.CustomMovement;
}


// Function BPI_CustomMovementCharacter.BPI_CustomMovementCharacter_C.OnBeforeStartCustomMovement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FSCustomMoveZone&          CustomMoveZone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 WaitTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_CustomMovementCharacter_C::OnBeforeStartCustomMovement(const struct FSCustomMoveZone& CustomMoveZone, double* WaitTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMovementCharacter_C", "OnBeforeStartCustomMovement");

	Params::BPI_CustomMovementCharacter_C_OnBeforeStartCustomMovement Parms{};

	Parms.CustomMoveZone = std::move(CustomMoveZone);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (WaitTime != nullptr)
		*WaitTime = Parms.WaitTime;
}


// Function BPI_CustomMovementCharacter.BPI_CustomMovementCharacter_C.CanEnterCustomMovement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// const struct FSCustomMoveZone&          CustomMoveZone                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ImmediateEntryRequired                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool IBPI_CustomMovementCharacter_C::CanEnterCustomMovement(const struct FSCustomMoveZone& CustomMoveZone, bool ImmediateEntryRequired) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_CustomMovementCharacter_C", "CanEnterCustomMovement");

	Params::BPI_CustomMovementCharacter_C_CanEnterCustomMovement Parms{};

	Parms.CustomMoveZone = std::move(CustomMoveZone);
	Parms.ImmediateEntryRequired = ImmediateEntryRequired;

	AsUObject()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

