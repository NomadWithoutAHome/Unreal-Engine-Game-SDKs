#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponAttributeScaling

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "EAttributeScalingGrade_structs.hpp"
#include "Engine_structs.hpp"
#include "ECharacterAttribute_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponAttributeScaling.WBP_WeaponAttributeScaling_C.ExecuteUbergraph_WBP_WeaponAttributeScaling
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling) == 0x000004, "Wrong alignment on WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling");
static_assert(sizeof(WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling) == 0x000008, "Wrong size on WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling, EntryPoint) == 0x000000, "Member 'WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_WeaponAttributeScaling_C_ExecuteUbergraph_WBP_WeaponAttributeScaling::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_WeaponAttributeScaling.WBP_WeaponAttributeScaling_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeaponAttributeScaling_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponAttributeScaling_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_WeaponAttributeScaling_C_PreConstruct");
static_assert(sizeof(WBP_WeaponAttributeScaling_C_PreConstruct) == 0x000001, "Wrong size on WBP_WeaponAttributeScaling_C_PreConstruct");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_WeaponAttributeScaling_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_WeaponAttributeScaling.WBP_WeaponAttributeScaling_C.SetAttributeScaling
// 0x0018 (0x0018 - 0x0000)
struct WBP_WeaponAttributeScaling_C_SetAttributeScaling final
{
public:
	EAttributeScalingGrade                        InAttributeScaling;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAttributeScalingGradeDisplayName_ReturnValue; // 0x0008(0x0010)()
};
static_assert(alignof(WBP_WeaponAttributeScaling_C_SetAttributeScaling) == 0x000008, "Wrong alignment on WBP_WeaponAttributeScaling_C_SetAttributeScaling");
static_assert(sizeof(WBP_WeaponAttributeScaling_C_SetAttributeScaling) == 0x000018, "Wrong size on WBP_WeaponAttributeScaling_C_SetAttributeScaling");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetAttributeScaling, InAttributeScaling) == 0x000000, "Member 'WBP_WeaponAttributeScaling_C_SetAttributeScaling::InAttributeScaling' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetAttributeScaling, CallFunc_GetAttributeScalingGradeDisplayName_ReturnValue) == 0x000008, "Member 'WBP_WeaponAttributeScaling_C_SetAttributeScaling::CallFunc_GetAttributeScalingGradeDisplayName_ReturnValue' has a wrong offset!");

// Function WBP_WeaponAttributeScaling.WBP_WeaponAttributeScaling_C.SetAttributeType
// 0x0018 (0x0018 - 0x0000)
struct WBP_WeaponAttributeScaling_C_SetAttributeType final
{
public:
	ECharacterAttribute                           InAttribute;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAttributeDisplayName_ReturnValue;      // 0x0008(0x0010)()
};
static_assert(alignof(WBP_WeaponAttributeScaling_C_SetAttributeType) == 0x000008, "Wrong alignment on WBP_WeaponAttributeScaling_C_SetAttributeType");
static_assert(sizeof(WBP_WeaponAttributeScaling_C_SetAttributeType) == 0x000018, "Wrong size on WBP_WeaponAttributeScaling_C_SetAttributeType");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetAttributeType, InAttribute) == 0x000000, "Member 'WBP_WeaponAttributeScaling_C_SetAttributeType::InAttribute' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetAttributeType, CallFunc_GetAttributeDisplayName_ReturnValue) == 0x000008, "Member 'WBP_WeaponAttributeScaling_C_SetAttributeType::CallFunc_GetAttributeDisplayName_ReturnValue' has a wrong offset!");

// Function WBP_WeaponAttributeScaling.WBP_WeaponAttributeScaling_C.SetPowerValue
// 0x0090 (0x0090 - 0x0000)
struct WBP_WeaponAttributeScaling_C_SetPowerValue final
{
public:
	int32                                         InPower;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponAttributeScaling_C_SetPowerValue) == 0x000008, "Wrong alignment on WBP_WeaponAttributeScaling_C_SetPowerValue");
static_assert(sizeof(WBP_WeaponAttributeScaling_C_SetPowerValue) == 0x000090, "Wrong size on WBP_WeaponAttributeScaling_C_SetPowerValue");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, InPower) == 0x000000, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::InPower' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, Temp_byte_Variable) == 0x000004, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000008, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, Temp_byte_Variable_1) == 0x000010, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, K2Node_MakeArray_Array) == 0x000060, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, Temp_bool_Variable) == 0x000070, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponAttributeScaling_C_SetPowerValue, K2Node_Select_Default) == 0x000088, "Member 'WBP_WeaponAttributeScaling_C_SetPowerValue::K2Node_Select_Default' has a wrong offset!");

}

