#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_DialogueCharacter

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "EDialogueCameraType_structs.hpp"
#include "E_NPC_SpolightTypes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_DialogueCharacter.BPI_DialogueCharacter_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_DialogueCharacter_C final
{
public:
	void BPI_GetAllDialogueCameras(TArray<class UCineCameraComponent*>* CineCameraComponents);
	void BPI_GetDialogueAudioComponent(class UAudioComponent** AudioComponent);
	void BPI_GetDialogueCameraByType(EDialogueCameraType CameraType, class UCameraComponent** CameraComponent);
	struct FVector BPI_GetDialogueCameraOffset();
	void BPI_GetDialogueFocusPoint(class USceneComponent** SceneComponent);
	TScriptInterface<class IBPI_DialogueCharacter_C> BPI_GetInteractingCharacter();
	E_NPC_SpolightTypes BPI_GetLightDirection();
	void BPI_GetLightingSet(E_NPC_SpolightTypes LightDirection, class ULightComponent** FrontLight, class ULightComponent** RimLight);
	TScriptInterface<class IBPI_DialogueCharacter_C> BPI_GetReverseSpotlightReceiver();
	void BPI_GetSpotlightsToActivateDuringDialogue(TArray<TSoftObjectPtr<class ASpotLight>>* SpotLightActors);
	bool BPI_HasLightingAuthority();
	bool BPI_ShouldMoveCameraPresetsToOtherSide();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_DialogueCharacter_C">();
	}
	static class IBPI_DialogueCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_DialogueCharacter_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_DialogueCharacter_C) == 0x000001, "Wrong alignment on IBPI_DialogueCharacter_C");
static_assert(sizeof(IBPI_DialogueCharacter_C) == 0x000001, "Wrong size on IBPI_DialogueCharacter_C");

}

