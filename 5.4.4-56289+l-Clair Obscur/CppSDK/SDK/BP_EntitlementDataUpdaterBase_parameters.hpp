#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EntitlementDataUpdaterBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_EntitlementDataUpdaterBase.BP_EntitlementDataUpdaterBase_C.ApplyEntitlementData
// 0x0010 (0x0010 - 0x0000)
struct BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData final
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData) == 0x000008, "Wrong alignment on BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData");
static_assert(sizeof(BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData) == 0x000010, "Wrong size on BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData");
static_assert(offsetof(BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData, GameInstance) == 0x000000, "Member 'BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData::GameInstance' has a wrong offset!");
static_assert(offsetof(BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData, PlayerController) == 0x000008, "Member 'BP_EntitlementDataUpdaterBase_C_ApplyEntitlementData::PlayerController' has a wrong offset!");

// Function BP_EntitlementDataUpdaterBase.BP_EntitlementDataUpdaterBase_C.RemoveEntitlementData
// 0x0010 (0x0010 - 0x0000)
struct BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData final
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData) == 0x000008, "Wrong alignment on BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData");
static_assert(sizeof(BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData) == 0x000010, "Wrong size on BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData");
static_assert(offsetof(BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData, GameInstance) == 0x000000, "Member 'BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData::GameInstance' has a wrong offset!");
static_assert(offsetof(BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData, PlayerController) == 0x000008, "Member 'BP_EntitlementDataUpdaterBase_C_RemoveEntitlementData::PlayerController' has a wrong offset!");

}

