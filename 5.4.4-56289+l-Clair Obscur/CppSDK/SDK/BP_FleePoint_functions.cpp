#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FleePoint

#include "Basic.hpp"

#include "BP_FleePoint_classes.hpp"
#include "BP_FleePoint_parameters.hpp"


namespace SDK
{

// Function BP_FleePoint.BP_FleePoint_C.CheckForErrors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_FleePoint_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FleePoint_C", "CheckForErrors");

	Params::BP_FleePoint_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}


// Function BP_FleePoint.BP_FleePoint_C.ComputeFleePointDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FleePoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAtValidDistance                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FleePoint_C::ComputeFleePointDistance(class AActor* FleePoint, double* Distance, bool* IsAtValidDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FleePoint_C", "ComputeFleePointDistance");

	Params::BP_FleePoint_C_ComputeFleePointDistance Parms{};

	Parms.FleePoint = FleePoint;

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;

	if (IsAtValidDistance != nullptr)
		*IsAtValidDistance = Parms.IsAtValidDistance;
}


// Function BP_FleePoint.BP_FleePoint_C.FindNextFleePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PursuerActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_FleePoint_C**                 FleePoint                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_FleePoint_C::FindNextFleePoint(class AActor* PursuerActor, class ABP_FleePoint_C** FleePoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FleePoint_C", "FindNextFleePoint");

	Params::BP_FleePoint_C_FindNextFleePoint Parms{};

	Parms.PursuerActor = PursuerActor;

	UObject::ProcessEvent(Func, &Parms);

	if (FleePoint != nullptr)
		*FleePoint = Parms.FleePoint;
}


// Function BP_FleePoint.BP_FleePoint_C.LinkFleePoints
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FleePoint_C::LinkFleePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FleePoint_C", "LinkFleePoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FleePoint.BP_FleePoint_C.UpdateDebugDisplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_FleePoint_C::UpdateDebugDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FleePoint_C", "UpdateDebugDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FleePoint.BP_FleePoint_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_FleePoint_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FleePoint_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

