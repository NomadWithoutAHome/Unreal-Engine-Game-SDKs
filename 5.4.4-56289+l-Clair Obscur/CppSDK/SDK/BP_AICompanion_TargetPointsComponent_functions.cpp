#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AICompanion_TargetPointsComponent

#include "Basic.hpp"

#include "BP_AICompanion_TargetPointsComponent_classes.hpp"
#include "BP_AICompanion_TargetPointsComponent_parameters.hpp"


namespace SDK
{

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ExecuteUbergraph_BP_AICompanion_TargetPointsComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::ExecuteUbergraph_BP_AICompanion_TargetPointsComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "ExecuteUbergraph_BP_AICompanion_TargetPointsComponent");

	Params::BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.FindBestPointBasedOnDistance
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<int32>&                          ForbiddenIndexes                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::FindBestPointBasedOnDistance(class ABP_Pawn_AICompanion_C* Companion_0, TArray<int32>& ForbiddenIndexes, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "FindBestPointBasedOnDistance");

	Params::BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance Parms{};

	Parms.Companion_0 = Companion_0;
	Parms.ForbiddenIndexes = std::move(ForbiddenIndexes);

	UObject::ProcessEvent(Func, &Parms);

	ForbiddenIndexes = std::move(Parms.ForbiddenIndexes);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.GetOrTryAcquirePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::GetOrTryAcquirePoint(class ABP_Pawn_AICompanion_C* Companion_0, struct FVector* Point, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "GetOrTryAcquirePoint");

	Params::BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint Parms{};

	Parms.Companion_0 = Companion_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.GetTotalNumberOfPoints
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_AICompanion_TargetPointsComponent_C::GetTotalNumberOfPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "GetTotalNumberOfPoints");

	Params::BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.HasAnyPointAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::HasAnyPointAvailable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "HasAnyPointAvailable");

	Params::BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "ReceiveTick");

	Params::BP_AICompanion_TargetPointsComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ReleaseAllPoints
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_TargetPointsComponent_C::ReleaseAllPoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "ReleaseAllPoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ReleasePoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::ReleasePoint(class ABP_Pawn_AICompanion_C* Companion_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "ReleasePoint");

	Params::BP_AICompanion_TargetPointsComponent_C_ReleasePoint Parms{};

	Parms.Companion_0 = Companion_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.SearchNextAvailablePointIndex
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::SearchNextAvailablePointIndex(int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "SearchNextAvailablePointIndex");

	Params::BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.TryAcquireNextPoint
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::TryAcquireNextPoint(class ABP_Pawn_AICompanion_C* Companion_0, struct FVector* Point, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "TryAcquireNextPoint");

	Params::BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint Parms{};

	Parms.Companion_0 = Companion_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.UpdatePointsBasedOnDistance
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_TargetPointsComponent_C::UpdatePointsBasedOnDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "UpdatePointsBasedOnDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ComputeTargetPoint
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const struct FVector&                   LocalPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_TargetPointsComponent_C::ComputeTargetPoint(const struct FVector& LocalPoint, struct FVector* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "ComputeTargetPoint");

	Params::BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint Parms{};

	Parms.LocalPoint = std::move(LocalPoint);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.Editor_DrawDebugShapes
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_AICompanion_TargetPointsComponent_C::Editor_DrawDebugShapes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "Editor_DrawDebugShapes");

	Params::BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.Editor_GetDebugShapes
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FEditorDebugShape_Arrow>& Arrows                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FEditorDebugShape_Arrow>& Lines                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_AICompanion_TargetPointsComponent_C::Editor_GetDebugShapes(TArray<struct FEditorDebugShape_Arrow>& Arrows, TArray<struct FEditorDebugShape_Arrow>& Lines) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_TargetPointsComponent_C", "Editor_GetDebugShapes");

	Params::BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes Parms{};

	Parms.Arrows = std::move(Arrows);
	Parms.Lines = std::move(Lines);

	UObject::ProcessEvent(Func, &Parms);

	Arrows = std::move(Parms.Arrows);
	Lines = std::move(Parms.Lines);

	return Parms.ReturnValue;
}

}

