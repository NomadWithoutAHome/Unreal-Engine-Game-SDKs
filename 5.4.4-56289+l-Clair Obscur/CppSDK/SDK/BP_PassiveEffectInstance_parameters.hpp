#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PassiveEffectInstance

#include "Basic.hpp"

#include "S_jRPG_Item_StaticData_structs.hpp"
#include "FPassiveEffect_structs.hpp"
#include "FEquipmentSlot_structs.hpp"


namespace SDK::Params
{

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.BPI_OnMarkNotificationAsRead
// 0x0008 (0x0008 - 0x0000)
struct BP_PassiveEffectInstance_C_BPI_OnMarkNotificationAsRead final
{
public:
	class UUserWidget*                            MarkCaller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_BPI_OnMarkNotificationAsRead) == 0x000008, "Wrong alignment on BP_PassiveEffectInstance_C_BPI_OnMarkNotificationAsRead");
static_assert(sizeof(BP_PassiveEffectInstance_C_BPI_OnMarkNotificationAsRead) == 0x000008, "Wrong size on BP_PassiveEffectInstance_C_BPI_OnMarkNotificationAsRead");
static_assert(offsetof(BP_PassiveEffectInstance_C_BPI_OnMarkNotificationAsRead, MarkCaller) == 0x000000, "Member 'BP_PassiveEffectInstance_C_BPI_OnMarkNotificationAsRead::MarkCaller' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.BPI_ShouldShowNotification
// 0x0018 (0x0018 - 0x0000)
struct BP_PassiveEffectInstance_C_BPI_ShouldShowNotification final
{
public:
	bool                                          bShouldShow;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldObjectBeNotified_IsNotified;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_BPI_ShouldShowNotification) == 0x000008, "Wrong alignment on BP_PassiveEffectInstance_C_BPI_ShouldShowNotification");
static_assert(sizeof(BP_PassiveEffectInstance_C_BPI_ShouldShowNotification) == 0x000018, "Wrong size on BP_PassiveEffectInstance_C_BPI_ShouldShowNotification");
static_assert(offsetof(BP_PassiveEffectInstance_C_BPI_ShouldShowNotification, bShouldShow) == 0x000000, "Member 'BP_PassiveEffectInstance_C_BPI_ShouldShowNotification::bShouldShow' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_BPI_ShouldShowNotification, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_PassiveEffectInstance_C_BPI_ShouldShowNotification::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_BPI_ShouldShowNotification, CallFunc_ShouldObjectBeNotified_IsNotified) == 0x000010, "Member 'BP_PassiveEffectInstance_C_BPI_ShouldShowNotification::CallFunc_ShouldObjectBeNotified_IsNotified' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.ExecuteUbergraph_BP_PassiveEffectInstance
// 0x0018 (0x0018 - 0x0000)
struct BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Event_MarkCaller;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance) == 0x000008, "Wrong alignment on BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance");
static_assert(sizeof(BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance) == 0x000018, "Wrong size on BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance");
static_assert(offsetof(BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance, EntryPoint) == 0x000000, "Member 'BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance, K2Node_Event_MarkCaller) == 0x000008, "Member 'BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance::K2Node_Event_MarkCaller' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance, CallFunc_GetCustomGI_ReturnValue) == 0x000010, "Member 'BP_PassiveEffectInstance_C_ExecuteUbergraph_BP_PassiveEffectInstance::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.GetOwnerData
// 0x0008 (0x0008 - 0x0000)
struct BP_PassiveEffectInstance_C_GetOwnerData final
{
public:
	class UBP_CharacterData_C*                    NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_GetOwnerData) == 0x000008, "Wrong alignment on BP_PassiveEffectInstance_C_GetOwnerData");
static_assert(sizeof(BP_PassiveEffectInstance_C_GetOwnerData) == 0x000008, "Wrong size on BP_PassiveEffectInstance_C_GetOwnerData");
static_assert(offsetof(BP_PassiveEffectInstance_C_GetOwnerData, NewParam) == 0x000000, "Member 'BP_PassiveEffectInstance_C_GetOwnerData::NewParam' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.GetOwningGearData
// 0x0130 (0x0130 - 0x0000)
struct BP_PassiveEffectInstance_C_GetOwningGearData final
{
public:
	struct FS_jRPG_Item_StaticData                OutOwningGearData;                                 // 0x0000(0x0130)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_GetOwningGearData) == 0x000008, "Wrong alignment on BP_PassiveEffectInstance_C_GetOwningGearData");
static_assert(sizeof(BP_PassiveEffectInstance_C_GetOwningGearData) == 0x000130, "Wrong size on BP_PassiveEffectInstance_C_GetOwningGearData");
static_assert(offsetof(BP_PassiveEffectInstance_C_GetOwningGearData, OutOwningGearData) == 0x000000, "Member 'BP_PassiveEffectInstance_C_GetOwningGearData::OutOwningGearData' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.GetPassiveEffectDefinition
// 0x0048 (0x0048 - 0x0000)
struct BP_PassiveEffectInstance_C_GetPassiveEffectDefinition final
{
public:
	struct FFPassiveEffect                        ReturnValue;                                       // 0x0000(0x0048)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_GetPassiveEffectDefinition) == 0x000008, "Wrong alignment on BP_PassiveEffectInstance_C_GetPassiveEffectDefinition");
static_assert(sizeof(BP_PassiveEffectInstance_C_GetPassiveEffectDefinition) == 0x000048, "Wrong size on BP_PassiveEffectInstance_C_GetPassiveEffectDefinition");
static_assert(offsetof(BP_PassiveEffectInstance_C_GetPassiveEffectDefinition, ReturnValue) == 0x000000, "Member 'BP_PassiveEffectInstance_C_GetPassiveEffectDefinition::ReturnValue' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.GetPassiveEffectID
// 0x0008 (0x0008 - 0x0000)
struct BP_PassiveEffectInstance_C_GetPassiveEffectID final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_GetPassiveEffectID) == 0x000004, "Wrong alignment on BP_PassiveEffectInstance_C_GetPassiveEffectID");
static_assert(sizeof(BP_PassiveEffectInstance_C_GetPassiveEffectID) == 0x000008, "Wrong size on BP_PassiveEffectInstance_C_GetPassiveEffectID");
static_assert(offsetof(BP_PassiveEffectInstance_C_GetPassiveEffectID, ReturnValue) == 0x000000, "Member 'BP_PassiveEffectInstance_C_GetPassiveEffectID::ReturnValue' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.Initialize
// 0x01E0 (0x01E0 - 0x0000)
struct BP_PassiveEffectInstance_C_Initialize final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFEquipmentSlot>                CallFunc_GetAllEquipmentSlotTypes_EquipmentSlots;  // 0x0018(0x0010)(ReferenceParm)
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x0028(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item;                           // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotEmpty_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_GetItemInstanceInSlot_ItemInstance;       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0090(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs; // 0x01C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_Initialize) == 0x000008, "Wrong alignment on BP_PassiveEffectInstance_C_Initialize");
static_assert(sizeof(BP_PassiveEffectInstance_C_Initialize) == 0x0001E0, "Wrong size on BP_PassiveEffectInstance_C_Initialize");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_PassiveEffectInstance_C_Initialize::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PassiveEffectInstance_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PassiveEffectInstance_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_GetAllEquipmentSlotTypes_EquipmentSlots) == 0x000018, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_GetAllEquipmentSlotTypes_EquipmentSlots' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x000028, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_GetPassiveEffectDefinition_Found) == 0x000070, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_IsSlotUsed_ReturnValue) == 0x00007C, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_IsSlotEmpty_ReturnValue) == 0x00007D, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_IsSlotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_GetItemInstanceInSlot_ItemInstance) == 0x000080, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_GetItemInstanceInSlot_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_Not_PreBool_ReturnValue_1) == 0x000088, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_GetItemStaticData_ItemStaticData) == 0x000090, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_BooleanAND_ReturnValue) == 0x0001C0, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs) == 0x0001C8, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_GetUnlockedPassiveEffectsIDs_PassiveEffectIDs' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_Array_Contains_ReturnValue) == 0x0001DC, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x0001DD, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_Initialize, CallFunc_BooleanAND_ReturnValue_1) == 0x0001DE, "Member 'BP_PassiveEffectInstance_C_Initialize::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.IsEquipped
// 0x0002 (0x0002 - 0x0000)
struct BP_PassiveEffectInstance_C_IsEquipped final
{
public:
	bool                                          IsEquipped_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_IsEquipped) == 0x000001, "Wrong alignment on BP_PassiveEffectInstance_C_IsEquipped");
static_assert(sizeof(BP_PassiveEffectInstance_C_IsEquipped) == 0x000002, "Wrong size on BP_PassiveEffectInstance_C_IsEquipped");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsEquipped, IsEquipped_0) == 0x000000, "Member 'BP_PassiveEffectInstance_C_IsEquipped::IsEquipped_0' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsEquipped, CallFunc_Array_Contains_ReturnValue) == 0x000001, "Member 'BP_PassiveEffectInstance_C_IsEquipped::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.IsForbidden
// 0x000C (0x000C - 0x0000)
struct BP_PassiveEffectInstance_C_IsForbidden final
{
public:
	bool                                          IsForbidden_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAvailableLuminaPoints_ReturnValue;     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_IsForbidden) == 0x000004, "Wrong alignment on BP_PassiveEffectInstance_C_IsForbidden");
static_assert(sizeof(BP_PassiveEffectInstance_C_IsForbidden) == 0x00000C, "Wrong size on BP_PassiveEffectInstance_C_IsForbidden");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsForbidden, IsForbidden_0) == 0x000000, "Member 'BP_PassiveEffectInstance_C_IsForbidden::IsForbidden_0' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsForbidden, CallFunc_Array_Contains_ReturnValue) == 0x000001, "Member 'BP_PassiveEffectInstance_C_IsForbidden::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsForbidden, CallFunc_GetAvailableLuminaPoints_ReturnValue) == 0x000004, "Member 'BP_PassiveEffectInstance_C_IsForbidden::CallFunc_GetAvailableLuminaPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsForbidden, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_PassiveEffectInstance_C_IsForbidden::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsForbidden, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_PassiveEffectInstance_C_IsForbidden::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsForbidden, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'BP_PassiveEffectInstance_C_IsForbidden::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.IsFromGear
// 0x0001 (0x0001 - 0x0000)
struct BP_PassiveEffectInstance_C_IsFromGear final
{
public:
	bool                                          IsFromGear_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_IsFromGear) == 0x000001, "Wrong alignment on BP_PassiveEffectInstance_C_IsFromGear");
static_assert(sizeof(BP_PassiveEffectInstance_C_IsFromGear) == 0x000001, "Wrong size on BP_PassiveEffectInstance_C_IsFromGear");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsFromGear, IsFromGear_0) == 0x000000, "Member 'BP_PassiveEffectInstance_C_IsFromGear::IsFromGear_0' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.IsHighlighted
// 0x0001 (0x0001 - 0x0000)
struct BP_PassiveEffectInstance_C_IsHighlighted final
{
public:
	bool                                          bIsHighlighted_0;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_IsHighlighted) == 0x000001, "Wrong alignment on BP_PassiveEffectInstance_C_IsHighlighted");
static_assert(sizeof(BP_PassiveEffectInstance_C_IsHighlighted) == 0x000001, "Wrong size on BP_PassiveEffectInstance_C_IsHighlighted");
static_assert(offsetof(BP_PassiveEffectInstance_C_IsHighlighted, bIsHighlighted_0) == 0x000000, "Member 'BP_PassiveEffectInstance_C_IsHighlighted::bIsHighlighted_0' has a wrong offset!");

// Function BP_PassiveEffectInstance.BP_PassiveEffectInstance_C.SetHighlighted
// 0x0003 (0x0003 - 0x0000)
struct BP_PassiveEffectInstance_C_SetHighlighted final
{
public:
	bool                                          bInIsHighlighted;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHighlighted_bIsHighlighted;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PassiveEffectInstance_C_SetHighlighted) == 0x000001, "Wrong alignment on BP_PassiveEffectInstance_C_SetHighlighted");
static_assert(sizeof(BP_PassiveEffectInstance_C_SetHighlighted) == 0x000003, "Wrong size on BP_PassiveEffectInstance_C_SetHighlighted");
static_assert(offsetof(BP_PassiveEffectInstance_C_SetHighlighted, bInIsHighlighted) == 0x000000, "Member 'BP_PassiveEffectInstance_C_SetHighlighted::bInIsHighlighted' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_SetHighlighted, CallFunc_IsHighlighted_bIsHighlighted) == 0x000001, "Member 'BP_PassiveEffectInstance_C_SetHighlighted::CallFunc_IsHighlighted_bIsHighlighted' has a wrong offset!");
static_assert(offsetof(BP_PassiveEffectInstance_C_SetHighlighted, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'BP_PassiveEffectInstance_C_SetHighlighted::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

}

