#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Battle_Global

#include "Basic.hpp"

#include "EBattleTurnState_structs.hpp"
#include "Engine_structs.hpp"
#include "E_BattleLookDirection_structs.hpp"
#include "E_EnemyIdleState_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_HitReact_Anim_Type_structs.hpp"


namespace SDK::Params
{

// Function ABP_Battle_Global.ABP_Battle_Global_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Battle_Global_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Battle_Global_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_AnimGraph");
static_assert(sizeof(ABP_Battle_Global_C_AnimGraph) == 0x000010, "Wrong size on ABP_Battle_Global_C_AnimGraph");
static_assert(offsetof(ABP_Battle_Global_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Battle_Global_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.ApplyBoneScalesOverrides
// 0x0020 (0x0020 - 0x0000)
struct ABP_Battle_Global_C_ApplyBoneScalesOverrides final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AnimationVariationComponent_C*      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_ApplyBoneScalesOverrides) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_ApplyBoneScalesOverrides");
static_assert(sizeof(ABP_Battle_Global_C_ApplyBoneScalesOverrides) == 0x000020, "Wrong size on ABP_Battle_Global_C_ApplyBoneScalesOverrides");
static_assert(offsetof(ABP_Battle_Global_C_ApplyBoneScalesOverrides, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'ABP_Battle_Global_C_ApplyBoneScalesOverrides::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ApplyBoneScalesOverrides, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ABP_Battle_Global_C_ApplyBoneScalesOverrides::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ApplyBoneScalesOverrides, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'ABP_Battle_Global_C_ApplyBoneScalesOverrides::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ApplyBoneScalesOverrides, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'ABP_Battle_Global_C_ApplyBoneScalesOverrides::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Battle_Global_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Battle_Global_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Battle_Global_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Battle_Global_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Battle_Global_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Battle_Global_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.ComputeAllyLookDirection
// 0x0028 (0x0028 - 0x0000)
struct ABP_Battle_Global_C_ComputeAllyLookDirection final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       OtherAlly;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         Direction;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBattleSpotIndex_BattleSpotIndex;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         Temp_byte_Variable_1;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         Temp_byte_Variable_2;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         Temp_byte_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         Temp_byte_Variable_4;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBattleSpotIndex_BattleSpotIndex_1;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         K2Node_Select_Default_1;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_ComputeAllyLookDirection) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_ComputeAllyLookDirection");
static_assert(sizeof(ABP_Battle_Global_C_ComputeAllyLookDirection) == 0x000028, "Wrong size on ABP_Battle_Global_C_ComputeAllyLookDirection");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, OtherAlly) == 0x000000, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::OtherAlly' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Direction) == 0x000008, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Direction' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Temp_int_Variable) == 0x00000C, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, CallFunc_GetBattleSpotIndex_BattleSpotIndex) == 0x000010, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::CallFunc_GetBattleSpotIndex_BattleSpotIndex' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Temp_byte_Variable) == 0x000014, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, CallFunc_InRange_IntInt_ReturnValue) == 0x000015, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Temp_byte_Variable_1) == 0x000016, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Temp_byte_Variable_2) == 0x000017, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Temp_int_Variable_1) == 0x000018, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Temp_byte_Variable_3) == 0x00001C, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, K2Node_Select_Default) == 0x00001D, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, Temp_byte_Variable_4) == 0x00001E, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, CallFunc_GetBattleSpotIndex_BattleSpotIndex_1) == 0x000020, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::CallFunc_GetBattleSpotIndex_BattleSpotIndex_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ComputeAllyLookDirection, K2Node_Select_Default_1) == 0x000024, "Member 'ABP_Battle_Global_C_ComputeAllyLookDirection::K2Node_Select_Default_1' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.Debug Print Text
// 0x0098 (0x0098 - 0x0000)
struct ABP_Battle_Global_C_Debug_Print_Text final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Bool;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Same_Value;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SameBool;                                          // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
};
static_assert(alignof(ABP_Battle_Global_C_Debug_Print_Text) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_Debug_Print_Text");
static_assert(sizeof(ABP_Battle_Global_C_Debug_Print_Text) == 0x000098, "Wrong size on ABP_Battle_Global_C_Debug_Print_Text");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, Value) == 0x000000, "Member 'ABP_Battle_Global_C_Debug_Print_Text::Value' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, Text) == 0x000008, "Member 'ABP_Battle_Global_C_Debug_Print_Text::Text' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, Bool) == 0x000018, "Member 'ABP_Battle_Global_C_Debug_Print_Text::Bool' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, Same_Value) == 0x000020, "Member 'ABP_Battle_Global_C_Debug_Print_Text::Same_Value' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, SameBool) == 0x000028, "Member 'ABP_Battle_Global_C_Debug_Print_Text::SameBool' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'ABP_Battle_Global_C_Debug_Print_Text::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, K2Node_MakeArray_Array) == 0x000078, "Member 'ABP_Battle_Global_C_Debug_Print_Text::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_Debug_Print_Text, CallFunc_Format_ReturnValue) == 0x000088, "Member 'ABP_Battle_Global_C_Debug_Print_Text::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.ExecuteUbergraph_ABP_Battle_Global
// 0x0870 (0x0870 - 0x0000)
struct ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_2;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_3;                              // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_3; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_4;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_4; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_5;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_5; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_6; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_6;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_7; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_7;     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_6;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_7;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_8;                              // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_9;                              // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_10;                             // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_11;                             // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_12;                             // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_8; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_13;                             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_8;     // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_9; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10; // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_9;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_10; // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_10;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_14;                             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11; // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_11; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_11;    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_15;                             // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_16;                             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_17;                             // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_18;                             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_19;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_20;                             // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_21;                             // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_22;                             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_23;                             // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_24;                             // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_25;                             // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0120(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_1;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_26;                             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_27;                             // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_2;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_28;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_3;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_29;                             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_4;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_30;                             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_12; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_12;    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_5;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_31;                             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x2];                                      // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13; // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_13; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_13;    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_14; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_14;    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_32;                             // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_6;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_33;                             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_7;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_15; // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_15;    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_34;                             // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_8;                           // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x01D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x01DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_16; // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16; // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_16;    // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x01EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EF[0x1];                                      // 0x01EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x01F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x01F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_35;                             // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_9;                           // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_36;                             // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20E[0x2];                                      // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_10;                          // 0x0210(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1; // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_37;                             // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_11;                          // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_38;                             // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_17; // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_18; // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_12;                          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_17;    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_18; // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_19; // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_18;    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_20; // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_19; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_39;                             // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_19;    // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_13;                          // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x0257(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x025B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_40;                             // 0x025F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0268(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0270(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_2;                            // 0x0278(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_3;                            // 0x0280(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_41;                             // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_14;                          // 0x0290(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_42;                             // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_43;                             // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_15;                          // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x029B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_44;                             // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29E[0x2];                                      // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_16;                          // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_45;                             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_17;                          // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_46;                             // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_47;                             // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_48;                             // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB[0x5];                                      // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_18;                          // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_19;                          // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_4;                            // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_5;                            // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_6;                            // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_7;                            // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_49;                             // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_20;                          // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_50;                             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_51;                             // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_52;                             // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_53;                             // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_54;                             // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_55;                             // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_56;                             // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_57;                             // 0x0307(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_21;                          // 0x0308(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_58;                             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_22;                          // 0x0318(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_59;                             // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_60;                             // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_23;                          // 0x0328(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_24;                          // 0x0330(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_61;                             // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_62;                             // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x2];                                      // 0x033A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_25;                          // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_26;                          // 0x0348(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_63;                             // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_27;                          // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_64;                             // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_363[0x5];                                      // 0x0363(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_28;                          // 0x0368(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_65;                             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_66;                             // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_67;                             // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0x5];                                      // 0x0373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_29;                          // 0x0378(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_30;                          // 0x0380(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_68;                             // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_69;                             // 0x0393(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_1;        // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_31;                          // 0x0398(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_70;                             // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_32;                          // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x03D8(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x03F0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0438(0x0010)(ReferenceParm)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0448(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_462[0x6];                                      // 0x0462(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_ActionsManager_C*              CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0470(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0490(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless; // 0x04C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D6[0x2];                                      // 0x04D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_71;                             // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0x4];                                      // 0x04E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_33;                          // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0512(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_513[0x5];                                      // 0x0513(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_34;                          // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C[0x4];                                      // 0x052C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x053B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_571[0x7];                                      // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              K2Node_Select_Default_35;                          // 0x05C8(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_GetCurrentHPPercentage_Percent01_1;       // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E1[0x7];                                      // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F9[0x7];                                      // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_3;            // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLookAtComponent_C*            CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0628(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0631(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPlayMode_ReturnValue;                 // 0x0632(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_72;                             // 0x0633(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless_1; // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_36;                          // 0x0648(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              Temp_byte_Variable_73;                             // 0x0652(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_653[0x5];                                      // 0x0653(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_37;                          // 0x0658(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0662(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0663(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_4;            // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672[0x2];                                      // 0x0672(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_20; // 0x0674(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_20;    // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67A[0x6];                                      // 0x067A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_5;            // 0x0680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UseCounteredIdle;               // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless_2; // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_699[0x3];                                      // 0x0699(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator2_ImplicitCast;         // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_8_ImplicitCast; // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator3_ImplicitCast;         // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AC[0x4];                                      // 0x06AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator1_ImplicitCast_1;       // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator2_ImplicitCast_1;       // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_11_ImplicitCast; // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator3_ImplicitCast_1;       // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1;  // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_2;  // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3;  // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_3;  // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_NewEnumerator0_ImplicitCast_1;       // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_70C[0x4];                                      // 0x070C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4;  // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_4;  // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5;  // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_5;  // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_6;  // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6;  // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7;  // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_7;  // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8;  // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_8;  // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9;  // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_9;  // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10; // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_10; // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11; // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_11; // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12; // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_12; // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_13; // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_13; // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_14; // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_14; // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_15; // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_15; // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_16; // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_16; // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_17; // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_17; // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_18; // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_18; // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_19; // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_20; // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_19; // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_12_ImplicitCast; // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_9_ImplicitCast; // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84C[0x4];                                      // 0x084C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Tired_Anim_Playrate_ImplicitCast; // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TiredAnimation_Additive_Alpha_ImplicitCast; // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LookAlpha_ImplicitCast;         // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_20; // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global");
static_assert(sizeof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global) == 0x000870, "Wrong size on ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, EntryPoint) == 0x000000, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000018, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable) == 0x000020, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_1) == 0x000021, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue) == 0x000024, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000028, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000038, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000040, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000048, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000050, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000054, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_2) == 0x000055, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_3) == 0x000056, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue) == 0x000057, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue) == 0x000059, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1) == 0x00005C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2) == 0x000060, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000064, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x00006C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000070, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000071, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000074, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_3) == 0x000078, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x00007C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00007D, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000080, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_4) == 0x000088, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000089, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_2) == 0x00008A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00008B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_1) == 0x00008C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_2) == 0x00008D, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_1) == 0x00008E, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_2) == 0x00008F, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_3) == 0x000090, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x000094, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_3) == 0x000098, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_4) == 0x00009C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x0000A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_5) == 0x0000A1, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x0000A4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_5) == 0x0000A8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_6) == 0x0000AC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x0000B0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x0000B4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_6) == 0x0000B8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000B9, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_4) == 0x0000BA, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_5) == 0x0000BB, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000BC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_6) == 0x0000BD, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000BE, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_7) == 0x0000BF, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7) == 0x0000C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_7) == 0x0000C4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_7) == 0x0000C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_6) == 0x0000C9, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000CA, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_7) == 0x0000CB, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_6) == 0x0000CC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_8) == 0x0000CD, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_7) == 0x0000CE, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_9) == 0x0000CF, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_3) == 0x0000D0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_4) == 0x0000D1, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D2, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_10) == 0x0000D3, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_5) == 0x0000D4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_8) == 0x0000D5, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_6) == 0x0000D6, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_11) == 0x0000D7, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_12) == 0x0000D9, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTime_ReturnValue) == 0x0000DC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8) == 0x0000E0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_8) == 0x0000E4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_13) == 0x0000E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_8) == 0x0000E9, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000EA, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_9) == 0x0000EB, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9) == 0x0000EC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_9) == 0x0000F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10) == 0x0000F4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_9) == 0x0000F8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_10) == 0x0000FC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_10) == 0x000100, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_14) == 0x000101, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000102, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11) == 0x000104, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_10) == 0x000108, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_11) == 0x00010C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_11) == 0x000110, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000111, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000112, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_15) == 0x000113, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_16) == 0x000114, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000115, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_7) == 0x000116, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_17) == 0x000117, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_18) == 0x000118, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_19) == 0x000119, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_20) == 0x00011A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_21) == 0x00011B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_22) == 0x00011C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_23) == 0x00011D, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_24) == 0x00011E, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_25) == 0x00011F, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default) == 0x000120, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_1) == 0x000128, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_26) == 0x000130, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_27) == 0x000131, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_2) == 0x000138, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_28) == 0x000140, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12) == 0x000144, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_3) == 0x000148, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_29) == 0x000150, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_4) == 0x000158, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_30) == 0x000160, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_12) == 0x000164, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_12) == 0x000168, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_5) == 0x000170, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_8) == 0x000178, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_31) == 0x000179, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13) == 0x00017C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_13) == 0x000180, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_13) == 0x000184, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14) == 0x000188, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_14) == 0x00018C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_14) == 0x000190, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_9) == 0x000191, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_32) == 0x000192, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_6) == 0x000198, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_33) == 0x0001A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_7) == 0x0001A8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0001B0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15) == 0x0001B4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_11) == 0x0001B8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_15) == 0x0001BC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_10) == 0x0001C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_15) == 0x0001C1, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x0001C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0001D1, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_34) == 0x0001D2, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_8) == 0x0001D3, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0001D4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_12) == 0x0001D5, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_bool_Variable) == 0x0001D6, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_8) == 0x0001D7, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_13) == 0x0001D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_9) == 0x0001D9, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_10) == 0x0001DA, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_14) == 0x0001DB, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_15) == 0x0001DC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_11) == 0x0001DD, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_11) == 0x0001DE, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_16) == 0x0001DF, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_16) == 0x0001E0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x0001E4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16) == 0x0001E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_12) == 0x0001EC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_16) == 0x0001ED, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_13) == 0x0001EE, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17) == 0x0001F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_17) == 0x0001F4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x0001F5, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_12) == 0x0001F6, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_13) == 0x0001F7, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x0001F8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_real_Variable) == 0x000200, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_14) == 0x000208, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_35) == 0x000209, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_9) == 0x00020A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_14) == 0x00020B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_36) == 0x00020C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00020D, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_10) == 0x000210, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_bool_Variable_1) == 0x000218, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x000219, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x00021A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x00021B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1) == 0x000220, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_bSuccess_1) == 0x000228, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_37) == 0x000229, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_37' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x00022A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_11) == 0x00022B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_18) == 0x00022C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_15) == 0x00022D, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x00022E, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_38) == 0x00022F, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_38' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_17) == 0x000230, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_18) == 0x000234, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_12) == 0x000238, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_17) == 0x000239, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_19) == 0x00023A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_16) == 0x00023B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x00023C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_18) == 0x000240, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_19) == 0x000244, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_18) == 0x000248, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_20) == 0x00024C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_19) == 0x000250, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_39) == 0x000254, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_39' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_19) == 0x000255, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_13) == 0x000256, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_20) == 0x000257, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_15) == 0x000258, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x000259, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x00025A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_16) == 0x00025B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x00025C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x00025D, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x00025E, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_40) == 0x00025F, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_40' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x000260, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x000261, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable) == 0x000268, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable_1) == 0x000270, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable_2) == 0x000278, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable_3) == 0x000280, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_41) == 0x000288, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_41' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_14) == 0x000290, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_42) == 0x000298, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_42' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_43) == 0x000299, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_43' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_15) == 0x00029A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_21) == 0x00029B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanOR_ReturnValue_17) == 0x00029C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_44) == 0x00029D, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_44' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_16) == 0x0002A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_45) == 0x0002A8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_45' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x0002A9, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_17) == 0x0002B0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_46) == 0x0002B8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_46' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_47) == 0x0002B9, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_47' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_48) == 0x0002BA, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_48' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_18) == 0x0002C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_19) == 0x0002C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable_4) == 0x0002D0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable_5) == 0x0002D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable_6) == 0x0002E0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_object_Variable_7) == 0x0002E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_49) == 0x0002F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_49' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_20) == 0x0002F8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_50) == 0x000300, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_50' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_51) == 0x000301, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_51' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_52) == 0x000302, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_52' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_53) == 0x000303, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_53' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_54) == 0x000304, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_54' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_55) == 0x000305, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_55' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_56) == 0x000306, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_56' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_57) == 0x000307, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_57' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_21) == 0x000308, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_58) == 0x000310, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_58' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_22) == 0x000318, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_59) == 0x000320, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_59' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_60) == 0x000321, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_60' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_23) == 0x000328, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_24) == 0x000330, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_61) == 0x000338, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_61' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_62) == 0x000339, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_62' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_25) == 0x00033C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000340, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_26) == 0x000348, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Not_PreBool_ReturnValue_22) == 0x000350, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_63) == 0x000351, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_63' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_27) == 0x000354, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000358, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_17) == 0x000360, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_18) == 0x000361, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_64) == 0x000362, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_64' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_28) == 0x000368, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_65) == 0x000370, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_65' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_66) == 0x000371, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_66' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_67) == 0x000372, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_67' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_29) == 0x000378, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_30) == 0x000380, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000390, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_19) == 0x000391, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_68) == 0x000392, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_68' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_69) == 0x000393, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_69' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetRelevantAnimTime_ReturnValue_1) == 0x000394, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetRelevantAnimTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_31) == 0x000398, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Event_DeltaTimeX) == 0x0003A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_TryGetPawnOwner_ReturnValue) == 0x0003A8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue) == 0x0003B0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x0003B8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_70) == 0x0003C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_70' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_1) == 0x0003C1, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_32) == 0x0003C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_32' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x0003D0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0003D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_2) == 0x0003E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_MakeStruct_FormatArgumentData) == 0x0003F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_MakeArray_Array) == 0x000438, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetComponentByClass_ReturnValue) == 0x000448, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Format_ReturnValue) == 0x000450, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_3) == 0x000460, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_4) == 0x000461, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetPlayerController_ReturnValue) == 0x000468, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000470, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_5) == 0x000478, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000480, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_6) == 0x000488, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetMovementComponent_ReturnValue) == 0x000490, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsFalling_ReturnValue) == 0x000498, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetVelocity_ReturnValue) == 0x0004A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_VSize_ReturnValue) == 0x0004B8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless) == 0x0004C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_bSuccess_2) == 0x0004C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Array_Length_ReturnValue) == 0x0004CC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Array_Length_ReturnValue_1) == 0x0004D0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_IntInt_ReturnValue) == 0x0004D4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0004D5, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Array_Length_ReturnValue_2) == 0x0004D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Array_Length_ReturnValue_3) == 0x0004DC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0004E0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0004E1, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_71) == 0x0004E2, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_71' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0004E3, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_33) == 0x0004E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_33' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0004F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0004F8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_7) == 0x000500, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_RandomFloatInRange_ReturnValue) == 0x000508, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_8) == 0x000510, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_9) == 0x000511, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_10) == 0x000512, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000518, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_34) == 0x000520, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_34' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetPlayLength_ReturnValue) == 0x000528, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000530, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_11) == 0x000538, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_12) == 0x000539, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_13) == 0x00053A, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_14) == 0x00053B, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000540, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_MapRangeClamped_ReturnValue) == 0x000548, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000550, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Abs_ReturnValue) == 0x000558, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000560, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_SelectFloat_ReturnValue) == 0x000568, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_15) == 0x000570, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000578, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Concat_StrStr_ReturnValue) == 0x000588, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_SelectFloat_ReturnValue_1) == 0x000598, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x0005A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0005B0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_20) == 0x0005C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_35) == 0x0005C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_35' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetCurrentHPPercentage_Percent01_1) == 0x0005D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetCurrentHPPercentage_Percent01_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0005E0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Abs_ReturnValue_1) == 0x0005E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_FClamp_ReturnValue) == 0x0005F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0005F8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000600, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_BooleanAND_ReturnValue_21) == 0x000608, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000610, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000618, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_TryGetPawnOwner_ReturnValue_3) == 0x000620, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_TryGetPawnOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000628, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_16) == 0x000630, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_17) == 0x000631, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsInPlayMode_ReturnValue) == 0x000632, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsInPlayMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_72) == 0x000633, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_72' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless_1) == 0x000638, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_bSuccess_3) == 0x000640, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_36) == 0x000648, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_36' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_18) == 0x000650, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_19) == 0x000651, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, Temp_byte_Variable_73) == 0x000652, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::Temp_byte_Variable_73' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_Default_37) == 0x000658, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_Default_37' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_20) == 0x000660, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_21) == 0x000661, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_22) == 0x000662, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_23) == 0x000663, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_TryGetPawnOwner_ReturnValue_4) == 0x000668, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_TryGetPawnOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_24) == 0x000670, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_25) == 0x000671, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_20) == 0x000674, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_IsValid_ReturnValue_26) == 0x000678, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_ReturnValue_20) == 0x000679, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_TryGetPawnOwner_ReturnValue_5) == 0x000680, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_TryGetPawnOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_CustomEvent_UseCounteredIdle) == 0x000688, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_CustomEvent_UseCounteredIdle' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless_2) == 0x000690, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_AsBP_J_RPG_Enemy_World_Base_Seamless_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_DynamicCast_bSuccess_4) == 0x000698, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x00069C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator2_ImplicitCast) == 0x0006A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_StructMemberSet___FloatProperty_8_ImplicitCast) == 0x0006A4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_StructMemberSet___FloatProperty_8_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator3_ImplicitCast) == 0x0006A8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator3_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x0006B0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x0006B8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator1_ImplicitCast_1) == 0x0006BC, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator1_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator2_ImplicitCast_1) == 0x0006C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator2_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_StructMemberSet___FloatProperty_11_ImplicitCast) == 0x0006C4, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_StructMemberSet___FloatProperty_11_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator3_ImplicitCast_1) == 0x0006C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator3_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0006D0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1) == 0x0006D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_2) == 0x0006E0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x0006E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x0006F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3) == 0x0006F8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_3) == 0x000700, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_Select_NewEnumerator0_ImplicitCast_1) == 0x000708, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_Select_NewEnumerator0_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4) == 0x000710, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_4) == 0x000718, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5) == 0x000720, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_5) == 0x000728, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_6) == 0x000730, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6) == 0x000738, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7) == 0x000740, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_7) == 0x000748, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000750, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8) == 0x000758, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_8) == 0x000760, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9) == 0x000768, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_9) == 0x000770, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10) == 0x000778, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_10) == 0x000780, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11) == 0x000788, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_11) == 0x000790, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12) == 0x000798, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_12) == 0x0007A0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_13) == 0x0007A8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_13) == 0x0007B0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_14) == 0x0007B8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_14) == 0x0007C0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_15) == 0x0007C8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_15) == 0x0007D0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_16) == 0x0007D8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_16) == 0x0007E0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_17) == 0x0007E8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_17) == 0x0007F0, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_18) == 0x0007F8, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_18) == 0x000800, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_19) == 0x000808, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_20) == 0x000810, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_19) == 0x000818, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000820, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_StructMemberSet___FloatProperty_12_ImplicitCast) == 0x000828, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_StructMemberSet___FloatProperty_12_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000830, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_StructMemberSet___FloatProperty_9_ImplicitCast) == 0x000838, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_StructMemberSet___FloatProperty_9_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000840, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_Delay_Duration_ImplicitCast) == 0x000848, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x000850, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_VariableSet_Tired_Anim_Playrate_ImplicitCast) == 0x000858, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_VariableSet_Tired_Anim_Playrate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_VariableSet_TiredAnimation_Additive_Alpha_ImplicitCast) == 0x00085C, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_VariableSet_TiredAnimation_Additive_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, K2Node_VariableSet_LookAlpha_ImplicitCast) == 0x000860, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::K2Node_VariableSet_LookAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_20) == 0x000868, "Member 'ABP_Battle_Global_C_ExecuteUbergraph_ABP_Battle_Global::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast_20' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.GetBattleStartAnim
// 0x0018 (0x0018 - 0x0000)
struct ABP_Battle_Global_C_GetBattleStartAnim final
{
public:
	TArray<class UAnimSequenceBase*>              Anim_BattleStart_Intro_0;                          // 0x0000(0x0010)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_GetBattleStartAnim) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_GetBattleStartAnim");
static_assert(sizeof(ABP_Battle_Global_C_GetBattleStartAnim) == 0x000018, "Wrong size on ABP_Battle_Global_C_GetBattleStartAnim");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleStartAnim, Anim_BattleStart_Intro_0) == 0x000000, "Member 'ABP_Battle_Global_C_GetBattleStartAnim::Anim_BattleStart_Intro_0' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleStartAnim, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'ABP_Battle_Global_C_GetBattleStartAnim::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleStartAnim, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000011, "Member 'ABP_Battle_Global_C_GetBattleStartAnim::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.GetBattleTurnIntroStartAnimFromState
// 0x0020 (0x0020 - 0x0000)
struct ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState final
{
public:
	E_EnemyIdleState                              IdleStateType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              AnimList;                                          // 0x0008(0x0010)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState");
static_assert(sizeof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState) == 0x000020, "Wrong size on ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState, IdleStateType) == 0x000000, "Member 'ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState::IdleStateType' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState, AnimList) == 0x000008, "Member 'ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState::AnimList' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.GetBattleTurnIntroStartAnimFromState_NoExec
// 0x0020 (0x0020 - 0x0000)
struct ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec final
{
public:
	E_EnemyIdleState                              IdleStateType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              AnimList;                                          // 0x0008(0x0010)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec");
static_assert(sizeof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec) == 0x000020, "Wrong size on ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec, IdleStateType) == 0x000000, "Member 'ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec::IdleStateType' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec, AnimList) == 0x000008, "Member 'ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec::AnimList' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ABP_Battle_Global_C_GetBattleTurnIntroStartAnimFromState_NoExec::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.GetBreakAnimFromState
// 0x0020 (0x0020 - 0x0000)
struct ABP_Battle_Global_C_GetBreakAnimFromState final
{
public:
	E_EnemyIdleState                              IdleStateType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              AnimList;                                          // 0x0008(0x0010)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_GetBreakAnimFromState) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_GetBreakAnimFromState");
static_assert(sizeof(ABP_Battle_Global_C_GetBreakAnimFromState) == 0x000020, "Wrong size on ABP_Battle_Global_C_GetBreakAnimFromState");
static_assert(offsetof(ABP_Battle_Global_C_GetBreakAnimFromState, IdleStateType) == 0x000000, "Member 'ABP_Battle_Global_C_GetBreakAnimFromState::IdleStateType' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBreakAnimFromState, AnimList) == 0x000008, "Member 'ABP_Battle_Global_C_GetBreakAnimFromState::AnimList' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetBreakAnimFromState, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ABP_Battle_Global_C_GetBreakAnimFromState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.GetHitAnimFromState
// 0x0030 (0x0030 - 0x0000)
struct ABP_Battle_Global_C_GetHitAnimFromState final
{
public:
	E_EnemyIdleState                              IdleStateType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HitReact_Anim_Type                          HitReactType;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Anim_Hit_Normal_IdleMain;                          // 0x0008(0x0010)(Parm, OutParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_2;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_3;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_4;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_5;           // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_6;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_7;           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_8;           // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_9;           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_10;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_11;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_12;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_GetHitAnimFromState) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_GetHitAnimFromState");
static_assert(sizeof(ABP_Battle_Global_C_GetHitAnimFromState) == 0x000030, "Wrong size on ABP_Battle_Global_C_GetHitAnimFromState");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, IdleStateType) == 0x000000, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::IdleStateType' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, HitReactType) == 0x000001, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::HitReactType' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, Anim_Hit_Normal_IdleMain) == 0x000008, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::Anim_Hit_Normal_IdleMain' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000019, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001A, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, K2Node_SwitchEnum_CmpSuccess_2) == 0x00001B, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, K2Node_SwitchEnum_CmpSuccess_3) == 0x00001C, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, K2Node_SwitchEnum_CmpSuccess_4) == 0x00001D, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x00001F, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_2) == 0x000020, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_3) == 0x000021, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_4) == 0x000022, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_5) == 0x000023, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_6) == 0x000024, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_7) == 0x000025, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_8) == 0x000026, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_9) == 0x000027, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_10) == 0x000028, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_11) == 0x000029, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_GetHitAnimFromState, CallFunc_Array_IsNotEmpty_ReturnValue_12) == 0x00002A, "Member 'ABP_Battle_Global_C_GetHitAnimFromState::CallFunc_Array_IsNotEmpty_ReturnValue_12' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.RandomizeBoneScales
// 0x00B8 (0x00B8 - 0x0000)
struct ABP_Battle_Global_C_RandomizeBoneScales final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_RandomVariation_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_RandomizeBoneScales) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_RandomizeBoneScales");
static_assert(sizeof(ABP_Battle_Global_C_RandomizeBoneScales) == 0x0000B8, "Wrong size on ABP_Battle_Global_C_RandomizeBoneScales");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_MakeVector_ReturnValue_1) == 0x000018, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_MakeVector_ReturnValue_2) == 0x000030, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_MakeVector_ReturnValue_3) == 0x000048, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_MakeVector_ReturnValue_4) == 0x000060, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_RandomFloatInRange_ReturnValue) == 0x000078, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_GetComponentByClass_ReturnValue) == 0x000088, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000090, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0000A0, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x0000A8, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_RandomizeBoneScales, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x0000B0, "Member 'ABP_Battle_Global_C_RandomizeBoneScales::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.SelectBattleStartAnim
// 0x0070 (0x0070 - 0x0000)
struct ABP_Battle_Global_C_SelectBattleStartAnim final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              CallFunc_GetBattleStartAnim_Anim_BattleStart_Intro; // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_Array_Random_OutItem;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0060(0x0010)(NoDestructor)
};
static_assert(alignof(ABP_Battle_Global_C_SelectBattleStartAnim) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_SelectBattleStartAnim");
static_assert(sizeof(ABP_Battle_Global_C_SelectBattleStartAnim) == 0x000070, "Wrong size on ABP_Battle_Global_C_SelectBattleStartAnim");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, Context) == 0x000000, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::Context' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, Node) == 0x000010, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::Node' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, CallFunc_GetBattleStartAnim_Anim_BattleStart_Intro) == 0x000038, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::CallFunc_GetBattleStartAnim_Anim_BattleStart_Intro' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000048, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, CallFunc_Array_Random_OutItem) == 0x000050, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, CallFunc_Array_Random_OutIndex) == 0x000058, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleStartAnim, CallFunc_SetSequence_ReturnValue) == 0x000060, "Member 'ABP_Battle_Global_C_SelectBattleStartAnim::CallFunc_SetSequence_ReturnValue' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.SelectBattleTurnIntroStartAnim
// 0x0068 (0x0068 - 0x0000)
struct ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              CallFunc_GetBattleTurnIntroStartAnimFromState_AnimList; // 0x0038(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Random_OutItem;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0058(0x0010)(NoDestructor)
};
static_assert(alignof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim");
static_assert(sizeof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim) == 0x000068, "Wrong size on ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, Context) == 0x000000, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::Context' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, Node) == 0x000010, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::Node' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, CallFunc_GetBattleTurnIntroStartAnimFromState_AnimList) == 0x000038, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::CallFunc_GetBattleTurnIntroStartAnimFromState_AnimList' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, CallFunc_Array_Random_OutItem) == 0x000048, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, CallFunc_Array_Random_OutIndex) == 0x000050, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000054, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim, CallFunc_SetSequence_ReturnValue) == 0x000058, "Member 'ABP_Battle_Global_C_SelectBattleTurnIntroStartAnim::CallFunc_SetSequence_ReturnValue' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.SelectDeathAnim
// 0x0058 (0x0058 - 0x0000)
struct ABP_Battle_Global_C_SelectDeathAnim final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CallFunc_Array_Random_OutItem;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0048(0x0010)(NoDestructor)
};
static_assert(alignof(ABP_Battle_Global_C_SelectDeathAnim) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_SelectDeathAnim");
static_assert(sizeof(ABP_Battle_Global_C_SelectDeathAnim) == 0x000058, "Wrong size on ABP_Battle_Global_C_SelectDeathAnim");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, Context) == 0x000000, "Member 'ABP_Battle_Global_C_SelectDeathAnim::Context' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, Node) == 0x000010, "Member 'ABP_Battle_Global_C_SelectDeathAnim::Node' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Battle_Global_C_SelectDeathAnim::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Battle_Global_C_SelectDeathAnim::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000031, "Member 'ABP_Battle_Global_C_SelectDeathAnim::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, CallFunc_Array_Random_OutItem) == 0x000038, "Member 'ABP_Battle_Global_C_SelectDeathAnim::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, CallFunc_Array_Random_OutIndex) == 0x000040, "Member 'ABP_Battle_Global_C_SelectDeathAnim::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectDeathAnim, CallFunc_SetSequence_ReturnValue) == 0x000048, "Member 'ABP_Battle_Global_C_SelectDeathAnim::CallFunc_SetSequence_ReturnValue' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.SelectHitAnim
// 0x0068 (0x0068 - 0x0000)
struct ABP_Battle_Global_C_SelectHitAnim final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0038(0x0010)(NoDestructor)
	TArray<class UAnimSequenceBase*>              CallFunc_GetHitAnimFromState_Anim_Hit_Normal_IdleMain; // 0x0048(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Random_OutItem;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_SelectHitAnim) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_SelectHitAnim");
static_assert(sizeof(ABP_Battle_Global_C_SelectHitAnim) == 0x000068, "Wrong size on ABP_Battle_Global_C_SelectHitAnim");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, Context) == 0x000000, "Member 'ABP_Battle_Global_C_SelectHitAnim::Context' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, Node) == 0x000010, "Member 'ABP_Battle_Global_C_SelectHitAnim::Node' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Battle_Global_C_SelectHitAnim::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Battle_Global_C_SelectHitAnim::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, CallFunc_SetSequence_ReturnValue) == 0x000038, "Member 'ABP_Battle_Global_C_SelectHitAnim::CallFunc_SetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, CallFunc_GetHitAnimFromState_Anim_Hit_Normal_IdleMain) == 0x000048, "Member 'ABP_Battle_Global_C_SelectHitAnim::CallFunc_GetHitAnimFromState_Anim_Hit_Normal_IdleMain' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, CallFunc_Array_Random_OutItem) == 0x000058, "Member 'ABP_Battle_Global_C_SelectHitAnim::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, CallFunc_Array_Random_OutIndex) == 0x000060, "Member 'ABP_Battle_Global_C_SelectHitAnim::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectHitAnim, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000064, "Member 'ABP_Battle_Global_C_SelectHitAnim::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.SelectIdleBreakAnim
// 0x0068 (0x0068 - 0x0000)
struct ABP_Battle_Global_C_SelectIdleBreakAnim final
{
public:
	struct FAnimUpdateContext                     Context;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FAnimNodeReference                     Node;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FSequencePlayerReference               CallFunc_ConvertToSequencePlayerPure_SequencePlayer; // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_ConvertToSequencePlayerPure_Result;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              CallFunc_GetBreakAnimFromState_AnimList;           // 0x0038(0x0010)(ReferenceParm)
	class UAnimSequenceBase*                      CallFunc_Array_Random_OutItem;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSequencePlayerReference               CallFunc_SetSequence_ReturnValue;                  // 0x0058(0x0010)(NoDestructor)
};
static_assert(alignof(ABP_Battle_Global_C_SelectIdleBreakAnim) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_SelectIdleBreakAnim");
static_assert(sizeof(ABP_Battle_Global_C_SelectIdleBreakAnim) == 0x000068, "Wrong size on ABP_Battle_Global_C_SelectIdleBreakAnim");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, Context) == 0x000000, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::Context' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, Node) == 0x000010, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::Node' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, CallFunc_ConvertToSequencePlayerPure_SequencePlayer) == 0x000020, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::CallFunc_ConvertToSequencePlayerPure_SequencePlayer' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, CallFunc_ConvertToSequencePlayerPure_Result) == 0x000030, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::CallFunc_ConvertToSequencePlayerPure_Result' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, CallFunc_GetBreakAnimFromState_AnimList) == 0x000038, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::CallFunc_GetBreakAnimFromState_AnimList' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, CallFunc_Array_Random_OutItem) == 0x000048, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, CallFunc_Array_Random_OutIndex) == 0x000050, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000054, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_SelectIdleBreakAnim, CallFunc_SetSequence_ReturnValue) == 0x000058, "Member 'ABP_Battle_Global_C_SelectIdleBreakAnim::CallFunc_SetSequence_ReturnValue' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.UpdateBattleEnemy
// 0x0108 (0x0108 - 0x0000)
struct ABP_Battle_Global_C_UpdateBattleEnemy final
{
public:
	bool                                          CallFunc_GetIsBeingCountered_IsBeingCountered;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1;     // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         CallFunc_ComputeAllyLookDirection_Direction;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLookAtComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimCommunication_C> K2Node_DynamicCast_AsBPI_Anim_Communication;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EBattleTurnState, class UAnimSequenceBase*> CallFunc_GetBattlePostureAnimations_BattlePostureAnimations; // 0x0068(0x0050)()
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_AnimCommunication_C> K2Node_DynamicCast_AsBPI_Anim_Communication_1;  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_GetCurrentBattlePosture_CurrentBattlePosture; // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimCommunication_C> K2Node_DynamicCast_AsBPI_Anim_Communication_2;  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CallFunc_GetCurrentBattlePosture_CurrentBattlePosture_1; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AnimCommunication_C> K2Node_DynamicCast_AsBPI_Anim_Communication_3;  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsDefending_Defending;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_LookAlpha_ImplicitCast;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_UpdateBattleEnemy) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_UpdateBattleEnemy");
static_assert(sizeof(ABP_Battle_Global_C_UpdateBattleEnemy) == 0x000108, "Wrong size on ABP_Battle_Global_C_UpdateBattleEnemy");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_GetIsBeingCountered_IsBeingCountered) == 0x000000, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_GetIsBeingCountered_IsBeingCountered' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000001, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000005, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsValid_ReturnValue_2) == 0x000006, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1) == 0x000007, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_Array_Get_Item) == 0x000010, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_ComputeAllyLookDirection_Direction) == 0x000018, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_ComputeAllyLookDirection_Direction' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_Array_Contains_ReturnValue) == 0x000021, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsValid_ReturnValue_3) == 0x000022, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000028, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsValid_ReturnValue_4) == 0x000038, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x000040, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_AsBPI_Anim_Communication) == 0x000050, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_AsBPI_Anim_Communication' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_GetBattlePostureAnimations_BattlePostureAnimations) == 0x000068, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_GetBattlePostureAnimations_BattlePostureAnimations' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x0000B8, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_AsBPI_Anim_Communication_1) == 0x0000C0, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_AsBPI_Anim_Communication_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_GetCurrentBattlePosture_CurrentBattlePosture) == 0x0000D1, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_GetCurrentBattlePosture_CurrentBattlePosture' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsValid_ReturnValue_5) == 0x0000D2, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_AsBPI_Anim_Communication_2) == 0x0000D8, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_AsBPI_Anim_Communication_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_GetCurrentBattlePosture_CurrentBattlePosture_1) == 0x0000E9, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_GetCurrentBattlePosture_CurrentBattlePosture_1' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_IsValid_ReturnValue_6) == 0x0000EA, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_AsBPI_Anim_Communication_3) == 0x0000F0, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_AsBPI_Anim_Communication_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_DynamicCast_bSuccess_3) == 0x000100, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, CallFunc_GetIsDefending_Defending) == 0x000101, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::CallFunc_GetIsDefending_Defending' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateBattleEnemy, K2Node_VariableSet_LookAlpha_ImplicitCast) == 0x000104, "Member 'ABP_Battle_Global_C_UpdateBattleEnemy::K2Node_VariableSet_LookAlpha_ImplicitCast' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.UpdateCounteredIdleStatus
// 0x0001 (0x0001 - 0x0000)
struct ABP_Battle_Global_C_UpdateCounteredIdleStatus final
{
public:
	bool                                          UseCounteredIdle_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_UpdateCounteredIdleStatus) == 0x000001, "Wrong alignment on ABP_Battle_Global_C_UpdateCounteredIdleStatus");
static_assert(sizeof(ABP_Battle_Global_C_UpdateCounteredIdleStatus) == 0x000001, "Wrong size on ABP_Battle_Global_C_UpdateCounteredIdleStatus");
static_assert(offsetof(ABP_Battle_Global_C_UpdateCounteredIdleStatus, UseCounteredIdle_0) == 0x000000, "Member 'ABP_Battle_Global_C_UpdateCounteredIdleStatus::UseCounteredIdle_0' has a wrong offset!");

// Function ABP_Battle_Global.ABP_Battle_Global_C.UpdateWorldEnemy
// 0x0050 (0x0050 - 0x0000)
struct ABP_Battle_Global_C_UpdateWorldEnemy final
{
public:
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   SelfAsEnemyWorld;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SmartObjectInteractorComponent_C*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Battle_Global_C_UpdateWorldEnemy) == 0x000008, "Wrong alignment on ABP_Battle_Global_C_UpdateWorldEnemy");
static_assert(sizeof(ABP_Battle_Global_C_UpdateWorldEnemy) == 0x000050, "Wrong size on ABP_Battle_Global_C_UpdateWorldEnemy");
static_assert(offsetof(ABP_Battle_Global_C_UpdateWorldEnemy, SelfAsEnemyWorld) == 0x000000, "Member 'ABP_Battle_Global_C_UpdateWorldEnemy::SelfAsEnemyWorld' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateWorldEnemy, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'ABP_Battle_Global_C_UpdateWorldEnemy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateWorldEnemy, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ABP_Battle_Global_C_UpdateWorldEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateWorldEnemy, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'ABP_Battle_Global_C_UpdateWorldEnemy::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateWorldEnemy, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'ABP_Battle_Global_C_UpdateWorldEnemy::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateWorldEnemy, CallFunc_GetSocketLocation_ReturnValue) == 0x000020, "Member 'ABP_Battle_Global_C_UpdateWorldEnemy::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Battle_Global_C_UpdateWorldEnemy, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'ABP_Battle_Global_C_UpdateWorldEnemy::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

