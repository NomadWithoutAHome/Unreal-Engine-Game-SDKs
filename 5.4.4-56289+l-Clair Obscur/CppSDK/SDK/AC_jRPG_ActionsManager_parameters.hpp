#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_ActionsManager

#include "Basic.hpp"

#include "S_jRPG_Action_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "Engine_structs.hpp"
#include "EAttackType_structs.hpp"
#include "E_jRPG_ActionType_structs.hpp"
#include "S_BalancingTableFloatEntry_structs.hpp"


namespace SDK::Params
{

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.AreAllAlive
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_ActionsManager_C_AreAllAlive final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> NewParam;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          SomeAreAlive;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_AreAllAlive) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_AreAllAlive");
static_assert(sizeof(AC_jRPG_ActionsManager_C_AreAllAlive) == 0x000030, "Wrong size on AC_jRPG_ActionsManager_C_AreAllAlive");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, NewParam) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::NewParam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, SomeAreAlive) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::SomeAreAlive' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, Temp_int_Array_Index_Variable) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, CallFunc_Array_Get_Item) == 0x000020, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000029, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AreAllAlive, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_ActionsManager_C_AreAllAlive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Attack
// 0x0090 (0x0090 - 0x0000)
struct AC_jRPG_ActionsManager_C_Attack final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetBaseDamageType_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIBattleDamageSource_C> CallFunc_MakeDamageBuilder_DamageSource_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamageBuilder_C*              CallFunc_MakeDamageBuilder_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DealDamages_HasHit;                       // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleDamages_C*                    CallFunc_DealDamages_BattleDamages;                // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Attack) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Attack");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Attack) == 0x000090, "Wrong size on AC_jRPG_ActionsManager_C_Attack");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, Temp_int_Array_Index_Variable) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Attack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'AC_jRPG_ActionsManager_C_Attack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000028, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_GetBaseDamageType_ReturnValue) == 0x000048, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_GetBaseDamageType_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_Array_Get_Item) == 0x000058, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_MakeDamageBuilder_DamageSource_CastInput) == 0x000068, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_MakeDamageBuilder_DamageSource_CastInput' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_MakeDamageBuilder_ReturnValue) == 0x000078, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_MakeDamageBuilder_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_DealDamages_HasHit) == 0x000081, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_DealDamages_HasHit' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Attack, CallFunc_DealDamages_BattleDamages) == 0x000088, "Member 'AC_jRPG_ActionsManager_C_Attack::CallFunc_DealDamages_BattleDamages' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.AttackStatCalculation
// 0x00F8 (0x00F8 - 0x0000)
struct AC_jRPG_ActionsManager_C_AttackStatCalculation final
{
public:
	double                                        Power;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CritRate;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CriticalPower;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sharpness;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Defense;                                           // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Luck;                                              // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HP;                                                // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AP;                                                // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable;                                // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_1;                              // 0x0049(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_2;                              // 0x004A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_3;                              // 0x004B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_4;                              // 0x004C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_5;                              // 0x004D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_6;                              // 0x004E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_7;                              // 0x0060(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_StatType                               Temp_byte_Variable_8;                              // 0x0061(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_2;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_3;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_4;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_5;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_6;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_7;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_8;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_8;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_AttackStatCalculation) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_AttackStatCalculation");
static_assert(sizeof(AC_jRPG_ActionsManager_C_AttackStatCalculation) == 0x0000F8, "Wrong size on AC_jRPG_ActionsManager_C_AttackStatCalculation");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Power) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Power' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CritRate) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CritRate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CriticalPower) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CriticalPower' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Sharpness) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Sharpness' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Defense) == 0x000020, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Defense' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Speed) == 0x000028, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Speed' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Luck) == 0x000030, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Luck' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, HP) == 0x000038, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::HP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, AP) == 0x000040, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::AP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable) == 0x000048, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_1) == 0x000049, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_2) == 0x00004A, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_3) == 0x00004B, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_4) == 0x00004C, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_5) == 0x00004D, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_6) == 0x00004E, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_7) == 0x000060, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, Temp_byte_Variable_8) == 0x000061, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value) == 0x000068, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_1) == 0x000078, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_1) == 0x000080, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_2) == 0x000088, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_2) == 0x000090, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_3) == 0x000098, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_3) == 0x0000A0, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_4) == 0x0000A8, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_4) == 0x0000B0, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_5) == 0x0000B8, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_5) == 0x0000C0, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_6) == 0x0000C8, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_6) == 0x0000D0, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_7) == 0x0000D8, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_7) == 0x0000E0, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_Value_8) == 0x0000E8, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_Value_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation, CallFunc_Map_Find_ReturnValue_8) == 0x0000F0, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation::CallFunc_Map_Find_ReturnValue_8' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.AttackStatCalculation_WithPerfection
// 0x00A0 (0x00A0 - 0x0000)
struct AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection final
{
public:
	double                                        Power;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CritRate;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CriticalPower;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sharpness;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_Power;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_CritRate;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_CriticalPower;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_Sharpness;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_Defense;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_Speed;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_Luck;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_HP;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_AttackStatCalculation_AP;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PerfectionMechanicComponent_C*      CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection");
static_assert(sizeof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection) == 0x0000A0, "Wrong size on AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, Power) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::Power' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CritRate) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CritRate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CriticalPower) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CriticalPower' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, Sharpness) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::Sharpness' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_Power) == 0x000028, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_Power' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_CritRate) == 0x000030, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_CritRate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_CriticalPower) == 0x000038, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_CriticalPower' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_Sharpness) == 0x000040, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_Sharpness' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_Defense) == 0x000048, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_Defense' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_Speed) == 0x000050, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_Speed' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_Luck) == 0x000058, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_Luck' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_HP) == 0x000060, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_HP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_AttackStatCalculation_AP) == 0x000068, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_AttackStatCalculation_AP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000078, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000080, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'AC_jRPG_ActionsManager_C_AttackStatCalculation_WithPerfection::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.CallFunctionByName
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_ActionsManager_C_CallFunctionByName final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_CallFunctionByName) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_CallFunctionByName");
static_assert(sizeof(AC_jRPG_ActionsManager_C_CallFunctionByName) == 0x000018, "Wrong size on AC_jRPG_ActionsManager_C_CallFunctionByName");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CallFunctionByName, FunctionName) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_CallFunctionByName::FunctionName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CallFunctionByName, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_CallFunctionByName::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.CheckTargetBuff
// 0x0030 (0x0030 - 0x0000)
struct AC_jRPG_ActionsManager_C_CheckTargetBuff final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Buff;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBuff;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_BattleBuffInstanceWrapper_C*> CallFunc_GetActiveBuffsByClass_ActiveBuffInstanceWrappers; // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_CheckTargetBuff) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_CheckTargetBuff");
static_assert(sizeof(AC_jRPG_ActionsManager_C_CheckTargetBuff) == 0x000030, "Wrong size on AC_jRPG_ActionsManager_C_CheckTargetBuff");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CheckTargetBuff, Target) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_CheckTargetBuff::Target' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CheckTargetBuff, Buff) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_CheckTargetBuff::Buff' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CheckTargetBuff, HasBuff) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_CheckTargetBuff::HasBuff' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CheckTargetBuff, CallFunc_GetActiveBuffsByClass_ActiveBuffInstanceWrappers) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_CheckTargetBuff::CallFunc_GetActiveBuffsByClass_ActiveBuffInstanceWrappers' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CheckTargetBuff, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'AC_jRPG_ActionsManager_C_CheckTargetBuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_CheckTargetBuff, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'AC_jRPG_ActionsManager_C_CheckTargetBuff::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Defend
// 0x00B8 (0x00B8 - 0x0000)
struct AC_jRPG_ActionsManager_C_Defend final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_4;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Defend) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Defend");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Defend) == 0x0000B8, "Wrong size on AC_jRPG_ActionsManager_C_Defend");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetOwner_ReturnValue_2) == 0x000020, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000028, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000030, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_On_Action_Finished_HasMoreActions) == 0x000038, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'AC_jRPG_ActionsManager_C_Defend::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, K2Node_MakeArray_Array) == 0x000088, "Member 'AC_jRPG_ActionsManager_C_Defend::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetOwner_ReturnValue_3) == 0x000098, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Defend, CallFunc_GetComponentByClass_ReturnValue_4) == 0x0000B0, "Member 'AC_jRPG_ActionsManager_C_Defend::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.ExecuteUbergraph_AC_jRPG_ActionsManager
// 0x0560 (0x0560 - 0x0000)
struct AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_4;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_5;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleBuff_Flee_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_6;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_7;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_8;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x00D0(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  CallFunc_FindEquippedSkillByID_Skill;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_9;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_10;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_9;        // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_10;       // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_11;                  // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_11;       // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_12;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_12;       // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_13;                  // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_14;                  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_13;       // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_14;       // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_15;                  // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0290(0x0010)(ReferenceParm)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_15;       // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02A8(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue_16;                  // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_16;       // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetShardForConsumable_ShardID;            // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_jRPG_ActionType                             K2Node_CustomEvent_ActionType;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_SecondaryActionName;            // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x02E0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x02F0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0350(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0360(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03B8(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue_17;                  // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_17;       // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x03E0(0x0010)()
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1;     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03F8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0440(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0460(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x04A8(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x04C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0508(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0520(0x0010)()
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom;           // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_TimeDilation;                   // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Duration;                       // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue_1;           // 0x0550(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast; // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager");
static_assert(sizeof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager) == 0x000560, "Wrong size on AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, EntryPoint) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000020, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_2) == 0x000028, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000030, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_3) == 0x000038, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_4) == 0x000040, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000048, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_4) == 0x000050, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, Temp_int_Array_Index_Variable) == 0x000058, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000060, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_5) == 0x000068, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_5) == 0x000070, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Array_Get_Item) == 0x000078, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_6) == 0x000088, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_SpawnObject_ReturnValue) == 0x000090, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_6) == 0x000098, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_ActivateBuff_Success) == 0x0000A0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_ActivateBuff_Success' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_7) == 0x0000B0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_8) == 0x0000B8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_7) == 0x0000C0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_8) == 0x0000C8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000D0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_FindEquippedSkillByID_Skill) == 0x000208, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_FindEquippedSkillByID_Skill' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_9) == 0x000210, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_10) == 0x000218, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_9) == 0x000220, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_10) == 0x000228, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_IsValid_ReturnValue) == 0x000230, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000231, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_11) == 0x000238, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_11) == 0x000240, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_12) == 0x000248, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_12) == 0x000250, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_IsValid_ReturnValue_1) == 0x000258, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_13) == 0x000260, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_14) == 0x000268, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_13) == 0x000270, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_14) == 0x000278, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_IsValid_ReturnValue_2) == 0x000280, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_15) == 0x000288, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeArray_Array) == 0x000290, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_15) == 0x0002A0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Format_ReturnValue) == 0x0002A8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_16) == 0x0002B8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_16) == 0x0002C0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetShardForConsumable_ShardID) == 0x0002C8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetShardForConsumable_ShardID' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_CustomEvent_ActionType) == 0x0002D0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_CustomEvent_ActionType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_CustomEvent_SecondaryActionName) == 0x0002D4, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_CustomEvent_SecondaryActionName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Conv_NameToText_ReturnValue) == 0x0002E0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeStruct_FormatArgumentData) == 0x0002F0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000338, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_SwitchEnum_CmpSuccess) == 0x000348, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Conv_StringToText_ReturnValue) == 0x000350, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x000360, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeArray_Array_1) == 0x0003A8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Format_ReturnValue_1) == 0x0003B8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetOwner_ReturnValue_17) == 0x0003C8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetOwner_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetBattleManager_ReturnValue) == 0x0003D0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetComponentByClass_ReturnValue_17) == 0x0003D8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetComponentByClass_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Conv_ObjectToText_ReturnValue) == 0x0003E0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1) == 0x0003F0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003F8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000440, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000450, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeStruct_FormatArgumentData_3) == 0x000460, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0004A8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x0004B8, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeStruct_FormatArgumentData_4) == 0x0004C0, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_MakeArray_Array_2) == 0x000508, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetGameInstance_ReturnValue) == 0x000518, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Format_ReturnValue_2) == 0x000520, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom) == 0x000530, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_DynamicCast_bSuccess) == 0x000538, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_CustomEvent_TimeDilation) == 0x000540, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_CustomEvent_TimeDilation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, K2Node_CustomEvent_Duration) == 0x000548, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_GetBattleManager_ReturnValue_1) == 0x000550, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast) == 0x000558, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_SetGlobalTimeDilation_TimeDilation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager, CallFunc_Delay_Duration_ImplicitCast) == 0x00055C, "Member 'AC_jRPG_ActionsManager_C_ExecuteUbergraph_AC_jRPG_ActionsManager::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Flee
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Flee final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Flee) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Flee");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Flee) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Flee");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Flee, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Flee::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Flee, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Flee::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Flee, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Flee::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Flee, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Flee::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.FreezeFrame
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_ActionsManager_C_FreezeFrame final
{
public:
	double                                        TimeDilation;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_FreezeFrame) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_FreezeFrame");
static_assert(sizeof(AC_jRPG_ActionsManager_C_FreezeFrame) == 0x000010, "Wrong size on AC_jRPG_ActionsManager_C_FreezeFrame");
static_assert(offsetof(AC_jRPG_ActionsManager_C_FreezeFrame, TimeDilation) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_FreezeFrame::TimeDilation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_FreezeFrame, Duration) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_FreezeFrame::Duration' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.GetActionCost
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_ActionsManager_C_GetActionCost final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CostHP;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CostMP;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_GetActionCost) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_GetActionCost");
static_assert(sizeof(AC_jRPG_ActionsManager_C_GetActionCost) == 0x000018, "Wrong size on AC_jRPG_ActionsManager_C_GetActionCost");
static_assert(offsetof(AC_jRPG_ActionsManager_C_GetActionCost, ActionName) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_GetActionCost::ActionName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_GetActionCost, CostHP) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_GetActionCost::CostHP' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_GetActionCost, CostMP) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_GetActionCost::CostMP' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.GetActionData
// 0x0110 (0x0110 - 0x0000)
struct AC_jRPG_ActionsManager_C_GetActionData final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Action                         Out_Row;                                           // 0x0008(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0108(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_GetActionData) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_GetActionData");
static_assert(sizeof(AC_jRPG_ActionsManager_C_GetActionData) == 0x000110, "Wrong size on AC_jRPG_ActionsManager_C_GetActionData");
static_assert(offsetof(AC_jRPG_ActionsManager_C_GetActionData, ActionName) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_GetActionData::ActionName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_GetActionData, Out_Row) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_GetActionData::Out_Row' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_GetActionData, Found) == 0x000108, "Member 'AC_jRPG_ActionsManager_C_GetActionData::Found' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Attack
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Attack final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0020(0x0010)()
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Attack) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Attack");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Attack) == 0x000040, "Wrong size on AC_jRPG_ActionsManager_C_Select_Attack");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Attack, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Attack::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Attack, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Attack::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Attack, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Attack::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Attack, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000020, "Member 'AC_jRPG_ActionsManager_C_Select_Attack::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Attack, CallFunc_GetOwner_ReturnValue_1) == 0x000030, "Member 'AC_jRPG_ActionsManager_C_Select_Attack::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Attack, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000038, "Member 'AC_jRPG_ActionsManager_C_Select_Attack::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Defend
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Defend final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Defend) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Defend");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Defend) == 0x000010, "Wrong size on AC_jRPG_ActionsManager_C_Select_Defend");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Defend, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Defend::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Defend, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Defend::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_AllAllies
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_AllAllies final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_AllAllies) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_AllAllies");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_AllAllies) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_AllAllies");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAllies, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAllies::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAllies, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAllies::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAllies, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAllies::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAllies, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAllies::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_AllAlliesDead
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllAlliesDead::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_AllEnemies
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_AllEnemies::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_Fireball
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_Fireball final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_Fireball) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_Fireball");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_Fireball) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_Fireball");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Fireball, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Fireball::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Fireball, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Fireball::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Fireball, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Fireball::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Fireball, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Fireball::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_Heal
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_Heal final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_Heal) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_Heal");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_Heal) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_Heal");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Heal, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Heal::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Heal, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Heal::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Heal, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Heal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Heal, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Heal::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_OnlySelf
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_OnlySelf::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_SingleAlly
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAlly::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_SingleAllyAndEnemy
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyAndEnemy::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_SingleAllyDead
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleAllyDead::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_SingleEnemy
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemy::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_SingleEnemyAny
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SingleEnemyAny::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_SinglleAllyAny
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_SinglleAllyAny::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Magic_Thunder
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Magic_Thunder final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Magic_Thunder) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Magic_Thunder");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Magic_Thunder) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Magic_Thunder");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Thunder, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Thunder::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Thunder, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Thunder::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Thunder, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Thunder::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Magic_Thunder, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Magic_Thunder::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.Select_Test
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_Select_Test final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_TargetingManager_C*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_Select_Test) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_Select_Test");
static_assert(sizeof(AC_jRPG_ActionsManager_C_Select_Test) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_Select_Test");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Test, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_Select_Test::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Test, CallFunc_GetOwner_ReturnValue_1) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_Select_Test::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Test, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_Select_Test::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_Select_Test, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_Select_Test::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.SelectAction
// 0x000C (0x000C - 0x0000)
struct AC_jRPG_ActionsManager_C_SelectAction final
{
public:
	E_jRPG_ActionType                             ActionType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SecondaryActionName;                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_SelectAction) == 0x000004, "Wrong alignment on AC_jRPG_ActionsManager_C_SelectAction");
static_assert(sizeof(AC_jRPG_ActionsManager_C_SelectAction) == 0x00000C, "Wrong size on AC_jRPG_ActionsManager_C_SelectAction");
static_assert(offsetof(AC_jRPG_ActionsManager_C_SelectAction, ActionType) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_SelectAction::ActionType' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_SelectAction, SecondaryActionName) == 0x000004, "Member 'AC_jRPG_ActionsManager_C_SelectAction::SecondaryActionName' has a wrong offset!");

// Function AC_jRPG_ActionsManager.AC_jRPG_ActionsManager_C.SkipTurn
// 0x0020 (0x0020 - 0x0000)
struct AC_jRPG_ActionsManager_C_SkipTurn final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_ActionsManager_C_SkipTurn) == 0x000008, "Wrong alignment on AC_jRPG_ActionsManager_C_SkipTurn");
static_assert(sizeof(AC_jRPG_ActionsManager_C_SkipTurn) == 0x000020, "Wrong size on AC_jRPG_ActionsManager_C_SkipTurn");
static_assert(offsetof(AC_jRPG_ActionsManager_C_SkipTurn, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'AC_jRPG_ActionsManager_C_SkipTurn::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_SkipTurn, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'AC_jRPG_ActionsManager_C_SkipTurn::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_SkipTurn, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'AC_jRPG_ActionsManager_C_SkipTurn::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_ActionsManager_C_SkipTurn, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000018, "Member 'AC_jRPG_ActionsManager_C_SkipTurn::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");

}

