#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TutorialViewItem

#include "Basic.hpp"

#include "BP_TutorialViewItem_classes.hpp"
#include "BP_TutorialViewItem_parameters.hpp"


namespace SDK
{

// Function BP_TutorialViewItem.BP_TutorialViewItem_C.GetTutorialDescriptionText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            ContentText                                            (Parm, OutParm)

void UBP_TutorialViewItem_C::GetTutorialDescriptionText(class FText* ContentText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialViewItem_C", "GetTutorialDescriptionText");

	Params::BP_TutorialViewItem_C_GetTutorialDescriptionText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ContentText != nullptr)
		*ContentText = std::move(Parms.ContentText);
}


// Function BP_TutorialViewItem.BP_TutorialViewItem_C.GetTutorialMedia
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UTexture2D>*       Media                                                  (Parm, OutParm, HasGetValueTypeHash)

void UBP_TutorialViewItem_C::GetTutorialMedia(TSoftObjectPtr<class UTexture2D>* Media)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialViewItem_C", "GetTutorialMedia");

	Params::BP_TutorialViewItem_C_GetTutorialMedia Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Media != nullptr)
		*Media = Parms.Media;
}


// Function BP_TutorialViewItem.BP_TutorialViewItem_C.GetTutorialTitleText
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText*                            TitleText                                              (Parm, OutParm)

void UBP_TutorialViewItem_C::GetTutorialTitleText(class FText* TitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialViewItem_C", "GetTutorialTitleText");

	Params::BP_TutorialViewItem_C_GetTutorialTitleText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TitleText != nullptr)
		*TitleText = std::move(Parms.TitleText);
}


// Function BP_TutorialViewItem.BP_TutorialViewItem_C.InitializeTutorialCardData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       InDataTable                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_TutorialViewItem_C::InitializeTutorialCardData(class UDataTable* InDataTable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialViewItem_C", "InitializeTutorialCardData");

	Params::BP_TutorialViewItem_C_InitializeTutorialCardData Parms{};

	Parms.InDataTable = InDataTable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TutorialViewItem.BP_TutorialViewItem_C.IsUnlocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_jRPG_GI_Custom_C*             GameInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsUnlocked_0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_TutorialViewItem_C::IsUnlocked(class UBP_jRPG_GI_Custom_C* GameInstance, bool* IsUnlocked_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TutorialViewItem_C", "IsUnlocked");

	Params::BP_TutorialViewItem_C_IsUnlocked Parms{};

	Parms.GameInstance = GameInstance;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUnlocked_0 != nullptr)
		*IsUnlocked_0 = Parms.IsUnlocked_0;
}

}

