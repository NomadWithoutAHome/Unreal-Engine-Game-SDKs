#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SpawnPointListWidget

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "FLevelDataEntry_structs.hpp"


namespace SDK::Params
{

// Function WBP_SpawnPointListWidget.WBP_SpawnPointListWidget_C.ConstructSpawnPointButton
// 0x0028 (0x0028 - 0x0000)
struct WBP_SpawnPointListWidget_C_ConstructSpawnPointButton final
{
public:
	class FText                                   SpawnPointName;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	TDelegate<void(class UWBP_SpawnPointEntry_C* ClickedEntry)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_SpawnPointEntry_C*                 CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnPointListWidget_C_ConstructSpawnPointButton) == 0x000008, "Wrong alignment on WBP_SpawnPointListWidget_C_ConstructSpawnPointButton");
static_assert(sizeof(WBP_SpawnPointListWidget_C_ConstructSpawnPointButton) == 0x000028, "Wrong size on WBP_SpawnPointListWidget_C_ConstructSpawnPointButton");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ConstructSpawnPointButton, SpawnPointName) == 0x000000, "Member 'WBP_SpawnPointListWidget_C_ConstructSpawnPointButton::SpawnPointName' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ConstructSpawnPointButton, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_SpawnPointListWidget_C_ConstructSpawnPointButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ConstructSpawnPointButton, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000020, "Member 'WBP_SpawnPointListWidget_C_ConstructSpawnPointButton::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");

// Function WBP_SpawnPointListWidget.WBP_SpawnPointListWidget_C.ExecuteUbergraph_WBP_SpawnPointListWidget
// 0x0004 (0x0004 - 0x0000)
struct WBP_SpawnPointListWidget_C_ExecuteUbergraph_WBP_SpawnPointListWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnPointListWidget_C_ExecuteUbergraph_WBP_SpawnPointListWidget) == 0x000004, "Wrong alignment on WBP_SpawnPointListWidget_C_ExecuteUbergraph_WBP_SpawnPointListWidget");
static_assert(sizeof(WBP_SpawnPointListWidget_C_ExecuteUbergraph_WBP_SpawnPointListWidget) == 0x000004, "Wrong size on WBP_SpawnPointListWidget_C_ExecuteUbergraph_WBP_SpawnPointListWidget");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ExecuteUbergraph_WBP_SpawnPointListWidget, EntryPoint) == 0x000000, "Member 'WBP_SpawnPointListWidget_C_ExecuteUbergraph_WBP_SpawnPointListWidget::EntryPoint' has a wrong offset!");

// Function WBP_SpawnPointListWidget.WBP_SpawnPointListWidget_C.GetNumberOfUnlockedSpawnPoints
// 0x0008 (0x0008 - 0x0000)
struct WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints) == 0x000004, "Wrong alignment on WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints");
static_assert(sizeof(WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints) == 0x000008, "Wrong size on WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints");
static_assert(offsetof(WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints, ReturnValue) == 0x000000, "Member 'WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WBP_SpawnPointListWidget_C_GetNumberOfUnlockedSpawnPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WBP_SpawnPointListWidget.WBP_SpawnPointListWidget_C.LoadUnlockedSpawnPoints
// 0x0228 (0x0228 - 0x0000)
struct WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints final
{
public:
	struct FGameplayTag                           CurrentSpawnPointTag_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_wildcard_Variable;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisplaySpawnPoint_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCurrentLevelData_Found;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_GetCurrentLevelData_LevelData;            // 0x0028(0x01B0)(HasGetValueTypeHash)
	class FName                                   CallFunc_GetCurrentLevelData_RowName;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_Map_Values_Values;                        // 0x01E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x01F8(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_Map_Keys_Keys;                            // 0x0210(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0220(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints) == 0x000008, "Wrong alignment on WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints");
static_assert(sizeof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints) == 0x000228, "Wrong size on WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CurrentSpawnPointTag_0) == 0x000000, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CurrentSpawnPointTag_0' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, Temp_wildcard_Variable) == 0x00000C, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_ShouldDisplaySpawnPoint_ReturnValue) == 0x000014, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_ShouldDisplaySpawnPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_GetCurrentLevelData_Found) == 0x000020, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_GetCurrentLevelData_Found' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_GetCurrentLevelData_LevelData) == 0x000028, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_GetCurrentLevelData_LevelData' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_GetCurrentLevelData_RowName) == 0x0001D8, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_GetCurrentLevelData_RowName' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Add_IntInt_ReturnValue) == 0x0001E0, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Map_Values_Values) == 0x0001E8, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Less_IntInt_ReturnValue) == 0x00020C, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Map_Keys_Keys) == 0x000210, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints, CallFunc_Array_Get_Item_1) == 0x000220, "Member 'WBP_SpawnPointListWidget_C_LoadUnlockedSpawnPoints::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_SpawnPointListWidget.WBP_SpawnPointListWidget_C.OnAnyEntryClicked
// 0x0020 (0x0020 - 0x0000)
struct WBP_SpawnPointListWidget_C_OnAnyEntryClicked final
{
public:
	class UWBP_SpawnPointEntry_C*                 SpawnPointEntry;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnPointListWidget_C_OnAnyEntryClicked) == 0x000008, "Wrong alignment on WBP_SpawnPointListWidget_C_OnAnyEntryClicked");
static_assert(sizeof(WBP_SpawnPointListWidget_C_OnAnyEntryClicked) == 0x000020, "Wrong size on WBP_SpawnPointListWidget_C_OnAnyEntryClicked");
static_assert(offsetof(WBP_SpawnPointListWidget_C_OnAnyEntryClicked, SpawnPointEntry) == 0x000000, "Member 'WBP_SpawnPointListWidget_C_OnAnyEntryClicked::SpawnPointEntry' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_OnAnyEntryClicked, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_SpawnPointListWidget_C_OnAnyEntryClicked::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_OnAnyEntryClicked, CallFunc_Array_Find_ReturnValue) == 0x000018, "Member 'WBP_SpawnPointListWidget_C_OnAnyEntryClicked::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function WBP_SpawnPointListWidget.WBP_SpawnPointListWidget_C.ShouldDisplaySpawnPoint
// 0x0020 (0x0020 - 0x0000)
struct WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint final
{
public:
	struct FGameplayTag                           SpawnPointTag;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUnlockedSpawnPointInCurrentLevel_ReturnValue; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint) == 0x000008, "Wrong alignment on WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint");
static_assert(sizeof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint) == 0x000020, "Wrong size on WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint, SpawnPointTag) == 0x000000, "Member 'WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint::SpawnPointTag' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint, ReturnValue) == 0x000008, "Member 'WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint, CallFunc_GetCustomGI_ReturnValue) == 0x000010, "Member 'WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000018, "Member 'WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint, CallFunc_HasUnlockedSpawnPointInCurrentLevel_ReturnValue) == 0x000019, "Member 'WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint::CallFunc_HasUnlockedSpawnPointInCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WBP_SpawnPointListWidget_C_ShouldDisplaySpawnPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_SpawnPointListWidget.WBP_SpawnPointListWidget_C.BP_GetDesiredFocusTarget
// 0x0030 (0x0030 - 0x0000)
struct WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllEntries_ReturnValue;                // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_SpawnPointEntry_C*                 K2Node_DynamicCast_AsWBP_Spawn_Point_Entry;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget) == 0x000030, "Wrong size on WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget, CallFunc_GetAllEntries_ReturnValue) == 0x000008, "Member 'WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget::CallFunc_GetAllEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_AsWBP_Spawn_Point_Entry) == 0x000020, "Member 'WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_AsWBP_Spawn_Point_Entry' has a wrong offset!");
static_assert(offsetof(WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_SpawnPointListWidget_C_BP_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

