#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_Enemy_Battle_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_EnemyIdleState_structs.hpp"


namespace SDK::Params
{

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireSpecificTarget
// 0x00D8 (0x00D8 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget final
{
public:
	int32                                         DesiredTargetIndex;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AcquireRandomTargetIfWantedTargetDead;             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       TargetRef;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetDead;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterAtBattleSpotIndex_Character;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0038(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_AcquireTargetRandomHero_Output;           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget) == 0x0000D8, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, DesiredTargetIndex) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::DesiredTargetIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, AcquireRandomTargetIfWantedTargetDead) == 0x000004, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::AcquireRandomTargetIfWantedTargetDead' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, TargetRef) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::TargetRef' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, IsTargetDead) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::IsTargetDead' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_GetCharacterAtBattleSpotIndex_Character) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_GetCharacterAtBattleSpotIndex_Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000038, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, K2Node_MakeArray_Array_1) == 0x0000B0, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget, CallFunc_AcquireTargetRandomHero_Output) == 0x0000D0, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTarget::CallFunc_AcquireTargetRandomHero_Output' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireSpecificTargetFromActorRef
// 0x00C8 (0x00C8 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       ActorRefTarget;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       TargetRef;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0018(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0028(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_AcquireTargetRandomHero_Output;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)()
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef) == 0x0000C8, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, ActorRefTarget) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::ActorRefTarget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, TargetRef) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::TargetRef' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, Target) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::Target' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000028, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, CallFunc_AcquireTargetRandomHero_Output) == 0x000048, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::CallFunc_AcquireTargetRandomHero_Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, K2Node_MakeArray_Array_1) == 0x0000A8, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireSpecificTargetFromActorRef::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetAllEnemies
// 0x0030 (0x0030 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Target_Enemies;                                  // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllEnemies_Enemies;                  // 0x0010(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies) == 0x000030, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies, Target_Enemies) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies::Target_Enemies' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies, CallFunc_GetAllEnemies_Enemies) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies::CallFunc_GetAllEnemies_Enemies' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllEnemies::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetAllHeroes
// 0x0058 (0x0058 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes final
{
public:
	bool                                          OnlyAlive;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Target_Heroes;                                   // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllHeroes_Target_Heroes;             // 0x0018(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0028(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllAliveHeroes_Target_Heroes;        // 0x0038(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets_1;      // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes) == 0x000058, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes, OnlyAlive) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes::OnlyAlive' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes, Target_Heroes) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes::Target_Heroes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes, CallFunc_GetAllHeroes_Target_Heroes) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes::CallFunc_GetAllHeroes_Target_Heroes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000028, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes, CallFunc_GetAllAliveHeroes_Target_Heroes) == 0x000038, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes::CallFunc_GetAllAliveHeroes_Target_Heroes' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes, CallFunc_Acquire_Targets_AcquiredTargets_1) == 0x000048, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetAllHeroes::CallFunc_Acquire_Targets_AcquiredTargets_1' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetMiddleHero
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero final
{
public:
	bool                                          RandomIfDead;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Output;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Target;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetMiddleHero_MiddleHero;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0020(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0030(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero) == 0x000048, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero, RandomIfDead) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero::RandomIfDead' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero, Output) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero::Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero, Target) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero::Target' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero, CallFunc_GetMiddleHero_MiddleHero) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero::CallFunc_GetMiddleHero_MiddleHero' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetMiddleHero::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetRandomHero
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetRandomAliveHero_Output;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0010(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0020(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero) == 0x000038, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero, Output) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero::Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero, CallFunc_GetRandomAliveHero_Output) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero::CallFunc_GetRandomAliveHero_Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetRandomHero::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetWithHigherHealth
// 0x0048 (0x0048 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        HigherTargetHealthValue;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CurrentTarget;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetHeroWithHighestHealth_Output;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0020(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0030(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth) == 0x000048, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth, Output) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth::Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth, HigherTargetHealthValue) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth::HigherTargetHealthValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth, CurrentTarget) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth::CurrentTarget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth, CallFunc_GetHeroWithHighestHealth_Output) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth::CallFunc_GetHeroWithHighestHealth_Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithHigherHealth::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.AcquireTargetWithLowerHealth
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetHeroWithLowestHealth_Output;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array;                          // 0x0010(0x0010)(ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x0020(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth) == 0x000038, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth, Output) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth::Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth, CallFunc_GetHeroWithLowestHealth_Output) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth::CallFunc_GetHeroWithLowestHealth_Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth, CallFunc_Acquire_Targets_AcquiredTargets) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_AcquireTargetWithLowerHealth::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature final
{
public:
	double                                        NewHP;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PreviousHP;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature) == 0x000010, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature, NewHP) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature::NewHP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature, PreviousHP) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_BndEvt__BP_jRPG_Enemy_Battle_Base_AC_jRPG_CharacterStats_K2Node_ComponentBoundEvent_0_OnHPChanged__DelegateSignature::PreviousHP' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.DEBUG_CheckDisintegrationComponents
// 0x0210 (0x0210 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents final
{
public:
	TArray<class UMeshComponent*>                 MeshComponents;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Success;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 local_Components;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConcatenateDisplayNamesString_Result;     // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0198(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0200(0x0010)()
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents) == 0x000210, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, MeshComponents) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::MeshComponents' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, Success) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, local_Components) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::local_Components' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_ConcatenateDisplayNamesString_Result) == 0x000038, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_ConcatenateDisplayNamesString_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_IsValid_ReturnValue) == 0x0000BC, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Not_PreBool_ReturnValue) == 0x0000C4, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000118, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, K2Node_MakeArray_Array) == 0x000120, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Format_ReturnValue) == 0x000130, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000140, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_IsPackagedBuild_ReturnValue) == 0x000190, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Array_AddUnique_ReturnValue) == 0x000194, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000198, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, K2Node_MakeArray_Array_1) == 0x0001F0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents, CallFunc_Format_ReturnValue_1) == 0x000200, "Member 'BP_jRPG_Enemy_Battle_Base_C_DEBUG_CheckDisintegrationComponents::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.Desaturation
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_Desaturation final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetExtraDisintegrationComponents_MeshComponent; // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_CheckDisintegrationComponents_Success; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0048(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1; // 0x004C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_Desaturation) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_Desaturation");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_Desaturation) == 0x000050, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_Desaturation");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_GetExtraDisintegrationComponents_MeshComponent) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_GetExtraDisintegrationComponents_MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_DEBUG_CheckDisintegrationComponents_Success) == 0x000031, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_DEBUG_CheckDisintegrationComponents_Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000038, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000048, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_Desaturation, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1) == 0x00004C, "Member 'BP_jRPG_Enemy_Battle_Base_C_Desaturation::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.DONTUSEAcquireTargetWithHighestApAmount
// 0x0188 (0x0188 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CurrentTarget;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        LowerTargetHealthValue;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetStackTrace_ReturnValue;                // 0x0020(0x0010)(ReferenceParm)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x6];                                       // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_MakeArray_Array_1;                        // 0x00E0(0x0010)(ReferenceParm)
	bool                                          CallFunc_CheckIsAlive_Value;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_Acquire_Targets_AcquiredTargets;        // 0x00F8(0x0010)(ReferenceParm)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0110(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0168(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0178(0x0010)()
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount) == 0x000188, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, Output) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CurrentTarget) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CurrentTarget' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, LowerTargetHealthValue) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::LowerTargetHealthValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_GetStackTrace_ReturnValue) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_GetStackTrace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_JoinStringArray_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_CheckIsAlive_Value) == 0x0000F0, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_CheckIsAlive_Value' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Acquire_Targets_AcquiredTargets) == 0x0000F8, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Acquire_Targets_AcquiredTargets' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000110, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, K2Node_MakeArray_Array_2) == 0x000168, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount, CallFunc_Format_ReturnValue_1) == 0x000178, "Member 'BP_jRPG_Enemy_Battle_Base_C_DONTUSEAcquireTargetWithHighestApAmount::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base
// 0x0320 (0x0320 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_On_Action_Finished_HasMoreActions;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)()
	bool                                          K2Node_Event_DeathByCounter;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_GetExtraDisintegrationComponents_MeshComponent; // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FTransform                             Temp_struct_Variable;                              // 0x0100(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DEBUG_CheckDisintegrationComponents_Success; // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_NewHP;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_PreviousHP;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_DelayBeforeInversion;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_2;        // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_3;        // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0268(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeshComponent*                         CallFunc_Array_Get_Item_2;                         // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0288(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              K2Node_DynamicCast_AsMaterial_Instance_Constant;   // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x02E0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1; // 0x02F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_2;            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_BaseDesaturation_ImplicitCast;  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BaseDesaturation_ImplicitCast_1; // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base) == 0x000010, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base) == 0x000320, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, EntryPoint) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Array_Index_Variable_3) == 0x000028, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_On_Action_Finished_HasMoreActions) == 0x000090, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_On_Action_Finished_HasMoreActions' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_Event_DeathByCounter) == 0x0000A8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_Event_DeathByCounter' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000B0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SelectFloat_ReturnValue_1) == 0x0000D0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SelectFloat_ReturnValue_2) == 0x0000D8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Lerp_ReturnValue_1) == 0x0000E0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000E8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_GetExtraDisintegrationComponents_MeshComponent) == 0x0000F0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_GetExtraDisintegrationComponents_MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_struct_Variable) == 0x000100, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_AddComponent_ReturnValue) == 0x000168, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_DEBUG_CheckDisintegrationComponents_Success) == 0x000174, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_DEBUG_CheckDisintegrationComponents_Success' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_IsValid_ReturnValue) == 0x000175, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_GetActorForwardVector_ReturnValue) == 0x000178, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x000190, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000198, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_ComponentBoundEvent_NewHP) == 0x0001B0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_ComponentBoundEvent_NewHP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_ComponentBoundEvent_PreviousHP) == 0x0001B8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_ComponentBoundEvent_PreviousHP' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001C0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0001D8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, Temp_int_Loop_Counter_Variable_3) == 0x0001E0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Less_IntInt_ReturnValue) == 0x0001E4, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001E8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x0001F0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Array_Get_Item_1) == 0x000200, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Array_Length_ReturnValue_1) == 0x000208, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Less_IntInt_ReturnValue_1) == 0x00020C, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_CustomEvent_DelayBeforeInversion) == 0x000210, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_CustomEvent_DelayBeforeInversion' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SpawnSystemAttached_ReturnValue_2) == 0x000218, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SpawnSystemAttached_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_GetComponentBounds_Origin) == 0x000220, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_GetComponentBounds_BoxExtent) == 0x000238, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_GetComponentBounds_SphereRadius) == 0x000250, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000258, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SpawnSystemAttached_ReturnValue_3) == 0x000260, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SpawnSystemAttached_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000268, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Array_Get_Item_2) == 0x000278, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Array_Length_ReturnValue_2) == 0x000280, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Less_IntInt_ReturnValue_2) == 0x000284, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_GetMaterials_ReturnValue) == 0x000288, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Array_Length_ReturnValue_3) == 0x000298, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Less_IntInt_ReturnValue_3) == 0x00029C, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_GetMaterial_ReturnValue) == 0x0002A0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_MakeLiteralName_ReturnValue) == 0x0002A8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x0002B0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_DynamicCast_bSuccess) == 0x0002B8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_DynamicCast_AsMaterial_Instance_Constant) == 0x0002C0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_DynamicCast_AsMaterial_Instance_Constant' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_DynamicCast_bSuccess_1) == 0x0002C8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x0002CC, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x0002D0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0002D8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x0002E0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x0002E4, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Delay_Duration_ImplicitCast) == 0x0002E8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0002EC, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0002F0, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1) == 0x0002F8, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Delay_Duration_ImplicitCast_2) == 0x0002FC, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Delay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000300, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000308, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_VariableSet_BaseDesaturation_ImplicitCast) == 0x000310, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_VariableSet_BaseDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base, K2Node_VariableSet_BaseDesaturation_ImplicitCast_1) == 0x000318, "Member 'BP_jRPG_Enemy_Battle_Base_C_ExecuteUbergraph_BP_jRPG_Enemy_Battle_Base::K2Node_VariableSet_BaseDesaturation_ImplicitCast_1' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetAllEnemies_0
// 0x0010 (0x0010 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0 final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> Enemies;                                         // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0) == 0x000010, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0, Enemies) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetAllEnemies_0::Enemies' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetCharacterAtBattleSpotIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex final
{
public:
	int32                                         BattleSpotIndex_0;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludedKickedCharacters;                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> local_characters;                                // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllPlayerCharacters_AllCharacters;   // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex) == 0x000050, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, BattleSpotIndex_0) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::BattleSpotIndex_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, IncludedKickedCharacters) == 0x000004, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::IncludedKickedCharacters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, Character) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::Character' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, local_characters) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::local_characters' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00003D, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex, CallFunc_GetAllPlayerCharacters_AllCharacters) == 0x000040, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetCharacterAtBattleSpotIndex::CallFunc_GetAllPlayerCharacters_AllCharacters' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetExtraDisintegrationComponents
// 0x0090 (0x0090 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents final
{
public:
	TArray<class UMeshComponent*>                 MeshComponent;                                     // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 Temp_wildcard_Temp_buffer_array_Variable;          // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetComponent*                       K2Node_DynamicCast_AsWidget_Component;             // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents) == 0x000090, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, MeshComponent) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::MeshComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, Temp_wildcard_Temp_buffer_array_Variable) == 0x000030, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000050, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Array_Contains_ReturnValue) == 0x000078, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007A, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, K2Node_DynamicCast_AsWidget_Component) == 0x000080, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::K2Node_DynamicCast_AsWidget_Component' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetExtraDisintegrationComponents::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetMiddleHeroForFeedback
// 0x0028 (0x0028 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       MiddleHero;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Temp_wildcard_Variable;                            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetDummyMiddleCharacter_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterAtBattleSpotIndex_Character;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback) == 0x000028, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback, MiddleHero) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback::MiddleHero' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback, Temp_wildcard_Variable) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback, CallFunc_GetDummyMiddleCharacter_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback::CallFunc_GetDummyMiddleCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback, CallFunc_GetCharacterAtBattleSpotIndex_Character) == 0x000020, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetMiddleHeroForFeedback::CallFunc_GetCharacterAtBattleSpotIndex_Character' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.GetRandomEnemy
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy) == 0x000020, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy, Output) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy::Output' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_GetRandomEnemy::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.OnDeath
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_OnDeath final
{
public:
	bool                                          DeathByCounter;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_OnDeath) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_OnDeath");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_OnDeath) == 0x000001, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_OnDeath");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_OnDeath, DeathByCounter) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_OnDeath::DeathByCounter' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.SetCurrentIdleState_0
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0 final
{
public:
	E_EnemyIdleState                              CurrentIdleState_0;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_Battle_Global_C*                   K2Node_DynamicCast_AsABP_Battle_Global;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0) == 0x000020, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0, CurrentIdleState_0) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0::CurrentIdleState_0' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0, K2Node_DynamicCast_AsABP_Battle_Global) == 0x000010, "Member 'BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0::K2Node_DynamicCast_AsABP_Battle_Global' has a wrong offset!");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_jRPG_Enemy_Battle_Base_C_SetCurrentIdleState_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.SetIsSkillSummon
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon) == 0x000001, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon) == 0x000001, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon, Enabled) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_SetIsSkillSummon::Enabled' has a wrong offset!");

// Function BP_jRPG_Enemy_Battle_Base.BP_jRPG_Enemy_Battle_Base_C.SkillSummon
// 0x0008 (0x0008 - 0x0000)
struct BP_jRPG_Enemy_Battle_Base_C_SkillSummon final
{
public:
	double                                        DelayBeforeInversion;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_Enemy_Battle_Base_C_SkillSummon) == 0x000008, "Wrong alignment on BP_jRPG_Enemy_Battle_Base_C_SkillSummon");
static_assert(sizeof(BP_jRPG_Enemy_Battle_Base_C_SkillSummon) == 0x000008, "Wrong size on BP_jRPG_Enemy_Battle_Base_C_SkillSummon");
static_assert(offsetof(BP_jRPG_Enemy_Battle_Base_C_SkillSummon, DelayBeforeInversion) == 0x000000, "Member 'BP_jRPG_Enemy_Battle_Base_C_SkillSummon::DelayBeforeInversion' has a wrong offset!");

}

