#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlyingIndicator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FlyingIndicator.BP_FlyingIndicator_C.FlyToTargetWithSpline
// 0x0008 (0x0008 - 0x0000)
struct BP_FlyingIndicator_C_FlyToTargetWithSpline final
{
public:
	class USplineComponent*                       Spline;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlyingIndicator_C_FlyToTargetWithSpline) == 0x000008, "Wrong alignment on BP_FlyingIndicator_C_FlyToTargetWithSpline");
static_assert(sizeof(BP_FlyingIndicator_C_FlyToTargetWithSpline) == 0x000008, "Wrong size on BP_FlyingIndicator_C_FlyToTargetWithSpline");
static_assert(offsetof(BP_FlyingIndicator_C_FlyToTargetWithSpline, Spline) == 0x000000, "Member 'BP_FlyingIndicator_C_FlyToTargetWithSpline::Spline' has a wrong offset!");

// Function BP_FlyingIndicator.BP_FlyingIndicator_C.ExecuteUbergraph_BP_FlyingIndicator
// 0x04C0 (0x04C0 - 0x0000)
struct BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ButtonTrigger_C>  K2Node_DynamicCast_AsBPI_Button_Trigger;           // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x01E8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       K2Node_CustomEvent_Spline;                         // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeAtDistanceAlongSpline_ReturnValue; // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0xC];                                      // 0x0304(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtTime_ReturnValue;           // 0x0310(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0370(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0480(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_3;                // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeAtDistanceAlongSpline_Distance_ImplicitCast; // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator) == 0x000010, "Wrong alignment on BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator");
static_assert(sizeof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator) == 0x0004C0, "Wrong size on BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, EntryPoint) == 0x000000, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000020, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, Temp_bool_Variable) == 0x000028, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_X) == 0x0000D8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_X_1) == 0x000108, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_Y_1) == 0x000110, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_Z_1) == 0x000118, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_ReturnValue) == 0x000120, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakTransform_Location_1) == 0x000128, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakTransform_Rotation_1) == 0x000140, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakTransform_Scale_1) == 0x000158, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, K2Node_DynamicCast_AsBPI_Button_Trigger) == 0x000170, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::K2Node_DynamicCast_AsBPI_Button_Trigger' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_X_2) == 0x000188, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_Y_2) == 0x000190, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_BreakVector_Z_2) == 0x000198, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_ReturnValue_1) == 0x0001A8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_ReturnValue_2) == 0x0001B0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_ReturnValue_3) == 0x0001B8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, K2Node_Select_Default) == 0x0001C0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001C8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_MakeVector_ReturnValue) == 0x0001D0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0001E8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0002E0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, K2Node_CustomEvent_Spline) == 0x0002E8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::K2Node_CustomEvent_Spline' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_GetSplineLength_ReturnValue) == 0x0002F0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_GetTimeAtDistanceAlongSpline_ReturnValue) == 0x000300, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_GetTimeAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_GetTransformAtTime_ReturnValue) == 0x000310, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_GetTransformAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000370, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000468, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000480, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000488, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x000490, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x000498, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Lerp_Alpha_ImplicitCast_3) == 0x0004A0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Lerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0004A8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0004B0, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator, CallFunc_GetTimeAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0004B8, "Member 'BP_FlyingIndicator_C_ExecuteUbergraph_BP_FlyingIndicator::CallFunc_GetTimeAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_FlyingIndicator.BP_FlyingIndicator_C.CopyFollowSpline
// 0x0038 (0x0038 - 0x0000)
struct BP_FlyingIndicator_C_CopyFollowSpline final
{
public:
	class USplineComponent*                       SplineComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        local_SpeedAlongSpline;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPlayRate_NewRate_ImplicitCast;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlyingIndicator_C_CopyFollowSpline) == 0x000008, "Wrong alignment on BP_FlyingIndicator_C_CopyFollowSpline");
static_assert(sizeof(BP_FlyingIndicator_C_CopyFollowSpline) == 0x000038, "Wrong size on BP_FlyingIndicator_C_CopyFollowSpline");
static_assert(offsetof(BP_FlyingIndicator_C_CopyFollowSpline, SplineComponent) == 0x000000, "Member 'BP_FlyingIndicator_C_CopyFollowSpline::SplineComponent' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_CopyFollowSpline, local_SpeedAlongSpline) == 0x000008, "Member 'BP_FlyingIndicator_C_CopyFollowSpline::local_SpeedAlongSpline' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_CopyFollowSpline, CallFunc_GetSplineLength_ReturnValue) == 0x000010, "Member 'BP_FlyingIndicator_C_CopyFollowSpline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_CopyFollowSpline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_FlyingIndicator_C_CopyFollowSpline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_CopyFollowSpline, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_FlyingIndicator_C_CopyFollowSpline::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_CopyFollowSpline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_FlyingIndicator_C_CopyFollowSpline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_FlyingIndicator_C_CopyFollowSpline, CallFunc_SetPlayRate_NewRate_ImplicitCast) == 0x000030, "Member 'BP_FlyingIndicator_C_CopyFollowSpline::CallFunc_SetPlayRate_NewRate_ImplicitCast' has a wrong offset!");

}

