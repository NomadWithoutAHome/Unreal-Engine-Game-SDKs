#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Battle_SkillScript

#include "Basic.hpp"

#include "EBuffApplicationProbability_structs.hpp"
#include "S_BlockedActionFeedback_structs.hpp"
#include "EAttackType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.AcquireTargets
// 0x0028 (0x0028 - 0x0000)
struct BP_Battle_SkillScript_C_AcquireTargets final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> DesiredTargetCharacters;                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class ABP_jRPG_Character_Battle_Base_C*> AcquiredTargetCharacters;                        // 0x0010(0x0010)(Parm, OutParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_AcquireTargets) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_AcquireTargets");
static_assert(sizeof(BP_Battle_SkillScript_C_AcquireTargets) == 0x000028, "Wrong size on BP_Battle_SkillScript_C_AcquireTargets");
static_assert(offsetof(BP_Battle_SkillScript_C_AcquireTargets, DesiredTargetCharacters) == 0x000000, "Member 'BP_Battle_SkillScript_C_AcquireTargets::DesiredTargetCharacters' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AcquireTargets, AcquiredTargetCharacters) == 0x000010, "Member 'BP_Battle_SkillScript_C_AcquireTargets::AcquiredTargetCharacters' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AcquireTargets, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_Battle_SkillScript_C_AcquireTargets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AcquireTargets, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000021, "Member 'BP_Battle_SkillScript_C_AcquireTargets::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AcquireTargets, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_Battle_SkillScript_C_AcquireTargets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.ApplyBuff
// 0x0190 (0x0190 - 0x0000)
struct BP_Battle_SkillScript_C_ApplyBuff final
{
public:
	class UClass*                                 BuffClass;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         TurnDuration;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacterIfNotSelf;                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EBuffApplicationProbability                   StatusEffectProbability;                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleBuffInstance_C*               CreatedBuffInstance;                               // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        Target;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	class UBP_BattleBuffInstance_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ReferenceParm)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Select_Default;                             // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateBuff_Success;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_ApplyBuff) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_ApplyBuff");
static_assert(sizeof(BP_Battle_SkillScript_C_ApplyBuff) == 0x000190, "Wrong size on BP_Battle_SkillScript_C_ApplyBuff");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, BuffClass) == 0x000000, "Member 'BP_Battle_SkillScript_C_ApplyBuff::BuffClass' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, TargetCharacter) == 0x000008, "Member 'BP_Battle_SkillScript_C_ApplyBuff::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, TurnDuration) == 0x000010, "Member 'BP_Battle_SkillScript_C_ApplyBuff::TurnDuration' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, SourceCharacterIfNotSelf) == 0x000018, "Member 'BP_Battle_SkillScript_C_ApplyBuff::SourceCharacterIfNotSelf' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, StatusEffectProbability) == 0x000020, "Member 'BP_Battle_SkillScript_C_ApplyBuff::StatusEffectProbability' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CreatedBuffInstance) == 0x000028, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CreatedBuffInstance' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, Target) == 0x000030, "Member 'BP_Battle_SkillScript_C_ApplyBuff::Target' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, Temp_bool_Variable) == 0x000038, "Member 'BP_Battle_SkillScript_C_ApplyBuff::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000040, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_Battle_SkillScript_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_SpawnObject_ReturnValue) == 0x000098, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000A0, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_Battle_SkillScript_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000108, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'BP_Battle_SkillScript_C_ApplyBuff::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, K2Node_MakeArray_Array) == 0x000160, "Member 'BP_Battle_SkillScript_C_ApplyBuff::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, K2Node_Select_Default) == 0x000170, "Member 'BP_Battle_SkillScript_C_ApplyBuff::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_Format_ReturnValue) == 0x000178, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ApplyBuff, CallFunc_ActivateBuff_Success) == 0x000188, "Member 'BP_Battle_SkillScript_C_ApplyBuff::CallFunc_ActivateBuff_Success' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.AreAllAlive
// 0x0030 (0x0030 - 0x0000)
struct BP_Battle_SkillScript_C_AreAllAlive final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CharacterList;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          SomeAreAlive;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_AreAllAlive) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_AreAllAlive");
static_assert(sizeof(BP_Battle_SkillScript_C_AreAllAlive) == 0x000030, "Wrong size on BP_Battle_SkillScript_C_AreAllAlive");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, CharacterList) == 0x000000, "Member 'BP_Battle_SkillScript_C_AreAllAlive::CharacterList' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, SomeAreAlive) == 0x000010, "Member 'BP_Battle_SkillScript_C_AreAllAlive::SomeAreAlive' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_Battle_SkillScript_C_AreAllAlive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_Battle_SkillScript_C_AreAllAlive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_Battle_SkillScript_C_AreAllAlive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Battle_SkillScript_C_AreAllAlive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_Battle_SkillScript_C_AreAllAlive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000029, "Member 'BP_Battle_SkillScript_C_AreAllAlive::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_AreAllAlive, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Battle_SkillScript_C_AreAllAlive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.CameraShake
// 0x0028 (0x0028 - 0x0000)
struct BP_Battle_SkillScript_C_CameraShake final
{
public:
	class UClass*                                 CameraShake_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartCameraShake_Scale_ImplicitCast;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_CameraShake) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_CameraShake");
static_assert(sizeof(BP_Battle_SkillScript_C_CameraShake) == 0x000028, "Wrong size on BP_Battle_SkillScript_C_CameraShake");
static_assert(offsetof(BP_Battle_SkillScript_C_CameraShake, CameraShake_0) == 0x000000, "Member 'BP_Battle_SkillScript_C_CameraShake::CameraShake_0' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_CameraShake, Scale) == 0x000008, "Member 'BP_Battle_SkillScript_C_CameraShake::Scale' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_CameraShake, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_Battle_SkillScript_C_CameraShake::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_CameraShake, CallFunc_StartCameraShake_ReturnValue) == 0x000018, "Member 'BP_Battle_SkillScript_C_CameraShake::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_CameraShake, CallFunc_StartCameraShake_Scale_ImplicitCast) == 0x000020, "Member 'BP_Battle_SkillScript_C_CameraShake::CallFunc_StartCameraShake_Scale_ImplicitCast' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.CancelSkillCost
// 0x0002 (0x0002 - 0x0000)
struct BP_Battle_SkillScript_C_CancelSkillCost final
{
public:
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_CancelSkillCost) == 0x000001, "Wrong alignment on BP_Battle_SkillScript_C_CancelSkillCost");
static_assert(sizeof(BP_Battle_SkillScript_C_CancelSkillCost) == 0x000002, "Wrong size on BP_Battle_SkillScript_C_CancelSkillCost");
static_assert(offsetof(BP_Battle_SkillScript_C_CancelSkillCost, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_CancelSkillCost::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_CancelSkillCost, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_Battle_SkillScript_C_CancelSkillCost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.Check Target Buff
// 0x0018 (0x0018 - 0x0000)
struct BP_Battle_SkillScript_C_Check_Target_Buff final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BuffClass;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBuff;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBuffOfClass_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_Check_Target_Buff) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_Check_Target_Buff");
static_assert(sizeof(BP_Battle_SkillScript_C_Check_Target_Buff) == 0x000018, "Wrong size on BP_Battle_SkillScript_C_Check_Target_Buff");
static_assert(offsetof(BP_Battle_SkillScript_C_Check_Target_Buff, Target) == 0x000000, "Member 'BP_Battle_SkillScript_C_Check_Target_Buff::Target' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_Check_Target_Buff, BuffClass) == 0x000008, "Member 'BP_Battle_SkillScript_C_Check_Target_Buff::BuffClass' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_Check_Target_Buff, HasBuff) == 0x000010, "Member 'BP_Battle_SkillScript_C_Check_Target_Buff::HasBuff' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_Check_Target_Buff, CallFunc_HasBuffOfClass_ReturnValue) == 0x000011, "Member 'BP_Battle_SkillScript_C_Check_Target_Buff::CallFunc_HasBuffOfClass_ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.DoesForcedSkillAllowPlayerChoice
// 0x0001 (0x0001 - 0x0000)
struct BP_Battle_SkillScript_C_DoesForcedSkillAllowPlayerChoice final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_DoesForcedSkillAllowPlayerChoice) == 0x000001, "Wrong alignment on BP_Battle_SkillScript_C_DoesForcedSkillAllowPlayerChoice");
static_assert(sizeof(BP_Battle_SkillScript_C_DoesForcedSkillAllowPlayerChoice) == 0x000001, "Wrong size on BP_Battle_SkillScript_C_DoesForcedSkillAllowPlayerChoice");
static_assert(offsetof(BP_Battle_SkillScript_C_DoesForcedSkillAllowPlayerChoice, ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_DoesForcedSkillAllowPlayerChoice::ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.ExecuteSkill_Internal
// 0x0008 (0x0008 - 0x0000)
struct BP_Battle_SkillScript_C_ExecuteSkill_Internal final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_ExecuteSkill_Internal) == 0x000004, "Wrong alignment on BP_Battle_SkillScript_C_ExecuteSkill_Internal");
static_assert(sizeof(BP_Battle_SkillScript_C_ExecuteSkill_Internal) == 0x000008, "Wrong size on BP_Battle_SkillScript_C_ExecuteSkill_Internal");
static_assert(offsetof(BP_Battle_SkillScript_C_ExecuteSkill_Internal, Temp_int_Variable) == 0x000000, "Member 'BP_Battle_SkillScript_C_ExecuteSkill_Internal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ExecuteSkill_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_Battle_SkillScript_C_ExecuteSkill_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.ExecuteUbergraph_BP_Battle_SkillScript
// 0x0004 (0x0004 - 0x0000)
struct BP_Battle_SkillScript_C_ExecuteUbergraph_BP_Battle_SkillScript final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_ExecuteUbergraph_BP_Battle_SkillScript) == 0x000004, "Wrong alignment on BP_Battle_SkillScript_C_ExecuteUbergraph_BP_Battle_SkillScript");
static_assert(sizeof(BP_Battle_SkillScript_C_ExecuteUbergraph_BP_Battle_SkillScript) == 0x000004, "Wrong size on BP_Battle_SkillScript_C_ExecuteUbergraph_BP_Battle_SkillScript");
static_assert(offsetof(BP_Battle_SkillScript_C_ExecuteUbergraph_BP_Battle_SkillScript, EntryPoint) == 0x000000, "Member 'BP_Battle_SkillScript_C_ExecuteUbergraph_BP_Battle_SkillScript::EntryPoint' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.ForceSkillOnNextTurn
// 0x0001 (0x0001 - 0x0000)
struct BP_Battle_SkillScript_C_ForceSkillOnNextTurn final
{
public:
	bool                                          AllowPlayerChoice_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_ForceSkillOnNextTurn) == 0x000001, "Wrong alignment on BP_Battle_SkillScript_C_ForceSkillOnNextTurn");
static_assert(sizeof(BP_Battle_SkillScript_C_ForceSkillOnNextTurn) == 0x000001, "Wrong size on BP_Battle_SkillScript_C_ForceSkillOnNextTurn");
static_assert(offsetof(BP_Battle_SkillScript_C_ForceSkillOnNextTurn, AllowPlayerChoice_0) == 0x000000, "Member 'BP_Battle_SkillScript_C_ForceSkillOnNextTurn::AllowPlayerChoice_0' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.GetCurrentCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_Battle_SkillScript_C_GetCurrentCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       CurrentCharacter_0;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_GetCurrentCharacter) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_GetCurrentCharacter");
static_assert(sizeof(BP_Battle_SkillScript_C_GetCurrentCharacter) == 0x000008, "Wrong size on BP_Battle_SkillScript_C_GetCurrentCharacter");
static_assert(offsetof(BP_Battle_SkillScript_C_GetCurrentCharacter, CurrentCharacter_0) == 0x000000, "Member 'BP_Battle_SkillScript_C_GetCurrentCharacter::CurrentCharacter_0' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.GetForcedSkillExecutionCount
// 0x0004 (0x0004 - 0x0000)
struct BP_Battle_SkillScript_C_GetForcedSkillExecutionCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_GetForcedSkillExecutionCount) == 0x000004, "Wrong alignment on BP_Battle_SkillScript_C_GetForcedSkillExecutionCount");
static_assert(sizeof(BP_Battle_SkillScript_C_GetForcedSkillExecutionCount) == 0x000004, "Wrong size on BP_Battle_SkillScript_C_GetForcedSkillExecutionCount");
static_assert(offsetof(BP_Battle_SkillScript_C_GetForcedSkillExecutionCount, ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_GetForcedSkillExecutionCount::ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.GetForcedSkillPreviousTargets
// 0x0010 (0x0010 - 0x0000)
struct BP_Battle_SkillScript_C_GetForcedSkillPreviousTargets final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> ReturnValue;                                     // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Battle_SkillScript_C_GetForcedSkillPreviousTargets) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_GetForcedSkillPreviousTargets");
static_assert(sizeof(BP_Battle_SkillScript_C_GetForcedSkillPreviousTargets) == 0x000010, "Wrong size on BP_Battle_SkillScript_C_GetForcedSkillPreviousTargets");
static_assert(offsetof(BP_Battle_SkillScript_C_GetForcedSkillPreviousTargets, ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_GetForcedSkillPreviousTargets::ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.GetSkillCostOverride
// 0x0008 (0x0008 - 0x0000)
struct BP_Battle_SkillScript_C_GetSkillCostOverride final
{
public:
	bool                                          Override;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewValue;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_GetSkillCostOverride) == 0x000004, "Wrong alignment on BP_Battle_SkillScript_C_GetSkillCostOverride");
static_assert(sizeof(BP_Battle_SkillScript_C_GetSkillCostOverride) == 0x000008, "Wrong size on BP_Battle_SkillScript_C_GetSkillCostOverride");
static_assert(offsetof(BP_Battle_SkillScript_C_GetSkillCostOverride, Override) == 0x000000, "Member 'BP_Battle_SkillScript_C_GetSkillCostOverride::Override' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetSkillCostOverride, NewValue) == 0x000004, "Member 'BP_Battle_SkillScript_C_GetSkillCostOverride::NewValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.GetSkillDefinition
// 0x0008 (0x0008 - 0x0000)
struct BP_Battle_SkillScript_C_GetSkillDefinition final
{
public:
	class UBP_DataAsset_Skill_C*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_GetSkillDefinition) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_GetSkillDefinition");
static_assert(sizeof(BP_Battle_SkillScript_C_GetSkillDefinition) == 0x000008, "Wrong size on BP_Battle_SkillScript_C_GetSkillDefinition");
static_assert(offsetof(BP_Battle_SkillScript_C_GetSkillDefinition, ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_GetSkillDefinition::ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.GetSkillElement
// 0x0020 (0x0020 - 0x0000)
struct BP_Battle_SkillScript_C_GetSkillElement final
{
public:
	EAttackType                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_Skill_C*                  CallFunc_GetSkillDefinition_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterData_CharacterData;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAttackType                                   CallFunc_GetElementForSkill_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_GetSkillElement) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_GetSkillElement");
static_assert(sizeof(BP_Battle_SkillScript_C_GetSkillElement) == 0x000020, "Wrong size on BP_Battle_SkillScript_C_GetSkillElement");
static_assert(offsetof(BP_Battle_SkillScript_C_GetSkillElement, ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_GetSkillElement::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetSkillElement, CallFunc_GetSkillDefinition_ReturnValue) == 0x000008, "Member 'BP_Battle_SkillScript_C_GetSkillElement::CallFunc_GetSkillDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetSkillElement, CallFunc_GetCharacterData_CharacterData) == 0x000010, "Member 'BP_Battle_SkillScript_C_GetSkillElement::CallFunc_GetCharacterData_CharacterData' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetSkillElement, CallFunc_GetElementForSkill_ReturnValue) == 0x000018, "Member 'BP_Battle_SkillScript_C_GetSkillElement::CallFunc_GetElementForSkill_ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.GetTargetedCharacters
// 0x0038 (0x0038 - 0x0000)
struct BP_Battle_SkillScript_C_GetTargetedCharacters final
{
public:
	TArray<class ABP_jRPG_Character_Battle_Base_C*> TargetedCharacters;                              // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCurrentCharacter_CurrentCharacter;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> K2Node_Select_Default;                           // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_Battle_SkillScript_C_GetTargetedCharacters) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_GetTargetedCharacters");
static_assert(sizeof(BP_Battle_SkillScript_C_GetTargetedCharacters) == 0x000038, "Wrong size on BP_Battle_SkillScript_C_GetTargetedCharacters");
static_assert(offsetof(BP_Battle_SkillScript_C_GetTargetedCharacters, TargetedCharacters) == 0x000000, "Member 'BP_Battle_SkillScript_C_GetTargetedCharacters::TargetedCharacters' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetTargetedCharacters, Temp_bool_Variable) == 0x000010, "Member 'BP_Battle_SkillScript_C_GetTargetedCharacters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetTargetedCharacters, CallFunc_GetCurrentCharacter_CurrentCharacter) == 0x000018, "Member 'BP_Battle_SkillScript_C_GetTargetedCharacters::CallFunc_GetCurrentCharacter_CurrentCharacter' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetTargetedCharacters, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000020, "Member 'BP_Battle_SkillScript_C_GetTargetedCharacters::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_GetTargetedCharacters, K2Node_Select_Default) == 0x000028, "Member 'BP_Battle_SkillScript_C_GetTargetedCharacters::K2Node_Select_Default' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.ShouldBlockForcedOverchargeFeedback
// 0x0001 (0x0001 - 0x0000)
struct BP_Battle_SkillScript_C_ShouldBlockForcedOverchargeFeedback final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_ShouldBlockForcedOverchargeFeedback) == 0x000001, "Wrong alignment on BP_Battle_SkillScript_C_ShouldBlockForcedOverchargeFeedback");
static_assert(sizeof(BP_Battle_SkillScript_C_ShouldBlockForcedOverchargeFeedback) == 0x000001, "Wrong size on BP_Battle_SkillScript_C_ShouldBlockForcedOverchargeFeedback");
static_assert(offsetof(BP_Battle_SkillScript_C_ShouldBlockForcedOverchargeFeedback, ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_ShouldBlockForcedOverchargeFeedback::ReturnValue' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.ValidateSkillAvailability
// 0x0020 (0x0020 - 0x0000)
struct BP_Battle_SkillScript_C_ValidateSkillAvailability final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BlockedActionFeedback               BlockedReason;                                     // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_ValidateSkillAvailability) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_ValidateSkillAvailability");
static_assert(sizeof(BP_Battle_SkillScript_C_ValidateSkillAvailability) == 0x000020, "Wrong size on BP_Battle_SkillScript_C_ValidateSkillAvailability");
static_assert(offsetof(BP_Battle_SkillScript_C_ValidateSkillAvailability, Available) == 0x000000, "Member 'BP_Battle_SkillScript_C_ValidateSkillAvailability::Available' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ValidateSkillAvailability, BlockedReason) == 0x000008, "Member 'BP_Battle_SkillScript_C_ValidateSkillAvailability::BlockedReason' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.ValidateSkillTargets
// 0x0030 (0x0030 - 0x0000)
struct BP_Battle_SkillScript_C_ValidateSkillTargets final
{
public:
	TArray<class UAC_jRPG_CharacterBattleStats_C*> TargetCharacterStats;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ValidTargets;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BlockedActionFeedback               BlockedReason;                                     // 0x0018(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_ValidateSkillTargets) == 0x000008, "Wrong alignment on BP_Battle_SkillScript_C_ValidateSkillTargets");
static_assert(sizeof(BP_Battle_SkillScript_C_ValidateSkillTargets) == 0x000030, "Wrong size on BP_Battle_SkillScript_C_ValidateSkillTargets");
static_assert(offsetof(BP_Battle_SkillScript_C_ValidateSkillTargets, TargetCharacterStats) == 0x000000, "Member 'BP_Battle_SkillScript_C_ValidateSkillTargets::TargetCharacterStats' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ValidateSkillTargets, ValidTargets) == 0x000010, "Member 'BP_Battle_SkillScript_C_ValidateSkillTargets::ValidTargets' has a wrong offset!");
static_assert(offsetof(BP_Battle_SkillScript_C_ValidateSkillTargets, BlockedReason) == 0x000018, "Member 'BP_Battle_SkillScript_C_ValidateSkillTargets::BlockedReason' has a wrong offset!");

// Function BP_Battle_SkillScript.BP_Battle_SkillScript_C.WasSkillCostCanceled
// 0x0001 (0x0001 - 0x0000)
struct BP_Battle_SkillScript_C_WasSkillCostCanceled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Battle_SkillScript_C_WasSkillCostCanceled) == 0x000001, "Wrong alignment on BP_Battle_SkillScript_C_WasSkillCostCanceled");
static_assert(sizeof(BP_Battle_SkillScript_C_WasSkillCostCanceled) == 0x000001, "Wrong size on BP_Battle_SkillScript_C_WasSkillCostCanceled");
static_assert(offsetof(BP_Battle_SkillScript_C_WasSkillCostCanceled, ReturnValue) == 0x000000, "Member 'BP_Battle_SkillScript_C_WasSkillCostCanceled::ReturnValue' has a wrong offset!");

}

