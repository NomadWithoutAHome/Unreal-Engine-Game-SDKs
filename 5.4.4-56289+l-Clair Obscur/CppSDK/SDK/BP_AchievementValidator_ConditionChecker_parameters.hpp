#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AchievementValidator_ConditionChecker

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AchievementValidator_ConditionChecker.BP_AchievementValidator_ConditionChecker_C.EvaluateAchievement
// 0x0088 (0x0088 - 0x0000)
struct BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement final
{
public:
	class UObject*                                CallFunc_GetWorldContext_WorldContext;             // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_ReturnValue;                        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement) == 0x000008, "Wrong alignment on BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement");
static_assert(sizeof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement) == 0x000088, "Wrong size on BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement, CallFunc_GetWorldContext_WorldContext) == 0x000000, "Member 'BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement::CallFunc_GetWorldContext_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement, CallFunc_Check_ReturnValue) == 0x000080, "Member 'BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement::CallFunc_Check_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'BP_AchievementValidator_ConditionChecker_C_EvaluateAchievement::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AchievementValidator_ConditionChecker.BP_AchievementValidator_ConditionChecker_C.Initialize
// 0x0030 (0x0030 - 0x0000)
struct BP_AchievementValidator_ConditionChecker_C_Initialize final
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetWorldContext_WorldContext;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ConditionChecker_C*                 K2Node_DynamicCast_AsBP_Condition_Checker;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_ReturnValue;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AchievementValidator_ConditionChecker_C_Initialize) == 0x000008, "Wrong alignment on BP_AchievementValidator_ConditionChecker_C_Initialize");
static_assert(sizeof(BP_AchievementValidator_ConditionChecker_C_Initialize) == 0x000030, "Wrong size on BP_AchievementValidator_ConditionChecker_C_Initialize");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Initialize, GameInstance) == 0x000000, "Member 'BP_AchievementValidator_ConditionChecker_C_Initialize::GameInstance' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Initialize, CallFunc_GetWorldContext_WorldContext) == 0x000008, "Member 'BP_AchievementValidator_ConditionChecker_C_Initialize::CallFunc_GetWorldContext_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_AchievementValidator_ConditionChecker_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Initialize, K2Node_DynamicCast_AsBP_Condition_Checker) == 0x000020, "Member 'BP_AchievementValidator_ConditionChecker_C_Initialize::K2Node_DynamicCast_AsBP_Condition_Checker' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AchievementValidator_ConditionChecker_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Initialize, CallFunc_Check_ReturnValue) == 0x000029, "Member 'BP_AchievementValidator_ConditionChecker_C_Initialize::CallFunc_Check_ReturnValue' has a wrong offset!");

// Function BP_AchievementValidator_ConditionChecker.BP_AchievementValidator_ConditionChecker_C.Uninitialize
// 0x0020 (0x0020 - 0x0000)
struct BP_AchievementValidator_ConditionChecker_C_Uninitialize final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ConditionChecker_C*                 K2Node_DynamicCast_AsBP_Condition_Checker;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AchievementValidator_ConditionChecker_C_Uninitialize) == 0x000008, "Wrong alignment on BP_AchievementValidator_ConditionChecker_C_Uninitialize");
static_assert(sizeof(BP_AchievementValidator_ConditionChecker_C_Uninitialize) == 0x000020, "Wrong size on BP_AchievementValidator_ConditionChecker_C_Uninitialize");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Uninitialize, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_AchievementValidator_ConditionChecker_C_Uninitialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Uninitialize, K2Node_DynamicCast_AsBP_Condition_Checker) == 0x000010, "Member 'BP_AchievementValidator_ConditionChecker_C_Uninitialize::K2Node_DynamicCast_AsBP_Condition_Checker' has a wrong offset!");
static_assert(offsetof(BP_AchievementValidator_ConditionChecker_C_Uninitialize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AchievementValidator_ConditionChecker_C_Uninitialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

