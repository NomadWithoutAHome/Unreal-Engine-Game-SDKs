#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimShooterBattleComponent

#include "Basic.hpp"

#include "BP_FreeAimShooterBattleComponent_classes.hpp"
#include "BP_FreeAimShooterBattleComponent_parameters.hpp"


namespace SDK
{

// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.BeginPreBlock
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::BeginPreBlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "BeginPreBlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.OnProjectileFiringFinished
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::OnProjectileFiringFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "OnProjectileFiringFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.CanCancelFreeAim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_FreeAimShooterBattleComponent_C::CanCancelFreeAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "CanCancelFreeAim");

	Params::BP_FreeAimShooterBattleComponent_C_CanCancelFreeAim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.SetShotsLeft
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShotsLeft_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::SetShotsLeft(int32 ShotsLeft_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "SetShotsLeft");

	Params::BP_FreeAimShooterBattleComponent_C_SetShotsLeft Parms{};

	Parms.ShotsLeft_0 = ShotsLeft_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.HasUnlimitedShots
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_FreeAimShooterBattleComponent_C::HasUnlimitedShots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "HasUnlimitedShots");

	Params::BP_FreeAimShooterBattleComponent_C_HasUnlimitedShots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.HasShotsLeft
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_FreeAimShooterBattleComponent_C::HasShotsLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "HasShotsLeft");

	Params::BP_FreeAimShooterBattleComponent_C_HasShotsLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.FireFreeAimProjectile
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::FireFreeAimProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "FireFreeAimProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.PrepareNextFreeAimProjectile
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_FreeAimProjectile_Base_C**    CreatedProjectileActor                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::PrepareNextFreeAimProjectile(class ABP_FreeAimProjectile_Base_C** CreatedProjectileActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "PrepareNextFreeAimProjectile");

	Params::BP_FreeAimShooterBattleComponent_C_PrepareNextFreeAimProjectile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CreatedProjectileActor != nullptr)
		*CreatedProjectileActor = Parms.CreatedProjectileActor;
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.HasFreeAimTimeExpired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_FreeAimShooterBattleComponent_C::HasFreeAimTimeExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "HasFreeAimTimeExpired");

	Params::BP_FreeAimShooterBattleComponent_C_HasFreeAimTimeExpired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.Internal_DisableFreeAim
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::Internal_DisableFreeAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "Internal_DisableFreeAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.CancelRegularFreeAim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::CancelRegularFreeAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "CancelRegularFreeAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.EndFreeAim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::EndFreeAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "EndFreeAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.EnableFreeAim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFreeAimType                            FreeAimType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AmmoCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TimeLimit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ProjectileClass_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::EnableFreeAim(EFreeAimType FreeAimType, int32 AmmoCount, double TimeLimit, class UClass* ProjectileClass_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "EnableFreeAim");

	Params::BP_FreeAimShooterBattleComponent_C_EnableFreeAim Parms{};

	Parms.FreeAimType = FreeAimType;
	Parms.AmmoCount = AmmoCount;
	Parms.TimeLimit = TimeLimit;
	Parms.ProjectileClass_0 = ProjectileClass_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.OnFreeAimShootAction
// (BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::OnFreeAimShootAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "OnFreeAimShootAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "ReceiveTick");

	Params::BP_FreeAimShooterBattleComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.BindFreeAimProjectile
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_FreeAimProjectile_Base_C*     Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::BindFreeAimProjectile(class ABP_FreeAimProjectile_Base_C* Projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "BindFreeAimProjectile");

	Params::BP_FreeAimShooterBattleComponent_C_BindFreeAimProjectile Parms{};

	Parms.Projectile = Projectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.OnFreeAimProjectileHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EFreeAimBodyPartType                    BodyPart                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class UBP_FreeAimTargetPart_C*          TargetBodyPartBP                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::OnFreeAimProjectileHit(class ABP_jRPG_Character_Battle_Base_C* Character, EFreeAimBodyPartType BodyPart, const struct FHitResult& HitResult, class UBP_FreeAimTargetPart_C* TargetBodyPartBP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "OnFreeAimProjectileHit");

	Params::BP_FreeAimShooterBattleComponent_C_OnFreeAimProjectileHit Parms{};

	Parms.Character = Character;
	Parms.BodyPart = BodyPart;
	Parms.HitResult = std::move(HitResult);
	Parms.TargetBodyPartBP = TargetBodyPartBP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.UnbindFreeAimEvents
// (BlueprintCallable, BlueprintEvent)

void UBP_FreeAimShooterBattleComponent_C::UnbindFreeAimEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "UnbindFreeAimEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.UpdateAimingLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   WorldAimLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::UpdateAimingLocation(const struct FVector& WorldAimLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "UpdateAimingLocation");

	Params::BP_FreeAimShooterBattleComponent_C_UpdateAimingLocation Parms{};

	Parms.WorldAimLocation = std::move(WorldAimLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimShooterBattleComponent.BP_FreeAimShooterBattleComponent_C.ExecuteUbergraph_BP_FreeAimShooterBattleComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FreeAimShooterBattleComponent_C::ExecuteUbergraph_BP_FreeAimShooterBattleComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimShooterBattleComponent_C", "ExecuteUbergraph_BP_FreeAimShooterBattleComponent");

	Params::BP_FreeAimShooterBattleComponent_C_ExecuteUbergraph_BP_FreeAimShooterBattleComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

