#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelSequenceExecutor

#include "Basic.hpp"

#include "BP_LevelSequenceExecutor_classes.hpp"
#include "BP_LevelSequenceExecutor_parameters.hpp"


namespace SDK
{

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.ResetState
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelSequenceExecutor_C::ResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "ResetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.ResetSequence
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelSequenceExecutor_C::ResetSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "ResetSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LevelSequenceExecutor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.PlaySequence
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelSequenceExecutor_C::PlaySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "PlaySequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnSequenceStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelSequenceExecutor_C::OnSequenceStateLoaded(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "OnSequenceStateLoaded");

	Params::BP_LevelSequenceExecutor_C_OnSequenceStateLoaded Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnSequencePlayed
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_LevelSequenceExecutor_C::OnSequencePlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "OnSequencePlayed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnLoaded_8738431E4CA73E2081042690EE2C35AC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelSequenceExecutor_C::OnLoaded_8738431E4CA73E2081042690EE2C35AC(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "OnLoaded_8738431E4CA73E2081042690EE2C35AC");

	Params::BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnLoaded_8738431E4CA73E20810426908D00A7C4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelSequenceExecutor_C::OnLoaded_8738431E4CA73E20810426908D00A7C4(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "OnLoaded_8738431E4CA73E20810426908D00A7C4");

	Params::BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnLoaded_8738431E4CA73E20810426903BE07941
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelSequenceExecutor_C::OnLoaded_8738431E4CA73E20810426903BE07941(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "OnLoaded_8738431E4CA73E20810426903BE07941");

	Params::BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.IsSequencePlayed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LevelSequenceExecutor_C::IsSequencePlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "IsSequencePlayed");

	Params::BP_LevelSequenceExecutor_C_IsSequencePlayed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.GetFrameForLoading
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMovieSceneSequencePlaybackParams*MovieSceneSequencePlaybackParams                       (Parm, OutParm)

void ABP_LevelSequenceExecutor_C::GetFrameForLoading(struct FMovieSceneSequencePlaybackParams* MovieSceneSequencePlaybackParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "GetFrameForLoading");

	Params::BP_LevelSequenceExecutor_C_GetFrameForLoading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MovieSceneSequencePlaybackParams != nullptr)
		*MovieSceneSequencePlaybackParams = std::move(Parms.MovieSceneSequencePlaybackParams);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.GetFirstFrame
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FMovieSceneSequencePlaybackParams*MovieSceneSequencePlaybackParams                       (Parm, OutParm)

void ABP_LevelSequenceExecutor_C::GetFirstFrame(struct FMovieSceneSequencePlaybackParams* MovieSceneSequencePlaybackParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "GetFirstFrame");

	Params::BP_LevelSequenceExecutor_C_GetFirstFrame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MovieSceneSequencePlaybackParams != nullptr)
		*MovieSceneSequencePlaybackParams = std::move(Parms.MovieSceneSequencePlaybackParams);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.ExecuteUbergraph_BP_LevelSequenceExecutor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelSequenceExecutor_C::ExecuteUbergraph_BP_LevelSequenceExecutor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "ExecuteUbergraph_BP_LevelSequenceExecutor");

	Params::BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.EditorResetSequence
// (BlueprintCallable, BlueprintEvent)

void ABP_LevelSequenceExecutor_C::EditorResetSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "EditorResetSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.EditorPlaySequence
// (BlueprintCallable, BlueprintEvent)

void ABP_LevelSequenceExecutor_C::EditorPlaySequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "EditorPlaySequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.CreateLevelSequencePlayer
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   LevelSequence_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_LevelSequenceExecutor_C::CreateLevelSequencePlayer(class ULevelSequence* LevelSequence_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "CreateLevelSequencePlayer");

	Params::BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer Parms{};

	Parms.LevelSequence_0 = LevelSequence_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.CheckForErrors
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>&                    ErrorMessages                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_LevelSequenceExecutor_C::CheckForErrors(TArray<class FText>& ErrorMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelSequenceExecutor_C", "CheckForErrors");

	Params::BP_LevelSequenceExecutor_C_CheckForErrors Parms{};

	Parms.ErrorMessages = std::move(ErrorMessages);

	UObject::ProcessEvent(Func, &Parms);

	ErrorMessages = std::move(Parms.ErrorMessages);

	return Parms.ReturnValue;
}

}

