#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KiBLII

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "UMG_classes.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class KiBLII.KiBLIIFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UKiBLIIFunctionLibrary final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetKeyboardLayoutsChars();
	static struct FKey RemapKey_QwertyToSystem(const struct FKey& Key);
	static struct FKeyEvent RemapKeyEvent_QwertyToSystem(const struct FKeyEvent& KeyEvent);
	static struct FKeyEvent RemapKeyEvent_SystemToQwerty(const struct FKeyEvent& KeyEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KiBLIIFunctionLibrary">();
	}
	static class UKiBLIIFunctionLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKiBLIIFunctionLibrary>();
	}
};
static_assert(alignof(UKiBLIIFunctionLibrary) == 0x000008, "Wrong alignment on UKiBLIIFunctionLibrary");
static_assert(sizeof(UKiBLIIFunctionLibrary) == 0x000028, "Wrong size on UKiBLIIFunctionLibrary");

// Class KiBLII.KiBLIIInputKeySelector
// 0x0000 (0x0950 - 0x0950)
class UKiBLIIInputKeySelector final : public UInputKeySelector
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KiBLIIInputKeySelector">();
	}
	static class UKiBLIIInputKeySelector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKiBLIIInputKeySelector>();
	}
};
static_assert(alignof(UKiBLIIInputKeySelector) == 0x000010, "Wrong alignment on UKiBLIIInputKeySelector");
static_assert(sizeof(UKiBLIIInputKeySelector) == 0x000950, "Wrong size on UKiBLIIInputKeySelector");

// Class KiBLII.KiBLIISettings
// 0x0018 (0x0040 - 0x0028)
class UKiBLIISettings final : public UObject
{
public:
	bool                                          bEnableInGame;                                     // 0x0028(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableInEditor;                                   // 0x0029(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LowercaseCharacters;                               // 0x0030(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"KiBLIISettings">();
	}
	static class UKiBLIISettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKiBLIISettings>();
	}
};
static_assert(alignof(UKiBLIISettings) == 0x000008, "Wrong alignment on UKiBLIISettings");
static_assert(sizeof(UKiBLIISettings) == 0x000040, "Wrong size on UKiBLIISettings");
static_assert(offsetof(UKiBLIISettings, bEnableInGame) == 0x000028, "Member 'UKiBLIISettings::bEnableInGame' has a wrong offset!");
static_assert(offsetof(UKiBLIISettings, bEnableInEditor) == 0x000029, "Member 'UKiBLIISettings::bEnableInEditor' has a wrong offset!");
static_assert(offsetof(UKiBLIISettings, LowercaseCharacters) == 0x000030, "Member 'UKiBLIISettings::LowercaseCharacters' has a wrong offset!");

}

