#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_FreeAimTargetData

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_FreeAimTargetData.S_FreeAimTargetData
// 0x0048 (0x0048 - 0x0000)
struct FS_FreeAimTargetData final
{
public:
	bool                                          HasHit_2_0B57397345ED8D51F69E319F905255FF;         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HitDistance_4_3A8696044AFD1DDFB618DAAF80EA637C;    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation_7_E56F8EC541CF78FED45BE9A69DD47B38;    // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitDirection_9_7BBE94534AA589B55889F28DE93CFE55;   // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor_12_34FAF42C45666B8379717BA55FE79EC2;      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_FreeAimTargetData) == 0x000008, "Wrong alignment on FS_FreeAimTargetData");
static_assert(sizeof(FS_FreeAimTargetData) == 0x000048, "Wrong size on FS_FreeAimTargetData");
static_assert(offsetof(FS_FreeAimTargetData, HasHit_2_0B57397345ED8D51F69E319F905255FF) == 0x000000, "Member 'FS_FreeAimTargetData::HasHit_2_0B57397345ED8D51F69E319F905255FF' has a wrong offset!");
static_assert(offsetof(FS_FreeAimTargetData, HitDistance_4_3A8696044AFD1DDFB618DAAF80EA637C) == 0x000008, "Member 'FS_FreeAimTargetData::HitDistance_4_3A8696044AFD1DDFB618DAAF80EA637C' has a wrong offset!");
static_assert(offsetof(FS_FreeAimTargetData, HitLocation_7_E56F8EC541CF78FED45BE9A69DD47B38) == 0x000010, "Member 'FS_FreeAimTargetData::HitLocation_7_E56F8EC541CF78FED45BE9A69DD47B38' has a wrong offset!");
static_assert(offsetof(FS_FreeAimTargetData, HitDirection_9_7BBE94534AA589B55889F28DE93CFE55) == 0x000028, "Member 'FS_FreeAimTargetData::HitDirection_9_7BBE94534AA589B55889F28DE93CFE55' has a wrong offset!");
static_assert(offsetof(FS_FreeAimTargetData, HitActor_12_34FAF42C45666B8379717BA55FE79EC2) == 0x000040, "Member 'FS_FreeAimTargetData::HitActor_12_34FAF42C45666B8379717BA55FE79EC2' has a wrong offset!");

}

