#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ItemFilterInterface

#include "Basic.hpp"

#include "BPI_ItemFilterInterface_classes.hpp"
#include "BPI_ItemFilterInterface_parameters.hpp"


namespace SDK
{

// Function BPI_ItemFilterInterface.BPI_ItemFilterInterface_C.ExecuteFilter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UBP_ItemInstance_Base_C*>&ItemInstances                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UBP_ItemInstance_Base_C*>* FilteredItemInstances                                  (Parm, OutParm)

void IBPI_ItemFilterInterface_C::ExecuteFilter(const TArray<class UBP_ItemInstance_Base_C*>& ItemInstances, TArray<class UBP_ItemInstance_Base_C*>* FilteredItemInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_ItemFilterInterface_C", "ExecuteFilter");

	Params::BPI_ItemFilterInterface_C_ExecuteFilter Parms{};

	Parms.ItemInstances = std::move(ItemInstances);

	AsUObject()->ProcessEvent(Func, &Parms);

	if (FilteredItemInstances != nullptr)
		*FilteredItemInstances = std::move(Parms.FilteredItemInstances);
}


// Function BPI_ItemFilterInterface.BPI_ItemFilterInterface_C.GetCompatibleItemSorters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>*                  ItemSorters                                            (Parm, OutParm)

void IBPI_ItemFilterInterface_C::GetCompatibleItemSorters(TArray<class UClass*>* ItemSorters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_ItemFilterInterface_C", "GetCompatibleItemSorters");

	Params::BPI_ItemFilterInterface_C_GetCompatibleItemSorters Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (ItemSorters != nullptr)
		*ItemSorters = std::move(Parms.ItemSorters);
}


// Function BPI_ItemFilterInterface.BPI_ItemFilterInterface_C.GetDisplayName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText*                            DisplayName                                            (Parm, OutParm)

void IBPI_ItemFilterInterface_C::GetDisplayName(class FText* DisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_ItemFilterInterface_C", "GetDisplayName");

	Params::BPI_ItemFilterInterface_C_GetDisplayName Parms{};

	AsUObject()->ProcessEvent(Func, &Parms);

	if (DisplayName != nullptr)
		*DisplayName = std::move(Parms.DisplayName);
}

}

