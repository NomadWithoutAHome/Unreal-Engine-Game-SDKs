#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InteractiveMusicSystem

#include "Basic.hpp"

#include "E_InteractiveMusicContext_structs.hpp"
#include "S_InteractiveMusicParameters_structs.hpp"
#include "S_InteractiveMusic_structs.hpp"
#include "S_InteractiveMusicContextSwitch_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.AdjustVolumeByContext
// 0x000C (0x000C - 0x0000)
struct BP_InteractiveMusicSystem_C_AdjustVolumeByContext final
{
public:
	float                                         AdjustVolumeDuration;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustVolumeLevel;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InteractiveMusicContext                     Context;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_AdjustVolumeByContext) == 0x000004, "Wrong alignment on BP_InteractiveMusicSystem_C_AdjustVolumeByContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_AdjustVolumeByContext) == 0x00000C, "Wrong size on BP_InteractiveMusicSystem_C_AdjustVolumeByContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeByContext, AdjustVolumeDuration) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeByContext::AdjustVolumeDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeByContext, AdjustVolumeLevel) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeByContext::AdjustVolumeLevel' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeByContext, Context) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeByContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeByContext, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeByContext::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.AdjustVolumeCurrentContext
// 0x0028 (0x0028 - 0x0000)
struct BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext final
{
public:
	float                                         AdjustVolumeDuration;                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustVolumeLevel;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_GetCurrentInteractiveMusic_InteractiveMusic; // 0x0008(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext) == 0x000028, "Wrong size on BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext, AdjustVolumeDuration) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext::AdjustVolumeDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext, AdjustVolumeLevel) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext::AdjustVolumeLevel' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext, CallFunc_GetCurrentInteractiveMusic_InteractiveMusic) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext::CallFunc_GetCurrentInteractiveMusic_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeCurrentContext::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.AdjustVolumeInteractiveMusicByContext
// 0x00C0 (0x00C0 - 0x0000)
struct BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdjustVolumeDuration;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdjustVolumeLevel;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0080(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext) == 0x0000C0, "Wrong size on BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, AdjustVolumeDuration) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::AdjustVolumeDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, AdjustVolumeLevel) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::AdjustVolumeLevel' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000080, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_IsPlaying_ReturnValue) == 0x0000B8, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B9, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext, CallFunc_IsValid_ReturnValue) == 0x0000BA, "Member 'BP_InteractiveMusicSystem_C_AdjustVolumeInteractiveMusicByContext::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ApplyInteractiveMusicParameters
// 0x0030 (0x0030 - 0x0000)
struct BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters final
{
public:
	struct FS_InteractiveMusicParameters          Parameters;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_CreateInteractiveMusicWithContextIfNeeded_InteractiveMusic; // 0x0018(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters) == 0x000030, "Wrong size on BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters, Parameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters::Parameters' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters, CallFunc_CreateInteractiveMusicWithContextIfNeeded_InteractiveMusic) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_ApplyInteractiveMusicParameters::CallFunc_CreateInteractiveMusicWithContextIfNeeded_InteractiveMusic' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ComputeCurrentInteractiveMusicParameters
// 0x0050 (0x0050 - 0x0000)
struct BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters final
{
public:
	struct FS_InteractiveMusicParameters          InteractiveMusicParameters;                        // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_GetCurrentInteractiveMusic_InteractiveMusic; // 0x0018(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InteractiveMusicContext                     CallFunc_GetCurrentContext_Context;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusicParameters          K2Node_MakeStruct_S_InteractiveMusicParameters;    // 0x0038(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters) == 0x000050, "Wrong size on BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters, InteractiveMusicParameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters::InteractiveMusicParameters' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters, CallFunc_GetCurrentInteractiveMusic_InteractiveMusic) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters::CallFunc_GetCurrentInteractiveMusic_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters, CallFunc_GetCurrentContext_Context) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters::CallFunc_GetCurrentContext_Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters, K2Node_MakeStruct_S_InteractiveMusicParameters) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_ComputeCurrentInteractiveMusicParameters::K2Node_MakeStruct_S_InteractiveMusicParameters' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.Create New Audio Component
// 0x0028 (0x0028 - 0x0000)
struct BP_InteractiveMusicSystem_C_Create_New_Audio_Component final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SpawnedComponent;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAudioComponentPlayState PlayState)> K2Node_CreateDelegate_OutputDelegate;        // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_Create_New_Audio_Component) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_Create_New_Audio_Component");
static_assert(sizeof(BP_InteractiveMusicSystem_C_Create_New_Audio_Component) == 0x000028, "Wrong size on BP_InteractiveMusicSystem_C_Create_New_Audio_Component");
static_assert(offsetof(BP_InteractiveMusicSystem_C_Create_New_Audio_Component, Sound) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_Create_New_Audio_Component::Sound' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_Create_New_Audio_Component, SpawnedComponent) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_Create_New_Audio_Component::SpawnedComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_Create_New_Audio_Component, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_Create_New_Audio_Component::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_Create_New_Audio_Component, CallFunc_SpawnSound2D_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_Create_New_Audio_Component::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.CreateInteractiveMusicWithContextIfNeeded
// 0x0088 (0x0088 - 0x0000)
struct BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    InteractiveMusic;                                  // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Create_New_Audio_Component_SpawnedComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    K2Node_MakeStruct_S_InteractiveMusic;              // 0x0038(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0058(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetSoundByContext_Sound;                  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSoundByContext_LastAudioTrigger;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded");
static_assert(sizeof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded) == 0x000088, "Wrong size on BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, Sound) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::Sound' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, InteractiveMusic) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_Create_New_Audio_Component_SpawnedComponent) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_Create_New_Audio_Component_SpawnedComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, K2Node_MakeStruct_S_InteractiveMusic) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::K2Node_MakeStruct_S_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000058, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_GetSoundByContext_Sound) == 0x000070, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_GetSoundByContext_Sound' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_GetSoundByContext_LastAudioTrigger) == 0x000078, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_GetSoundByContext_LastAudioTrigger' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded, CallFunc_BooleanOR_ReturnValue) == 0x000081, "Member 'BP_InteractiveMusicSystem_C_CreateInteractiveMusicWithContextIfNeeded::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.DestroyAllInteractiveMusicContexts
// 0x0048 (0x0048 - 0x0000)
struct BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InteractiveMusic>            CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts");
static_assert(sizeof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts) == 0x000048, "Wrong size on BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_InteractiveMusicSystem_C_DestroyAllInteractiveMusicContexts::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ExecuteAudioTriggerByContext
// 0x00F0 (0x00F0 - 0x0000)
struct BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AudioTrigger;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInterruption;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    local_Music;                                       // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetTriggerParameter_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ReferenceParm)
	struct FS_InteractiveMusic                    CallFunc_Map_Find_Value;                           // 0x00B8(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext) == 0x0000F0, "Wrong size on BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, AudioTrigger) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::AudioTrigger' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, IsInterruption) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::IsInterruption' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, local_Music) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::local_Music' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_SetTriggerParameter_self_CastInput) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_SetTriggerParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_IsNameValid_ReturnValue) == 0x000039, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000040, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, K2Node_MakeArray_Array) == 0x0000A8, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_Map_Find_Value) == 0x0000B8, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext, CallFunc_BooleanAND_ReturnValue) == 0x0000E8, "Member 'BP_InteractiveMusicSystem_C_ExecuteAudioTriggerByContext::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ExecuteUbergraph_BP_InteractiveMusicSystem
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enable;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugString_String;                    // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem) == 0x000018, "Wrong size on BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem, EntryPoint) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem, K2Node_CustomEvent_Enable) == 0x000006, "Member 'BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem::K2Node_CustomEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000007, "Member 'BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem, CallFunc_GetDebugString_String) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_ExecuteUbergraph_BP_InteractiveMusicSystem::CallFunc_GetDebugString_String' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.FadeOutInteractiveMusicByContext
// 0x0028 (0x0028 - 0x0000)
struct BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AdjustVolumeDuration;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0008(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext) == 0x000028, "Wrong size on BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext, AdjustVolumeDuration) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext::AdjustVolumeDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_FadeOutInteractiveMusicByContext::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetAudioComponentDebugString
// 0x00A8 (0x00A8 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetAudioComponentDebugString final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetAudioComponentDebugString");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString) == 0x0000A8, "Wrong size on BP_InteractiveMusicSystem_C_GetAudioComponentDebugString");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, AudioComponent) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, ReturnValue) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioComponentDebugString, CallFunc_Format_ReturnValue) == 0x000098, "Member 'BP_InteractiveMusicSystem_C_GetAudioComponentDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetAudioTriggerNameForContextAndTable
// 0x0130 (0x0130 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_InteractiveMusicContext                     Context;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AudioTriggerName;                                  // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FS_InteractiveMusicContextSwitch       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable) == 0x000130, "Wrong size on BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, DataTable) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::DataTable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, Context) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, AudioTriggerName) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::AudioTriggerName' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_Conv_StringToName_ReturnValue) == 0x000048, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A4, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000A8, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B8, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, K2Node_MakeArray_Array) == 0x000110, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable, CallFunc_Format_ReturnValue) == 0x000120, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameForContextAndTable::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetAudioTriggerNameWhenInterrupted
// 0x0014 (0x0014 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted final
{
public:
	E_InteractiveMusicContext                     NewContext;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AudioTriggerName;                                  // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAudioTriggerNameForContextAndTable_AudioTriggerName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted) == 0x000004, "Wrong alignment on BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted) == 0x000014, "Wrong size on BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted, NewContext) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted::NewContext' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted, AudioTriggerName) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted::AudioTriggerName' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted, CallFunc_GetAudioTriggerNameForContextAndTable_AudioTriggerName) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupted::CallFunc_GetAudioTriggerNameForContextAndTable_AudioTriggerName' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetAudioTriggerNameWhenInterrupting
// 0x0014 (0x0014 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting final
{
public:
	E_InteractiveMusicContext                     CurrentContext_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AudioTriggerName;                                  // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAudioTriggerNameForContextAndTable_AudioTriggerName; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting) == 0x000004, "Wrong alignment on BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting) == 0x000014, "Wrong size on BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting, CurrentContext_0) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting::CurrentContext_0' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting, AudioTriggerName) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting::AudioTriggerName' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting, CallFunc_GetAudioTriggerNameForContextAndTable_AudioTriggerName) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_GetAudioTriggerNameWhenInterrupting::CallFunc_GetAudioTriggerNameForContextAndTable_AudioTriggerName' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetCurrentContext
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetCurrentContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetCurrentContext) == 0x000001, "Wrong alignment on BP_InteractiveMusicSystem_C_GetCurrentContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetCurrentContext) == 0x000001, "Wrong size on BP_InteractiveMusicSystem_C_GetCurrentContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetCurrentContext::Context' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetCurrentInteractiveMusic
// 0x0030 (0x0030 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic final
{
public:
	struct FS_InteractiveMusic                    InteractiveMusic;                                  // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0018(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic) == 0x000030, "Wrong size on BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic, InteractiveMusic) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic::InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_GetCurrentInteractiveMusic::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetCurrentSoundData
// 0x0028 (0x0028 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetCurrentSoundData final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   LastAudioTrigger;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetSoundByContext_Sound;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CallFunc_GetSoundByContext_LastAudioTrigger;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetCurrentSoundData) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetCurrentSoundData");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetCurrentSoundData) == 0x000028, "Wrong size on BP_InteractiveMusicSystem_C_GetCurrentSoundData");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentSoundData, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetCurrentSoundData::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentSoundData, Sound) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_GetCurrentSoundData::Sound' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentSoundData, LastAudioTrigger) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_GetCurrentSoundData::LastAudioTrigger' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentSoundData, CallFunc_GetSoundByContext_Sound) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_GetCurrentSoundData::CallFunc_GetSoundByContext_Sound' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetCurrentSoundData, CallFunc_GetSoundByContext_LastAudioTrigger) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_GetCurrentSoundData::CallFunc_GetSoundByContext_LastAudioTrigger' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetDebugString
// 0x0180 (0x0180 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetDebugString final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 local_DebugString;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<E_InteractiveMusicContext>             CallFunc_Map_Keys_Keys;                            // 0x00A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B8(0x0010)()
	E_InteractiveMusicContext                     CallFunc_Array_Get_Item;                           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_Map_Find_Value;                           // 0x0118(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetInteractiveMusicDebugString_ReturnValue; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetDebugString) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetDebugString");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetDebugString) == 0x000180, "Wrong size on BP_InteractiveMusicSystem_C_GetDebugString");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, String) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::String' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, local_DebugString) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::local_DebugString' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_SelectString_ReturnValue) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000098, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Map_Keys_Keys) == 0x0000A8, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B8, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Map_Find_Value) == 0x000118, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Map_Find_ReturnValue) == 0x000130, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, K2Node_MakeArray_Array) == 0x000138, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_GetInteractiveMusicDebugString_ReturnValue) == 0x000148, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_GetInteractiveMusicDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Format_ReturnValue) == 0x000158, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Concat_StrStr_ReturnValue) == 0x000168, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetDebugString, CallFunc_Less_IntInt_ReturnValue) == 0x00017C, "Member 'BP_InteractiveMusicSystem_C_GetDebugString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetInteractiveMusicByContext
// 0x0040 (0x0040 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    InteractiveMusic;                                  // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_Map_Find_Value;                           // 0x0020(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext) == 0x000040, "Wrong size on BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext, InteractiveMusic) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext::InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicByContext::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetInteractiveMusicDebugString
// 0x01B0 (0x01B0 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString final
{
public:
	E_InteractiveMusicContext                     InteractiveMusicContext;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    InteractiveMusic;                                  // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0050(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0060(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0110(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAudioComponentDebugString_ReturnValue; // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString) == 0x0001B0, "Wrong size on BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, InteractiveMusicContext) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::InteractiveMusicContext' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, InteractiveMusic) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Conv_NameToText_ReturnValue) == 0x000050, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000060, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, K2Node_MakeArray_Array_1) == 0x000110, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Format_ReturnValue) == 0x000120, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Format_ReturnValue_1) == 0x000130, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_GetAudioComponentDebugString_ReturnValue) == 0x000140, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_GetAudioComponentDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000150, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000160, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000170, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000180, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000190, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001A0, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicDebugString::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetInteractiveMusicParametersDebugString
// 0x0128 (0x0128 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString final
{
public:
	struct FS_InteractiveMusicParameters          InteractiveMusicParameters;                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0048(0x0010)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString) == 0x000128, "Wrong size on BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, InteractiveMusicParameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::InteractiveMusicParameters' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, ReturnValue) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_Conv_NameToText_ReturnValue) == 0x000048, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_SelectString_ReturnValue) == 0x0000C8, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E8, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F8, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000108, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000118, "Member 'BP_InteractiveMusicSystem_C_GetInteractiveMusicParametersDebugString::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.GetSoundByContext
// 0x0038 (0x0038 - 0x0000)
struct BP_InteractiveMusicSystem_C_GetSoundByContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   LastAudioTrigger;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0018(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_GetSoundByContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_GetSoundByContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_GetSoundByContext) == 0x000038, "Wrong size on BP_InteractiveMusicSystem_C_GetSoundByContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetSoundByContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_GetSoundByContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetSoundByContext, Sound) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_GetSoundByContext::Sound' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetSoundByContext, LastAudioTrigger) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_GetSoundByContext::LastAudioTrigger' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetSoundByContext, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_GetSoundByContext::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_GetSoundByContext, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_GetSoundByContext::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractiveMusicSystem_C_Initialize final
{
public:
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_Initialize) == 0x000004, "Wrong alignment on BP_InteractiveMusicSystem_C_Initialize");
static_assert(sizeof(BP_InteractiveMusicSystem_C_Initialize) == 0x000010, "Wrong size on BP_InteractiveMusicSystem_C_Initialize");
static_assert(offsetof(BP_InteractiveMusicSystem_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.InterruptInteractiveMusic
// 0x0030 (0x0030 - 0x0000)
struct BP_InteractiveMusicSystem_C_InterruptInteractiveMusic final
{
public:
	E_InteractiveMusicContext                     NewContext;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAudioTriggerNameWhenInterrupted_AudioTriggerName; // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPauseMusic_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    CallFunc_GetCurrentInteractiveMusic_InteractiveMusic; // 0x0010(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_InterruptInteractiveMusic");
static_assert(sizeof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic) == 0x000030, "Wrong size on BP_InteractiveMusicSystem_C_InterruptInteractiveMusic");
static_assert(offsetof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic, NewContext) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_InterruptInteractiveMusic::NewContext' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic, CallFunc_GetAudioTriggerNameWhenInterrupted_AudioTriggerName) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_InterruptInteractiveMusic::CallFunc_GetAudioTriggerNameWhenInterrupted_AudioTriggerName' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic, CallFunc_ShouldPauseMusic_ReturnValue) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_InterruptInteractiveMusic::CallFunc_ShouldPauseMusic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic, CallFunc_GetCurrentInteractiveMusic_InteractiveMusic) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_InterruptInteractiveMusic::CallFunc_GetCurrentInteractiveMusic_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_InterruptInteractiveMusic::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_InterruptInteractiveMusic, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_InteractiveMusicSystem_C_InterruptInteractiveMusic::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.MarkAudioComponentForUnspawn
// 0x0010 (0x0010 - 0x0000)
struct BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn final
{
public:
	class UAudioComponent*                        AudioComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn");
static_assert(sizeof(BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn) == 0x000010, "Wrong size on BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn");
static_assert(offsetof(BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn, AudioComponent) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_MarkAudioComponentForUnspawn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.OnAudioPlayStateChanged
// 0x0030 (0x0030 - 0x0000)
struct BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged final
{
public:
	EAudioComponentPlayState                      PlayState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAudioComponentPlayState                      CallFunc_GetPlayState_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged");
static_assert(sizeof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged) == 0x000030, "Wrong size on BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, PlayState) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::PlayState' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_GetPlayState_ReturnValue) == 0x000019, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_GetPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged, CallFunc_Max_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_OnAudioPlayStateChanged::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.PlayInteractiveMusicContext
// 0x0040 (0x0040 - 0x0000)
struct BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0008(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusicParameters          K2Node_MakeStruct_S_InteractiveMusicParameters;    // 0x0028(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext) == 0x000040, "Wrong size on BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext, K2Node_MakeStruct_S_InteractiveMusicParameters) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_PlayInteractiveMusicContext::K2Node_MakeStruct_S_InteractiveMusicParameters' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.PrintAudioTriggerName
// 0x0100 (0x0100 - 0x0000)
struct BP_InteractiveMusicSystem_C_PrintAudioTriggerName final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AudioTriggerName;                                  // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 local_DebugString;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_PrintAudioTriggerName");
static_assert(sizeof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName) == 0x000100, "Wrong size on BP_InteractiveMusicSystem_C_PrintAudioTriggerName");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, AudioTriggerName) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::AudioTriggerName' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, local_DebugString) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::local_DebugString' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, K2Node_MakeArray_Array) == 0x0000E0, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintAudioTriggerName, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'BP_InteractiveMusicSystem_C_PrintAudioTriggerName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.PrintInteractiveMusicParameters
// 0x0290 (0x0290 - 0x0000)
struct BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters final
{
public:
	struct FS_InteractiveMusicParameters          Parameters;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 local_DebugString;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0058(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0108(0x0010)()
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01C0(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x01D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01E0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0228(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0270(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters");
static_assert(sizeof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters) == 0x000290, "Wrong size on BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, Parameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::Parameters' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, local_DebugString) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::local_DebugString' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000058, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Conv_NameToText_ReturnValue) == 0x000108, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Format_ReturnValue) == 0x000118, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_IsNameValid_ReturnValue) == 0x000170, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeArray_Array_1) == 0x000178, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_IsValid_ReturnValue) == 0x000188, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Format_ReturnValue_1) == 0x000190, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_SelectString_ReturnValue) == 0x0001A0, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_SelectString_ReturnValue_1) == 0x0001B0, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001C0, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0001D0, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001E0, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeStruct_FormatArgumentData_4) == 0x000228, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, K2Node_MakeArray_Array_2) == 0x000270, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters, CallFunc_Format_ReturnValue_2) == 0x000280, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicParameters::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.PrintInteractiveMusicStringInLog
// 0x0098 (0x0098 - 0x0000)
struct BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 local_DebugString;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog");
static_assert(sizeof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog) == 0x000098, "Wrong size on BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog, String) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog::String' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog, local_DebugString) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog::local_DebugString' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_InteractiveMusicSystem_C_PrintInteractiveMusicStringInLog::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ProcessMusicInterruption
// 0x000C (0x000C - 0x0000)
struct BP_InteractiveMusicSystem_C_ProcessMusicInterruption final
{
public:
	E_InteractiveMusicContext                     NewContext;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAudioTriggerNameWhenInterrupting_AudioTriggerName; // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ProcessMusicInterruption) == 0x000004, "Wrong alignment on BP_InteractiveMusicSystem_C_ProcessMusicInterruption");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ProcessMusicInterruption) == 0x00000C, "Wrong size on BP_InteractiveMusicSystem_C_ProcessMusicInterruption");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ProcessMusicInterruption, NewContext) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ProcessMusicInterruption::NewContext' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ProcessMusicInterruption, CallFunc_GetAudioTriggerNameWhenInterrupting_AudioTriggerName) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_ProcessMusicInterruption::CallFunc_GetAudioTriggerNameWhenInterrupting_AudioTriggerName' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.PushInteractiveMusicContext
// 0x0020 (0x0020 - 0x0000)
struct BP_InteractiveMusicSystem_C_PushInteractiveMusicContext final
{
public:
	struct FS_InteractiveMusicParameters          InteractiveMusicParameters;                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentLevelProductionLevel_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateInteractiveMusicParameters_IsValid; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_PushInteractiveMusicContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_PushInteractiveMusicContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_PushInteractiveMusicContext) == 0x000020, "Wrong size on BP_InteractiveMusicSystem_C_PushInteractiveMusicContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PushInteractiveMusicContext, InteractiveMusicParameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_PushInteractiveMusicContext::InteractiveMusicParameters' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PushInteractiveMusicContext, CallFunc_IsCurrentLevelProductionLevel_ReturnValue) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_PushInteractiveMusicContext::CallFunc_IsCurrentLevelProductionLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PushInteractiveMusicContext, CallFunc_ValidateInteractiveMusicParameters_IsValid) == 0x000019, "Member 'BP_InteractiveMusicSystem_C_PushInteractiveMusicContext::CallFunc_ValidateInteractiveMusicParameters_IsValid' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_PushInteractiveMusicContext, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'BP_InteractiveMusicSystem_C_PushInteractiveMusicContext::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ReplaceInteractiveMusicContext
// 0x0040 (0x0040 - 0x0000)
struct BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext final
{
public:
	struct FS_InteractiveMusicParameters          Parameters;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0020(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext) == 0x000040, "Wrong size on BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext, Parameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext::Parameters' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_InteractiveMusicSystem_C_ReplaceInteractiveMusicContext::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.RestorePreviousInteractiveMusicParameters
// 0x0038 (0x0038 - 0x0000)
struct BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters final
{
public:
	struct FS_InteractiveMusicParameters          CallFunc_ComputeCurrentInteractiveMusicParameters_InteractiveMusicParameters; // 0x0000(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateInteractiveMusicParameters_IsValid; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InteractiveMusicParameters>  K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters");
static_assert(sizeof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters) == 0x000038, "Wrong size on BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters");
static_assert(offsetof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters, CallFunc_ComputeCurrentInteractiveMusicParameters_InteractiveMusicParameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters::CallFunc_ComputeCurrentInteractiveMusicParameters_InteractiveMusicParameters' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters, CallFunc_ValidateInteractiveMusicParameters_IsValid) == 0x000018, "Member 'BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters::CallFunc_ValidateInteractiveMusicParameters_IsValid' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_InteractiveMusicSystem_C_RestorePreviousInteractiveMusicParameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ResumeInteractiveMusicSystemWithContext
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveMusicSystem_C_ResumeInteractiveMusicSystemWithContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ResumeInteractiveMusicSystemWithContext) == 0x000001, "Wrong alignment on BP_InteractiveMusicSystem_C_ResumeInteractiveMusicSystemWithContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ResumeInteractiveMusicSystemWithContext) == 0x000001, "Wrong size on BP_InteractiveMusicSystem_C_ResumeInteractiveMusicSystemWithContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ResumeInteractiveMusicSystemWithContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ResumeInteractiveMusicSystemWithContext::Context' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.SaveCurrentInteractiveMusicParameters
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractiveMusicSystem_C_SaveCurrentInteractiveMusicParameters final
{
public:
	struct FS_InteractiveMusicParameters          CallFunc_ComputeCurrentInteractiveMusicParameters_InteractiveMusicParameters; // 0x0000(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_SaveCurrentInteractiveMusicParameters) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_SaveCurrentInteractiveMusicParameters");
static_assert(sizeof(BP_InteractiveMusicSystem_C_SaveCurrentInteractiveMusicParameters) == 0x000018, "Wrong size on BP_InteractiveMusicSystem_C_SaveCurrentInteractiveMusicParameters");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SaveCurrentInteractiveMusicParameters, CallFunc_ComputeCurrentInteractiveMusicParameters_InteractiveMusicParameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_SaveCurrentInteractiveMusicParameters::CallFunc_ComputeCurrentInteractiveMusicParameters_InteractiveMusicParameters' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.SaveExplorationCurrentInteractiveMusicContext
// 0x0006 (0x0006 - 0x0000)
struct BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext final
{
public:
	E_InteractiveMusicContext                     CallFunc_GetCurrentContext_Context;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext) == 0x000001, "Wrong alignment on BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext) == 0x000006, "Wrong size on BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext, CallFunc_GetCurrentContext_Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext::CallFunc_GetCurrentContext_Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'BP_InteractiveMusicSystem_C_SaveExplorationCurrentInteractiveMusicContext::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.SetDebugDrawEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_InteractiveMusicSystem_C_SetDebugDrawEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_SetDebugDrawEnabled) == 0x000001, "Wrong alignment on BP_InteractiveMusicSystem_C_SetDebugDrawEnabled");
static_assert(sizeof(BP_InteractiveMusicSystem_C_SetDebugDrawEnabled) == 0x000001, "Wrong size on BP_InteractiveMusicSystem_C_SetDebugDrawEnabled");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetDebugDrawEnabled, Enable) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_SetDebugDrawEnabled::Enable' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.SetFloatParameterByContext
// 0x0048 (0x0048 - 0x0000)
struct BP_InteractiveMusicSystem_C_SetFloatParameterByContext final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParameterName;                                     // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0010(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_SetFloatParameterByContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext) == 0x000048, "Wrong size on BP_InteractiveMusicSystem_C_SetFloatParameterByContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_SetFloatParameterByContext::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext, ParameterName) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_SetFloatParameterByContext::ParameterName' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext, Value) == 0x00000C, "Member 'BP_InteractiveMusicSystem_C_SetFloatParameterByContext::Value' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000010, "Member 'BP_InteractiveMusicSystem_C_SetFloatParameterByContext::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_InteractiveMusicSystem_C_SetFloatParameterByContext::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext, K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface) == 0x000030, "Member 'BP_InteractiveMusicSystem_C_SetFloatParameterByContext::K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetFloatParameterByContext, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_InteractiveMusicSystem_C_SetFloatParameterByContext::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.SetInteractiveMusicPaused
// 0x0028 (0x0028 - 0x0000)
struct BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused final
{
public:
	E_InteractiveMusicContext                     Context;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPause;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InteractiveMusic                    CallFunc_GetInteractiveMusicByContext_InteractiveMusic; // 0x0008(0x0018)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused");
static_assert(sizeof(BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused) == 0x000028, "Wrong size on BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused, Context) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused::Context' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused, bPause) == 0x000001, "Member 'BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused::bPause' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused, CallFunc_GetInteractiveMusicByContext_InteractiveMusic) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused::CallFunc_GetInteractiveMusicByContext_InteractiveMusic' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_InteractiveMusicSystem_C_SetInteractiveMusicPaused::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.ShouldPauseMusic
// 0x000A (0x000A - 0x0000)
struct BP_InteractiveMusicSystem_C_ShouldPauseMusic final
{
public:
	E_InteractiveMusicContext                     NewContext;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_ShouldPauseMusic) == 0x000001, "Wrong alignment on BP_InteractiveMusicSystem_C_ShouldPauseMusic");
static_assert(sizeof(BP_InteractiveMusicSystem_C_ShouldPauseMusic) == 0x00000A, "Wrong size on BP_InteractiveMusicSystem_C_ShouldPauseMusic");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, NewContext) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::NewContext' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, ReturnValue) == 0x000001, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_MakeLiteralByte_ReturnValue) == 0x000003, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_Array_Contains_ReturnValue) == 0x000007, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_ShouldPauseMusic, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'BP_InteractiveMusicSystem_C_ShouldPauseMusic::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.StopInteractiveMusicSystem
// 0x0008 (0x0008 - 0x0000)
struct BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem final
{
public:
	float                                         FadeOutDuration;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem) == 0x000004, "Wrong alignment on BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem");
static_assert(sizeof(BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem) == 0x000008, "Wrong size on BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem");
static_assert(offsetof(BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem, FadeOutDuration) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem::FadeOutDuration' has a wrong offset!");
static_assert(offsetof(BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_InteractiveMusicSystem_C_StopInteractiveMusicSystem::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_InteractiveMusicSystem.BP_InteractiveMusicSystem_C.SwitchInteractiveMusicContext
// 0x0018 (0x0018 - 0x0000)
struct BP_InteractiveMusicSystem_C_SwitchInteractiveMusicContext final
{
public:
	struct FS_InteractiveMusicParameters          Parameters;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InteractiveMusicSystem_C_SwitchInteractiveMusicContext) == 0x000008, "Wrong alignment on BP_InteractiveMusicSystem_C_SwitchInteractiveMusicContext");
static_assert(sizeof(BP_InteractiveMusicSystem_C_SwitchInteractiveMusicContext) == 0x000018, "Wrong size on BP_InteractiveMusicSystem_C_SwitchInteractiveMusicContext");
static_assert(offsetof(BP_InteractiveMusicSystem_C_SwitchInteractiveMusicContext, Parameters) == 0x000000, "Member 'BP_InteractiveMusicSystem_C_SwitchInteractiveMusicContext::Parameters' has a wrong offset!");

}

