#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPT_SelectRandomWaitingTime

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPT_SelectRandomWaitingTime.BPT_SelectRandomWaitingTime_C
// 0x0018 (0x00C0 - 0x00A8)
class UBPT_SelectRandomWaitingTime_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MinimumWaitingTime;                                // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaximumWaitingTime;                                // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPT_SelectRandomWaitingTime(int32 EntryPoint);
	void ReceiveExecute(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPT_SelectRandomWaitingTime_C">();
	}
	static class UBPT_SelectRandomWaitingTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPT_SelectRandomWaitingTime_C>();
	}
};
static_assert(alignof(UBPT_SelectRandomWaitingTime_C) == 0x000008, "Wrong alignment on UBPT_SelectRandomWaitingTime_C");
static_assert(sizeof(UBPT_SelectRandomWaitingTime_C) == 0x0000C0, "Wrong size on UBPT_SelectRandomWaitingTime_C");
static_assert(offsetof(UBPT_SelectRandomWaitingTime_C, UberGraphFrame) == 0x0000A8, "Member 'UBPT_SelectRandomWaitingTime_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPT_SelectRandomWaitingTime_C, MinimumWaitingTime) == 0x0000B0, "Member 'UBPT_SelectRandomWaitingTime_C::MinimumWaitingTime' has a wrong offset!");
static_assert(offsetof(UBPT_SelectRandomWaitingTime_C, MaximumWaitingTime) == 0x0000B8, "Member 'UBPT_SelectRandomWaitingTime_C::MaximumWaitingTime' has a wrong offset!");

}

