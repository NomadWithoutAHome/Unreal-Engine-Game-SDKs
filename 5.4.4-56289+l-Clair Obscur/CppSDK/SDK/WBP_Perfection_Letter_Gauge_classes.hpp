#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Perfection_Letter_Gauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "E_Perfection_Ranks_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_PerfectionUpdateType_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "EPerfectionReason_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Perfection_Letter_Gauge.WBP_Perfection_Letter_Gauge_C
// 0x0170 (0x0450 - 0x02E0)
class UWBP_Perfection_Letter_Gauge_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_GaugeLerp;                                    // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_LoseRank;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_GainRank;                                     // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_ProgressionGauge_Texture;              // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_FillingTexture_Letter;                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LetterBackgroundBrown;                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LetterBackgroundColor;                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LineLetter;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_FillingTexture;                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_Letter;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_Perfection_Ranks                            PreviewRank;                                       // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Height;                                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UBP_PerfectionMechanicComponent_C*      PerfectionComponent;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        GaugeLerpAlpha;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentPercentage;                                 // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentageTarget;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorRankD;                                        // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorRankC;                                        // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorRankB;                                        // 0x0390(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorRankA;                                        // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorRankS;                                        // 0x03B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundEventDataTableRowHandle          SD_RankUpC_Switch;                                 // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_RankUpB_Switch;                                 // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_RankUpA_Switch;                                 // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_RankUpS_Switch;                                 // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void()>              OnRankChanged;                                     // 0x0400(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSoundEventDataTableRowHandle          SD_RankUpC_TurnStart;                              // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_RankUpB_TurnStart;                              // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_RankUpA_TurnStart;                              // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_RankUpS_TurnStart;                              // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void TriggerTurnStartAudio();
	void OnRankChangedDown(E_Perfection_Ranks NewRank);
	void OnRankChangedUp(E_Perfection_Ranks NewRank);
	void SetPerfectionGauge(int32 CurrentPerfection);
	void SetGaugeLerpAlpha(double GaugeLerpAlpha_0);
	void TriggerGaugeAnimation(int32 CurrentPerfection);
	void OnPerfectionChanged(E_PerfectionUpdateType PerfectionChangeType, int32 PerfectionValue, EPerfectionReason PerfectionChangeReason);
	void SetRank(E_Perfection_Ranks InRank);
	void SetPerfectionComponent(class UBP_PerfectionMechanicComponent_C* PerfectionComponent_0);
	void PreConstruct(bool IsDesignTime);
	void OnAnimationFinished(const class UWidgetAnimation* Animation);
	void ExecuteUbergraph_WBP_Perfection_Letter_Gauge(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Perfection_Letter_Gauge_C">();
	}
	static class UWBP_Perfection_Letter_Gauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Perfection_Letter_Gauge_C>();
	}
};
static_assert(alignof(UWBP_Perfection_Letter_Gauge_C) == 0x000008, "Wrong alignment on UWBP_Perfection_Letter_Gauge_C");
static_assert(sizeof(UWBP_Perfection_Letter_Gauge_C) == 0x000450, "Wrong size on UWBP_Perfection_Letter_Gauge_C");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_Perfection_Letter_Gauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Anim_GaugeLerp) == 0x0002E8, "Member 'UWBP_Perfection_Letter_Gauge_C::Anim_GaugeLerp' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Anim_LoseRank) == 0x0002F0, "Member 'UWBP_Perfection_Letter_Gauge_C::Anim_LoseRank' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Anim_GainRank) == 0x0002F8, "Member 'UWBP_Perfection_Letter_Gauge_C::Anim_GainRank' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, CanvasPanel_ProgressionGauge_Texture) == 0x000300, "Member 'UWBP_Perfection_Letter_Gauge_C::CanvasPanel_ProgressionGauge_Texture' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Image_FillingTexture_Letter) == 0x000308, "Member 'UWBP_Perfection_Letter_Gauge_C::Image_FillingTexture_Letter' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Image_LetterBackgroundBrown) == 0x000310, "Member 'UWBP_Perfection_Letter_Gauge_C::Image_LetterBackgroundBrown' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Image_LetterBackgroundColor) == 0x000318, "Member 'UWBP_Perfection_Letter_Gauge_C::Image_LetterBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Image_LineLetter) == 0x000320, "Member 'UWBP_Perfection_Letter_Gauge_C::Image_LineLetter' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, RetainerBox_FillingTexture) == 0x000328, "Member 'UWBP_Perfection_Letter_Gauge_C::RetainerBox_FillingTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, RetainerBox_Letter) == 0x000330, "Member 'UWBP_Perfection_Letter_Gauge_C::RetainerBox_Letter' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SizeBox) == 0x000338, "Member 'UWBP_Perfection_Letter_Gauge_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, PreviewRank) == 0x000340, "Member 'UWBP_Perfection_Letter_Gauge_C::PreviewRank' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, Height) == 0x000348, "Member 'UWBP_Perfection_Letter_Gauge_C::Height' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, PerfectionComponent) == 0x000350, "Member 'UWBP_Perfection_Letter_Gauge_C::PerfectionComponent' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, GaugeLerpAlpha) == 0x000358, "Member 'UWBP_Perfection_Letter_Gauge_C::GaugeLerpAlpha' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, CurrentPercentage) == 0x000360, "Member 'UWBP_Perfection_Letter_Gauge_C::CurrentPercentage' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, PercentageTarget) == 0x000368, "Member 'UWBP_Perfection_Letter_Gauge_C::PercentageTarget' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, ColorRankD) == 0x000370, "Member 'UWBP_Perfection_Letter_Gauge_C::ColorRankD' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, ColorRankC) == 0x000380, "Member 'UWBP_Perfection_Letter_Gauge_C::ColorRankC' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, ColorRankB) == 0x000390, "Member 'UWBP_Perfection_Letter_Gauge_C::ColorRankB' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, ColorRankA) == 0x0003A0, "Member 'UWBP_Perfection_Letter_Gauge_C::ColorRankA' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, ColorRankS) == 0x0003B0, "Member 'UWBP_Perfection_Letter_Gauge_C::ColorRankS' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpC_Switch) == 0x0003C0, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpC_Switch' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpB_Switch) == 0x0003D0, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpB_Switch' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpA_Switch) == 0x0003E0, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpA_Switch' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpS_Switch) == 0x0003F0, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpS_Switch' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, OnRankChanged) == 0x000400, "Member 'UWBP_Perfection_Letter_Gauge_C::OnRankChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpC_TurnStart) == 0x000410, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpC_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpB_TurnStart) == 0x000420, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpB_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpA_TurnStart) == 0x000430, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpA_TurnStart' has a wrong offset!");
static_assert(offsetof(UWBP_Perfection_Letter_Gauge_C, SD_RankUpS_TurnStart) == 0x000440, "Member 'UWBP_Perfection_Letter_Gauge_C::SD_RankUpS_TurnStart' has a wrong offset!");

}

