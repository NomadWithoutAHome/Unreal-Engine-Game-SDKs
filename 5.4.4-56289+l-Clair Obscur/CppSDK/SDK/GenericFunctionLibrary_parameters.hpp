#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GenericFunctionLibrary

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "EUINavigationDirection_structs.hpp"
#include "FBattleSequenceTimelineKeyframe_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "EOptionalBoolean_structs.hpp"
#include "RigLogicModule_structs.hpp"


namespace SDK::Params
{

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateSoftObjectDisplayNames
// 0x00C0 (0x00C0 - 0x0000)
struct GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         Objects;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Separator;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0080(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames");
static_assert(sizeof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames) == 0x0000C0, "Wrong size on GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, Objects) == 0x000000, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::Objects' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, Separator) == 0x000010, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::Separator' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, __WorldContext) == 0x000020, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, Result) == 0x000028, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000038, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, CallFunc_JoinStringArray_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, Temp_wildcard_Temp_buffer_array_Variable) == 0x000070, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, CallFunc_Array_Get_Item) == 0x000080, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x0000A8, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'GenericFunctionLibrary_C_ConcatenateSoftObjectDisplayNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsInEditorPreview
// 0x0010 (0x0010 - 0x0000)
struct GenericFunctionLibrary_C_IsInEditorPreview final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPlayMode_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IsInEditorPreview) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IsInEditorPreview");
static_assert(sizeof(GenericFunctionLibrary_C_IsInEditorPreview) == 0x000010, "Wrong size on GenericFunctionLibrary_C_IsInEditorPreview");
static_assert(offsetof(GenericFunctionLibrary_C_IsInEditorPreview, __WorldContext) == 0x000000, "Member 'GenericFunctionLibrary_C_IsInEditorPreview::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsInEditorPreview, ReturnValue) == 0x000008, "Member 'GenericFunctionLibrary_C_IsInEditorPreview::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsInEditorPreview, CallFunc_IsInPlayMode_ReturnValue) == 0x000009, "Member 'GenericFunctionLibrary_C_IsInEditorPreview::CallFunc_IsInPlayMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsInEditorPreview, CallFunc_IsPackagedBuild_ReturnValue) == 0x00000A, "Member 'GenericFunctionLibrary_C_IsInEditorPreview::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsInEditorPreview, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'GenericFunctionLibrary_C_IsInEditorPreview::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsInEditorPreview, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000C, "Member 'GenericFunctionLibrary_C_IsInEditorPreview::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsInEditorPreview, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'GenericFunctionLibrary_C_IsInEditorPreview::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CompareIntegers
// 0x0030 (0x0030 - 0x0000)
struct GenericFunctionLibrary_C_CompareIntegers final
{
public:
	uint8                                         Comparison;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         A;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         B;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Local_B_Value;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_A_Value;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_CompareIntegers) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_CompareIntegers");
static_assert(sizeof(GenericFunctionLibrary_C_CompareIntegers) == 0x000030, "Wrong size on GenericFunctionLibrary_C_CompareIntegers");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, Comparison) == 0x000000, "Member 'GenericFunctionLibrary_C_CompareIntegers::Comparison' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, A) == 0x000004, "Member 'GenericFunctionLibrary_C_CompareIntegers::A' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, B) == 0x000008, "Member 'GenericFunctionLibrary_C_CompareIntegers::B' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_CompareIntegers::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_CompareIntegers::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, Local_B_Value) == 0x00001C, "Member 'GenericFunctionLibrary_C_CompareIntegers::Local_B_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, Local_A_Value) == 0x000020, "Member 'GenericFunctionLibrary_C_CompareIntegers::Local_A_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, K2Node_SwitchEnum_CmpSuccess) == 0x000024, "Member 'GenericFunctionLibrary_C_CompareIntegers::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000025, "Member 'GenericFunctionLibrary_C_CompareIntegers::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000026, "Member 'GenericFunctionLibrary_C_CompareIntegers::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000027, "Member 'GenericFunctionLibrary_C_CompareIntegers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'GenericFunctionLibrary_C_CompareIntegers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, CallFunc_Greater_IntInt_ReturnValue) == 0x000029, "Member 'GenericFunctionLibrary_C_CompareIntegers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareIntegers, CallFunc_Less_IntInt_ReturnValue) == 0x00002A, "Member 'GenericFunctionLibrary_C_CompareIntegers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsCurrentPlatformConsole
// 0x0040 (0x0040 - 0x0000)
struct GenericFunctionLibrary_C_IsCurrentPlatformConsole final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CurrentPlatformIsConsole;                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0010(0x0020)()
	struct FGameplayTag                           CallFunc_GetPlatformNameAsTag_ReturnValue;         // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IsCurrentPlatformConsole) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IsCurrentPlatformConsole");
static_assert(sizeof(GenericFunctionLibrary_C_IsCurrentPlatformConsole) == 0x000040, "Wrong size on GenericFunctionLibrary_C_IsCurrentPlatformConsole");
static_assert(offsetof(GenericFunctionLibrary_C_IsCurrentPlatformConsole, __WorldContext) == 0x000000, "Member 'GenericFunctionLibrary_C_IsCurrentPlatformConsole::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsCurrentPlatformConsole, CurrentPlatformIsConsole) == 0x000008, "Member 'GenericFunctionLibrary_C_IsCurrentPlatformConsole::CurrentPlatformIsConsole' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsCurrentPlatformConsole, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000010, "Member 'GenericFunctionLibrary_C_IsCurrentPlatformConsole::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsCurrentPlatformConsole, CallFunc_GetPlatformNameAsTag_ReturnValue) == 0x000030, "Member 'GenericFunctionLibrary_C_IsCurrentPlatformConsole::CallFunc_GetPlatformNameAsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsCurrentPlatformConsole, CallFunc_HasTag_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_IsCurrentPlatformConsole::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsCurrentPlatformConsole, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'GenericFunctionLibrary_C_IsCurrentPlatformConsole::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.AddIfValid
// 0x0028 (0x0028 - 0x0000)
struct GenericFunctionLibrary_C_AddIfValid final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        Array;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_AddIfValid) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_AddIfValid");
static_assert(sizeof(GenericFunctionLibrary_C_AddIfValid) == 0x000028, "Wrong size on GenericFunctionLibrary_C_AddIfValid");
static_assert(offsetof(GenericFunctionLibrary_C_AddIfValid, Object) == 0x000000, "Member 'GenericFunctionLibrary_C_AddIfValid::Object' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddIfValid, Array) == 0x000008, "Member 'GenericFunctionLibrary_C_AddIfValid::Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddIfValid, __WorldContext) == 0x000018, "Member 'GenericFunctionLibrary_C_AddIfValid::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddIfValid, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GenericFunctionLibrary_C_AddIfValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddIfValid, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'GenericFunctionLibrary_C_AddIfValid::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ToTextArray_(String)
// 0x0088 (0x0088 - 0x0000)
struct GenericFunctionLibrary_C_ToTextArray__String_ final
{
public:
	TArray<class FString>                         StringArray;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           TextArray;                                         // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FText>                           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0050(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0070(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ToTextArray__String_) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ToTextArray__String_");
static_assert(sizeof(GenericFunctionLibrary_C_ToTextArray__String_) == 0x000088, "Wrong size on GenericFunctionLibrary_C_ToTextArray__String_");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, StringArray) == 0x000000, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::StringArray' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, TextArray) == 0x000018, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::TextArray' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000028, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, Temp_int_Array_Index_Variable) == 0x000048, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, Temp_wildcard_Temp_buffer_array_Variable) == 0x000050, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, CallFunc_Array_Get_Item) == 0x000060, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, CallFunc_Conv_StringToText_ReturnValue) == 0x000070, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToTextArray__String_, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'GenericFunctionLibrary_C_ToTextArray__String_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ValidateObjectArray
// 0x01A0 (0x01A0 - 0x0000)
struct GenericFunctionLibrary_C_ValidateObjectArray final
{
public:
	TArray<class UObject*>                        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ArrayName;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorMessage;                                      // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_ArrayContainsInvalid_Result;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_ArrayContainsInvalid_ArrayIndex;          // 0x00F8(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_ToStringArray__integer__StringArray;      // 0x0108(0x0010)(ReferenceParm)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0128(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ValidateObjectArray) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ValidateObjectArray");
static_assert(sizeof(GenericFunctionLibrary_C_ValidateObjectArray) == 0x0001A0, "Wrong size on GenericFunctionLibrary_C_ValidateObjectArray");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, Array) == 0x000000, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, ArrayName) == 0x000010, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::ArrayName' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, __WorldContext) == 0x000020, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, IsValid) == 0x000028, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::IsValid' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, ErrorMessage) == 0x000030, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::ErrorMessage' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_ArrayContainsInvalid_Result) == 0x0000F0, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_ArrayContainsInvalid_Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_ArrayContainsInvalid_ArrayIndex) == 0x0000F8, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_ArrayContainsInvalid_ArrayIndex' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_ToStringArray__integer__StringArray) == 0x000108, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_ToStringArray__integer__StringArray' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_JoinStringArray_ReturnValue) == 0x000118, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000128, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, K2Node_MakeArray_Array) == 0x000180, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ValidateObjectArray, CallFunc_Format_ReturnValue) == 0x000190, "Member 'GenericFunctionLibrary_C_ValidateObjectArray::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CheckObjectArray
// 0x0048 (0x0048 - 0x0000)
struct GenericFunctionLibrary_C_CheckObjectArray final
{
public:
	TArray<class UObject*>                        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ArrayName;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateObjectArray_IsValid;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ValidateObjectArray_ErrorMessage;         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_CheckObjectArray) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_CheckObjectArray");
static_assert(sizeof(GenericFunctionLibrary_C_CheckObjectArray) == 0x000048, "Wrong size on GenericFunctionLibrary_C_CheckObjectArray");
static_assert(offsetof(GenericFunctionLibrary_C_CheckObjectArray, Array) == 0x000000, "Member 'GenericFunctionLibrary_C_CheckObjectArray::Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CheckObjectArray, ArrayName) == 0x000010, "Member 'GenericFunctionLibrary_C_CheckObjectArray::ArrayName' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CheckObjectArray, __WorldContext) == 0x000020, "Member 'GenericFunctionLibrary_C_CheckObjectArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CheckObjectArray, CallFunc_ValidateObjectArray_IsValid) == 0x000028, "Member 'GenericFunctionLibrary_C_CheckObjectArray::CallFunc_ValidateObjectArray_IsValid' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CheckObjectArray, CallFunc_ValidateObjectArray_ErrorMessage) == 0x000030, "Member 'GenericFunctionLibrary_C_CheckObjectArray::CallFunc_ValidateObjectArray_ErrorMessage' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CheckObjectArray, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_CheckObjectArray::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ToStringArray_(integer)
// 0x0080 (0x0080 - 0x0000)
struct GenericFunctionLibrary_C_ToStringArray__integer_ final
{
public:
	TArray<int32>                                 IntegerArray;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         StringArray;                                       // 0x0018(0x0010)(Parm, OutParm)
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0050(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ToStringArray__integer_) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ToStringArray__integer_");
static_assert(sizeof(GenericFunctionLibrary_C_ToStringArray__integer_) == 0x000080, "Wrong size on GenericFunctionLibrary_C_ToStringArray__integer_");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, IntegerArray) == 0x000000, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::IntegerArray' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, StringArray) == 0x000018, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::StringArray' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000028, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, Temp_int_Array_Index_Variable) == 0x000048, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, Temp_wildcard_Temp_buffer_array_Variable) == 0x000050, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, CallFunc_Array_Get_Item) == 0x000060, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToStringArray__integer_, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'GenericFunctionLibrary_C_ToStringArray__integer_::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.SetCanvasSlotAsHorizontalFillPercentage
// 0x0080 (0x0080 - 0x0000)
struct GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage final
{
public:
	class UCanvasPanelSlot*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        FillAlpha;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0060(0x0020)(NoDestructor)
};
static_assert(alignof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage");
static_assert(sizeof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage) == 0x000080, "Wrong size on GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, Target) == 0x000000, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::Target' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, FillAlpha) == 0x000008, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::FillAlpha' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, K2Node_MakeStruct_Margin) == 0x000018, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, CallFunc_MakeVector2D_ReturnValue_1) == 0x000050, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage, K2Node_MakeStruct_Anchors) == 0x000060, "Member 'GenericFunctionLibrary_C_SetCanvasSlotAsHorizontalFillPercentage::K2Node_MakeStruct_Anchors' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ArrayOfFloatsToString
// 0x00B0 (0x00B0 - 0x0000)
struct GenericFunctionLibrary_C_ArrayOfFloatsToString final
{
public:
	TArray<double>                                In;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 OutString;                                         // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         local_LastIndex;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 local_String;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0048(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0080(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ArrayOfFloatsToString) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ArrayOfFloatsToString");
static_assert(sizeof(GenericFunctionLibrary_C_ArrayOfFloatsToString) == 0x0000B0, "Wrong size on GenericFunctionLibrary_C_ArrayOfFloatsToString");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, In) == 0x000000, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::In' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, OutString) == 0x000018, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::OutString' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, local_LastIndex) == 0x000028, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::local_LastIndex' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, local_String) == 0x000030, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::local_String' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000048, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, CallFunc_JoinStringArray_ReturnValue) == 0x000060, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, Temp_int_Array_Index_Variable) == 0x000078, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, Temp_wildcard_Temp_buffer_array_Variable) == 0x000080, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, CallFunc_Array_Get_Item) == 0x000090, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000098, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayOfFloatsToString, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'GenericFunctionLibrary_C_ArrayOfFloatsToString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsDataRowHandleSet
// 0x0020 (0x0020 - 0x0000)
struct GenericFunctionLibrary_C_IsDataRowHandleSet final
{
public:
	struct FDataTableRowHandle                    RowHandle;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IsDataRowHandleSet) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IsDataRowHandleSet");
static_assert(sizeof(GenericFunctionLibrary_C_IsDataRowHandleSet) == 0x000020, "Wrong size on GenericFunctionLibrary_C_IsDataRowHandleSet");
static_assert(offsetof(GenericFunctionLibrary_C_IsDataRowHandleSet, RowHandle) == 0x000000, "Member 'GenericFunctionLibrary_C_IsDataRowHandleSet::RowHandle' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDataRowHandleSet, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_IsDataRowHandleSet::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDataRowHandleSet, ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_IsDataRowHandleSet::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDataRowHandleSet, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'GenericFunctionLibrary_C_IsDataRowHandleSet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDataRowHandleSet, CallFunc_NotEqual_NameName_ReturnValue) == 0x00001A, "Member 'GenericFunctionLibrary_C_IsDataRowHandleSet::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDataRowHandleSet, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'GenericFunctionLibrary_C_IsDataRowHandleSet::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetRandomOtherObjectFromArray
// 0x0050 (0x0050 - 0x0000)
struct GenericFunctionLibrary_C_GetRandomOtherObjectFromArray final
{
public:
	TArray<class UObject*>                        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                Object;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                OutItem;                                           // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        local_arrayCopy;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Random_OutItem;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetRandomOtherObjectFromArray");
static_assert(sizeof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray) == 0x000050, "Wrong size on GenericFunctionLibrary_C_GetRandomOtherObjectFromArray");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, Array) == 0x000000, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, Object) == 0x000010, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::Object' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, __WorldContext) == 0x000018, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, OutItem) == 0x000020, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::OutItem' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, local_arrayCopy) == 0x000028, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::local_arrayCopy' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, CallFunc_Array_Random_OutItem) == 0x000040, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetRandomOtherObjectFromArray, CallFunc_Array_Random_OutIndex) == 0x000048, "Member 'GenericFunctionLibrary_C_GetRandomOtherObjectFromArray::CallFunc_Array_Random_OutIndex' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateClassDisplayNames
// 0x00A0 (0x00A0 - 0x0000)
struct GenericFunctionLibrary_C_ConcatenateClassDisplayNames final
{
public:
	TArray<class UClass*>                         Objects;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Separator;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0070(0x0010)(ConstParm, ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ConcatenateClassDisplayNames");
static_assert(sizeof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames) == 0x0000A0, "Wrong size on GenericFunctionLibrary_C_ConcatenateClassDisplayNames");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, Objects) == 0x000000, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::Objects' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, Separator) == 0x000010, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::Separator' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, __WorldContext) == 0x000020, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, Result) == 0x000028, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000038, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, CallFunc_JoinStringArray_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, Temp_wildcard_Temp_buffer_array_Variable) == 0x000070, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, CallFunc_Array_Get_Item) == 0x000080, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, CallFunc_GetClassDisplayName_ReturnValue) == 0x000088, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateClassDisplayNames, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'GenericFunctionLibrary_C_ConcatenateClassDisplayNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateSoftClassDisplayNames
// 0x00C0 (0x00C0 - 0x0000)
struct GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames final
{
public:
	TArray<TSoftClassPtr<class UClass>>           Objects;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Separator;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0080(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames");
static_assert(sizeof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames) == 0x0000C0, "Wrong size on GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, Objects) == 0x000000, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::Objects' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, Separator) == 0x000010, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::Separator' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, __WorldContext) == 0x000020, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, Result) == 0x000028, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000038, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, CallFunc_JoinStringArray_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, Temp_wildcard_Temp_buffer_array_Variable) == 0x000070, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, CallFunc_Array_Get_Item) == 0x000080, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x0000A8, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'GenericFunctionLibrary_C_ConcatenateSoftClassDisplayNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CompareFloats
// 0x0040 (0x0040 - 0x0000)
struct GenericFunctionLibrary_C_CompareFloats final
{
public:
	uint8                                         Comparison;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        A;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        B;                                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Local_B_Value;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Local_A_Value;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_CompareFloats) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_CompareFloats");
static_assert(sizeof(GenericFunctionLibrary_C_CompareFloats) == 0x000040, "Wrong size on GenericFunctionLibrary_C_CompareFloats");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, Comparison) == 0x000000, "Member 'GenericFunctionLibrary_C_CompareFloats::Comparison' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, A) == 0x000008, "Member 'GenericFunctionLibrary_C_CompareFloats::A' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, B) == 0x000010, "Member 'GenericFunctionLibrary_C_CompareFloats::B' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, __WorldContext) == 0x000018, "Member 'GenericFunctionLibrary_C_CompareFloats::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, ReturnValue) == 0x000020, "Member 'GenericFunctionLibrary_C_CompareFloats::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, Local_B_Value) == 0x000028, "Member 'GenericFunctionLibrary_C_CompareFloats::Local_B_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, Local_A_Value) == 0x000030, "Member 'GenericFunctionLibrary_C_CompareFloats::Local_A_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'GenericFunctionLibrary_C_CompareFloats::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000039, "Member 'GenericFunctionLibrary_C_CompareFloats::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00003A, "Member 'GenericFunctionLibrary_C_CompareFloats::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00003B, "Member 'GenericFunctionLibrary_C_CompareFloats::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00003C, "Member 'GenericFunctionLibrary_C_CompareFloats::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00003D, "Member 'GenericFunctionLibrary_C_CompareFloats::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CompareFloats, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00003E, "Member 'GenericFunctionLibrary_C_CompareFloats::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.StartLatentAction
// 0x0110 (0x0110 - 0x0000)
struct GenericFunctionLibrary_C_StartLatentAction final
{
public:
	class FString                                 DebugReason;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              AsyncAction;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_SpawnObject_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_StartLatentAction) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_StartLatentAction");
static_assert(sizeof(GenericFunctionLibrary_C_StartLatentAction) == 0x000110, "Wrong size on GenericFunctionLibrary_C_StartLatentAction");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, DebugReason) == 0x000000, "Member 'GenericFunctionLibrary_C_StartLatentAction::DebugReason' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_StartLatentAction::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, AsyncAction) == 0x000018, "Member 'GenericFunctionLibrary_C_StartLatentAction::AsyncAction' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000020, "Member 'GenericFunctionLibrary_C_StartLatentAction::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'GenericFunctionLibrary_C_StartLatentAction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_StartLatentAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'GenericFunctionLibrary_C_StartLatentAction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, CallFunc_IsEmpty_ReturnValue) == 0x000088, "Member 'GenericFunctionLibrary_C_StartLatentAction::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, CallFunc_SpawnObject_ReturnValue) == 0x000090, "Member 'GenericFunctionLibrary_C_StartLatentAction::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000098, "Member 'GenericFunctionLibrary_C_StartLatentAction::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'GenericFunctionLibrary_C_StartLatentAction::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, K2Node_MakeArray_Array) == 0x0000F0, "Member 'GenericFunctionLibrary_C_StartLatentAction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_StartLatentAction, CallFunc_Format_ReturnValue) == 0x000100, "Member 'GenericFunctionLibrary_C_StartLatentAction::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IncrementModulo
// 0x0020 (0x0020 - 0x0000)
struct GenericFunctionLibrary_C_IncrementModulo final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Modulo;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IncrementModulo) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IncrementModulo");
static_assert(sizeof(GenericFunctionLibrary_C_IncrementModulo) == 0x000020, "Wrong size on GenericFunctionLibrary_C_IncrementModulo");
static_assert(offsetof(GenericFunctionLibrary_C_IncrementModulo, Value) == 0x000000, "Member 'GenericFunctionLibrary_C_IncrementModulo::Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IncrementModulo, Modulo) == 0x000004, "Member 'GenericFunctionLibrary_C_IncrementModulo::Modulo' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IncrementModulo, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_IncrementModulo::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IncrementModulo, ReturnValue) == 0x000010, "Member 'GenericFunctionLibrary_C_IncrementModulo::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IncrementModulo, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'GenericFunctionLibrary_C_IncrementModulo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IncrementModulo, CallFunc_Percent_IntInt_ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_IncrementModulo::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateDisplayNamesString
// 0x00A0 (0x00A0 - 0x0000)
struct GenericFunctionLibrary_C_ConcatenateDisplayNamesString final
{
public:
	TArray<class UObject*>                        Objects;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Separator;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0038(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         Temp_wildcard_Temp_buffer_array_Variable;          // 0x0070(0x0010)(ConstParm, ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ConcatenateDisplayNamesString");
static_assert(sizeof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString) == 0x0000A0, "Wrong size on GenericFunctionLibrary_C_ConcatenateDisplayNamesString");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, Objects) == 0x000000, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::Objects' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, Separator) == 0x000010, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::Separator' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, __WorldContext) == 0x000020, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, Result) == 0x000028, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000038, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, CallFunc_JoinStringArray_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, Temp_wildcard_Temp_buffer_array_Variable) == 0x000070, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, CallFunc_Array_Get_Item) == 0x000080, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, CallFunc_GetDisplayName_ReturnValue) == 0x000088, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNamesString, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNamesString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetShorterVector
// 0x0100 (0x0100 - 0x0000)
struct GenericFunctionLibrary_C_GetShorterVector final
{
public:
	struct FVector                                Start1;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End1;                                              // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start2;                                            // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End2;                                              // 0x0058(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetShorterVector) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetShorterVector");
static_assert(sizeof(GenericFunctionLibrary_C_GetShorterVector) == 0x000100, "Wrong size on GenericFunctionLibrary_C_GetShorterVector");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, Start1) == 0x000000, "Member 'GenericFunctionLibrary_C_GetShorterVector::Start1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, End1) == 0x000018, "Member 'GenericFunctionLibrary_C_GetShorterVector::End1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, Distance) == 0x000030, "Member 'GenericFunctionLibrary_C_GetShorterVector::Distance' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, __WorldContext) == 0x000038, "Member 'GenericFunctionLibrary_C_GetShorterVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, Start2) == 0x000040, "Member 'GenericFunctionLibrary_C_GetShorterVector::Start2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, End2) == 0x000058, "Member 'GenericFunctionLibrary_C_GetShorterVector::End2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'GenericFunctionLibrary_C_GetShorterVector::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000088, "Member 'GenericFunctionLibrary_C_GetShorterVector::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, CallFunc_Normal_ReturnValue) == 0x0000A0, "Member 'GenericFunctionLibrary_C_GetShorterVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000B8, "Member 'GenericFunctionLibrary_C_GetShorterVector::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'GenericFunctionLibrary_C_GetShorterVector::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetShorterVector, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000E8, "Member 'GenericFunctionLibrary_C_GetShorterVector::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.AreWIP_ChecksEnabled
// 0x0010 (0x0010 - 0x0000)
struct GenericFunctionLibrary_C_AreWIP_ChecksEnabled final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_AreWIP_ChecksEnabled) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_AreWIP_ChecksEnabled");
static_assert(sizeof(GenericFunctionLibrary_C_AreWIP_ChecksEnabled) == 0x000010, "Wrong size on GenericFunctionLibrary_C_AreWIP_ChecksEnabled");
static_assert(offsetof(GenericFunctionLibrary_C_AreWIP_ChecksEnabled, __WorldContext) == 0x000000, "Member 'GenericFunctionLibrary_C_AreWIP_ChecksEnabled::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AreWIP_ChecksEnabled, ReturnValue) == 0x000008, "Member 'GenericFunctionLibrary_C_AreWIP_ChecksEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AreWIP_ChecksEnabled, CallFunc_GetBoolCVar_ReturnValue) == 0x000009, "Member 'GenericFunctionLibrary_C_AreWIP_ChecksEnabled::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsChildOfClass
// 0x0058 (0x0058 - 0x0000)
struct GenericFunctionLibrary_C_IsChildOfClass final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   SoftClass;                                         // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IsChildOfClass) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IsChildOfClass");
static_assert(sizeof(GenericFunctionLibrary_C_IsChildOfClass) == 0x000058, "Wrong size on GenericFunctionLibrary_C_IsChildOfClass");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, Object) == 0x000000, "Member 'GenericFunctionLibrary_C_IsChildOfClass::Object' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, SoftClass) == 0x000008, "Member 'GenericFunctionLibrary_C_IsChildOfClass::SoftClass' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, __WorldContext) == 0x000030, "Member 'GenericFunctionLibrary_C_IsChildOfClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_IsChildOfClass::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_IsChildOfClass::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, CallFunc_GetObjectClass_ReturnValue) == 0x000048, "Member 'GenericFunctionLibrary_C_IsChildOfClass::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, CallFunc_IsValidClass_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_IsChildOfClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsChildOfClass, CallFunc_ClassIsChildOf_ReturnValue) == 0x000051, "Member 'GenericFunctionLibrary_C_IsChildOfClass::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsDebugModeEnabled
// 0x0010 (0x0010 - 0x0000)
struct GenericFunctionLibrary_C_IsDebugModeEnabled final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IsDebugModeEnabled) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IsDebugModeEnabled");
static_assert(sizeof(GenericFunctionLibrary_C_IsDebugModeEnabled) == 0x000010, "Wrong size on GenericFunctionLibrary_C_IsDebugModeEnabled");
static_assert(offsetof(GenericFunctionLibrary_C_IsDebugModeEnabled, __WorldContext) == 0x000000, "Member 'GenericFunctionLibrary_C_IsDebugModeEnabled::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDebugModeEnabled, ReturnValue) == 0x000008, "Member 'GenericFunctionLibrary_C_IsDebugModeEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDebugModeEnabled, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000009, "Member 'GenericFunctionLibrary_C_IsDebugModeEnabled::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDebugModeEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'GenericFunctionLibrary_C_IsDebugModeEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ArrayContainsInvalid
// 0x0078 (0x0078 - 0x0000)
struct GenericFunctionLibrary_C_ArrayContainsInvalid final
{
public:
	TArray<class UObject*>                        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ArrayIndex;                                        // 0x0020(0x0010)(Parm, OutParm)
	TArray<int32>                                 Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0030(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Temp_wildcard_Temp_buffer_array_Variable;          // 0x0058(0x0010)(ConstParm, ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ArrayContainsInvalid) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ArrayContainsInvalid");
static_assert(sizeof(GenericFunctionLibrary_C_ArrayContainsInvalid) == 0x000078, "Wrong size on GenericFunctionLibrary_C_ArrayContainsInvalid");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, Array) == 0x000000, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, Result) == 0x000018, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, ArrayIndex) == 0x000020, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::ArrayIndex' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000030, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000044, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, Temp_int_Array_Index_Variable) == 0x000054, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, Temp_wildcard_Temp_buffer_array_Variable) == 0x000058, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_Array_Get_Item) == 0x000068, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ArrayContainsInvalid, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'GenericFunctionLibrary_C_ArrayContainsInvalid::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetPrimitiveScreenPercentage
// 0x00B0 (0x00B0 - 0x0000)
struct GenericFunctionLibrary_C_GetPrimitiveScreenPercentage final
{
public:
	const class USceneComponent*                  Primitive;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan_ReturnValue;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetPrimitiveScreenPercentage");
static_assert(sizeof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage) == 0x0000B0, "Wrong size on GenericFunctionLibrary_C_GetPrimitiveScreenPercentage");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, Primitive) == 0x000000, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::Primitive' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, ReturnValue) == 0x000010, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_GetComponentBounds_Origin) == 0x000018, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_GetComponentBounds_BoxExtent) == 0x000030, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_GetComponentBounds_SphereRadius) == 0x000048, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000050, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_GetCameraLocation_ReturnValue) == 0x000058, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_GetFOVAngle_ReturnValue) == 0x000070, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_Vector_Distance_ReturnValue) == 0x000078, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_DegAtan_ReturnValue) == 0x000088, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetPrimitiveScreenPercentage, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000A8, "Member 'GenericFunctionLibrary_C_GetPrimitiveScreenPercentage::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.WasPrimitiveRecentlyRenderedOnScreen
// 0x0048 (0x0048 - 0x0000)
struct GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen final
{
public:
	const class UPrimitiveComponent*              Primitive;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLastRenderTimeOnScreen_ReturnValue;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen");
static_assert(sizeof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen) == 0x000048, "Wrong size on GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, Primitive) == 0x000000, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::Primitive' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, ReturnValue) == 0x000010, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_GetLastRenderTimeOnScreen_ReturnValue) == 0x000014, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_GetLastRenderTimeOnScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_GetTimeSeconds_ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000030, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'GenericFunctionLibrary_C_WasPrimitiveRecentlyRenderedOnScreen::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ResetHysteresisTimer
// 0x00F0 (0x00F0 - 0x0000)
struct GenericFunctionLibrary_C_ResetHysteresisTimer final
{
public:
	struct FTimerHandle                           Handle;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
};
static_assert(alignof(GenericFunctionLibrary_C_ResetHysteresisTimer) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ResetHysteresisTimer");
static_assert(sizeof(GenericFunctionLibrary_C_ResetHysteresisTimer) == 0x0000F0, "Wrong size on GenericFunctionLibrary_C_ResetHysteresisTimer");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, Handle) == 0x000000, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::Handle' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, DebugName) == 0x000008, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::DebugName' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, __WorldContext) == 0x000018, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000030, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0000C8, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, K2Node_MakeArray_Array) == 0x0000D0, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetHysteresisTimer, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'GenericFunctionLibrary_C_ResetHysteresisTimer::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetLocalCanvasSlotParams
// 0x0130 (0x0130 - 0x0000)
struct GenericFunctionLibrary_C_GetLocalCanvasSlotParams final
{
public:
	class UWidget*                                ChildWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UWidget*                                NewParentCanvas;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              position;                                          // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetTickSpaceGeometry_ReturnValue;         // 0x0040(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetTickSpaceGeometry_ReturnValue_1;       // 0x0078(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue_1;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToLocal_ReturnValue_1;            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetLocalCanvasSlotParams");
static_assert(sizeof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams) == 0x000130, "Wrong size on GenericFunctionLibrary_C_GetLocalCanvasSlotParams");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, ChildWidget) == 0x000000, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::ChildWidget' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, NewParentCanvas) == 0x000008, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::NewParentCanvas' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, position) == 0x000018, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::position' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, Size) == 0x000028, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::Size' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_GetTickSpaceGeometry_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_GetTickSpaceGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_GetTickSpaceGeometry_ReturnValue_1) == 0x000078, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_GetTickSpaceGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_GetLocalSize_ReturnValue) == 0x0000B0, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_LocalToAbsolute_ReturnValue) == 0x0000C0, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_LocalToAbsolute_ReturnValue_1) == 0x0000D0, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_LocalToAbsolute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_AbsoluteToLocal_ReturnValue) == 0x0000E0, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_AbsoluteToLocal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_AbsoluteToLocal_ReturnValue_1) == 0x0000F0, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_AbsoluteToLocal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000100, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000110, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetLocalCanvasSlotParams, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000120, "Member 'GenericFunctionLibrary_C_GetLocalCanvasSlotParams::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.AddChildToCanvas_Fill
// 0x0048 (0x0048 - 0x0000)
struct GenericFunctionLibrary_C_AddChildToCanvas_Fill final
{
public:
	class UCanvasPanel*                           Canvas;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UWidget*                                Content;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CanvasSlot;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0020(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_AddChildToCanvas_Fill) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_AddChildToCanvas_Fill");
static_assert(sizeof(GenericFunctionLibrary_C_AddChildToCanvas_Fill) == 0x000048, "Wrong size on GenericFunctionLibrary_C_AddChildToCanvas_Fill");
static_assert(offsetof(GenericFunctionLibrary_C_AddChildToCanvas_Fill, Canvas) == 0x000000, "Member 'GenericFunctionLibrary_C_AddChildToCanvas_Fill::Canvas' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddChildToCanvas_Fill, Content) == 0x000008, "Member 'GenericFunctionLibrary_C_AddChildToCanvas_Fill::Content' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddChildToCanvas_Fill, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_AddChildToCanvas_Fill::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddChildToCanvas_Fill, CanvasSlot) == 0x000018, "Member 'GenericFunctionLibrary_C_AddChildToCanvas_Fill::CanvasSlot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddChildToCanvas_Fill, K2Node_MakeStruct_Anchors) == 0x000020, "Member 'GenericFunctionLibrary_C_AddChildToCanvas_Fill::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_AddChildToCanvas_Fill, CallFunc_AddChildToCanvas_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_AddChildToCanvas_Fill::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CopyUISlot
// 0x00D0 (0x00D0 - 0x0000)
struct GenericFunctionLibrary_C_CopyUISlot final
{
public:
	class UPanelSlot*                             SourceSlot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             TargetSlot;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot_1;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot_1;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAutoSize_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchorData                            CallFunc_GetLayout_ReturnValue;                    // 0x0090(0x0040)(NoDestructor)
};
static_assert(alignof(GenericFunctionLibrary_C_CopyUISlot) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_CopyUISlot");
static_assert(sizeof(GenericFunctionLibrary_C_CopyUISlot) == 0x0000D0, "Wrong size on GenericFunctionLibrary_C_CopyUISlot");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, SourceSlot) == 0x000000, "Member 'GenericFunctionLibrary_C_CopyUISlot::SourceSlot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, TargetSlot) == 0x000008, "Member 'GenericFunctionLibrary_C_CopyUISlot::TargetSlot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_CopyUISlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_CopyUISlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000020, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000030, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000040, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'GenericFunctionLibrary_C_CopyUISlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_AsVertical_Box_Slot_1) == 0x000050, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_AsVertical_Box_Slot_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_AsHorizontal_Box_Slot_1) == 0x000060, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_AsHorizontal_Box_Slot_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_bSuccess_4) == 0x000068, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_AsCanvas_Panel_Slot_1) == 0x000070, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_AsCanvas_Panel_Slot_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, K2Node_DynamicCast_bSuccess_5) == 0x000078, "Member 'GenericFunctionLibrary_C_CopyUISlot::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, CallFunc_GetAutoSize_ReturnValue) == 0x000079, "Member 'GenericFunctionLibrary_C_CopyUISlot::CallFunc_GetAutoSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, CallFunc_GetSize_ReturnValue) == 0x000080, "Member 'GenericFunctionLibrary_C_CopyUISlot::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CopyUISlot, CallFunc_GetLayout_ReturnValue) == 0x000090, "Member 'GenericFunctionLibrary_C_CopyUISlot::CallFunc_GetLayout_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ApplyUISlotToWidget
// 0x0018 (0x0018 - 0x0000)
struct GenericFunctionLibrary_C_ApplyUISlotToWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             Slot;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ApplyUISlotToWidget) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ApplyUISlotToWidget");
static_assert(sizeof(GenericFunctionLibrary_C_ApplyUISlotToWidget) == 0x000018, "Wrong size on GenericFunctionLibrary_C_ApplyUISlotToWidget");
static_assert(offsetof(GenericFunctionLibrary_C_ApplyUISlotToWidget, Widget) == 0x000000, "Member 'GenericFunctionLibrary_C_ApplyUISlotToWidget::Widget' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ApplyUISlotToWidget, Slot) == 0x000008, "Member 'GenericFunctionLibrary_C_ApplyUISlotToWidget::Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ApplyUISlotToWidget, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_ApplyUISlotToWidget::__WorldContext' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.CloneUISlotFromWidget
// 0x0078 (0x0078 - 0x0000)
struct GenericFunctionLibrary_C_CloneUISlotFromWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             Slot;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue_1;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SpawnObject_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_SpawnObject_ReturnValue_1;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue_2;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_SpawnObject_ReturnValue_2;                // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     K2Node_DynamicCast_AsHorizontal_Box_Slot;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       K2Node_DynamicCast_AsVertical_Box_Slot;            // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_CloneUISlotFromWidget) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_CloneUISlotFromWidget");
static_assert(sizeof(GenericFunctionLibrary_C_CloneUISlotFromWidget) == 0x000078, "Wrong size on GenericFunctionLibrary_C_CloneUISlotFromWidget");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, Widget) == 0x000000, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::Widget' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, Slot) == 0x000010, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, CallFunc_GetParent_ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, CallFunc_GetParent_ReturnValue_1) == 0x000020, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::CallFunc_GetParent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, CallFunc_SpawnObject_ReturnValue) == 0x000028, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, CallFunc_SpawnObject_ReturnValue_1) == 0x000030, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, CallFunc_GetParent_ReturnValue_2) == 0x000038, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::CallFunc_GetParent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, CallFunc_SpawnObject_ReturnValue_2) == 0x000040, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, K2Node_DynamicCast_AsHorizontal_Box_Slot) == 0x000048, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::K2Node_DynamicCast_AsHorizontal_Box_Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, K2Node_DynamicCast_AsVertical_Box_Slot) == 0x000058, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::K2Node_DynamicCast_AsVertical_Box_Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000068, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_CloneUISlotFromWidget, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'GenericFunctionLibrary_C_CloneUISlotFromWidget::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsDifferentOptionalBool
// 0x0018 (0x0018 - 0x0000)
struct GenericFunctionLibrary_C_IsDifferentOptionalBool final
{
public:
	EOptionalBoolean                              Bool1;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FromOptionalBool_IsSet;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FromOptionalBool_Value;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IsDifferentOptionalBool) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IsDifferentOptionalBool");
static_assert(sizeof(GenericFunctionLibrary_C_IsDifferentOptionalBool) == 0x000018, "Wrong size on GenericFunctionLibrary_C_IsDifferentOptionalBool");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, Bool1) == 0x000000, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::Bool1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, Bool) == 0x000001, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::Bool' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, ReturnValue) == 0x000010, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, CallFunc_FromOptionalBool_IsSet) == 0x000011, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::CallFunc_FromOptionalBool_IsSet' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, CallFunc_FromOptionalBool_Value) == 0x000012, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::CallFunc_FromOptionalBool_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000014, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsDifferentOptionalBool, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'GenericFunctionLibrary_C_IsDifferentOptionalBool::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.IsSameOptionalBool
// 0x0018 (0x0018 - 0x0000)
struct GenericFunctionLibrary_C_IsSameOptionalBool final
{
public:
	EOptionalBoolean                              Bool1;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Bool;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSet;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FromOptionalBool_IsSet;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FromOptionalBool_Value;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_IsSameOptionalBool) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_IsSameOptionalBool");
static_assert(sizeof(GenericFunctionLibrary_C_IsSameOptionalBool) == 0x000018, "Wrong size on GenericFunctionLibrary_C_IsSameOptionalBool");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, Bool1) == 0x000000, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::Bool1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, Bool) == 0x000001, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::Bool' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, IsSet) == 0x000010, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::IsSet' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, ReturnValue) == 0x000011, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, CallFunc_FromOptionalBool_IsSet) == 0x000012, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::CallFunc_FromOptionalBool_IsSet' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, CallFunc_FromOptionalBool_Value) == 0x000013, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::CallFunc_FromOptionalBool_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_IsSameOptionalBool, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000014, "Member 'GenericFunctionLibrary_C_IsSameOptionalBool::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.==OptionalBool
// 0x0018 (0x0018 - 0x0000)
struct GenericFunctionLibrary_C___OptionalBool final
{
public:
	EOptionalBoolean                              Bool1;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOptionalBoolean                              Bool2;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSame;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C___OptionalBool) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C___OptionalBool");
static_assert(sizeof(GenericFunctionLibrary_C___OptionalBool) == 0x000018, "Wrong size on GenericFunctionLibrary_C___OptionalBool");
static_assert(offsetof(GenericFunctionLibrary_C___OptionalBool, Bool1) == 0x000000, "Member 'GenericFunctionLibrary_C___OptionalBool::Bool1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C___OptionalBool, Bool2) == 0x000001, "Member 'GenericFunctionLibrary_C___OptionalBool::Bool2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C___OptionalBool, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C___OptionalBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C___OptionalBool, IsSame) == 0x000010, "Member 'GenericFunctionLibrary_C___OptionalBool::IsSame' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C___OptionalBool, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'GenericFunctionLibrary_C___OptionalBool::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ResetOptionalBool
// 0x0010 (0x0010 - 0x0000)
struct GenericFunctionLibrary_C_ResetOptionalBool final
{
public:
	EOptionalBoolean                              Bool;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ResetOptionalBool) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ResetOptionalBool");
static_assert(sizeof(GenericFunctionLibrary_C_ResetOptionalBool) == 0x000010, "Wrong size on GenericFunctionLibrary_C_ResetOptionalBool");
static_assert(offsetof(GenericFunctionLibrary_C_ResetOptionalBool, Bool) == 0x000000, "Member 'GenericFunctionLibrary_C_ResetOptionalBool::Bool' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ResetOptionalBool, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_ResetOptionalBool::__WorldContext' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.SetOptionalBool
// 0x0018 (0x0018 - 0x0000)
struct GenericFunctionLibrary_C_SetOptionalBool final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOptionalBoolean                              Bool;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          _;                                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_SetOptionalBool) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_SetOptionalBool");
static_assert(sizeof(GenericFunctionLibrary_C_SetOptionalBool) == 0x000018, "Wrong size on GenericFunctionLibrary_C_SetOptionalBool");
static_assert(offsetof(GenericFunctionLibrary_C_SetOptionalBool, Value) == 0x000000, "Member 'GenericFunctionLibrary_C_SetOptionalBool::Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetOptionalBool, Bool) == 0x000001, "Member 'GenericFunctionLibrary_C_SetOptionalBool::Bool' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetOptionalBool, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_SetOptionalBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetOptionalBool, _) == 0x000010, "Member 'GenericFunctionLibrary_C_SetOptionalBool::_' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.FromOptionalBool
// 0x0018 (0x0018 - 0x0000)
struct GenericFunctionLibrary_C_FromOptionalBool final
{
public:
	EOptionalBoolean                              Bool;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSet;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_FromOptionalBool) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_FromOptionalBool");
static_assert(sizeof(GenericFunctionLibrary_C_FromOptionalBool) == 0x000018, "Wrong size on GenericFunctionLibrary_C_FromOptionalBool");
static_assert(offsetof(GenericFunctionLibrary_C_FromOptionalBool, Bool) == 0x000000, "Member 'GenericFunctionLibrary_C_FromOptionalBool::Bool' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_FromOptionalBool, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_FromOptionalBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_FromOptionalBool, IsSet) == 0x000010, "Member 'GenericFunctionLibrary_C_FromOptionalBool::IsSet' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_FromOptionalBool, Value) == 0x000011, "Member 'GenericFunctionLibrary_C_FromOptionalBool::Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_FromOptionalBool, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'GenericFunctionLibrary_C_FromOptionalBool::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_FromOptionalBool, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000013, "Member 'GenericFunctionLibrary_C_FromOptionalBool::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ToOptionalBool
// 0x0018 (0x0018 - 0x0000)
struct GenericFunctionLibrary_C_ToOptionalBool final
{
public:
	bool                                          Bool;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EOptionalBoolean                              OptionalBool;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOptionalBoolean                              Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOptionalBoolean                              Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOptionalBoolean                              K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ToOptionalBool) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ToOptionalBool");
static_assert(sizeof(GenericFunctionLibrary_C_ToOptionalBool) == 0x000018, "Wrong size on GenericFunctionLibrary_C_ToOptionalBool");
static_assert(offsetof(GenericFunctionLibrary_C_ToOptionalBool, Bool) == 0x000000, "Member 'GenericFunctionLibrary_C_ToOptionalBool::Bool' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToOptionalBool, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_ToOptionalBool::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToOptionalBool, OptionalBool) == 0x000010, "Member 'GenericFunctionLibrary_C_ToOptionalBool::OptionalBool' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToOptionalBool, Temp_bool_Variable) == 0x000011, "Member 'GenericFunctionLibrary_C_ToOptionalBool::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToOptionalBool, Temp_byte_Variable) == 0x000012, "Member 'GenericFunctionLibrary_C_ToOptionalBool::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToOptionalBool, Temp_byte_Variable_1) == 0x000013, "Member 'GenericFunctionLibrary_C_ToOptionalBool::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ToOptionalBool, K2Node_Select_Default) == 0x000014, "Member 'GenericFunctionLibrary_C_ToOptionalBool::K2Node_Select_Default' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetThresholdIntVector
// 0x0058 (0x0058 - 0x0000)
struct GenericFunctionLibrary_C_GetThresholdIntVector final
{
public:
	double                                        X;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y;                                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Threshold;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             IntVector;                                         // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetThresholdAbsoluteValue_Float_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetThresholdAbsoluteValue_Float_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetThresholdIntVector) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetThresholdIntVector");
static_assert(sizeof(GenericFunctionLibrary_C_GetThresholdIntVector) == 0x000058, "Wrong size on GenericFunctionLibrary_C_GetThresholdIntVector");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, X) == 0x000000, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::X' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, Y) == 0x000008, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::Y' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, Threshold) == 0x000010, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::Threshold' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, __WorldContext) == 0x000018, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, IntVector) == 0x000020, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::IntVector' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, CallFunc_GetThresholdAbsoluteValue_Float_ReturnValue) == 0x000030, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::CallFunc_GetThresholdAbsoluteValue_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, CallFunc_GetThresholdAbsoluteValue_Float_ReturnValue_1) == 0x000038, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::CallFunc_GetThresholdAbsoluteValue_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, CallFunc_Round_ReturnValue) == 0x000040, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, CallFunc_Round_ReturnValue_1) == 0x000044, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdIntVector, K2Node_MakeStruct_IntVector) == 0x000048, "Member 'GenericFunctionLibrary_C_GetThresholdIntVector::K2Node_MakeStruct_IntVector' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetThresholdAbsoluteValue_Float
// 0x0050 (0x0050 - 0x0000)
struct GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Threshold;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SignOfFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float");
static_assert(sizeof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float) == 0x000050, "Wrong size on GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, Value) == 0x000000, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, Threshold) == 0x000008, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::Threshold' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, Temp_bool_Variable) == 0x000020, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, CallFunc_SignOfFloat_ReturnValue) == 0x000030, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, Temp_real_Variable) == 0x000040, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float, K2Node_Select_Default) == 0x000048, "Member 'GenericFunctionLibrary_C_GetThresholdAbsoluteValue_Float::K2Node_Select_Default' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetUINavigationDirectionFromInputVector
// 0x00A8 (0x00A8 - 0x0000)
struct GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector final
{
public:
	struct FIntVector                             DirectionVector;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUINavigationDirection                        Direction;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_1;                     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_2;                     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_3;                     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FIntVector, EUINavigationDirection> K2Node_MakeMap_Map;                              // 0x0050(0x0050)(ConstParm)
	EUINavigationDirection                        CallFunc_Map_Find_Value;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector");
static_assert(sizeof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector) == 0x0000A8, "Wrong size on GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, DirectionVector) == 0x000000, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::DirectionVector' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, Direction) == 0x000018, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::Direction' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, K2Node_MakeStruct_IntVector) == 0x00001C, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::K2Node_MakeStruct_IntVector' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, K2Node_MakeStruct_IntVector_1) == 0x000028, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::K2Node_MakeStruct_IntVector_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, K2Node_MakeStruct_IntVector_2) == 0x000034, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::K2Node_MakeStruct_IntVector_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, K2Node_MakeStruct_IntVector_3) == 0x000040, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::K2Node_MakeStruct_IntVector_3' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, K2Node_MakeMap_Map) == 0x000050, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector, CallFunc_Map_Find_ReturnValue) == 0x0000A1, "Member 'GenericFunctionLibrary_C_GetUINavigationDirectionFromInputVector::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetDirectionFromInputVector
// 0x00A8 (0x00A8 - 0x0000)
struct GenericFunctionLibrary_C_GetDirectionFromInputVector final
{
public:
	struct FIntVector                             DirectionVector;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EDirection                                    Direction;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             K2Node_MakeStruct_IntVector;                       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_1;                     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_2;                     // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             K2Node_MakeStruct_IntVector_3;                     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FIntVector, EDirection>           K2Node_MakeMap_Map;                                // 0x0050(0x0050)(ConstParm)
	EDirection                                    CallFunc_Map_Find_Value;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetDirectionFromInputVector) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetDirectionFromInputVector");
static_assert(sizeof(GenericFunctionLibrary_C_GetDirectionFromInputVector) == 0x0000A8, "Wrong size on GenericFunctionLibrary_C_GetDirectionFromInputVector");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, DirectionVector) == 0x000000, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::DirectionVector' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, Direction) == 0x000018, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::Direction' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, K2Node_MakeStruct_IntVector) == 0x00001C, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::K2Node_MakeStruct_IntVector' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, K2Node_MakeStruct_IntVector_1) == 0x000028, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::K2Node_MakeStruct_IntVector_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, K2Node_MakeStruct_IntVector_2) == 0x000034, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::K2Node_MakeStruct_IntVector_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, K2Node_MakeStruct_IntVector_3) == 0x000040, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::K2Node_MakeStruct_IntVector_3' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, K2Node_MakeMap_Map) == 0x000050, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetDirectionFromInputVector, CallFunc_Map_Find_ReturnValue) == 0x0000A1, "Member 'GenericFunctionLibrary_C_GetDirectionFromInputVector::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.SetWidgetVisibilityIfNeeded
// 0x0038 (0x0038 - 0x0000)
struct GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              WantedVisibility;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Visibility_Changed;                                // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESlateVisibility>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded");
static_assert(sizeof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded) == 0x000038, "Wrong size on GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, Widget) == 0x000000, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::Widget' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, WantedVisibility) == 0x000008, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::WantedVisibility' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, Visibility_Changed) == 0x000018, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::Visibility_Changed' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, K2Node_MakeArray_Array) == 0x000020, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, CallFunc_GetVisibility_ReturnValue) == 0x000031, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, CallFunc_Array_Contains_ReturnValue_1) == 0x000032, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000033, "Member 'GenericFunctionLibrary_C_SetWidgetVisibilityIfNeeded::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetUINavigationComponent
// 0x0028 (0x0028 - 0x0000)
struct GenericFunctionLibrary_C_GetUINavigationComponent final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UINavigationComponent_C*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_UINavigationComponent_C*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetUINavigationComponent) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetUINavigationComponent");
static_assert(sizeof(GenericFunctionLibrary_C_GetUINavigationComponent) == 0x000028, "Wrong size on GenericFunctionLibrary_C_GetUINavigationComponent");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationComponent, __WorldContext) == 0x000000, "Member 'GenericFunctionLibrary_C_GetUINavigationComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationComponent, ReturnValue) == 0x000008, "Member 'GenericFunctionLibrary_C_GetUINavigationComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'GenericFunctionLibrary_C_GetUINavigationComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_GetUINavigationComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUINavigationComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GenericFunctionLibrary_C_GetUINavigationComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ClampToViewport
// 0x00A8 (0x00A8 - 0x0000)
struct GenericFunctionLibrary_C_ClampToViewport final
{
public:
	struct FVector2D                              position;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Margin;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Result;                                            // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_ClampToViewport) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ClampToViewport");
static_assert(sizeof(GenericFunctionLibrary_C_ClampToViewport) == 0x0000A8, "Wrong size on GenericFunctionLibrary_C_ClampToViewport");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, position) == 0x000000, "Member 'GenericFunctionLibrary_C_ClampToViewport::position' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, Margin) == 0x000010, "Member 'GenericFunctionLibrary_C_ClampToViewport::Margin' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, __WorldContext) == 0x000020, "Member 'GenericFunctionLibrary_C_ClampToViewport::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, Result) == 0x000028, "Member 'GenericFunctionLibrary_C_ClampToViewport::Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_BreakVector2D_X) == 0x000038, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_GetViewportSize_ReturnValue) == 0x000048, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_BreakVector2D_X_1) == 0x000058, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_BreakVector2D_Y_1) == 0x000060, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_BreakVector2D_X_2) == 0x000068, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_BreakVector2D_Y_2) == 0x000070, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_FClamp_ReturnValue_1) == 0x000090, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ClampToViewport, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'GenericFunctionLibrary_C_ClampToViewport::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.ConcatenateDisplayNames
// 0x01B8 (0x01B8 - 0x0000)
struct GenericFunctionLibrary_C_ConcatenateDisplayNames final
{
public:
	TArray<class UObject*>                        Objects;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0018(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0030(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0088(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_2;                              // 0x0130(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0140(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0150(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0010)()
};
static_assert(alignof(GenericFunctionLibrary_C_ConcatenateDisplayNames) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_ConcatenateDisplayNames");
static_assert(sizeof(GenericFunctionLibrary_C_ConcatenateDisplayNames) == 0x0001B8, "Wrong size on GenericFunctionLibrary_C_ConcatenateDisplayNames");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Objects) == 0x000000, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Objects' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Result) == 0x000018, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Result' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Temp_bool_Variable) == 0x000028, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Temp_text_Variable) == 0x000030, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Temp_text_Variable_1) == 0x000040, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Temp_int_Array_Index_Variable) == 0x000050, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_Array_Get_Item) == 0x000058, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, K2Node_Select_Default) == 0x000088, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_Add_IntInt_ReturnValue) == 0x00012C, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, Temp_text_Variable_2) == 0x000130, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_MakeLiteralText_ReturnValue) == 0x000140, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, K2Node_MakeStruct_FormatArgumentData_2) == 0x000150, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, K2Node_MakeArray_Array) == 0x000198, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_ConcatenateDisplayNames, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'GenericFunctionLibrary_C_ConcatenateDisplayNames::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.BattleSequenceKeyframeToText
// 0x0160 (0x0160 - 0x0000)
struct GenericFunctionLibrary_C_BattleSequenceKeyframeToText final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       Keyframe;                                          // 0x0008(0x0002)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0018(0x0010)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0010)()
};
static_assert(alignof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_BattleSequenceKeyframeToText");
static_assert(sizeof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText) == 0x000160, "Wrong size on GenericFunctionLibrary_C_BattleSequenceKeyframeToText");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, Time) == 0x000000, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::Time' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, Keyframe) == 0x000008, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::Keyframe' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, __WorldContext) == 0x000010, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, Text) == 0x000018, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::Text' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000070, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000080, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A0, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, K2Node_MakeArray_Array) == 0x000140, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_BattleSequenceKeyframeToText, CallFunc_Format_ReturnValue) == 0x000150, "Member 'GenericFunctionLibrary_C_BattleSequenceKeyframeToText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function GenericFunctionLibrary.GenericFunctionLibrary_C.GetUndilatedTimeSeconds
// 0x0020 (0x0020 - 0x0000)
struct GenericFunctionLibrary_C_GetUndilatedTimeSeconds final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        UndilatedTime;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAudioTimeSeconds_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GenericFunctionLibrary_C_GetUndilatedTimeSeconds) == 0x000008, "Wrong alignment on GenericFunctionLibrary_C_GetUndilatedTimeSeconds");
static_assert(sizeof(GenericFunctionLibrary_C_GetUndilatedTimeSeconds) == 0x000020, "Wrong size on GenericFunctionLibrary_C_GetUndilatedTimeSeconds");
static_assert(offsetof(GenericFunctionLibrary_C_GetUndilatedTimeSeconds, WorldContextObject) == 0x000000, "Member 'GenericFunctionLibrary_C_GetUndilatedTimeSeconds::WorldContextObject' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUndilatedTimeSeconds, __WorldContext) == 0x000008, "Member 'GenericFunctionLibrary_C_GetUndilatedTimeSeconds::__WorldContext' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUndilatedTimeSeconds, UndilatedTime) == 0x000010, "Member 'GenericFunctionLibrary_C_GetUndilatedTimeSeconds::UndilatedTime' has a wrong offset!");
static_assert(offsetof(GenericFunctionLibrary_C_GetUndilatedTimeSeconds, CallFunc_GetAudioTimeSeconds_ReturnValue) == 0x000018, "Member 'GenericFunctionLibrary_C_GetUndilatedTimeSeconds::CallFunc_GetAudioTimeSeconds_ReturnValue' has a wrong offset!");

}

