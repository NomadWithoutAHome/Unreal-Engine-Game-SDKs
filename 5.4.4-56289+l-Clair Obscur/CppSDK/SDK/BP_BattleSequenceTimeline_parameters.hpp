#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleSequenceTimeline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EBattleActionEvent_structs.hpp"
#include "SandFall_structs.hpp"
#include "FBattleSequenceTimelineKeyframe_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddBattleSequenceActionKeyframe
// 0x01C0 (0x01C0 - 0x0000)
struct BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleActionEvent                            ActionType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       K2Node_MakeStruct_FBattleSequenceTimelineKeyframe; // 0x0020(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00C8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0010)()
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value;                           // 0x0130(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0148(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0158(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01B0(0x0010)()
};
static_assert(alignof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe");
static_assert(sizeof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe) == 0x0001C0, "Wrong size on BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, Time) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, ActionType) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::ActionType' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, K2Node_MakeStruct_FBattleSequenceTimelineKeyframe) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::K2Node_MakeStruct_FBattleSequenceTimelineKeyframe' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000C8, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, K2Node_MakeArray_Array) == 0x000110, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_Format_ReturnValue) == 0x000120, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_Map_Find_Value) == 0x000130, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_Map_Find_ReturnValue) == 0x000132, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000138, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000148, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, K2Node_MakeStruct_FormatArgumentData_3) == 0x000158, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe, CallFunc_Format_ReturnValue_1) == 0x0001B0, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceActionKeyframe::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddBattleSequenceCameraKeyframe
// 0x0080 (0x0080 - 0x0000)
struct BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSequenceCameraType                     CameraType;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       K2Node_MakeStruct_FBattleSequenceTimelineKeyframe; // 0x0009(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0010(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0010)()
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value;                           // 0x0078(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe");
static_assert(sizeof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe) == 0x000080, "Wrong size on BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, Time) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, CameraType) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::CameraType' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, K2Node_MakeStruct_FBattleSequenceTimelineKeyframe) == 0x000009, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::K2Node_MakeStruct_FBattleSequenceTimelineKeyframe' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, K2Node_MakeStruct_FormatArgumentData) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, CallFunc_Format_ReturnValue) == 0x000068, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, CallFunc_Map_Find_Value) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe, CallFunc_Map_Find_ReturnValue) == 0x00007A, "Member 'BP_BattleSequenceTimeline_C_AddBattleSequenceCameraKeyframe::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddQTEPresetKeyframes
// 0x0148 (0x0148 - 0x0000)
struct BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes final
{
public:
	double                                        WindowStartTime;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnticipationDuration_0;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ValidityDuration_0;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NowTime;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0130(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes");
static_assert(sizeof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes) == 0x000148, "Wrong size on BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, WindowStartTime) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::WindowStartTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, AnticipationDuration_0) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::AnticipationDuration_0' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, ValidityDuration_0) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::ValidityDuration_0' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, NowTime) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::NowTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D0, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, K2Node_MakeArray_Array) == 0x000118, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Format_ReturnValue) == 0x000130, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Array_Add_ReturnValue_1) == 0x000140, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes, CallFunc_Array_Add_ReturnValue_2) == 0x000144, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.AddQTEPresetKeyframes_Legacy
// 0x0148 (0x0148 - 0x0000)
struct BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy final
{
public:
	double                                        WindowStartTime;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnticipationDuration_0;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ValidityDuration_0;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NowTime;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D8(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)()
};
static_assert(alignof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy");
static_assert(sizeof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy) == 0x000148, "Wrong size on BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, WindowStartTime) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::WindowStartTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, AnticipationDuration_0) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::AnticipationDuration_0' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, ValidityDuration_0) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::ValidityDuration_0' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, NowTime) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::NowTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Array_Add_ReturnValue_1) == 0x0000D4, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D8, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Array_Add_ReturnValue_2) == 0x000120, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_BattleSequenceTimeline_C_AddQTEPresetKeyframes_Legacy::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.DeclareBattleSequenceTimingsAsList
// 0x03A0 (0x03A0 - 0x0000)
struct BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList final
{
public:
	class ABP_EpicBattleSequenceActor_C*          BattleSequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBattleSequenceKeyframe>        BattleSequenceKeyframes;                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<double, EBattleSequenceCameraType>       CameraKeyframes;                                   // 0x0018(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         local_actionEffectCount;                           // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSequenceKeyframeType                   lastKeyframeType;                                  // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_Now;                                         // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Map_Keys_Keys;                            // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBattleSequenceKeyframe                CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00C8(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0130(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0140(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0150(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0198(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E0(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EBattleActionEvent                            Temp_byte_Variable;                                // 0x0208(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0210(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0258(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0268(0x0010)()
	EBattleSequenceKeyframeType                   Temp_byte_Variable_1;                              // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_QTE_Base_C*                    CallFunc_GetQTEWidget_Output;                      // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFBattleSequenceTimelineKeyframe> CallFunc_Map_Values_Values;                      // 0x0288(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Array_Get_Item_2;                         // 0x0299(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B[0x1];                                      // 0x029B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x2];                                      // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSequenceCameraType                     CallFunc_Map_Find_Value;                           // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B3[0x1];                                      // 0x02B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02C0(0x0048)(HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleActionEvent                            K2Node_Select_Default;                             // 0x030A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B[0x5];                                      // 0x030B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0320(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0330(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0378(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0388(0x0010)()
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList");
static_assert(sizeof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList) == 0x0003A0, "Wrong size on BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, BattleSequence) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::BattleSequence' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, BattleSequenceKeyframes) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::BattleSequenceKeyframes' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CameraKeyframes) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CameraKeyframes' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, local_actionEffectCount) == 0x000068, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::local_actionEffectCount' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, lastKeyframeType) == 0x00006C, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::lastKeyframeType' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, local_Now) == 0x000070, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::local_Now' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Map_Keys_Keys) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_int_Array_Index_Variable_2) == 0x0000BC, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeStruct_FormatArgumentData) == 0x0000C8, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000110, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000120, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Conv_StringToText_ReturnValue) == 0x000130, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000140, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeStruct_FormatArgumentData_1) == 0x000150, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeStruct_FormatArgumentData_2) == 0x000198, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeArray_Array) == 0x0001E0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_SwitchEnum_CmpSuccess) == 0x0001F0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Format_ReturnValue) == 0x0001F8, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_byte_Variable) == 0x000208, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeStruct_FormatArgumentData_3) == 0x000210, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeArray_Array_1) == 0x000258, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Format_ReturnValue_1) == 0x000268, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_byte_Variable_1) == 0x000278, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Add_IntInt_ReturnValue_2) == 0x00027C, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_GetQTEWidget_Output) == 0x000280, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_GetQTEWidget_Output' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Map_Values_Values) == 0x000288, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_IsValid_ReturnValue) == 0x000298, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Array_Get_Item_2) == 0x000299, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Array_Length_ReturnValue_2) == 0x00029C, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_MakeLiteralByte_ReturnValue) == 0x0002A1, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_int_Loop_Counter_Variable_2) == 0x0002A4, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002A8, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002AC, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0002B0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Map_Find_Value) == 0x0002B1, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Map_Find_ReturnValue) == 0x0002B2, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, Temp_int_Variable) == 0x0002B4, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002B8, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002C0, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000308, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000309, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_Select_Default) == 0x00030A, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000310, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000320, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeStruct_FormatArgumentData_5) == 0x000330, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, K2Node_MakeArray_Array_2) == 0x000378, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Format_ReturnValue_2) == 0x000388, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000398, "Member 'BP_BattleSequenceTimeline_C_DeclareBattleSequenceTimingsAsList::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.ExecuteUbergraph_BP_BattleSequenceTimeline
// 0x0058 (0x0058 - 0x0000)
struct BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBP_UINavigationFocusEvent_C*     K2Node_Event_FocusEventBP;                         // 0x0010(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime_1;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime_2;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime_3;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline");
static_assert(sizeof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline) == 0x000058, "Wrong size on BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, EntryPoint) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, K2Node_Event_FocusEventBP) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::K2Node_Event_FocusEventBP' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, K2Node_SwitchEnum_CmpSuccess) == 0x00001A, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_GetUndilatedTimeSeconds_UndilatedTime_1) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_GetUndilatedTimeSeconds_UndilatedTime_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_GetUndilatedTimeSeconds_UndilatedTime_2) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_GetUndilatedTimeSeconds_UndilatedTime_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_GetUndilatedTimeSeconds_UndilatedTime_3) == 0x000048, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_GetUndilatedTimeSeconds_UndilatedTime_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_ExecuteUbergraph_BP_BattleSequenceTimeline::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.ExpiresSoonerThan
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleSequenceTimeline_C_ExpiresSoonerThan final
{
public:
	class UBP_BattleSequenceTimeline_C*           Other;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_ExpiresSoonerThan");
static_assert(sizeof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan) == 0x000018, "Wrong size on BP_BattleSequenceTimeline_C_ExpiresSoonerThan");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, Other) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::Other' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, Result) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::Result' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00000C, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_BooleanAND_ReturnValue_1) == 0x00000D, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x00000E, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_BooleanAND_ReturnValue_2) == 0x00000F, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_Not_PreBool_ReturnValue_2) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_BooleanAND_ReturnValue_3) == 0x000011, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_Not_PreBool_ReturnValue_3) == 0x000012, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ExpiresSoonerThan, CallFunc_BooleanAND_ReturnValue_4) == 0x000013, "Member 'BP_BattleSequenceTimeline_C_ExpiresSoonerThan::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.ForceStopSequence
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleSequenceTimeline_C_ForceStopSequence final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_ForceStopSequence) == 0x000001, "Wrong alignment on BP_BattleSequenceTimeline_C_ForceStopSequence");
static_assert(sizeof(BP_BattleSequenceTimeline_C_ForceStopSequence) == 0x000001, "Wrong size on BP_BattleSequenceTimeline_C_ForceStopSequence");
static_assert(offsetof(BP_BattleSequenceTimeline_C_ForceStopSequence, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_ForceStopSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetCurrentBattleSequenceTime
// 0x0058 (0x0058 - 0x0000)
struct BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetCurrentTime_ReturnValue;               // 0x0010(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetStartTime_ReturnValue;                 // 0x0020(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime");
static_assert(sizeof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime) == 0x000058, "Wrong size on BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, Time) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_GetCurrentTime_ReturnValue) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_GetCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_GetStartTime_ReturnValue) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_1) == 0x000034, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_IsPlaying_ReturnValue) == 0x000038, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTime::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetCurrentBattleSequenceTimeInAsset
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetCurrentTime_ReturnValue;               // 0x0010(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset");
static_assert(sizeof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset) == 0x000028, "Wrong size on BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset, ReturnValue) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset, CallFunc_GetSequencePlayer_ReturnValue) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset, CallFunc_GetCurrentTime_ReturnValue) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset::CallFunc_GetCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_GetCurrentBattleSequenceTimeInAsset::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetCurrentTimeForBattleSequenceTimeline
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline final
{
public:
	double                                        NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline");
static_assert(sizeof(BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline) == 0x000008, "Wrong size on BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline, NewParam) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_GetCurrentTimeForBattleSequenceTimeline::NewParam' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetDebugText
// 0x03B8 (0x03B8 - 0x0000)
struct BP_BattleSequenceTimeline_C_GetDebugText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPerfectWindow_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0038(0x0010)()
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0128(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0198(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01B8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0200(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0248(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0290(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x02A0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x02E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x02F8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x0340(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0350(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0398(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03A8(0x0010)()
};
static_assert(alignof(BP_BattleSequenceTimeline_C_GetDebugText) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_GetDebugText");
static_assert(sizeof(BP_BattleSequenceTimeline_C_GetDebugText) == 0x0003B8, "Wrong size on BP_BattleSequenceTimeline_C_GetDebugText");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, ReturnValue) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, Temp_string_Variable) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, Temp_string_Variable_1) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_IsInPerfectWindow_ReturnValue) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_IsInPerfectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_Conv_BoolToText_ReturnValue) == 0x000038, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x000048, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E0, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000128, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, Temp_bool_Variable) == 0x000170, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000178, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_Select_Default) == 0x000188, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_Conv_StringToText_ReturnValue) == 0x000198, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001A8, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001B8, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_5) == 0x000200, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_6) == 0x000248, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000290, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_7) == 0x0002A0, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x0002E8, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_8) == 0x0002F8, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x000340, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_9) == 0x000350, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, K2Node_MakeArray_Array) == 0x000398, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetDebugText, CallFunc_Format_ReturnValue) == 0x0003A8, "Member 'BP_BattleSequenceTimeline_C_GetDebugText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetQTEWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleSequenceTimeline_C_GetQTEWidget final
{
public:
	class UWBP_HUD_QTE_Base_C*                    Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_QTE_Base_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_GetQTEWidget) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_GetQTEWidget");
static_assert(sizeof(BP_BattleSequenceTimeline_C_GetQTEWidget) == 0x000020, "Wrong size on BP_BattleSequenceTimeline_C_GetQTEWidget");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetQTEWidget, Output) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_GetQTEWidget::Output' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetQTEWidget, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_GetQTEWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetQTEWidget, CallFunc_GetQTEManager_QTEManager) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_GetQTEWidget::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetQTEWidget, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_GetQTEWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.GetTiedObject
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleSequenceTimeline_C_GetTiedObject final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_GetTiedObject) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_GetTiedObject");
static_assert(sizeof(BP_BattleSequenceTimeline_C_GetTiedObject) == 0x000008, "Wrong size on BP_BattleSequenceTimeline_C_GetTiedObject");
static_assert(offsetof(BP_BattleSequenceTimeline_C_GetTiedObject, Object) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_GetTiedObject::Object' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.IsInPerfectWindow
// 0x0038 (0x0038 - 0x0000)
struct BP_BattleSequenceTimeline_C_IsInPerfectWindow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_IsInPerfectWindow) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_IsInPerfectWindow");
static_assert(sizeof(BP_BattleSequenceTimeline_C_IsInPerfectWindow) == 0x000038, "Wrong size on BP_BattleSequenceTimeline_C_IsInPerfectWindow");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, ReturnValue) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000001, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_GetBoolCVar_ReturnValue) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_IsInPerfectWindow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_BattleSequenceTimeline_C_IsInPerfectWindow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnBattleSequenceActionReached
// 0x0005 (0x0005 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached final
{
public:
	EBattleActionEvent                            KeyframeType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isPlayerTeam;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamCharacter_IsPlayerTeam;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached) == 0x000001, "Wrong alignment on BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached) == 0x000005, "Wrong size on BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached, KeyframeType) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached::KeyframeType' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached, local_isPlayerTeam) == 0x000001, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached::local_isPlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached, CallFunc_IsPlayerTeamCharacter_IsPlayerTeam) == 0x000004, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceActionReached::CallFunc_IsPlayerTeamCharacter_IsPlayerTeam' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnBattleSequenceFinished
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnBattleSequenceFinished final
{
public:
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_OnBattleSequenceFinished");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished) == 0x0000D0, "Wrong size on BP_BattleSequenceTimeline_C_OnBattleSequenceFinished");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished, CallFunc_GetQTEManager_QTEManager) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceFinished::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceFinished::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceFinished::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000060, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceFinished::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceFinished::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceFinished::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnBattleSequenceFinished, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_BattleSequenceTimeline_C_OnBattleSequenceFinished::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboExitPointReached
// 0x02C8 (0x02C8 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue_1; // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0138(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0190(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentBattleSequenceTime_Time;        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0200(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0250(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0260(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02B8(0x0010)()
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached) == 0x0002C8, "Wrong size on BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, Temp_bool_Variable) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, Temp_text_Variable) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, Temp_text_Variable_1) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x000038, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue) == 0x0000E8, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue_1) == 0x0000EC, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeStruct_FormatArgumentData_3) == 0x000138, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_Add_IntInt_ReturnValue) == 0x000180, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000184, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000188, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeStruct_FormatArgumentData_4) == 0x000190, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeArray_Array) == 0x0001D8, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_Format_ReturnValue) == 0x0001E8, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_GetCurrentBattleSequenceTime_Time) == 0x0001F8, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_GetCurrentBattleSequenceTime_Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeStruct_FormatArgumentData_5) == 0x000200, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_Not_PreBool_ReturnValue) == 0x000248, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_Select_Default) == 0x000250, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeStruct_FormatArgumentData_6) == 0x000260, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, K2Node_MakeArray_Array_1) == 0x0002A8, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached, CallFunc_Format_ReturnValue_1) == 0x0002B8, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboExitPointReached::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboWindowEndReached
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached final
{
public:
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentBattleSequenceTime_Time;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached) == 0x0000A0, "Wrong size on BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_Array_Add_ReturnValue) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_Array_Add_ReturnValue_1) == 0x000004, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_GetQTEManager_QTEManager) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_GetCurrentBattleSequenceTime_Time) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_GetCurrentBattleSequenceTime_Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, Temp_int_Variable) == 0x000098, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached, CallFunc_Not_PreBool_ReturnValue) == 0x00009C, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowEndReached::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboWindowPreReached
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached final
{
public:
	class UWBP_HUD_QTE_Base_C*                    CallFunc_GetQTEWidget_Output;                      // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentBattleSequenceTime_Time;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0010)()
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_QTEManager_C*                       CallFunc_GetQTEManager_QTEManager;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached) == 0x0000B0, "Wrong size on BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_GetQTEWidget_Output) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_GetQTEWidget_Output' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_GetCurrentBattleSequenceTime_Time) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_GetCurrentBattleSequenceTime_Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_GetSequencePlayer_ReturnValue) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_GetQTEManager_QTEManager) == 0x000088, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_GetQTEManager_QTEManager' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_Not_PreBool_ReturnValue_1) == 0x000098, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x0000A0, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowPreReached::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillComboWindowStartReached
// 0x0090 (0x0090 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached final
{
public:
	bool                                          CallFunc_ShouldDoAutoQTE_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentBattleSequenceTime_Time;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached) == 0x000090, "Wrong size on BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, CallFunc_ShouldDoAutoQTE_ReturnValue) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::CallFunc_ShouldDoAutoQTE_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, CallFunc_GetCurrentBattleSequenceTime_Time) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::CallFunc_GetCurrentBattleSequenceTime_Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_OnSkillComboWindowStartReached::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnSkillEffectReached
// 0x01F8 (0x01F8 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnSkillEffectReached final
{
public:
	float                                         CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_GetUndilatedTimeSeconds_UndilatedTime;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D0(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0120(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	double                                        CallFunc_GetCurrentBattleSequenceTime_Time;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0190(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01E8(0x0010)()
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnSkillEffectReached) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_OnSkillEffectReached");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnSkillEffectReached) == 0x0001F8, "Wrong size on BP_BattleSequenceTimeline_C_OnSkillEffectReached");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_GetCurrentBattleSequenceTimeInAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_GetUndilatedTimeSeconds_UndilatedTime) == 0x0000B8, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_GetUndilatedTimeSeconds_UndilatedTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D0, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000118, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, K2Node_MakeStruct_FormatArgumentData_3) == 0x000120, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, K2Node_MakeArray_Array) == 0x000168, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_GetCurrentBattleSequenceTime_Time) == 0x000178, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_GetCurrentBattleSequenceTime_Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, K2Node_MakeStruct_FormatArgumentData_4) == 0x000190, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, K2Node_MakeArray_Array_1) == 0x0001D8, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnSkillEffectReached, CallFunc_Format_ReturnValue_1) == 0x0001E8, "Member 'BP_BattleSequenceTimeline_C_OnSkillEffectReached::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.OnUINavigationFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleSequenceTimeline_C_OnUINavigationFocus final
{
public:
	const class UBP_UINavigationFocusEvent_C*     FocusEventBP;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_OnUINavigationFocus) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_OnUINavigationFocus");
static_assert(sizeof(BP_BattleSequenceTimeline_C_OnUINavigationFocus) == 0x000008, "Wrong size on BP_BattleSequenceTimeline_C_OnUINavigationFocus");
static_assert(offsetof(BP_BattleSequenceTimeline_C_OnUINavigationFocus, FocusEventBP) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_OnUINavigationFocus::FocusEventBP' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.QueueNextBattleSequenceKeyframe
// 0x02F8 (0x02F8 - 0x0000)
struct BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0048)(HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value;                           // 0x0048(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value_1;                         // 0x00D0(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00F0(0x0010)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0160(0x0010)()
	bool                                          CallFunc_VerifyBattleSequenceActionChange_IsValid; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBattleActionEvent>                    CallFunc_VerifyBattleSequenceActionChange_ExpectedValue; // 0x0178(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0188(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01F8(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0250(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0260(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0270(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0280(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02D8(0x0010)()
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x02E8(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe");
static_assert(sizeof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe) == 0x0002F8, "Wrong size on BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Map_Find_Value) == 0x000048, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Map_Find_ReturnValue) == 0x00004A, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000060, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000070, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_MinOfFloatArray_MinValue) == 0x000074, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Map_Find_Value_1) == 0x0000D0, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Map_Find_ReturnValue_1) == 0x0000D2, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000D8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Map_Length_ReturnValue) == 0x0000E8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000F0, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000150, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000160, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_VerifyBattleSequenceActionChange_IsValid) == 0x000170, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_VerifyBattleSequenceActionChange_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_VerifyBattleSequenceActionChange_ExpectedValue) == 0x000178, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_VerifyBattleSequenceActionChange_ExpectedValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeStruct_FormatArgumentData_3) == 0x000188, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Not_PreBool_ReturnValue) == 0x0001D0, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeArray_Array) == 0x0001D8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Format_ReturnValue) == 0x0001E8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001F8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000240, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeArray_Array_1) == 0x000250, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000260, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Format_ReturnValue_1) == 0x000270, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeStruct_FormatArgumentData_5) == 0x000280, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, K2Node_MakeArray_Array_2) == 0x0002C8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_Format_ReturnValue_2) == 0x0002D8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x0002E8, "Member 'BP_BattleSequenceTimeline_C_QueueNextBattleSequenceKeyframe::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.SetCurrentBattleSequenceAction
// 0x0300 (0x0300 - 0x0000)
struct BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction final
{
public:
	EBattleActionEvent                            BattleSequenceAction;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x0080(0x0010)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0098(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0138(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0158(0x0010)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01C8(0x0010)()
	bool                                          CallFunc_VerifyBattleSequenceActionChange_IsValid; // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBattleActionEvent>                    CallFunc_VerifyBattleSequenceActionChange_ExpectedValue; // 0x01E0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01F0(0x0048)(HasGetValueTypeHash)
	EBattleActionEvent                            CallFunc_Array_Get_Item;                           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0240(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0270(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0280(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02E8(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction");
static_assert(sizeof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction) == 0x000300, "Wrong size on BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, BattleSequenceAction) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::BattleSequenceAction' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, Temp_text_Variable) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, Temp_text_Variable_1) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, Temp_text_Variable_2) == 0x000098, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_MakeLiteralText_ReturnValue) == 0x000138, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, Temp_bool_Variable) == 0x000148, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000149, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, Temp_int_Loop_Counter_Variable) == 0x00014C, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Not_PreBool_ReturnValue) == 0x000150, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000151, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_Select_Default) == 0x000158, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0001B8, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001C8, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_VerifyBattleSequenceActionChange_IsValid) == 0x0001D8, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_VerifyBattleSequenceActionChange_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_VerifyBattleSequenceActionChange_ExpectedValue) == 0x0001E0, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_VerifyBattleSequenceActionChange_ExpectedValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001F0, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Array_Get_Item) == 0x000238, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeArray_Array) == 0x000240, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000250, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Format_ReturnValue) == 0x000260, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000270, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeStruct_FormatArgumentData_5) == 0x000280, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Array_Length_ReturnValue) == 0x0002C8, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, K2Node_MakeArray_Array_1) == 0x0002D0, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Less_IntInt_ReturnValue) == 0x0002E0, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Format_ReturnValue_1) == 0x0002E8, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002F8, "Member 'BP_BattleSequenceTimeline_C_SetCurrentBattleSequenceAction::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.TickBattleSequenceTimeline
// 0x03D0 (0x03D0 - 0x0000)
struct BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline final
{
public:
	struct FVector                                Temp_struct_Variable;                              // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_2;                            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_3;                            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_4;                            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_5;                            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_6;                            // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_7;                            // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleSequenceCameraType                     Temp_byte_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0118(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0128(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0138(0x0048)(HasGetValueTypeHash)
	EBattleSequenceCameraType                     Temp_byte_Variable_1;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Controller_World_C*            CallFunc_GetJRPGControllerWorld_JRPG_Controller;   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentBattleSequenceTime_Time;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3[0x5];                                      // 0x01A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01A8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01F0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0238(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02B0(0x0048)(HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value;                           // 0x02F8(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB[0x5];                                      // 0x02FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0300(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0310(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0330(0x0010)()
	struct FVector                                K2Node_Select_Default;                             // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0358(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03A0(0x0010)(ReferenceParm)
	class FName                                   K2Node_Select_Default_1;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03B8(0x0010)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline");
static_assert(sizeof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline) == 0x0003D0, "Wrong size on BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable_1) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable_2) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable_3) == 0x000048, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable_4) == 0x000060, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable_5) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable_6) == 0x000090, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_struct_Variable_7) == 0x0000A8, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_byte_Variable) == 0x0000C0, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable) == 0x0000C4, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable_1) == 0x0000CC, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable_2) == 0x0000D4, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable_3) == 0x0000DC, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable_4) == 0x0000E4, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable_5) == 0x0000EC, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable_6) == 0x0000F4, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_name_Variable_7) == 0x0000FC, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000108, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue) == 0x000118, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_MakeLiteralText_ReturnValue) == 0x000128, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData) == 0x000138, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, Temp_byte_Variable_1) == 0x000180, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_IsValid_ReturnValue) == 0x000181, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_GetJRPGControllerWorld_JRPG_Controller) == 0x000188, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_GetJRPGControllerWorld_JRPG_Controller' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_GetCurrentBattleSequenceTime_Time) == 0x000190, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_GetCurrentBattleSequenceTime_Time' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_GetSequencePlayer_ReturnValue) == 0x000198, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_IsPlaying_ReturnValue) == 0x0001A0, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Map_Remove_ReturnValue) == 0x0001A1, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x0001A2, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001A8, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001F0, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_3) == 0x000238, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000280, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_BooleanAND_ReturnValue) == 0x000298, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Format_ReturnValue) == 0x0002A0, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002B0, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Map_Find_Value) == 0x0002F8, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Map_Find_ReturnValue) == 0x0002FA, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeArray_Array_1) == 0x000300, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Format_ReturnValue_1) == 0x000310, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000320, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000330, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_Select_Default) == 0x000340, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_5) == 0x000358, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_MakeArray_Array_2) == 0x0003A0, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, K2Node_Select_Default_1) == 0x0003B0, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_Format_ReturnValue_2) == 0x0003B8, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0003C8, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0003C9, "Member 'BP_BattleSequenceTimeline_C_TickBattleSequenceTimeline::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.TryActivate
// 0x00D8 (0x00D8 - 0x0000)
struct BP_BattleSequenceTimeline_C_TryActivate final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Perfect;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable;                            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPerfectWindow_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0008(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_TryActivate) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_TryActivate");
static_assert(sizeof(BP_BattleSequenceTimeline_C_TryActivate) == 0x0000D8, "Wrong size on BP_BattleSequenceTimeline_C_TryActivate");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, Success) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_TryActivate::Success' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, Perfect) == 0x000001, "Member 'BP_BattleSequenceTimeline_C_TryActivate::Perfect' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, Temp_wildcard_Variable) == 0x000002, "Member 'BP_BattleSequenceTimeline_C_TryActivate::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, CallFunc_IsInPerfectWindow_ReturnValue) == 0x000003, "Member 'BP_BattleSequenceTimeline_C_TryActivate::CallFunc_IsInPerfectWindow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_BattleSequenceTimeline_C_TryActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_TryActivate::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_TryActivate::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_TryActivate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'BP_BattleSequenceTimeline_C_TryActivate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_BattleSequenceTimeline_C_TryActivate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'BP_BattleSequenceTimeline_C_TryActivate::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D0, "Member 'BP_BattleSequenceTimeline_C_TryActivate::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_TryActivate, CallFunc_BooleanAND_ReturnValue) == 0x0000D1, "Member 'BP_BattleSequenceTimeline_C_TryActivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.VerifyBattleSequenceActionChange
// 0x0098 (0x0098 - 0x0000)
struct BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange final
{
public:
	EBattleActionEvent                            CurrentState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleActionEvent                            PreviousState;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBattleActionEvent>                    ExpectedValue;                                     // 0x0008(0x0010)(Parm, OutParm)
	EBattleActionEvent                            Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBattleActionEvent>                    Temp_byte_Variable_1;                              // 0x0020(0x0010)(ReferenceParm)
	TArray<EBattleActionEvent>                    K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	TArray<EBattleActionEvent>                    K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm)
	TArray<EBattleActionEvent>                    K2Node_MakeArray_Array_2;                          // 0x0050(0x0010)(ReferenceParm)
	TArray<EBattleActionEvent>                    K2Node_MakeArray_Array_3;                          // 0x0060(0x0010)(ReferenceParm)
	TArray<EBattleActionEvent>                    K2Node_MakeArray_Array_4;                          // 0x0070(0x0010)(ReferenceParm)
	TArray<EBattleActionEvent>                    K2Node_Select_Default;                             // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange");
static_assert(sizeof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange) == 0x000098, "Wrong size on BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, CurrentState) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::CurrentState' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, PreviousState) == 0x000001, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::PreviousState' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, IsValid) == 0x000002, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, ExpectedValue) == 0x000008, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::ExpectedValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, Temp_byte_Variable) == 0x000018, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, Temp_byte_Variable_1) == 0x000020, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, K2Node_MakeArray_Array_1) == 0x000040, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, K2Node_MakeArray_Array_2) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, K2Node_MakeArray_Array_3) == 0x000060, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, K2Node_MakeArray_Array_4) == 0x000070, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, K2Node_Select_Default) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange, CallFunc_Array_Contains_ReturnValue) == 0x000090, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceActionChange::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_BattleSequenceTimeline.BP_BattleSequenceTimeline_C.VerifyBattleSequenceTimeline
// 0x0D50 (0x0D50 - 0x0000)
struct BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline final
{
public:
	TMap<double, struct FFBattleSequenceTimelineKeyframe> Timeline;                                  // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	EBattleActionEvent                            local_currentState;                                // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                local_alreadyNotifiedKeys;                         // 0x0058(0x0010)(Edit, BlueprintVisible)
	double                                        local_previousKeyframeTime;                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_currentKeyframeTime;                         // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_alreadyNotifiedTimes;                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                local_originalKeys;                                // 0x0080(0x0010)(Edit, BlueprintVisible)
	double                                        local_ExtraError_ComboWindowEnd;                   // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        local_ExtraError_ComboWindowStart;                 // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 local_ExtraErrorMessage;                           // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          local_debug_Verbose;                               // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_hasErrors;                                   // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleActionEvent                            local_previousState;                               // 0x00B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_KeysCount;                                   // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                local_keysToProcess;                               // 0x00B8(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                CallFunc_Map_Keys_Keys;                            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                Temp_wildcard_Result_array_Variable;               // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	TArray<double>                                Temp_real_Variable;                                // 0x00F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, int32>                            Temp_wildcard_RemapTable_Variable;                 // 0x0118(0x0050)(ConstParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Array_Remap_ResultArray;                  // 0x0170(0x0010)(ReferenceParm)
	int32                                         Temp_int_NextIndex_Variable;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	TArray<int32>                                 Temp_wildcard_Original_index_Variable;             // 0x0198(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x01E0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01F0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0238(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0280(0x0010)()
	int32                                         Temp_int_Variable_2;                               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02A0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02F8(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0348(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0390(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x03A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0400(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<EBattleActionEvent>                    K2Node_MakeArray_Array_2;                          // 0x0438(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0448(0x0010)()
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0460(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x04A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x04B8(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0518(0x0048)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0568(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x05B0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x05F8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0608(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0650(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0660(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x06A8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x06B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x06D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x06E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x06F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0708(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ArrayOfFloatsToString_OutString;          // 0x0728(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0738(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0750(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_13;           // 0x0768(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_14;           // 0x07B0(0x0048)(HasGetValueTypeHash)
	TArray<double>                                Temp_wildcard_Variable;                            // 0x07F8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_15;           // 0x0808(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85A[0x6];                                      // 0x085A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBattleActionEvent>                    K2Node_MakeArray_Array_4;                          // 0x0860(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_16;           // 0x0878(0x0048)(HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value;                           // 0x08C0(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x08C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C3[0x5];                                      // 0x08C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x08C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x08D8(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E9[0x7];                                      // 0x08E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x08F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0901(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0902(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0903(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0908(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_17;           // 0x0918(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x7];                                      // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0968(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0978(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_18;           // 0x0988(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x09D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x09D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x09D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x09D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D5[0x3];                                      // 0x09D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x09D8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_19;           // 0x09E8(0x0048)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value_1;                         // 0x0A34(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0A36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A37[0x1];                                      // 0x0A37(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFBattleSequenceTimelineKeyframe       CallFunc_Map_Find_Value_2;                         // 0x0A48(0x0002)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0A4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4B[0x1];                                      // 0x0A4B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0A51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0A52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A53[0x5];                                      // 0x0A53(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0A58(0x0010)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0A68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_2;                              // 0x0A78(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0A88(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_20;           // 0x0A98(0x0048)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0AE0(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0AF0(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_21;           // 0x0B00(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0B48(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0B58(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_22;           // 0x0B68(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x0BB0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0BC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0BD0(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x0BE0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0BF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_23;           // 0x0C00(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4C[0x4];                                      // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_8;                          // 0x0C50(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0C60(0x0010)()
	bool                                          CallFunc_VerifyBattleSequenceActionChange_IsValid; // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C71[0x7];                                      // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBattleActionEvent>                    CallFunc_VerifyBattleSequenceActionChange_ExpectedValue; // 0x0C78(0x0010)(ReferenceParm)
	EBattleActionEvent                            CallFunc_Array_Get_Item_3;                         // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C89[0x3];                                      // 0x0C89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue_1;        // 0x0C8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue_1;               // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C94[0x4];                                      // 0x0C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0C98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x0CA8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_24;           // 0x0CB8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_9;                          // 0x0D00(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D14[0x4];                                      // 0x0D14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0D18(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0D29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2A[0x6];                                      // 0x0D2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast;  // 0x0D30(0x0010)(ConstParm, ReferenceParm)
	TArray<float>                                 CallFunc_MinOfFloatArray_FloatArray_ImplicitCast_1; // 0x0D40(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline) == 0x000008, "Wrong alignment on BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline");
static_assert(sizeof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline) == 0x000D50, "Wrong size on BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Timeline) == 0x000000, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Timeline' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_currentState) == 0x000050, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_currentState' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_alreadyNotifiedKeys) == 0x000058, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_alreadyNotifiedKeys' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_previousKeyframeTime) == 0x000068, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_previousKeyframeTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_currentKeyframeTime) == 0x000070, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_currentKeyframeTime' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_alreadyNotifiedTimes) == 0x000078, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_alreadyNotifiedTimes' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_originalKeys) == 0x000080, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_originalKeys' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_ExtraError_ComboWindowEnd) == 0x000090, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_ExtraError_ComboWindowEnd' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_ExtraError_ComboWindowStart) == 0x000098, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_ExtraError_ComboWindowStart' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_ExtraErrorMessage) == 0x0000A0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_ExtraErrorMessage' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_debug_Verbose) == 0x0000B0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_debug_Verbose' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_hasErrors) == 0x0000B1, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_hasErrors' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_previousState) == 0x0000B2, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_previousState' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_KeysCount) == 0x0000B4, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_KeysCount' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, local_keysToProcess) == 0x0000B8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::local_keysToProcess' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Map_Keys_Keys) == 0x0000C8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_LastIndex_ReturnValue) == 0x0000D8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_LastIndex_ReturnValue_1) == 0x0000E0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_wildcard_Result_array_Variable) == 0x0000E8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_wildcard_Result_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_real_Variable) == 0x0000F8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x00010C, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_MinOfFloatArray_MinValue) == 0x000110, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Greater_IntInt_ReturnValue) == 0x000114, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_wildcard_RemapTable_Variable) == 0x000118, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_wildcard_RemapTable_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Remap_ResultArray) == 0x000170, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Remap_ResultArray' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_int_NextIndex_Variable) == 0x000180, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_int_NextIndex_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array) == 0x000188, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_wildcard_Original_index_Variable) == 0x000198, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_wildcard_Original_index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_int_Variable) == 0x0001A8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Get_Item) == 0x0001AC, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Add_ReturnValue_1) == 0x0001B0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Add_ReturnValue_2) == 0x0001B4, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001BC, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_bool_Variable) == 0x0001C0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_int_Variable_1) == 0x0001C4, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_bool_Variable_1) == 0x0001CC, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Not_PreBool_ReturnValue) == 0x0001CD, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_bool_Variable_2) == 0x0001CE, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001CF, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_int_Loop_Counter_Variable) == 0x0001D0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001D8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_int_Array_Index_Variable) == 0x0001DC, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_text_Variable) == 0x0001E0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData) == 0x0001F0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_1) == 0x000238, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_MakeLiteralText_ReturnValue) == 0x000280, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_int_Variable_2) == 0x000290, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000298, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002A0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002E8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Add_IntInt_ReturnValue_4) == 0x0002EC, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Find_ReturnValue) == 0x0002F0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002F8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000340, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_4) == 0x000348, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000390, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_5) == 0x0003A0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_1) == 0x0003E8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Format_ReturnValue) == 0x000400, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_TextToString_ReturnValue) == 0x000410, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Add_ReturnValue_3) == 0x000420, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000428, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_2) == 0x000438, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue) == 0x000448, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Contains_ReturnValue) == 0x000458, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_6) == 0x000460, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0004A8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_7) == 0x0004B8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Find_ReturnValue_1) == 0x000500, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000508, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Find_ReturnValue_2) == 0x000510, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_8) == 0x000518, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000560, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_9) == 0x000568, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_10) == 0x0005B0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0005F8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_11) == 0x000608, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_3) == 0x000650, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_12) == 0x000660, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Format_ReturnValue_1) == 0x0006A8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0006B8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Add_ReturnValue_4) == 0x0006C8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0006D0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Add_ReturnValue_5) == 0x0006E0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Concat_StrStr_ReturnValue) == 0x0006E8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0006F8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000708, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000718, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_ArrayOfFloatsToString_OutString) == 0x000728, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_ArrayOfFloatsToString_OutString' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000738, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Contains_ReturnValue_1) == 0x000748, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000750, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Not_PreBool_ReturnValue_2) == 0x000760, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_13) == 0x000768, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_14) == 0x0007B0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_wildcard_Variable) == 0x0007F8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_15) == 0x000808, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Get_Item_1) == 0x000850, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000858, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Not_PreBool_ReturnValue_3) == 0x000859, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_4) == 0x000860, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Contains_ReturnValue_2) == 0x000870, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_16) == 0x000878, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Map_Find_Value) == 0x0008C0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Map_Find_ReturnValue) == 0x0008C2, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_5) == 0x0008C8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Format_ReturnValue_2) == 0x0008D8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0008E8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0008F0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000900, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000901, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_BooleanAND_ReturnValue) == 0x000902, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_BooleanAND_ReturnValue_1) == 0x000903, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000908, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_17) == 0x000918, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000960, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000968, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000978, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_18) == 0x000988, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_18' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0009D0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0009D1, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_BooleanOR_ReturnValue) == 0x0009D2, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_BooleanAND_ReturnValue_2) == 0x0009D3, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_BooleanOR_ReturnValue_1) == 0x0009D4, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0009D8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_19) == 0x0009E8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_19' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_int_Variable_3) == 0x000A30, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Map_Find_Value_1) == 0x000A34, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Map_Find_ReturnValue_1) == 0x000A36, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Subtract_IntInt_ReturnValue) == 0x000A38, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Get_Item_2) == 0x000A40, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Map_Find_Value_2) == 0x000A48, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Map_Find_ReturnValue_2) == 0x000A4A, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Add_IntInt_ReturnValue_5) == 0x000A4C, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000A50, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000A51, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_BooleanAND_ReturnValue_3) == 0x000A52, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_text_Variable_1) == 0x000A58, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000A68, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, Temp_text_Variable_2) == 0x000A78, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000A88, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_20) == 0x000A98, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_20' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_Select_Default) == 0x000AE0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_6) == 0x000AF0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_21) == 0x000B00, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_21' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Format_ReturnValue_3) == 0x000B48, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000B58, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_22) == 0x000B68, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_22' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_7) == 0x000BB0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000BC0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Format_ReturnValue_4) == 0x000BD0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_6) == 0x000BE0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000BF0, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_23) == 0x000C00, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_23' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Add_ReturnValue_6) == 0x000C48, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_8) == 0x000C50, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Format_ReturnValue_5) == 0x000C60, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_VerifyBattleSequenceActionChange_IsValid) == 0x000C70, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_VerifyBattleSequenceActionChange_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_VerifyBattleSequenceActionChange_ExpectedValue) == 0x000C78, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_VerifyBattleSequenceActionChange_ExpectedValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Get_Item_3) == 0x000C88, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_MinOfFloatArray_IndexOfMinValue_1) == 0x000C8C, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_MinOfFloatArray_IndexOfMinValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_MinOfFloatArray_MinValue_1) == 0x000C90, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_MinOfFloatArray_MinValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000C98, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Conv_StringToText_ReturnValue_7) == 0x000CA8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeStruct_FormatArgumentData_24) == 0x000CB8, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeStruct_FormatArgumentData_24' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, K2Node_MakeArray_Array_9) == 0x000D00, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Array_Length_ReturnValue_2) == 0x000D10, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Format_ReturnValue_6) == 0x000D18, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Less_IntInt_ReturnValue) == 0x000D28, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_Not_PreBool_ReturnValue_4) == 0x000D29, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast) == 0x000D30, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline, CallFunc_MinOfFloatArray_FloatArray_ImplicitCast_1) == 0x000D40, "Member 'BP_BattleSequenceTimeline_C_VerifyBattleSequenceTimeline::CallFunc_MinOfFloatArray_FloatArray_ImplicitCast_1' has a wrong offset!");

}

