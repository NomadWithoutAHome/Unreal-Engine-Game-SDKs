#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_InputFunctionLibrary

#include "Basic.hpp"

#include "FL_InputFunctionLibrary_classes.hpp"
#include "FL_InputFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.GetInputLockSystem
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_InputLockComponent_C*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UBP_InputLockComponent_C* UFL_InputFunctionLibrary_C::GetInputLockSystem(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "GetInputLockSystem");

	Params::FL_InputFunctionLibrary_C_GetInputLockSystem Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.IsInputActionTriggered
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InputActionName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Triggered                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFL_InputFunctionLibrary_C::IsInputActionTriggered(class FName InputActionName, class UObject* __WorldContext, bool* Triggered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "IsInputActionTriggered");

	Params::FL_InputFunctionLibrary_C_IsInputActionTriggered Parms{};

	Parms.InputActionName = InputActionName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Triggered != nullptr)
		*Triggered = Parms.Triggered;
}


// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.GetBaseBindingKey
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EInputAction                            InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FKey*                            Key                                                    (Parm, OutParm, HasGetValueTypeHash)

void UFL_InputFunctionLibrary_C::GetBaseBindingKey(EInputAction InputAction, class UObject* __WorldContext, struct FKey* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "GetBaseBindingKey");

	Params::FL_InputFunctionLibrary_C_GetBaseBindingKey Parms{};

	Parms.InputAction = InputAction;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);
}


// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.GetBaseBindingKeyVisualInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EInputAction                            InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFKeyVisualInfo*                 KeyVisualInfo                                          (Parm, OutParm, HasGetValueTypeHash)

void UFL_InputFunctionLibrary_C::GetBaseBindingKeyVisualInfo(EInputAction InputAction, class UObject* __WorldContext, struct FFKeyVisualInfo* KeyVisualInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "GetBaseBindingKeyVisualInfo");

	Params::FL_InputFunctionLibrary_C_GetBaseBindingKeyVisualInfo Parms{};

	Parms.InputAction = InputAction;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (KeyVisualInfo != nullptr)
		*KeyVisualInfo = std::move(Parms.KeyVisualInfo);
}


// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.GetKeyVisualInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FKey&                      InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFKeyVisualInfo*                 KeyVisualInfo                                          (Parm, OutParm, HasGetValueTypeHash)

void UFL_InputFunctionLibrary_C::GetKeyVisualInfo(const struct FKey& InKey, class UObject* __WorldContext, struct FFKeyVisualInfo* KeyVisualInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "GetKeyVisualInfo");

	Params::FL_InputFunctionLibrary_C_GetKeyVisualInfo Parms{};

	Parms.InKey = std::move(InKey);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (KeyVisualInfo != nullptr)
		*KeyVisualInfo = std::move(Parms.KeyVisualInfo);
}


// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.ProcessTextForInlineInputTag
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText*                            Output                                                 (Parm, OutParm)

void UFL_InputFunctionLibrary_C::ProcessTextForInlineInputTag(const class FText& InText, class UObject* __WorldContext, class FText* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "ProcessTextForInlineInputTag");

	Params::FL_InputFunctionLibrary_C_ProcessTextForInlineInputTag Parms{};

	Parms.InText = std::move(InText);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.GetCurrentInputType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EInputType                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EInputType UFL_InputFunctionLibrary_C::GetCurrentInputType(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "GetCurrentInputType");

	Params::FL_InputFunctionLibrary_C_GetCurrentInputType Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FL_InputFunctionLibrary.FL_InputFunctionLibrary_C.GetBaseBindingKeyByName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FString&                    InputActionName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FKey*                            Key                                                    (Parm, OutParm, HasGetValueTypeHash)

void UFL_InputFunctionLibrary_C::GetBaseBindingKeyByName(const class FString& InputActionName, class UObject* __WorldContext, struct FKey* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FL_InputFunctionLibrary_C", "GetBaseBindingKeyByName");

	Params::FL_InputFunctionLibrary_C_GetBaseBindingKeyByName Parms{};

	Parms.InputActionName = std::move(InputActionName);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);
}

}

