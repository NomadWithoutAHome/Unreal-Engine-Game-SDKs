#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_CharacterStatusBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_CharacterStatusBar.WBP_HUD_CharacterStatusBar_C
// 0x00B8 (0x0398 - 0x02E0)
class UWBP_HUD_CharacterStatusBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Revive_Character;                             // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_APLost;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_APgain;                                       // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Damaged;                                      // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Dead_Character;                               // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Appear_Life;                                  // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Life;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt_life;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt_life_MaxValue;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             txt_Slash;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_AP_SlotBar_C*                      WBP_AP_SlotBar;                                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_AP_ICO_C*                      WBP_HUD_AP_ICO;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            TxtLifeColorAndOpacityCache;                       // 0x0348(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           LowLifeHealthTextColor;                            // 0x035C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HealthTextColor;                                   // 0x036C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ShieldProtectedColor;                              // 0x037C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HP;                                                // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max_HP;                                            // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentShieldCount;                                // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Appear_WBP();
	void Construct();
	void DeadEvent_Life();
	void EventDamaged_bar();
	void ExecuteUbergraph_WBP_HUD_CharacterStatusBar(int32 EntryPoint);
	void SetActionPoints(int32 CurrentAP);
	void SetAP(int32 NewAP, int32 MaxAP, int32 PreviousAP);
	void SetLife(int32 HP_0, int32 MaxHP);
	void SetShieldCount(int32 ShieldCount);
	void UpdateHealthColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_CharacterStatusBar_C">();
	}
	static class UWBP_HUD_CharacterStatusBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_CharacterStatusBar_C>();
	}
};
static_assert(alignof(UWBP_HUD_CharacterStatusBar_C) == 0x000008, "Wrong alignment on UWBP_HUD_CharacterStatusBar_C");
static_assert(sizeof(UWBP_HUD_CharacterStatusBar_C) == 0x000398, "Wrong size on UWBP_HUD_CharacterStatusBar_C");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_HUD_CharacterStatusBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, Anim_Revive_Character) == 0x0002E8, "Member 'UWBP_HUD_CharacterStatusBar_C::Anim_Revive_Character' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, Anim_APLost) == 0x0002F0, "Member 'UWBP_HUD_CharacterStatusBar_C::Anim_APLost' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, Anim_APgain) == 0x0002F8, "Member 'UWBP_HUD_CharacterStatusBar_C::Anim_APgain' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, Anim_Damaged) == 0x000300, "Member 'UWBP_HUD_CharacterStatusBar_C::Anim_Damaged' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, Anim_Dead_Character) == 0x000308, "Member 'UWBP_HUD_CharacterStatusBar_C::Anim_Dead_Character' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, Anim_Appear_Life) == 0x000310, "Member 'UWBP_HUD_CharacterStatusBar_C::Anim_Appear_Life' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, ProgressBar_Life) == 0x000318, "Member 'UWBP_HUD_CharacterStatusBar_C::ProgressBar_Life' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, txt_life) == 0x000320, "Member 'UWBP_HUD_CharacterStatusBar_C::txt_life' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, txt_life_MaxValue) == 0x000328, "Member 'UWBP_HUD_CharacterStatusBar_C::txt_life_MaxValue' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, txt_Slash) == 0x000330, "Member 'UWBP_HUD_CharacterStatusBar_C::txt_Slash' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, WBP_AP_SlotBar) == 0x000338, "Member 'UWBP_HUD_CharacterStatusBar_C::WBP_AP_SlotBar' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, WBP_HUD_AP_ICO) == 0x000340, "Member 'UWBP_HUD_CharacterStatusBar_C::WBP_HUD_AP_ICO' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, TxtLifeColorAndOpacityCache) == 0x000348, "Member 'UWBP_HUD_CharacterStatusBar_C::TxtLifeColorAndOpacityCache' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, LowLifeHealthTextColor) == 0x00035C, "Member 'UWBP_HUD_CharacterStatusBar_C::LowLifeHealthTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, HealthTextColor) == 0x00036C, "Member 'UWBP_HUD_CharacterStatusBar_C::HealthTextColor' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, ShieldProtectedColor) == 0x00037C, "Member 'UWBP_HUD_CharacterStatusBar_C::ShieldProtectedColor' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, HP) == 0x00038C, "Member 'UWBP_HUD_CharacterStatusBar_C::HP' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, Max_HP) == 0x000390, "Member 'UWBP_HUD_CharacterStatusBar_C::Max_HP' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_CharacterStatusBar_C, CurrentShieldCount) == 0x000394, "Member 'UWBP_HUD_CharacterStatusBar_C::CurrentShieldCount' has a wrong offset!");

}

