#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MerchantComponent

#include "Basic.hpp"

#include "S_MerchantItemSellData_structs.hpp"
#include "FLevelDataEntry_structs.hpp"
#include "S_PictosDefinition_structs.hpp"
#include "FBattleStartParams_structs.hpp"
#include "S_MerchantItemData_structs.hpp"
#include "Engine_structs.hpp"
#include "S_LootContext_structs.hpp"
#include "S_GearScalingLevel_structs.hpp"
#include "S_WeaponDefinition_structs.hpp"
#include "S_jRPG_PartySlot_structs.hpp"
#include "S_MerchantSaveData_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"


namespace SDK::Params
{

// Function BP_MerchantComponent.BP_MerchantComponent_C.AddItemToInventory
// 0x0180 (0x0180 - 0x0000)
struct BP_MerchantComponent_C_AddItemToInventory final
{
public:
	struct FS_MerchantItemSellData                MerchantItem;                                      // 0x0000(0x0170)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_LootContext                         K2Node_MakeStruct_S_LootContext;                   // 0x0170(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_AddItemToInventory) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_AddItemToInventory");
static_assert(sizeof(BP_MerchantComponent_C_AddItemToInventory) == 0x000180, "Wrong size on BP_MerchantComponent_C_AddItemToInventory");
static_assert(offsetof(BP_MerchantComponent_C_AddItemToInventory, MerchantItem) == 0x000000, "Member 'BP_MerchantComponent_C_AddItemToInventory::MerchantItem' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_AddItemToInventory, K2Node_MakeStruct_S_LootContext) == 0x000170, "Member 'BP_MerchantComponent_C_AddItemToInventory::K2Node_MakeStruct_S_LootContext' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_AddItemToInventory, CallFunc_GetInventoryManager_ReturnValue) == 0x000178, "Member 'BP_MerchantComponent_C_AddItemToInventory::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.CanStartMerchantBattle
// 0x0002 (0x0002 - 0x0000)
struct BP_MerchantComponent_C_CanStartMerchantBattle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_CanStartMerchantBattle) == 0x000001, "Wrong alignment on BP_MerchantComponent_C_CanStartMerchantBattle");
static_assert(sizeof(BP_MerchantComponent_C_CanStartMerchantBattle) == 0x000002, "Wrong size on BP_MerchantComponent_C_CanStartMerchantBattle");
static_assert(offsetof(BP_MerchantComponent_C_CanStartMerchantBattle, ReturnValue) == 0x000000, "Member 'BP_MerchantComponent_C_CanStartMerchantBattle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CanStartMerchantBattle, CallFunc_IsDataRowHandleSet_ReturnValue) == 0x000001, "Member 'BP_MerchantComponent_C_CanStartMerchantBattle::CallFunc_IsDataRowHandleSet_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.CheckForErrors
// 0x0030 (0x0030 - 0x0000)
struct BP_MerchantComponent_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_CheckForErrors");
static_assert(sizeof(BP_MerchantComponent_C_CheckForErrors) == 0x000030, "Wrong size on BP_MerchantComponent_C_CheckForErrors");
static_assert(offsetof(BP_MerchantComponent_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_MerchantComponent_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_MerchantComponent_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckForErrors, Temp_text_Variable) == 0x000018, "Member 'BP_MerchantComponent_C_CheckForErrors::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckForErrors, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_MerchantComponent_C_CheckForErrors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'BP_MerchantComponent_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.CheckIfItemIsConditional
// 0x0028 (0x0028 - 0x0000)
struct BP_MerchantComponent_C_CheckIfItemIsConditional final
{
public:
	struct FS_MerchantItemData                    MerchantItemData;                                  // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConditional;                                     // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_CheckIfItemIsConditional) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_CheckIfItemIsConditional");
static_assert(sizeof(BP_MerchantComponent_C_CheckIfItemIsConditional) == 0x000028, "Wrong size on BP_MerchantComponent_C_CheckIfItemIsConditional");
static_assert(offsetof(BP_MerchantComponent_C_CheckIfItemIsConditional, MerchantItemData) == 0x000000, "Member 'BP_MerchantComponent_C_CheckIfItemIsConditional::MerchantItemData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckIfItemIsConditional, IsConditional) == 0x000020, "Member 'BP_MerchantComponent_C_CheckIfItemIsConditional::IsConditional' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckIfItemIsConditional, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MerchantComponent_C_CheckIfItemIsConditional::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.CheckIfItemIsVisible
// 0x0028 (0x0028 - 0x0000)
struct BP_MerchantComponent_C_CheckIfItemIsVisible final
{
public:
	struct FS_MerchantItemData                    MerchantItemData;                                  // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAvailable;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOptionalCondition_Result;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_CheckIfItemIsVisible) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_CheckIfItemIsVisible");
static_assert(sizeof(BP_MerchantComponent_C_CheckIfItemIsVisible) == 0x000028, "Wrong size on BP_MerchantComponent_C_CheckIfItemIsVisible");
static_assert(offsetof(BP_MerchantComponent_C_CheckIfItemIsVisible, MerchantItemData) == 0x000000, "Member 'BP_MerchantComponent_C_CheckIfItemIsVisible::MerchantItemData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckIfItemIsVisible, IsAvailable) == 0x000020, "Member 'BP_MerchantComponent_C_CheckIfItemIsVisible::IsAvailable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckIfItemIsVisible, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MerchantComponent_C_CheckIfItemIsVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CheckIfItemIsVisible, CallFunc_CheckOptionalCondition_Result) == 0x000022, "Member 'BP_MerchantComponent_C_CheckIfItemIsVisible::CallFunc_CheckOptionalCondition_Result' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputeAvailableItemsFromTable
// 0x01B0 (0x01B0 - 0x0000)
struct BP_MerchantComponent_C_ComputeAvailableItemsFromTable final
{
public:
	class UDataTable*                             Table;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_ComputeItemToSell_MerchantItemSellData;   // 0x0030(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputeAvailableItemsFromTable");
static_assert(sizeof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable) == 0x0001B0, "Wrong size on BP_MerchantComponent_C_ComputeAvailableItemsFromTable");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, Table) == 0x000000, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::Table' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, CallFunc_ComputeItemToSell_MerchantItemSellData) == 0x000030, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::CallFunc_ComputeItemToSell_MerchantItemSellData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, Temp_int_Loop_Counter_Variable) == 0x0001A0, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, CallFunc_Less_IntInt_ReturnValue) == 0x0001A4, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeAvailableItemsFromTable, CallFunc_Add_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_MerchantComponent_C_ComputeAvailableItemsFromTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputeItemPrice
// 0x0170 (0x0170 - 0x0000)
struct BP_MerchantComponent_C_ComputeItemPrice final
{
public:
	struct FS_MerchantItemData                    MerchantItem;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputePictoPrice_Price;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeWeaponPrice_Price;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemFromName_Item;                     // 0x0038(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputeItemPrice) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputeItemPrice");
static_assert(sizeof(BP_MerchantComponent_C_ComputeItemPrice) == 0x000170, "Wrong size on BP_MerchantComponent_C_ComputeItemPrice");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, MerchantItem) == 0x000000, "Member 'BP_MerchantComponent_C_ComputeItemPrice::MerchantItem' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, ItemInstance) == 0x000020, "Member 'BP_MerchantComponent_C_ComputeItemPrice::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, Price) == 0x000028, "Member 'BP_MerchantComponent_C_ComputeItemPrice::Price' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, CallFunc_ComputePictoPrice_Price) == 0x00002C, "Member 'BP_MerchantComponent_C_ComputeItemPrice::CallFunc_ComputePictoPrice_Price' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, CallFunc_ComputeWeaponPrice_Price) == 0x000030, "Member 'BP_MerchantComponent_C_ComputeItemPrice::CallFunc_ComputeWeaponPrice_Price' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, CallFunc_GetItemFromName_Item) == 0x000038, "Member 'BP_MerchantComponent_C_ComputeItemPrice::CallFunc_GetItemFromName_Item' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000168, "Member 'BP_MerchantComponent_C_ComputeItemPrice::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemPrice, K2Node_SwitchEnum_CmpSuccess) == 0x000169, "Member 'BP_MerchantComponent_C_ComputeItemPrice::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputeItemToSell
// 0x0480 (0x0480 - 0x0000)
struct BP_MerchantComponent_C_ComputeItemToSell final
{
public:
	class UDataTable*                             ItemsDataTable;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemRowName;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MerchantItemSellData                MerchantItemSellData;                              // 0x0010(0x0170)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_MerchantItemData                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0180(0x0020)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Base_C*                CallFunc_CreateItemInstance_ItemInstance;          // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeItemPrice_Price;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetConditionDisplayTooltip_ConditionDisplayTooltip; // 0x01B8(0x0010)()
	class FText                                   CallFunc_GetConditionDisplayName_ConditionDisplayName; // 0x01C8(0x0010)()
	bool                                          CallFunc_CheckIfItemIsConditional_IsConditional;   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfItemIsVisible_IsAvailable;         // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRemainingQuantityForItem_Quantity;     // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemFromMerchantItemData_Item;         // 0x01E0(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_MerchantItemSellData                K2Node_MakeStruct_S_MerchantItemSellData;          // 0x0310(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputeItemToSell) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputeItemToSell");
static_assert(sizeof(BP_MerchantComponent_C_ComputeItemToSell) == 0x000480, "Wrong size on BP_MerchantComponent_C_ComputeItemToSell");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, ItemsDataTable) == 0x000000, "Member 'BP_MerchantComponent_C_ComputeItemToSell::ItemsDataTable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, ItemRowName) == 0x000008, "Member 'BP_MerchantComponent_C_ComputeItemToSell::ItemRowName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, MerchantItemSellData) == 0x000010, "Member 'BP_MerchantComponent_C_ComputeItemToSell::MerchantItemSellData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_GetDataTableRowFromName_OutRow) == 0x000180, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A0, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_CreateItemInstance_ItemInstance) == 0x0001A8, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_CreateItemInstance_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_ComputeItemPrice_Price) == 0x0001B0, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_ComputeItemPrice_Price' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_GetConditionDisplayTooltip_ConditionDisplayTooltip) == 0x0001B8, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_GetConditionDisplayTooltip_ConditionDisplayTooltip' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_GetConditionDisplayName_ConditionDisplayName) == 0x0001C8, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_GetConditionDisplayName_ConditionDisplayName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_CheckIfItemIsConditional_IsConditional) == 0x0001D8, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_CheckIfItemIsConditional_IsConditional' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_CheckIfItemIsVisible_IsAvailable) == 0x0001D9, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_CheckIfItemIsVisible_IsAvailable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_GetRemainingQuantityForItem_Quantity) == 0x0001DC, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_GetRemainingQuantityForItem_Quantity' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, CallFunc_GetItemFromMerchantItemData_Item) == 0x0001E0, "Member 'BP_MerchantComponent_C_ComputeItemToSell::CallFunc_GetItemFromMerchantItemData_Item' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeItemToSell, K2Node_MakeStruct_S_MerchantItemSellData) == 0x000310, "Member 'BP_MerchantComponent_C_ComputeItemToSell::K2Node_MakeStruct_S_MerchantItemSellData' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputeMerchantItemLevelForLootContext
// 0x01D8 (0x01D8 - 0x0000)
struct BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAdditionalEncounterLevelWithNewGamePlus_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCurrentLevelData_Found;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_FindCurrentLevelData_LevelData;           // 0x0010(0x01B0)(HasGetValueTypeHash)
	class FName                                   CallFunc_FindCurrentLevelData_RowName;             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext");
static_assert(sizeof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext) == 0x0001D8, "Wrong size on BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, ReturnValue) == 0x000000, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, CallFunc_GetAdditionalEncounterLevelWithNewGamePlus_ReturnValue) == 0x000004, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::CallFunc_GetAdditionalEncounterLevelWithNewGamePlus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, CallFunc_FindCurrentLevelData_Found) == 0x000008, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::CallFunc_FindCurrentLevelData_Found' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, CallFunc_FindCurrentLevelData_LevelData) == 0x000010, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::CallFunc_FindCurrentLevelData_LevelData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, CallFunc_FindCurrentLevelData_RowName) == 0x0001C0, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::CallFunc_FindCurrentLevelData_RowName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, CallFunc_Add_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, CallFunc_Divide_IntInt_ReturnValue) == 0x0001CC, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D0, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelForLootContext::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputeMerchantItemLevelWithOverride
// 0x0038 (0x0038 - 0x0000)
struct BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride final
{
public:
	struct FS_MerchantItemData                    MerchantItemData;                                  // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGearMaxUpgradeLevel_ReturnValue;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAdditionalEncounterLevelWithNewGamePlus_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride");
static_assert(sizeof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride) == 0x000038, "Wrong size on BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride, MerchantItemData) == 0x000000, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride::MerchantItemData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride, ReturnValue) == 0x000020, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride, CallFunc_GetGearMaxUpgradeLevel_ReturnValue) == 0x000024, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride::CallFunc_GetGearMaxUpgradeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride, CallFunc_GetAdditionalEncounterLevelWithNewGamePlus_ReturnValue) == 0x000028, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride::CallFunc_GetAdditionalEncounterLevelWithNewGamePlus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride, CallFunc_Divide_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride, CallFunc_Clamp_ReturnValue) == 0x000034, "Member 'BP_MerchantComponent_C_ComputeMerchantItemLevelWithOverride::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputeMerchantState
// 0x0298 (0x0298 - 0x0000)
struct BP_MerchantComponent_C_ComputeMerchantState final
{
public:
	struct FS_MerchantSaveData                    MerchantState;                                     // 0x0000(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_MerchantSaveData                    local_MerchantState;                               // 0x0050(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantSaveData                    K2Node_MakeStruct_S_MerchantSaveData;              // 0x00B0(0x0050)(HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0100(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                CallFunc_Map_Find_Value;                           // 0x0120(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputeMerchantState) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputeMerchantState");
static_assert(sizeof(BP_MerchantComponent_C_ComputeMerchantState) == 0x000298, "Wrong size on BP_MerchantComponent_C_ComputeMerchantState");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, MerchantState) == 0x000000, "Member 'BP_MerchantComponent_C_ComputeMerchantState::MerchantState' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, local_MerchantState) == 0x000050, "Member 'BP_MerchantComponent_C_ComputeMerchantState::local_MerchantState' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_MerchantComponent_C_ComputeMerchantState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_MerchantComponent_C_ComputeMerchantState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_MerchantComponent_C_ComputeMerchantState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, K2Node_MakeStruct_S_MerchantSaveData) == 0x0000B0, "Member 'BP_MerchantComponent_C_ComputeMerchantState::K2Node_MakeStruct_S_MerchantSaveData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, CallFunc_Map_Keys_Keys) == 0x000100, "Member 'BP_MerchantComponent_C_ComputeMerchantState::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_MerchantComponent_C_ComputeMerchantState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BP_MerchantComponent_C_ComputeMerchantState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, CallFunc_Map_Find_Value) == 0x000120, "Member 'BP_MerchantComponent_C_ComputeMerchantState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, CallFunc_Map_Find_ReturnValue) == 0x000290, "Member 'BP_MerchantComponent_C_ComputeMerchantState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeMerchantState, CallFunc_Less_IntInt_ReturnValue) == 0x000291, "Member 'BP_MerchantComponent_C_ComputeMerchantState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputePictoPrice
// 0x0130 (0x0130 - 0x0000)
struct BP_MerchantComponent_C_ComputePictoPrice final
{
public:
	const class UBP_ItemInstance_Base_C*          ItemInstance;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Pictos_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Pictos; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0010)()
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_GetBuyValueFromScalingTable_Value;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_PictosDefinition                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B8(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputePictoPrice) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputePictoPrice");
static_assert(sizeof(BP_MerchantComponent_C_ComputePictoPrice) == 0x000130, "Wrong size on BP_MerchantComponent_C_ComputePictoPrice");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, ItemInstance) == 0x000000, "Member 'BP_MerchantComponent_C_ComputePictoPrice::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, Price) == 0x000008, "Member 'BP_MerchantComponent_C_ComputePictoPrice::Price' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_GetItemDefinitionID_ReturnValue) == 0x00000C, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Pictos) == 0x000018, "Member 'BP_MerchantComponent_C_ComputePictoPrice::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Pictos' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_MerchantComponent_C_ComputePictoPrice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_GetCurrentLevel_ReturnValue) == 0x000038, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_MerchantComponent_C_ComputePictoPrice::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_GetBuyValueFromScalingTable_Value) == 0x000088, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_GetBuyValueFromScalingTable_Value' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_MerchantComponent_C_ComputePictoPrice::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000A0, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B8, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000118, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000120, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputePictoPrice, CallFunc_FCeil_ReturnValue) == 0x000128, "Member 'BP_MerchantComponent_C_ComputePictoPrice::CallFunc_FCeil_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ComputeWeaponPrice
// 0x01B8 (0x01B8 - 0x0000)
struct BP_MerchantComponent_C_ComputeWeaponPrice final
{
public:
	const class UBP_ItemInstance_Base_C*          ItemInstance;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Price;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_Weapon_C*         K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetItemDefinitionID_ReturnValue;          // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0010)()
	int32                                         CallFunc_GetBuyValueFromScalingTable_Value;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	struct FS_WeaponDefinition                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A0(0x00F0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ComputeWeaponPrice) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ComputeWeaponPrice");
static_assert(sizeof(BP_MerchantComponent_C_ComputeWeaponPrice) == 0x0001B8, "Wrong size on BP_MerchantComponent_C_ComputeWeaponPrice");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, ItemInstance) == 0x000000, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, Price) == 0x000008, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::Price' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon) == 0x000010, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::K2Node_DynamicCast_AsBP_Item_Instance_Gear_Weapon' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_GetItemDefinitionID_ReturnValue) == 0x00001C, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_GetItemDefinitionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_GetCurrentLevel_ReturnValue) == 0x000024, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_GetBuyValueFromScalingTable_Value) == 0x000038, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_GetBuyValueFromScalingTable_Value' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000088, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A0, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000190, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_Format_ReturnValue) == 0x000198, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ComputeWeaponPrice, CallFunc_FCeil_ReturnValue) == 0x0001B0, "Member 'BP_MerchantComponent_C_ComputeWeaponPrice::CallFunc_FCeil_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.CreateItemInstance
// 0x0188 (0x0188 - 0x0000)
struct BP_MerchantComponent_C_CreateItemInstance final
{
public:
	struct FS_MerchantItemData                    MerchantItem;                                      // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                ItemInstance;                                      // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                local_GeneratedGear;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemStaticDefinitionFromID_Found;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticDefinitionFromID_ReturnValue; // 0x0040(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_CreateItemInstanceTransient_ItemInstance; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                K2Node_DynamicCast_AsBP_Item_Instance_Gear;        // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_CreateItemInstance) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_CreateItemInstance");
static_assert(sizeof(BP_MerchantComponent_C_CreateItemInstance) == 0x000188, "Wrong size on BP_MerchantComponent_C_CreateItemInstance");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, MerchantItem) == 0x000000, "Member 'BP_MerchantComponent_C_CreateItemInstance::MerchantItem' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, ItemInstance) == 0x000020, "Member 'BP_MerchantComponent_C_CreateItemInstance::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, local_GeneratedGear) == 0x000028, "Member 'BP_MerchantComponent_C_CreateItemInstance::local_GeneratedGear' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000030, "Member 'BP_MerchantComponent_C_CreateItemInstance::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, CallFunc_GetItemStaticDefinitionFromID_Found) == 0x000038, "Member 'BP_MerchantComponent_C_CreateItemInstance::CallFunc_GetItemStaticDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, CallFunc_GetItemStaticDefinitionFromID_ReturnValue) == 0x000040, "Member 'BP_MerchantComponent_C_CreateItemInstance::CallFunc_GetItemStaticDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, CallFunc_CreateItemInstanceTransient_ItemInstance) == 0x000170, "Member 'BP_MerchantComponent_C_CreateItemInstance::CallFunc_CreateItemInstanceTransient_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, K2Node_DynamicCast_AsBP_Item_Instance_Gear) == 0x000178, "Member 'BP_MerchantComponent_C_CreateItemInstance::K2Node_DynamicCast_AsBP_Item_Instance_Gear' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_CreateItemInstance, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_MerchantComponent_C_CreateItemInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.GetAvailableItems
// 0x0050 (0x0050 - 0x0000)
struct BP_MerchantComponent_C_GetAvailableItems final
{
public:
	TMap<class FName, struct FS_MerchantItemSellData> AvailableItems_0;                              // 0x0000(0x0050)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MerchantComponent_C_GetAvailableItems) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_GetAvailableItems");
static_assert(sizeof(BP_MerchantComponent_C_GetAvailableItems) == 0x000050, "Wrong size on BP_MerchantComponent_C_GetAvailableItems");
static_assert(offsetof(BP_MerchantComponent_C_GetAvailableItems, AvailableItems_0) == 0x000000, "Member 'BP_MerchantComponent_C_GetAvailableItems::AvailableItems_0' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.GetBuyValueFromScalingTable
// 0x0110 (0x0110 - 0x0000)
struct BP_MerchantComponent_C_GetBuyValueFromScalingTable final
{
public:
	class UDataTable*                             Table;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	struct FS_GearScalingLevel                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x0060)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_GetBuyValueFromScalingTable) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_GetBuyValueFromScalingTable");
static_assert(sizeof(BP_MerchantComponent_C_GetBuyValueFromScalingTable) == 0x000110, "Wrong size on BP_MerchantComponent_C_GetBuyValueFromScalingTable");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, Table) == 0x000000, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::Table' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, Level) == 0x000008, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::Level' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, Value) == 0x00000C, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::Value' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetBuyValueFromScalingTable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'BP_MerchantComponent_C_GetBuyValueFromScalingTable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.GetConditionDisplayName
// 0x0050 (0x0050 - 0x0000)
struct BP_MerchantComponent_C_GetConditionDisplayName final
{
public:
	struct FS_MerchantItemData                    MerchantItemData;                                  // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   ConditionDisplayName;                              // 0x0020(0x0010)(Parm, OutParm)
	class UBP_MerchantConditionCheckerDataAsset_C* K2Node_DynamicCast_AsBP_Merchant_Condition_Checker_Data_Asset; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetConditionDisplayName_ConditionDisplayName; // 0x0040(0x0010)()
};
static_assert(alignof(BP_MerchantComponent_C_GetConditionDisplayName) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_GetConditionDisplayName");
static_assert(sizeof(BP_MerchantComponent_C_GetConditionDisplayName) == 0x000050, "Wrong size on BP_MerchantComponent_C_GetConditionDisplayName");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayName, MerchantItemData) == 0x000000, "Member 'BP_MerchantComponent_C_GetConditionDisplayName::MerchantItemData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayName, ConditionDisplayName) == 0x000020, "Member 'BP_MerchantComponent_C_GetConditionDisplayName::ConditionDisplayName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayName, K2Node_DynamicCast_AsBP_Merchant_Condition_Checker_Data_Asset) == 0x000030, "Member 'BP_MerchantComponent_C_GetConditionDisplayName::K2Node_DynamicCast_AsBP_Merchant_Condition_Checker_Data_Asset' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayName, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_MerchantComponent_C_GetConditionDisplayName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayName, CallFunc_GetConditionDisplayName_ConditionDisplayName) == 0x000040, "Member 'BP_MerchantComponent_C_GetConditionDisplayName::CallFunc_GetConditionDisplayName_ConditionDisplayName' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.GetConditionDisplayTooltip
// 0x0050 (0x0050 - 0x0000)
struct BP_MerchantComponent_C_GetConditionDisplayTooltip final
{
public:
	struct FS_MerchantItemData                    MerchantItemData;                                  // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   ConditionDisplayTooltip;                           // 0x0020(0x0010)(Parm, OutParm)
	class UBP_MerchantConditionCheckerDataAsset_C* K2Node_DynamicCast_AsBP_Merchant_Condition_Checker_Data_Asset; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetConditionDisplayTooltip_ConditionDisplayTooltip; // 0x0040(0x0010)()
};
static_assert(alignof(BP_MerchantComponent_C_GetConditionDisplayTooltip) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_GetConditionDisplayTooltip");
static_assert(sizeof(BP_MerchantComponent_C_GetConditionDisplayTooltip) == 0x000050, "Wrong size on BP_MerchantComponent_C_GetConditionDisplayTooltip");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayTooltip, MerchantItemData) == 0x000000, "Member 'BP_MerchantComponent_C_GetConditionDisplayTooltip::MerchantItemData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayTooltip, ConditionDisplayTooltip) == 0x000020, "Member 'BP_MerchantComponent_C_GetConditionDisplayTooltip::ConditionDisplayTooltip' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayTooltip, K2Node_DynamicCast_AsBP_Merchant_Condition_Checker_Data_Asset) == 0x000030, "Member 'BP_MerchantComponent_C_GetConditionDisplayTooltip::K2Node_DynamicCast_AsBP_Merchant_Condition_Checker_Data_Asset' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayTooltip, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_MerchantComponent_C_GetConditionDisplayTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetConditionDisplayTooltip, CallFunc_GetConditionDisplayTooltip_ConditionDisplayTooltip) == 0x000040, "Member 'BP_MerchantComponent_C_GetConditionDisplayTooltip::CallFunc_GetConditionDisplayTooltip_ConditionDisplayTooltip' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.GetItemFromMerchantItemData
// 0x0280 (0x0280 - 0x0000)
struct BP_MerchantComponent_C_GetItemFromMerchantItemData final
{
public:
	struct FS_MerchantItemData                    MerchantItem;                                      // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0020(0x0130)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemFromName_Item;                     // 0x0150(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_GetItemFromMerchantItemData) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_GetItemFromMerchantItemData");
static_assert(sizeof(BP_MerchantComponent_C_GetItemFromMerchantItemData) == 0x000280, "Wrong size on BP_MerchantComponent_C_GetItemFromMerchantItemData");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromMerchantItemData, MerchantItem) == 0x000000, "Member 'BP_MerchantComponent_C_GetItemFromMerchantItemData::MerchantItem' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromMerchantItemData, Item) == 0x000020, "Member 'BP_MerchantComponent_C_GetItemFromMerchantItemData::Item' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromMerchantItemData, CallFunc_GetItemFromName_Item) == 0x000150, "Member 'BP_MerchantComponent_C_GetItemFromMerchantItemData::CallFunc_GetItemFromName_Item' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.GetItemFromName
// 0x02E8 (0x02E8 - 0x0000)
struct BP_MerchantComponent_C_GetItemFromName final
{
public:
	class FName                                   ItemRowName;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_jRPG_Item_StaticData                Item;                                              // 0x0008(0x0130)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0138(0x0010)()
	struct FS_jRPG_Item_StaticData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0280(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02C8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_GetItemFromName) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_GetItemFromName");
static_assert(sizeof(BP_MerchantComponent_C_GetItemFromName) == 0x0002E8, "Wrong size on BP_MerchantComponent_C_GetItemFromName");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, ItemRowName) == 0x000000, "Member 'BP_MerchantComponent_C_GetItemFromName::ItemRowName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, Item) == 0x000008, "Member 'BP_MerchantComponent_C_GetItemFromName::Item' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, CallFunc_Conv_NameToText_ReturnValue) == 0x000138, "Member 'BP_MerchantComponent_C_GetItemFromName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'BP_MerchantComponent_C_GetItemFromName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000278, "Member 'BP_MerchantComponent_C_GetItemFromName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, K2Node_MakeStruct_FormatArgumentData) == 0x000280, "Member 'BP_MerchantComponent_C_GetItemFromName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, K2Node_MakeArray_Array) == 0x0002C8, "Member 'BP_MerchantComponent_C_GetItemFromName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetItemFromName, CallFunc_Format_ReturnValue) == 0x0002D8, "Member 'BP_MerchantComponent_C_GetItemFromName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.GetRemainingQuantityForItem
// 0x0088 (0x0088 - 0x0000)
struct BP_MerchantComponent_C_GetRemainingQuantityForItem final
{
public:
	class FName                                   MerchantItemRowName;                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MerchantItemData                    MerchantItem;                                      // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	int32                                         Quantity;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantSaveData                    CallFunc_ReadMerchantState_State;                  // 0x0030(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_GetRemainingQuantityForItem) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_GetRemainingQuantityForItem");
static_assert(sizeof(BP_MerchantComponent_C_GetRemainingQuantityForItem) == 0x000088, "Wrong size on BP_MerchantComponent_C_GetRemainingQuantityForItem");
static_assert(offsetof(BP_MerchantComponent_C_GetRemainingQuantityForItem, MerchantItemRowName) == 0x000000, "Member 'BP_MerchantComponent_C_GetRemainingQuantityForItem::MerchantItemRowName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetRemainingQuantityForItem, MerchantItem) == 0x000008, "Member 'BP_MerchantComponent_C_GetRemainingQuantityForItem::MerchantItem' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetRemainingQuantityForItem, Quantity) == 0x000028, "Member 'BP_MerchantComponent_C_GetRemainingQuantityForItem::Quantity' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetRemainingQuantityForItem, CallFunc_ReadMerchantState_State) == 0x000030, "Member 'BP_MerchantComponent_C_GetRemainingQuantityForItem::CallFunc_ReadMerchantState_State' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetRemainingQuantityForItem, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_MerchantComponent_C_GetRemainingQuantityForItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_GetRemainingQuantityForItem, CallFunc_Map_Find_ReturnValue) == 0x000084, "Member 'BP_MerchantComponent_C_GetRemainingQuantityForItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.LoadMerchantData
// 0x0050 (0x0050 - 0x0000)
struct BP_MerchantComponent_C_LoadMerchantData final
{
public:
	TMap<class FName, struct FS_MerchantItemSellData> AvailableItems_0;                              // 0x0000(0x0050)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MerchantComponent_C_LoadMerchantData) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_LoadMerchantData");
static_assert(sizeof(BP_MerchantComponent_C_LoadMerchantData) == 0x000050, "Wrong size on BP_MerchantComponent_C_LoadMerchantData");
static_assert(offsetof(BP_MerchantComponent_C_LoadMerchantData, AvailableItems_0) == 0x000000, "Member 'BP_MerchantComponent_C_LoadMerchantData::AvailableItems_0' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.ReadMerchantState
// 0x00C8 (0x00C8 - 0x0000)
struct BP_MerchantComponent_C_ReadMerchantState final
{
public:
	struct FS_MerchantSaveData                    State;                                             // 0x0000(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Merchant_SerializableComponent_C*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MerchantSaveData                    CallFunc_Map_Find_Value;                           // 0x0070(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_ReadMerchantState) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_ReadMerchantState");
static_assert(sizeof(BP_MerchantComponent_C_ReadMerchantState) == 0x0000C8, "Wrong size on BP_MerchantComponent_C_ReadMerchantState");
static_assert(offsetof(BP_MerchantComponent_C_ReadMerchantState, State) == 0x000000, "Member 'BP_MerchantComponent_C_ReadMerchantState::State' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ReadMerchantState, CallFunc_GetCustomGI_ReturnValue) == 0x000050, "Member 'BP_MerchantComponent_C_ReadMerchantState::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ReadMerchantState, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_MerchantComponent_C_ReadMerchantState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ReadMerchantState, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'BP_MerchantComponent_C_ReadMerchantState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ReadMerchantState, CallFunc_GetGlobalObjectID_ObjectID) == 0x000068, "Member 'BP_MerchantComponent_C_ReadMerchantState::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ReadMerchantState, CallFunc_Map_Find_Value) == 0x000070, "Member 'BP_MerchantComponent_C_ReadMerchantState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_ReadMerchantState, CallFunc_Map_Find_ReturnValue) == 0x0000C0, "Member 'BP_MerchantComponent_C_ReadMerchantState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.SaveMerchantState
// 0x0070 (0x0070 - 0x0000)
struct BP_MerchantComponent_C_SaveMerchantState final
{
public:
	struct FS_MerchantSaveData                    CallFunc_ComputeMerchantState_MerchantState;       // 0x0000(0x0050)(HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Merchant_SerializableComponent_C*   CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetGlobalObjectID_ObjectID;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_SaveMerchantState) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_SaveMerchantState");
static_assert(sizeof(BP_MerchantComponent_C_SaveMerchantState) == 0x000070, "Wrong size on BP_MerchantComponent_C_SaveMerchantState");
static_assert(offsetof(BP_MerchantComponent_C_SaveMerchantState, CallFunc_ComputeMerchantState_MerchantState) == 0x000000, "Member 'BP_MerchantComponent_C_SaveMerchantState::CallFunc_ComputeMerchantState_MerchantState' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SaveMerchantState, CallFunc_GetCustomGI_ReturnValue) == 0x000050, "Member 'BP_MerchantComponent_C_SaveMerchantState::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SaveMerchantState, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_MerchantComponent_C_SaveMerchantState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SaveMerchantState, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'BP_MerchantComponent_C_SaveMerchantState::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SaveMerchantState, CallFunc_GetGlobalObjectID_ObjectID) == 0x000068, "Member 'BP_MerchantComponent_C_SaveMerchantState::CallFunc_GetGlobalObjectID_ObjectID' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.SetupLevelForItemInstanceGear
// 0x0200 (0x0200 - 0x0000)
struct BP_MerchantComponent_C_SetupLevelForItemInstanceGear final
{
public:
	struct FS_MerchantItemData                    MerchantItemData;                                  // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                ItemInstance;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Gear_C*                local_GeneratedGear;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCurrentLevelData_Found;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_FindCurrentLevelData_LevelData;           // 0x0038(0x01B0)(HasGetValueTypeHash)
	class FName                                   CallFunc_FindCurrentLevelData_RowName;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeMerchantItemLevelWithOverride_ReturnValue; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ComputeMerchantItemLevelForLootContext_ReturnValue; // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LootContext                         K2Node_MakeStruct_S_LootContext;                   // 0x01FC(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_SetupLevelForItemInstanceGear");
static_assert(sizeof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear) == 0x000200, "Wrong size on BP_MerchantComponent_C_SetupLevelForItemInstanceGear");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, MerchantItemData) == 0x000000, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::MerchantItemData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, ItemInstance) == 0x000020, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, local_GeneratedGear) == 0x000028, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::local_GeneratedGear' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, CallFunc_FindCurrentLevelData_Found) == 0x000030, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::CallFunc_FindCurrentLevelData_Found' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, CallFunc_FindCurrentLevelData_LevelData) == 0x000038, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::CallFunc_FindCurrentLevelData_LevelData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, CallFunc_FindCurrentLevelData_RowName) == 0x0001E8, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::CallFunc_FindCurrentLevelData_RowName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, CallFunc_ComputeMerchantItemLevelWithOverride_ReturnValue) == 0x0001F0, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::CallFunc_ComputeMerchantItemLevelWithOverride_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F4, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, CallFunc_ComputeMerchantItemLevelForLootContext_ReturnValue) == 0x0001F8, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::CallFunc_ComputeMerchantItemLevelForLootContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_SetupLevelForItemInstanceGear, K2Node_MakeStruct_S_LootContext) == 0x0001FC, "Member 'BP_MerchantComponent_C_SetupLevelForItemInstanceGear::K2Node_MakeStruct_S_LootContext' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.StartMerchantBattle
// 0x0178 (0x0178 - 0x0000)
struct BP_MerchantComponent_C_StartMerchantBattle final
{
public:
	TArray<struct FS_jRPG_PartySlot>              BattlePaty;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FFBattleStartParams                    local_Parameters;                                  // 0x0010(0x0158)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStartMerchantBattle_ReturnValue;       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_StartMerchantBattle) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_StartMerchantBattle");
static_assert(sizeof(BP_MerchantComponent_C_StartMerchantBattle) == 0x000178, "Wrong size on BP_MerchantComponent_C_StartMerchantBattle");
static_assert(offsetof(BP_MerchantComponent_C_StartMerchantBattle, BattlePaty) == 0x000000, "Member 'BP_MerchantComponent_C_StartMerchantBattle::BattlePaty' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_StartMerchantBattle, local_Parameters) == 0x000010, "Member 'BP_MerchantComponent_C_StartMerchantBattle::local_Parameters' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_StartMerchantBattle, CallFunc_GetBattleManager_ReturnValue) == 0x000168, "Member 'BP_MerchantComponent_C_StartMerchantBattle::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_StartMerchantBattle, CallFunc_CanStartMerchantBattle_ReturnValue) == 0x000170, "Member 'BP_MerchantComponent_C_StartMerchantBattle::CallFunc_CanStartMerchantBattle_ReturnValue' has a wrong offset!");

// Function BP_MerchantComponent.BP_MerchantComponent_C.TryBuyItem
// 0x0480 (0x0480 - 0x0000)
struct BP_MerchantComponent_C_TryBuyItem final
{
public:
	class FName                                   MerchantItemRowName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_MerchantItemSellData                local_CurrentItem;                                 // 0x0010(0x0170)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0180(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0190(0x0048)(HasGetValueTypeHash)
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemInstance_Base_C*                CallFunc_FindItemInstanceByID_ItemInstance;        // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x01F0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0200(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0248(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySpendGold_Success;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0290(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02E8(0x0010)(ReferenceParm)
	struct FS_MerchantItemSellData                CallFunc_Map_Find_Value;                           // 0x02F8(0x0170)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MerchantComponent_C_TryBuyItem) == 0x000008, "Wrong alignment on BP_MerchantComponent_C_TryBuyItem");
static_assert(sizeof(BP_MerchantComponent_C_TryBuyItem) == 0x000480, "Wrong size on BP_MerchantComponent_C_TryBuyItem");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, MerchantItemRowName) == 0x000000, "Member 'BP_MerchantComponent_C_TryBuyItem::MerchantItemRowName' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, ReturnValue) == 0x000008, "Member 'BP_MerchantComponent_C_TryBuyItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, local_CurrentItem) == 0x000010, "Member 'BP_MerchantComponent_C_TryBuyItem::local_CurrentItem' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Conv_NameToText_ReturnValue) == 0x000180, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, K2Node_MakeStruct_FormatArgumentData) == 0x000190, "Member 'BP_MerchantComponent_C_TryBuyItem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x0001D8, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_FindItemInstanceByID_ItemInstance) == 0x0001E0, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_FindItemInstanceByID_ItemInstance' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E8, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_BooleanAND_ReturnValue) == 0x0001E9, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Conv_NameToText_ReturnValue_1) == 0x0001F0, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, K2Node_MakeStruct_FormatArgumentData_1) == 0x000200, "Member 'BP_MerchantComponent_C_TryBuyItem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, K2Node_MakeArray_Array) == 0x000248, "Member 'BP_MerchantComponent_C_TryBuyItem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Format_ReturnValue) == 0x000258, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000268, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_GetInventoryManager_ReturnValue) == 0x000270, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_GetDisplayName_ReturnValue) == 0x000278, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_TrySpendGold_Success) == 0x000288, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_TrySpendGold_Success' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Conv_StringToText_ReturnValue) == 0x000290, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002A0, "Member 'BP_MerchantComponent_C_TryBuyItem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, K2Node_MakeArray_Array_1) == 0x0002E8, "Member 'BP_MerchantComponent_C_TryBuyItem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Map_Find_Value) == 0x0002F8, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Map_Find_ReturnValue) == 0x000468, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MerchantComponent_C_TryBuyItem, CallFunc_Format_ReturnValue_1) == 0x000470, "Member 'BP_MerchantComponent_C_TryBuyItem::CallFunc_Format_ReturnValue_1' has a wrong offset!");

}

