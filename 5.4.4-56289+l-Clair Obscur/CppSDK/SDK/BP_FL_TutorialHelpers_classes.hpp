#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FL_TutorialHelpers

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FL_TutorialHelpers.BP_FL_TutorialHelpers_C
// 0x0000 (0x0028 - 0x0028)
class UBP_FL_TutorialHelpers_C final : public UBlueprintFunctionLibrary
{
public:
	static void SetTutorialCompletedByID(bool Completed, const class FName& TutorialID, class UObject* __WorldContext);
	static void SetTutorialCompletedByDataTableRow(bool Completed, const struct FDataTableRowHandle& TutorialCardRow, class UObject* __WorldContext);
	static void SetSkipTurnPrevented(bool Prevented, class UObject* __WorldContext);
	static void OneTimeDisplayTutorialCard(class FName& TutorialID, class UObject* __WorldContext);
	static void HighlightTutorialWidget(class UWidget* TargetWidget, class UObject* __WorldContext, class UWBP_Tuto_BlurIndicator_C** AreaHighlightWidget);
	static void GetWBP_BattleWheelAction(class UObject* __WorldContext, class UWBP_BattleWheel_C** WBP_BattleWheel_Action);
	static void DisableUI_InputsBlock(class UWBP_CommonUI_InvisibleModalInputBlocker_C*& WBPInputBlocker, class UObject* __WorldContext);
	static class UWBP_CommonUI_InvisibleModalInputBlocker_C* EnableUI_InputsBlock(class UObject* __WorldContext);
	static void DisplayTutorialHint(const struct FS_TutorialHintParameters& TutorialHintParameters, class UObject* __WorldContext);
	static void DisplayTutorialCard(const struct FS_TutorialCardParameters& TutorialCardParameters, const TDelegate<void()>& Event, class UObject* __WorldContext);
	static bool AreTutorialsEnabled(class UObject* __WorldContext);
	static class UBP_TutorialSystemComponent_C* GetTutorialSystemComponent(class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FL_TutorialHelpers_C">();
	}
	static class UBP_FL_TutorialHelpers_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FL_TutorialHelpers_C>();
	}
};
static_assert(alignof(UBP_FL_TutorialHelpers_C) == 0x000008, "Wrong alignment on UBP_FL_TutorialHelpers_C");
static_assert(sizeof(UBP_FL_TutorialHelpers_C) == 0x000028, "Wrong size on UBP_FL_TutorialHelpers_C");

}

