#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TutorialHint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "S_TutorialHintParameters_structs.hpp"
#include "CommonUI_classes.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TutorialHint.WBP_TutorialHint_C
// 0x0050 (0x0480 - 0x0430)
class UWBP_TutorialHint_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear_Hint;                                       // 0x0438(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_SF_RichTextBlock_C*                SF_RichText_Hint;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           AutoCloseTimer;                                    // 0x0448(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          CurrentAppearAnimationPlayMode;                    // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UWBP_TutorialHint_C* Widget)> OnTutorialHintCompleted;       // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FS_TutorialHintParameters              TutorialHintParameters;                            // 0x0468(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_TutorialHint(int32 EntryPoint);
	void GetTutorialHintRow(struct FDataTableRowHandle* TutorialHintRow);
	void LoadTutorialHintParameters(const struct FS_TutorialHintParameters& TutorialHintParameters_0);
	void OnAppearAnimationFinished();
	void OnAutoCloseTimerElapsed();
	void OnInitialized();
	void OnInputMethodChanged(ECommonInputType bNewInputType);
	void PlayAppearAnimation(EUMGSequencePlayMode PlayMode);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TutorialHint_C">();
	}
	static class UWBP_TutorialHint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TutorialHint_C>();
	}
};
static_assert(alignof(UWBP_TutorialHint_C) == 0x000008, "Wrong alignment on UWBP_TutorialHint_C");
static_assert(sizeof(UWBP_TutorialHint_C) == 0x000480, "Wrong size on UWBP_TutorialHint_C");
static_assert(offsetof(UWBP_TutorialHint_C, UberGraphFrame) == 0x000430, "Member 'UWBP_TutorialHint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TutorialHint_C, Appear_Hint) == 0x000438, "Member 'UWBP_TutorialHint_C::Appear_Hint' has a wrong offset!");
static_assert(offsetof(UWBP_TutorialHint_C, SF_RichText_Hint) == 0x000440, "Member 'UWBP_TutorialHint_C::SF_RichText_Hint' has a wrong offset!");
static_assert(offsetof(UWBP_TutorialHint_C, AutoCloseTimer) == 0x000448, "Member 'UWBP_TutorialHint_C::AutoCloseTimer' has a wrong offset!");
static_assert(offsetof(UWBP_TutorialHint_C, CurrentAppearAnimationPlayMode) == 0x000450, "Member 'UWBP_TutorialHint_C::CurrentAppearAnimationPlayMode' has a wrong offset!");
static_assert(offsetof(UWBP_TutorialHint_C, OnTutorialHintCompleted) == 0x000458, "Member 'UWBP_TutorialHint_C::OnTutorialHintCompleted' has a wrong offset!");
static_assert(offsetof(UWBP_TutorialHint_C, TutorialHintParameters) == 0x000468, "Member 'UWBP_TutorialHint_C::TutorialHintParameters' has a wrong offset!");

}

