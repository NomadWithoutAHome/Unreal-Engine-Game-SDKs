#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WrappingRichText

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.ExecuteUbergraph_WBP_WrappingRichText
// 0x0008 (0x0008 - 0x0000)
struct WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText) == 0x000004, "Wrong alignment on WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText");
static_assert(sizeof(WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText) == 0x000008, "Wrong size on WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText");
static_assert(offsetof(WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText, EntryPoint) == 0x000000, "Member 'WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_WrappingRichText_C_ExecuteUbergraph_WBP_WrappingRichText::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.FindFinalMaxDesiredWidth
// 0x0068 (0x0068 - 0x0000)
struct WBP_WrappingRichText_C_FindFinalMaxDesiredWidth final
{
public:
	double                                        FinalMaxDesiredWidth;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLanguage_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth) == 0x000008, "Wrong alignment on WBP_WrappingRichText_C_FindFinalMaxDesiredWidth");
static_assert(sizeof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth) == 0x000068, "Wrong size on WBP_WrappingRichText_C_FindFinalMaxDesiredWidth");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, FinalMaxDesiredWidth) == 0x000000, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::FinalMaxDesiredWidth' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_GetCurrentLanguage_ReturnValue) == 0x000018, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_GetCurrentLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000051, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_FindFinalMaxDesiredWidth, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'WBP_WrappingRichText_C_FindFinalMaxDesiredWidth::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_WrappingRichText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WrappingRichText_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_WrappingRichText_C_PreConstruct");
static_assert(sizeof(WBP_WrappingRichText_C_PreConstruct) == 0x000001, "Wrong size on WBP_WrappingRichText_C_PreConstruct");
static_assert(offsetof(WBP_WrappingRichText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_WrappingRichText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.Set Text
// 0x0010 (0x0010 - 0x0000)
struct WBP_WrappingRichText_C_Set_Text final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_WrappingRichText_C_Set_Text) == 0x000008, "Wrong alignment on WBP_WrappingRichText_C_Set_Text");
static_assert(sizeof(WBP_WrappingRichText_C_Set_Text) == 0x000010, "Wrong size on WBP_WrappingRichText_C_Set_Text");
static_assert(offsetof(WBP_WrappingRichText_C_Set_Text, InText) == 0x000000, "Member 'WBP_WrappingRichText_C_Set_Text::InText' has a wrong offset!");

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct WBP_WrappingRichText_C_SetStyle final
{
public:
	class UClass*                                 TextStyle_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WrappingRichText_C_SetStyle) == 0x000008, "Wrong alignment on WBP_WrappingRichText_C_SetStyle");
static_assert(sizeof(WBP_WrappingRichText_C_SetStyle) == 0x000008, "Wrong size on WBP_WrappingRichText_C_SetStyle");
static_assert(offsetof(WBP_WrappingRichText_C_SetStyle, TextStyle_0) == 0x000000, "Member 'WBP_WrappingRichText_C_SetStyle::TextStyle_0' has a wrong offset!");

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.SetTextMaxDesiredWidth
// 0x0008 (0x0008 - 0x0000)
struct WBP_WrappingRichText_C_SetTextMaxDesiredWidth final
{
public:
	double                                        TextMaxDesiredWidth_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WrappingRichText_C_SetTextMaxDesiredWidth) == 0x000008, "Wrong alignment on WBP_WrappingRichText_C_SetTextMaxDesiredWidth");
static_assert(sizeof(WBP_WrappingRichText_C_SetTextMaxDesiredWidth) == 0x000008, "Wrong size on WBP_WrappingRichText_C_SetTextMaxDesiredWidth");
static_assert(offsetof(WBP_WrappingRichText_C_SetTextMaxDesiredWidth, TextMaxDesiredWidth_0) == 0x000000, "Member 'WBP_WrappingRichText_C_SetTextMaxDesiredWidth::TextMaxDesiredWidth_0' has a wrong offset!");

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.SetTextMinDesiredWidth
// 0x0008 (0x0008 - 0x0000)
struct WBP_WrappingRichText_C_SetTextMinDesiredWidth final
{
public:
	double                                        TextMaxDesiredWidth_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WrappingRichText_C_SetTextMinDesiredWidth) == 0x000008, "Wrong alignment on WBP_WrappingRichText_C_SetTextMinDesiredWidth");
static_assert(sizeof(WBP_WrappingRichText_C_SetTextMinDesiredWidth) == 0x000008, "Wrong size on WBP_WrappingRichText_C_SetTextMinDesiredWidth");
static_assert(offsetof(WBP_WrappingRichText_C_SetTextMinDesiredWidth, TextMaxDesiredWidth_0) == 0x000000, "Member 'WBP_WrappingRichText_C_SetTextMinDesiredWidth::TextMaxDesiredWidth_0' has a wrong offset!");

// Function WBP_WrappingRichText.WBP_WrappingRichText_C.UpdateText
// 0x0018 (0x0018 - 0x0000)
struct WBP_WrappingRichText_C_UpdateText final
{
public:
	double                                        CallFunc_FindFinalMaxDesiredWidth_FinalMaxDesiredWidth; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WrapTextAt_ImplicitCast;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WrappingRichText_C_UpdateText) == 0x000008, "Wrong alignment on WBP_WrappingRichText_C_UpdateText");
static_assert(sizeof(WBP_WrappingRichText_C_UpdateText) == 0x000018, "Wrong size on WBP_WrappingRichText_C_UpdateText");
static_assert(offsetof(WBP_WrappingRichText_C_UpdateText, CallFunc_FindFinalMaxDesiredWidth_FinalMaxDesiredWidth) == 0x000000, "Member 'WBP_WrappingRichText_C_UpdateText::CallFunc_FindFinalMaxDesiredWidth_FinalMaxDesiredWidth' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_UpdateText, CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast) == 0x000008, "Member 'WBP_WrappingRichText_C_UpdateText::CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_UpdateText, K2Node_VariableSet_WrapTextAt_ImplicitCast) == 0x00000C, "Member 'WBP_WrappingRichText_C_UpdateText::K2Node_VariableSet_WrapTextAt_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_WrappingRichText_C_UpdateText, CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast) == 0x000010, "Member 'WBP_WrappingRichText_C_UpdateText::CallFunc_SetMinDesiredWidth_InMinDesiredWidth_ImplicitCast' has a wrong offset!");

}

