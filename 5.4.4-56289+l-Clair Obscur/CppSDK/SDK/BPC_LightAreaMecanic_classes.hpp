#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_LightAreaMecanic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_LightAreaMecanic.BPC_LightAreaMecanic_C
// 0x0038 (0x00D8 - 0x00A0)
class UBPC_LightAreaMecanic_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsInSafeLightArea;                                 // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProtectedByArmRingLight;                         // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ProtoArmRingLight_C*                CurrentSpotLight;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnEnterLightArea;                                  // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnLeaveLightArea;                                  // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BreakCurrentLight();
	void EnableArmRingLight();
	void EnterLightArea();
	void ExecuteUbergraph_BPC_LightAreaMecanic(int32 EntryPoint);
	bool IsProtected();
	void LeaveLightArea();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_LightAreaMecanic_C">();
	}
	static class UBPC_LightAreaMecanic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_LightAreaMecanic_C>();
	}
};
static_assert(alignof(UBPC_LightAreaMecanic_C) == 0x000008, "Wrong alignment on UBPC_LightAreaMecanic_C");
static_assert(sizeof(UBPC_LightAreaMecanic_C) == 0x0000D8, "Wrong size on UBPC_LightAreaMecanic_C");
static_assert(offsetof(UBPC_LightAreaMecanic_C, UberGraphFrame) == 0x0000A0, "Member 'UBPC_LightAreaMecanic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_LightAreaMecanic_C, IsInSafeLightArea) == 0x0000A8, "Member 'UBPC_LightAreaMecanic_C::IsInSafeLightArea' has a wrong offset!");
static_assert(offsetof(UBPC_LightAreaMecanic_C, IsProtectedByArmRingLight) == 0x0000A9, "Member 'UBPC_LightAreaMecanic_C::IsProtectedByArmRingLight' has a wrong offset!");
static_assert(offsetof(UBPC_LightAreaMecanic_C, CurrentSpotLight) == 0x0000B0, "Member 'UBPC_LightAreaMecanic_C::CurrentSpotLight' has a wrong offset!");
static_assert(offsetof(UBPC_LightAreaMecanic_C, OnEnterLightArea) == 0x0000B8, "Member 'UBPC_LightAreaMecanic_C::OnEnterLightArea' has a wrong offset!");
static_assert(offsetof(UBPC_LightAreaMecanic_C, OnLeaveLightArea) == 0x0000C8, "Member 'UBPC_LightAreaMecanic_C::OnLeaveLightArea' has a wrong offset!");

}

