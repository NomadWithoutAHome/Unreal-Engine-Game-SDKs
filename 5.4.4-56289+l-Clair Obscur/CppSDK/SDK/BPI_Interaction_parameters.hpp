#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_Interaction

#include "Basic.hpp"

#include "FPromptParams_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_Interaction.BPI_Interaction_C.CanInteractWithMount
// 0x0001 (0x0001 - 0x0000)
struct BPI_Interaction_C_CanInteractWithMount final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_CanInteractWithMount) == 0x000001, "Wrong alignment on BPI_Interaction_C_CanInteractWithMount");
static_assert(sizeof(BPI_Interaction_C_CanInteractWithMount) == 0x000001, "Wrong size on BPI_Interaction_C_CanInteractWithMount");
static_assert(offsetof(BPI_Interaction_C_CanInteractWithMount, CanInteract) == 0x000000, "Member 'BPI_Interaction_C_CanInteractWithMount::CanInteract' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.GetInteractionPromptParams
// 0x0018 (0x0018 - 0x0000)
struct BPI_Interaction_C_GetInteractionPromptParams final
{
public:
	struct FFPromptParams                         PromptParams;                                      // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_GetInteractionPromptParams) == 0x000008, "Wrong alignment on BPI_Interaction_C_GetInteractionPromptParams");
static_assert(sizeof(BPI_Interaction_C_GetInteractionPromptParams) == 0x000018, "Wrong size on BPI_Interaction_C_GetInteractionPromptParams");
static_assert(offsetof(BPI_Interaction_C_GetInteractionPromptParams, PromptParams) == 0x000000, "Member 'BPI_Interaction_C_GetInteractionPromptParams::PromptParams' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.IsInteractionAvailable
// 0x0001 (0x0001 - 0x0000)
struct BPI_Interaction_C_IsInteractionAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_IsInteractionAvailable) == 0x000001, "Wrong alignment on BPI_Interaction_C_IsInteractionAvailable");
static_assert(sizeof(BPI_Interaction_C_IsInteractionAvailable) == 0x000001, "Wrong size on BPI_Interaction_C_IsInteractionAvailable");
static_assert(offsetof(BPI_Interaction_C_IsInteractionAvailable, Available) == 0x000000, "Member 'BPI_Interaction_C_IsInteractionAvailable::Available' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.IsInteractionDone
// 0x0001 (0x0001 - 0x0000)
struct BPI_Interaction_C_IsInteractionDone final
{
public:
	bool                                          Done;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_IsInteractionDone) == 0x000001, "Wrong alignment on BPI_Interaction_C_IsInteractionDone");
static_assert(sizeof(BPI_Interaction_C_IsInteractionDone) == 0x000001, "Wrong size on BPI_Interaction_C_IsInteractionDone");
static_assert(offsetof(BPI_Interaction_C_IsInteractionDone, Done) == 0x000000, "Member 'BPI_Interaction_C_IsInteractionDone::Done' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.OnEnemyBattleStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BPI_Interaction_C_OnEnemyBattleStateLoaded final
{
public:
	bool                                          BattleState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong alignment on BPI_Interaction_C_OnEnemyBattleStateLoaded");
static_assert(sizeof(BPI_Interaction_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong size on BPI_Interaction_C_OnEnemyBattleStateLoaded");
static_assert(offsetof(BPI_Interaction_C_OnEnemyBattleStateLoaded, BattleState) == 0x000000, "Member 'BPI_Interaction_C_OnEnemyBattleStateLoaded::BattleState' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BPI_Interaction_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BPI_Interaction_C_OnInteractionRequested");
static_assert(sizeof(BPI_Interaction_C_OnInteractionRequested) == 0x000010, "Wrong size on BPI_Interaction_C_OnInteractionRequested");
static_assert(offsetof(BPI_Interaction_C_OnInteractionRequested, InteractingWorldCharacter) == 0x000000, "Member 'BPI_Interaction_C_OnInteractionRequested::InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BPI_Interaction_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BPI_Interaction_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.OnObjectInteractionStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BPI_Interaction_C_OnObjectInteractionStateLoaded final
{
public:
	bool                                          InteractionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong alignment on BPI_Interaction_C_OnObjectInteractionStateLoaded");
static_assert(sizeof(BPI_Interaction_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong size on BPI_Interaction_C_OnObjectInteractionStateLoaded");
static_assert(offsetof(BPI_Interaction_C_OnObjectInteractionStateLoaded, InteractionState) == 0x000000, "Member 'BPI_Interaction_C_OnObjectInteractionStateLoaded::InteractionState' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.ShouldHideDistantInteraction
// 0x0001 (0x0001 - 0x0000)
struct BPI_Interaction_C_ShouldHideDistantInteraction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_ShouldHideDistantInteraction) == 0x000001, "Wrong alignment on BPI_Interaction_C_ShouldHideDistantInteraction");
static_assert(sizeof(BPI_Interaction_C_ShouldHideDistantInteraction) == 0x000001, "Wrong size on BPI_Interaction_C_ShouldHideDistantInteraction");
static_assert(offsetof(BPI_Interaction_C_ShouldHideDistantInteraction, ReturnValue) == 0x000000, "Member 'BPI_Interaction_C_ShouldHideDistantInteraction::ReturnValue' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.GetInteractionFeedbackLocation
// 0x0018 (0x0018 - 0x0000)
struct BPI_Interaction_C_GetInteractionFeedbackLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_GetInteractionFeedbackLocation) == 0x000008, "Wrong alignment on BPI_Interaction_C_GetInteractionFeedbackLocation");
static_assert(sizeof(BPI_Interaction_C_GetInteractionFeedbackLocation) == 0x000018, "Wrong size on BPI_Interaction_C_GetInteractionFeedbackLocation");
static_assert(offsetof(BPI_Interaction_C_GetInteractionFeedbackLocation, Location) == 0x000000, "Member 'BPI_Interaction_C_GetInteractionFeedbackLocation::Location' has a wrong offset!");

// Function BPI_Interaction.BPI_Interaction_C.GetInteractionLocation
// 0x0018 (0x0018 - 0x0000)
struct BPI_Interaction_C_GetInteractionLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_Interaction_C_GetInteractionLocation) == 0x000008, "Wrong alignment on BPI_Interaction_C_GetInteractionLocation");
static_assert(sizeof(BPI_Interaction_C_GetInteractionLocation) == 0x000018, "Wrong size on BPI_Interaction_C_GetInteractionLocation");
static_assert(offsetof(BPI_Interaction_C_GetInteractionLocation, Location) == 0x000000, "Member 'BPI_Interaction_C_GetInteractionLocation::Location' has a wrong offset!");

}

