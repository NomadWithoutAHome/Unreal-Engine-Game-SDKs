#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NamedValueSelector

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_NamedValueSelector.WBP_NamedValueSelector_C
// 0x0080 (0x1620 - 0x15A0)
class UWBP_NamedValueSelector_C : public UCommonButtonBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x15A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               MinWidthBox;                                       // 0x15A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    TextBlock_ValueName;                               // 0x15B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArrowButton_C*                     WBP_ArrowButton_Downgrade;                         // 0x15B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArrowButton_C*                     WBP_ArrowButton_Upgrade;                           // 0x15C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonVirtualButton_C*             WBP_CommonVirtualButton_Left;                      // 0x15C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonVirtualButton_C*             WBP_CommonVirtualButton_Right;                     // 0x15D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class FText>                           AvailableNames;                                    // 0x15D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SelectedEntryIndex;                                // 0x15E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EC[0x4];                                     // 0x15EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SD_OnValueChanged;                                 // 0x15F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void()>              OnFocusBackToBaseButton;                           // 0x1600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        SelectorMinWidth;                                  // 0x1610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x1618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DispatchOnValueChanged();
	void SetAvailableNames(TArray<class FText>& Options);
	void GetSelectedName(class FText* Name_0);
	void SetSelectedEntryIndex(int32 Index_0, bool DispatchChange);
	void GetSelectedEntryIndex(int32* EntryIndex);
	void RefreshText();
	int32 GetValuesCount();
	void SelectPreviousValue();
	void SelectNextValue();
	void BndEvt__WBP_NamedValueSelector_WBP_CommonVirtualButton_Left_K2Node_ComponentBoundEvent_2_OnFocused__DelegateSignature();
	void BndEvt__WBP_NamedValueSelector_WBP_CommonVirtualButton_Right_K2Node_ComponentBoundEvent_3_OnFocused__DelegateSignature();
	void BndEvt__WBP_NamedValueSelector_WBP_ArrowButton_Upgrade_K2Node_ComponentBoundEvent_4_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_NamedValueSelector_WBP_ArrowButton_Downgrade_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void PreConstruct(bool IsDesignTime);
	void SetSelectorIsLocked(bool NewLockStatus);
	void ExecuteUbergraph_WBP_NamedValueSelector(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_NamedValueSelector_C">();
	}
	static class UWBP_NamedValueSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_NamedValueSelector_C>();
	}
};
static_assert(alignof(UWBP_NamedValueSelector_C) == 0x000010, "Wrong alignment on UWBP_NamedValueSelector_C");
static_assert(sizeof(UWBP_NamedValueSelector_C) == 0x001620, "Wrong size on UWBP_NamedValueSelector_C");
static_assert(offsetof(UWBP_NamedValueSelector_C, UberGraphFrame) == 0x0015A0, "Member 'UWBP_NamedValueSelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, MinWidthBox) == 0x0015A8, "Member 'UWBP_NamedValueSelector_C::MinWidthBox' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, TextBlock_ValueName) == 0x0015B0, "Member 'UWBP_NamedValueSelector_C::TextBlock_ValueName' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, WBP_ArrowButton_Downgrade) == 0x0015B8, "Member 'UWBP_NamedValueSelector_C::WBP_ArrowButton_Downgrade' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, WBP_ArrowButton_Upgrade) == 0x0015C0, "Member 'UWBP_NamedValueSelector_C::WBP_ArrowButton_Upgrade' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, WBP_CommonVirtualButton_Left) == 0x0015C8, "Member 'UWBP_NamedValueSelector_C::WBP_CommonVirtualButton_Left' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, WBP_CommonVirtualButton_Right) == 0x0015D0, "Member 'UWBP_NamedValueSelector_C::WBP_CommonVirtualButton_Right' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, AvailableNames) == 0x0015D8, "Member 'UWBP_NamedValueSelector_C::AvailableNames' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, SelectedEntryIndex) == 0x0015E8, "Member 'UWBP_NamedValueSelector_C::SelectedEntryIndex' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, SD_OnValueChanged) == 0x0015F0, "Member 'UWBP_NamedValueSelector_C::SD_OnValueChanged' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, OnFocusBackToBaseButton) == 0x001600, "Member 'UWBP_NamedValueSelector_C::OnFocusBackToBaseButton' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, SelectorMinWidth) == 0x001610, "Member 'UWBP_NamedValueSelector_C::SelectorMinWidth' has a wrong offset!");
static_assert(offsetof(UWBP_NamedValueSelector_C, IsLocked) == 0x001618, "Member 'UWBP_NamedValueSelector_C::IsLocked' has a wrong offset!");

}

