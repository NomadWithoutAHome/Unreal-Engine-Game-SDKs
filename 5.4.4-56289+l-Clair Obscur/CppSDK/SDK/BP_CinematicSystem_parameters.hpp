#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CinematicSystem

#include "Basic.hpp"

#include "S_PostCinematicParameters_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "S_PreCinematicParameters_structs.hpp"
#include "ALSV4_CPP_structs.hpp"
#include "S_InteractiveMusicParameters_structs.hpp"
#include "S_InputLockParameters_structs.hpp"
#include "MovieScene_structs.hpp"
#include "S_TriggerCinematicVariables_structs.hpp"
#include "E_jRPG_CharacterWorldCapability_structs.hpp"
#include "S_GameFlowTransitionRequest_structs.hpp"
#include "S_jRPG_Character_World_Movement_Data_structs.hpp"


namespace SDK::Params
{

// Function BP_CinematicSystem.BP_CinematicSystem_C.AddLevelSequenceActorToDestroy
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_AddLevelSequenceActorToDestroy final
{
public:
	class ALevelSequenceActor*                    ToDestroy;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_AddLevelSequenceActorToDestroy) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_AddLevelSequenceActorToDestroy");
static_assert(sizeof(BP_CinematicSystem_C_AddLevelSequenceActorToDestroy) == 0x000010, "Wrong size on BP_CinematicSystem_C_AddLevelSequenceActorToDestroy");
static_assert(offsetof(BP_CinematicSystem_C_AddLevelSequenceActorToDestroy, ToDestroy) == 0x000000, "Member 'BP_CinematicSystem_C_AddLevelSequenceActorToDestroy::ToDestroy' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_AddLevelSequenceActorToDestroy, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_AddLevelSequenceActorToDestroy::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ApplyFrameRateLimit
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicSystem_C_ApplyFrameRateLimit final
{
public:
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ApplyFrameRateLimit) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_ApplyFrameRateLimit");
static_assert(sizeof(BP_CinematicSystem_C_ApplyFrameRateLimit) == 0x000008, "Wrong size on BP_CinematicSystem_C_ApplyFrameRateLimit");
static_assert(offsetof(BP_CinematicSystem_C_ApplyFrameRateLimit, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000000, "Member 'BP_CinematicSystem_C_ApplyFrameRateLimit::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ApplyLODSettingsOnGroom
// 0x0068 (0x0068 - 0x0000)
struct BP_CinematicSystem_C_ApplyLODSettingsOnGroom final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_3; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_4; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentPlatformConsole_CurrentPlatformIsConsole; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_ApplyLODSettingsOnGroom");
static_assert(sizeof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom) == 0x000068, "Wrong size on BP_CinematicSystem_C_ApplyLODSettingsOnGroom");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, Temp_int_Variable) == 0x000000, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, Temp_int_Variable_1) == 0x000004, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, Temp_int_Variable_2) == 0x000008, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, Temp_int_Variable_3) == 0x00000C, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, Temp_int_Variable_4) == 0x000010, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000018, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1) == 0x000020, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, Temp_int_Variable_5) == 0x000028, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue) == 0x00002C, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_IsCurrentConsoleTypeLockheart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2) == 0x000030, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_3) == 0x000040, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_3' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_4) == 0x000048, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_4' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_IsCurrentPlatformConsole_CurrentPlatformIsConsole) == 0x000050, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_IsCurrentPlatformConsole_CurrentPlatformIsConsole' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, Temp_int_Variable_6) == 0x000054, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000058, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_Clamp_ReturnValue) == 0x00005C, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ApplyLODSettingsOnGroom, K2Node_Select_Default) == 0x000064, "Member 'BP_CinematicSystem_C_ApplyLODSettingsOnGroom::K2Node_Select_Default' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.CleanUpAfterCinematic
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicSystem_C_CleanUpAfterCinematic final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_SubtitlesWorldSubsystem*            CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_CleanUpAfterCinematic) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_CleanUpAfterCinematic");
static_assert(sizeof(BP_CinematicSystem_C_CleanUpAfterCinematic) == 0x000018, "Wrong size on BP_CinematicSystem_C_CleanUpAfterCinematic");
static_assert(offsetof(BP_CinematicSystem_C_CleanUpAfterCinematic, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_CleanUpAfterCinematic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_CleanUpAfterCinematic, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_CleanUpAfterCinematic::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_CleanUpAfterCinematic, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_CinematicSystem_C_CleanUpAfterCinematic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.CreateAssetLoadRequest
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicSystem_C_CreateAssetLoadRequest final
{
public:
	class UBP_LoadAssetRequest_C*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_CreateAssetLoadRequest) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_CreateAssetLoadRequest");
static_assert(sizeof(BP_CinematicSystem_C_CreateAssetLoadRequest) == 0x000008, "Wrong size on BP_CinematicSystem_C_CreateAssetLoadRequest");
static_assert(offsetof(BP_CinematicSystem_C_CreateAssetLoadRequest, CallFunc_SpawnObject_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_CreateAssetLoadRequest::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.CreateCinematicControlsWidget
// 0x0038 (0x0038 - 0x0000)
struct BP_CinematicSystem_C_CreateCinematicControlsWidget final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_CinematicControls_C*               CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_CreateCinematicControlsWidget) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_CreateCinematicControlsWidget");
static_assert(sizeof(BP_CinematicSystem_C_CreateCinematicControlsWidget) == 0x000038, "Wrong size on BP_CinematicSystem_C_CreateCinematicControlsWidget");
static_assert(offsetof(BP_CinematicSystem_C_CreateCinematicControlsWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_CinematicSystem_C_CreateCinematicControlsWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_CreateCinematicControlsWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_CinematicSystem_C_CreateCinematicControlsWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_CreateCinematicControlsWidget, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_CreateCinematicControlsWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_CreateCinematicControlsWidget, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'BP_CinematicSystem_C_CreateCinematicControlsWidget::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.DEBUG_AutoSkipCinematicIfNeeded
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_DEBUG_AutoSkipCinematicIfNeeded final
{
public:
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_DEBUG_AutoSkipCinematicIfNeeded) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_DEBUG_AutoSkipCinematicIfNeeded");
static_assert(sizeof(BP_CinematicSystem_C_DEBUG_AutoSkipCinematicIfNeeded) == 0x000001, "Wrong size on BP_CinematicSystem_C_DEBUG_AutoSkipCinematicIfNeeded");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_AutoSkipCinematicIfNeeded, CallFunc_GetBoolCVar_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_DEBUG_AutoSkipCinematicIfNeeded::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.DEBUG_GetCurrentState
// 0x01B0 (0x01B0 - 0x0000)
struct BP_CinematicSystem_C_DEBUG_GetCurrentState final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSequenceTimeDebugInfo_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         CallFunc_GetSequence_ReturnValue;                  // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0110(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0128(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0180(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_DEBUG_GetCurrentState) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_DEBUG_GetCurrentState");
static_assert(sizeof(BP_CinematicSystem_C_DEBUG_GetCurrentState) == 0x0001B0, "Wrong size on BP_CinematicSystem_C_DEBUG_GetCurrentState");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_GetSequenceTimeDebugInfo_ReturnValue) == 0x000010, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_GetSequenceTimeDebugInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000078, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F8, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_GetSequence_ReturnValue) == 0x000108, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_GetSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000110, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, K2Node_MakeStruct_FormatArgumentData_2) == 0x000128, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, K2Node_MakeArray_Array_1) == 0x000170, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Format_ReturnValue_1) == 0x000180, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_IsValid_ReturnValue_2) == 0x000190, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000198, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Not_PreBool_ReturnValue) == 0x0001A8, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_IsValid_ReturnValue_3) == 0x0001A9, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001AA, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_GetCurrentState, CallFunc_BooleanAND_ReturnValue) == 0x0001AB, "Member 'BP_CinematicSystem_C_DEBUG_GetCurrentState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.DEBUG_ModifyCinematicParameters
// 0x0068 (0x0068 - 0x0000)
struct BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters final
{
public:
	struct FS_PostCinematicParameters             K2Node_MakeStruct_S_PostCinematicParameters;       // 0x0000(0x0060)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_PreCinematicParameters              K2Node_MakeStruct_S_PreCinematicParameters;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters");
static_assert(sizeof(BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters) == 0x000068, "Wrong size on BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters, K2Node_MakeStruct_S_PostCinematicParameters) == 0x000000, "Member 'BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters::K2Node_MakeStruct_S_PostCinematicParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters, K2Node_MakeStruct_S_PreCinematicParameters) == 0x000060, "Member 'BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters::K2Node_MakeStruct_S_PreCinematicParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters, CallFunc_GetBoolCVar_ReturnValue) == 0x000061, "Member 'BP_CinematicSystem_C_DEBUG_ModifyCinematicParameters::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.DisplayCinematicTransitionWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_DisplayCinematicTransitionWidget final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CinematicTransition_C*             CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_DisplayCinematicTransitionWidget) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_DisplayCinematicTransitionWidget");
static_assert(sizeof(BP_CinematicSystem_C_DisplayCinematicTransitionWidget) == 0x000010, "Wrong size on BP_CinematicSystem_C_DisplayCinematicTransitionWidget");
static_assert(offsetof(BP_CinematicSystem_C_DisplayCinematicTransitionWidget, PlayMode) == 0x000000, "Member 'BP_CinematicSystem_C_DisplayCinematicTransitionWidget::PlayMode' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_DisplayCinematicTransitionWidget, CallFunc_Create_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_DisplayCinematicTransitionWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ExecuteGameActionIfNeeded
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_ExecuteGameActionIfNeeded final
{
public:
	bool                                          CallFunc_IsValidGameActionWrapper_IsValid;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ExecuteGameActionIfNeeded) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_ExecuteGameActionIfNeeded");
static_assert(sizeof(BP_CinematicSystem_C_ExecuteGameActionIfNeeded) == 0x000001, "Wrong size on BP_CinematicSystem_C_ExecuteGameActionIfNeeded");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteGameActionIfNeeded, CallFunc_IsValidGameActionWrapper_IsValid) == 0x000000, "Member 'BP_CinematicSystem_C_ExecuteGameActionIfNeeded::CallFunc_IsValidGameActionWrapper_IsValid' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ExecuteUbergraph_BP_CinematicSystem
// 0x0458 (0x0458 - 0x0000)
struct BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Cine_ExitPoint_C*                   K2Node_DynamicCast_AsBP_Cine_Exit_Point;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWorldPartitionStreamingSourceComponent*> K2Node_MakeArray_Array;                   // 0x0038(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_TriggerCinematicVariables           K2Node_CustomEvent_TriggerCinematicVariableStruct; // 0x0058(0x0150)(ContainsInstancedReference, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction;                   // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateCinematicContext_IsValid;         // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom;           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Pause_ReturnValue;                        // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x01CC(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackParams      K2Node_MakeStruct_MovieSceneSequencePlaybackParams; // 0x01E0(0x0038)()
	class FString                                 CallFunc_DEBUG_GetCurrentState_ReturnValue;        // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0230(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0240(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_DEBUG_GetCurrentState_ReturnValue_1;      // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0298(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02A8(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02C8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0310(0x0010)(ReferenceParm)
	class FString                                 CallFunc_DEBUG_GetCurrentState_ReturnValue_2;      // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0330(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0340(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0350(0x0048)(HasGetValueTypeHash)
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x03A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03B0(0x0010)()
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue_2;              // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_FirstRun;                         // 0x03C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_MultiGate_ScratchBool;                      // 0x03C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C7[0x1];                                      // 0x03C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_MultiGate_ScratchIndex;                     // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateCinematicParameters_IsValid;      // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bShouldPause)>            K2Node_CreateDelegate_OutputDelegate;              // 0x03D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x03E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlatformsSubsystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Play_ReturnValue;                         // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidGameActionWrapper_IsValid;         // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB[0x5];                                      // 0x03FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              CallFunc_ReleaseAndWaitGameFlowTransitionFadeOut_LatentAction; // 0x0400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ExecuteGameActionRequest_C*         CallFunc_SpawnObject_ReturnValue;                  // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction; // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bShouldPause;                   // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputLockComponent_C*               CallFunc_GetInputLockSystem_ReturnValue;           // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InputLockParameters                 K2Node_MakeStruct_S_InputLockParameters;           // 0x0430(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432[0x2];                                      // 0x0432(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_Array_Get_Item;                           // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem");
static_assert(sizeof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem) == 0x000458, "Wrong size on BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, EntryPoint) == 0x000000, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000010, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_DynamicCast_AsBP_Cine_Exit_Point) == 0x000028, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_DynamicCast_AsBP_Cine_Exit_Point' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, Temp_bool_Has_Been_Initd_Variable) == 0x000048, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_CustomEvent_TriggerCinematicVariableStruct) == 0x000058, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_CustomEvent_TriggerCinematicVariableStruct' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_CustomEvent_LatentAction) == 0x0001A8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_CustomEvent_LatentAction' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_IsNameValid_ReturnValue) == 0x0001B1, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_IsValid_ReturnValue_2) == 0x0001B2, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_ValidateCinematicContext_IsValid) == 0x0001B3, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_ValidateCinematicContext_IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_GetGameInstance_ReturnValue) == 0x0001B8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom) == 0x0001C0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Pause_ReturnValue) == 0x0001C9, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Pause_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_GetEndTime_ReturnValue) == 0x0001CC, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x0001DC, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeStruct_MovieSceneSequencePlaybackParams) == 0x0001E0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeStruct_MovieSceneSequencePlaybackParams' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_DEBUG_GetCurrentState_ReturnValue) == 0x000218, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_DEBUG_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_BooleanAND_ReturnValue) == 0x000228, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Conv_StringToText_ReturnValue) == 0x000230, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeStruct_FormatArgumentData) == 0x000240, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_DEBUG_GetCurrentState_ReturnValue_1) == 0x000288, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_DEBUG_GetCurrentState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeArray_Array_1) == 0x000298, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002A8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Format_ReturnValue) == 0x0002B8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002C8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeArray_Array_2) == 0x000310, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_DEBUG_GetCurrentState_ReturnValue_2) == 0x000320, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_DEBUG_GetCurrentState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Format_ReturnValue_1) == 0x000330, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000340, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeStruct_FormatArgumentData_2) == 0x000350, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_GetInteractionSystem_ReturnValue) == 0x000398, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeArray_Array_3) == 0x0003A0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Format_ReturnValue_2) == 0x0003B0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_SetGamePaused_ReturnValue) == 0x0003C0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_SetGamePaused_ReturnValue_1) == 0x0003C1, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_SetGamePaused_ReturnValue_2) == 0x0003C2, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_SetGamePaused_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, Temp_bool_Has_Been_Initd_Variable_1) == 0x0003C3, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, Temp_bool_IsClosed_Variable) == 0x0003C4, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MultiGate_FirstRun) == 0x0003C5, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MultiGate_FirstRun' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MultiGate_ScratchBool) == 0x0003C6, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MultiGate_ScratchBool' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MultiGate_ScratchIndex) == 0x0003C8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MultiGate_ScratchIndex' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_ValidateCinematicParameters_IsValid) == 0x0003CC, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_ValidateCinematicParameters_IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_CreateDelegate_OutputDelegate) == 0x0003D0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003E0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0003F0, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Play_ReturnValue) == 0x0003F8, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_IsValid_ReturnValue_3) == 0x0003F9, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_IsValidGameActionWrapper_IsValid) == 0x0003FA, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_IsValidGameActionWrapper_IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_ReleaseAndWaitGameFlowTransitionFadeOut_LatentAction) == 0x000400, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_ReleaseAndWaitGameFlowTransitionFadeOut_LatentAction' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_SpawnObject_ReturnValue) == 0x000408, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, Temp_bool_IsClosed_Variable_1) == 0x000410, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, Temp_int_Variable) == 0x000414, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction) == 0x000418, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_ReleaseAndWaitGameFlowTransition_LatentAction' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_CustomEvent_bShouldPause) == 0x000420, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_CustomEvent_bShouldPause' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_GetInputLockSystem_ReturnValue) == 0x000428, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_GetInputLockSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_MakeStruct_S_InputLockParameters) == 0x000430, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_MakeStruct_S_InputLockParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, K2Node_Event_DeltaSeconds) == 0x000434, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000438, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Array_Get_Item) == 0x000440, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Array_Length_ReturnValue) == 0x000448, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Less_IntInt_ReturnValue) == 0x00044C, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Delay_Duration_ImplicitCast) == 0x000450, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000454, "Member 'BP_CinematicSystem_C_ExecuteUbergraph_BP_CinematicSystem::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ExitCinematicModeForCharacter
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicSystem_C_ExitCinematicModeForCharacter final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ExitCinematicModeForCharacter) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_ExitCinematicModeForCharacter");
static_assert(sizeof(BP_CinematicSystem_C_ExitCinematicModeForCharacter) == 0x000018, "Wrong size on BP_CinematicSystem_C_ExitCinematicModeForCharacter");
static_assert(offsetof(BP_CinematicSystem_C_ExitCinematicModeForCharacter, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_ExitCinematicModeForCharacter::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExitCinematicModeForCharacter, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000008, "Member 'BP_CinematicSystem_C_ExitCinematicModeForCharacter::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExitCinematicModeForCharacter, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_CinematicSystem_C_ExitCinematicModeForCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ExitCinematicModeForCharacter, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_CinematicSystem_C_ExitCinematicModeForCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.FinishLatentAction
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_FinishLatentAction final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_FinishLatentAction) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_FinishLatentAction");
static_assert(sizeof(BP_CinematicSystem_C_FinishLatentAction) == 0x000001, "Wrong size on BP_CinematicSystem_C_FinishLatentAction");
static_assert(offsetof(BP_CinematicSystem_C_FinishLatentAction, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_FinishLatentAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.FinishPreCinematicTransition
// 0x0088 (0x0088 - 0x0000)
struct BP_CinematicSystem_C_FinishPreCinematicTransition final
{
public:
	struct FS_InputLockParameters                 K2Node_MakeStruct_S_InputLockParameters;           // 0x0000(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputLockComponent_C*               CallFunc_GetInputLockSystem_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_CharacterWorldCapability, bool>   K2Node_MakeMap_Map;                                // 0x0018(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_FinishPreCinematicTransition) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_FinishPreCinematicTransition");
static_assert(sizeof(BP_CinematicSystem_C_FinishPreCinematicTransition) == 0x000088, "Wrong size on BP_CinematicSystem_C_FinishPreCinematicTransition");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, K2Node_MakeStruct_S_InputLockParameters) == 0x000000, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::K2Node_MakeStruct_S_InputLockParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, CallFunc_GetInputLockSystem_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::CallFunc_GetInputLockSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World) == 0x000010, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, K2Node_MakeMap_Map) == 0x000018, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1) == 0x000070, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_FinishPreCinematicTransition, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'BP_CinematicSystem_C_FinishPreCinematicTransition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.GetCharacterWorld
// 0x0020 (0x0020 - 0x0000)
struct BP_CinematicSystem_C_GetCharacterWorld final
{
public:
	class ABP_jRPG_Character_World_C*             AsBP_J_RPG_Character_World;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             K2Node_DynamicCast_AsBP_J_RPG_Character_World;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_GetCharacterWorld) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_GetCharacterWorld");
static_assert(sizeof(BP_CinematicSystem_C_GetCharacterWorld) == 0x000020, "Wrong size on BP_CinematicSystem_C_GetCharacterWorld");
static_assert(offsetof(BP_CinematicSystem_C_GetCharacterWorld, AsBP_J_RPG_Character_World) == 0x000000, "Member 'BP_CinematicSystem_C_GetCharacterWorld::AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetCharacterWorld, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_GetCharacterWorld::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetCharacterWorld, K2Node_DynamicCast_AsBP_J_RPG_Character_World) == 0x000010, "Member 'BP_CinematicSystem_C_GetCharacterWorld::K2Node_DynamicCast_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetCharacterWorld, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CinematicSystem_C_GetCharacterWorld::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.GetOverlayForPreCinematicTransition
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicSystem_C_GetOverlayForPreCinematicTransition final
{
public:
	EALSOverlayState                              Overlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_GetOverlayForPreCinematicTransition) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_GetOverlayForPreCinematicTransition");
static_assert(sizeof(BP_CinematicSystem_C_GetOverlayForPreCinematicTransition) == 0x000018, "Wrong size on BP_CinematicSystem_C_GetOverlayForPreCinematicTransition");
static_assert(offsetof(BP_CinematicSystem_C_GetOverlayForPreCinematicTransition, Overlay) == 0x000000, "Member 'BP_CinematicSystem_C_GetOverlayForPreCinematicTransition::Overlay' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetOverlayForPreCinematicTransition, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World) == 0x000008, "Member 'BP_CinematicSystem_C_GetOverlayForPreCinematicTransition::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetOverlayForPreCinematicTransition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_CinematicSystem_C_GetOverlayForPreCinematicTransition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.GetSequenceTimeDebugInfo
// 0x01C0 (0x01C0 - 0x0000)
struct BP_CinematicSystem_C_GetSequenceTimeDebugInfo final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetStartTime_ReturnValue;                 // 0x0020(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetDuration_ReturnValue;                  // 0x0030(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_1; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifiedFrameTime                    CallFunc_GetCurrentTime_ReturnValue;               // 0x0048(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x0058(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_2; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0010)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x00E0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_GetSequenceTimeDebugInfo");
static_assert(sizeof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo) == 0x0001C0, "Wrong size on BP_CinematicSystem_C_GetSequenceTimeDebugInfo");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_GetSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_GetStartTime_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_GetDuration_ReturnValue) == 0x000030, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_GetDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x000040, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_1) == 0x000044, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_GetCurrentTime_ReturnValue) == 0x000048, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_GetCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_BreakQualifiedFrameTime_Frame) == 0x000058, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x00005C, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x000064, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_2) == 0x000068, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0000E0, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Format_ReturnValue) == 0x000190, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001A0, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0001A8, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0001B0, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_GetSequenceTimeDebugInfo, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001B8, "Member 'BP_CinematicSystem_C_GetSequenceTimeDebugInfo::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.IsInCinematicTransition
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_IsInCinematicTransition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_IsInCinematicTransition) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_IsInCinematicTransition");
static_assert(sizeof(BP_CinematicSystem_C_IsInCinematicTransition) == 0x000001, "Wrong size on BP_CinematicSystem_C_IsInCinematicTransition");
static_assert(offsetof(BP_CinematicSystem_C_IsInCinematicTransition, ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_IsInCinematicTransition::ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.IsPlayingSequence
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_IsPlayingSequence final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_IsPlayingSequence) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_IsPlayingSequence");
static_assert(sizeof(BP_CinematicSystem_C_IsPlayingSequence) == 0x000001, "Wrong size on BP_CinematicSystem_C_IsPlayingSequence");
static_assert(offsetof(BP_CinematicSystem_C_IsPlayingSequence, IsPlaying) == 0x000000, "Member 'BP_CinematicSystem_C_IsPlayingSequence::IsPlaying' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.IsSequenceStarted
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_IsSequenceStarted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_IsSequenceStarted) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_IsSequenceStarted");
static_assert(sizeof(BP_CinematicSystem_C_IsSequenceStarted) == 0x000001, "Wrong size on BP_CinematicSystem_C_IsSequenceStarted");
static_assert(offsetof(BP_CinematicSystem_C_IsSequenceStarted, ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_IsSequenceStarted::ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.OnPlatformPauseEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_OnPlatformPauseEvent final
{
public:
	bool                                          bShouldPause;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_OnPlatformPauseEvent) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_OnPlatformPauseEvent");
static_assert(sizeof(BP_CinematicSystem_C_OnPlatformPauseEvent) == 0x000001, "Wrong size on BP_CinematicSystem_C_OnPlatformPauseEvent");
static_assert(offsetof(BP_CinematicSystem_C_OnPlatformPauseEvent, bShouldPause) == 0x000000, "Member 'BP_CinematicSystem_C_OnPlatformPauseEvent::bShouldPause' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.OnPreCinematicInputLockTimerElapsed
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed final
{
public:
	struct FS_InputLockParameters                 K2Node_MakeStruct_S_InputLockParameters;           // 0x0000(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputLockComponent_C*               CallFunc_GetInputLockSystem_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed");
static_assert(sizeof(BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed) == 0x000010, "Wrong size on BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed");
static_assert(offsetof(BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed, K2Node_MakeStruct_S_InputLockParameters) == 0x000000, "Member 'BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed::K2Node_MakeStruct_S_InputLockParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed, CallFunc_GetInputLockSystem_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_OnPreCinematicInputLockTimerElapsed::CallFunc_GetInputLockSystem_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.OnSequenceStarted
// 0x0040 (0x0040 - 0x0000)
struct BP_CinematicSystem_C_OnSequenceStarted final
{
public:
	class UBP_World_Audio_Component_C*            CallFunc_GetWorldAudioComponent_WorldAudioComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InteractiveMusicParameters          K2Node_MakeStruct_S_InteractiveMusicParameters;    // 0x0008(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateRangedAmbienceParameters_IsValid; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_OnSequenceStarted) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_OnSequenceStarted");
static_assert(sizeof(BP_CinematicSystem_C_OnSequenceStarted) == 0x000040, "Wrong size on BP_CinematicSystem_C_OnSequenceStarted");
static_assert(offsetof(BP_CinematicSystem_C_OnSequenceStarted, CallFunc_GetWorldAudioComponent_WorldAudioComponent) == 0x000000, "Member 'BP_CinematicSystem_C_OnSequenceStarted::CallFunc_GetWorldAudioComponent_WorldAudioComponent' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_OnSequenceStarted, K2Node_MakeStruct_S_InteractiveMusicParameters) == 0x000008, "Member 'BP_CinematicSystem_C_OnSequenceStarted::K2Node_MakeStruct_S_InteractiveMusicParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_OnSequenceStarted, CallFunc_GetCustomGI_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_OnSequenceStarted::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_OnSequenceStarted, CallFunc_ValidateRangedAmbienceParameters_IsValid) == 0x000028, "Member 'BP_CinematicSystem_C_OnSequenceStarted::CallFunc_ValidateRangedAmbienceParameters_IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_OnSequenceStarted, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World) == 0x000030, "Member 'BP_CinematicSystem_C_OnSequenceStarted::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_OnSequenceStarted, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_CinematicSystem_C_OnSequenceStarted::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.PauseSound
// 0x0030 (0x0030 - 0x0000)
struct BP_CinematicSystem_C_PauseSound final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_PauseSound) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_PauseSound");
static_assert(sizeof(BP_CinematicSystem_C_PauseSound) == 0x000030, "Wrong size on BP_CinematicSystem_C_PauseSound");
static_assert(offsetof(BP_CinematicSystem_C_PauseSound, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CinematicSystem_C_PauseSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PauseSound, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CinematicSystem_C_PauseSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PauseSound, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_PauseSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PauseSound, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CinematicSystem_C_PauseSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PauseSound, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_PauseSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PauseSound, CallFunc_GetCustomGI_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_PauseSound::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PauseSound, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_CinematicSystem_C_PauseSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.PlayCinematicWithLevelSequence
// 0x00A0 (0x00A0 - 0x0000)
struct BP_CinematicSystem_C_PlayCinematicWithLevelSequence final
{
public:
	class UObject*                                CallFunc_GetLoadedAsset_LoadedAsset;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_PlayCinematicWithLevelSequence");
static_assert(sizeof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence) == 0x0000A0, "Wrong size on BP_CinematicSystem_C_PlayCinematicWithLevelSequence");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, CallFunc_GetLoadedAsset_LoadedAsset) == 0x000000, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::CallFunc_GetLoadedAsset_LoadedAsset' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, K2Node_DynamicCast_AsLevel_Sequence) == 0x000008, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithLevelSequence, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_CinematicSystem_C_PlayCinematicWithLevelSequence::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.PlayCinematicWithMediaPlayer
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicSystem_C_PlayCinematicWithMediaPlayer final
{
public:
	class UWBP_MediaPlayerCinematic_C*            CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_PlayCinematicWithMediaPlayer) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_PlayCinematicWithMediaPlayer");
static_assert(sizeof(BP_CinematicSystem_C_PlayCinematicWithMediaPlayer) == 0x000018, "Wrong size on BP_CinematicSystem_C_PlayCinematicWithMediaPlayer");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithMediaPlayer, CallFunc_Create_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_PlayCinematicWithMediaPlayer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PlayCinematicWithMediaPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_CinematicSystem_C_PlayCinematicWithMediaPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.PrepareWorldToStartCinematic
// 0x0020 (0x0020 - 0x0000)
struct BP_CinematicSystem_C_PrepareWorldToStartCinematic final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldInfoComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DialogueSystemComponent_C*          CallFunc_GetDialogueSystemComponent_DialogueSystem; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_PrepareWorldToStartCinematic) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_PrepareWorldToStartCinematic");
static_assert(sizeof(BP_CinematicSystem_C_PrepareWorldToStartCinematic) == 0x000020, "Wrong size on BP_CinematicSystem_C_PrepareWorldToStartCinematic");
static_assert(offsetof(BP_CinematicSystem_C_PrepareWorldToStartCinematic, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_PrepareWorldToStartCinematic::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PrepareWorldToStartCinematic, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_PrepareWorldToStartCinematic::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PrepareWorldToStartCinematic, CallFunc_GetInteractionSystem_ReturnValue) == 0x000010, "Member 'BP_CinematicSystem_C_PrepareWorldToStartCinematic::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_PrepareWorldToStartCinematic, CallFunc_GetDialogueSystemComponent_DialogueSystem) == 0x000018, "Member 'BP_CinematicSystem_C_PrepareWorldToStartCinematic::CallFunc_GetDialogueSystemComponent_DialogueSystem' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_CinematicSystem_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_CinematicSystem_C_ReceiveTick");
static_assert(sizeof(BP_CinematicSystem_C_ReceiveTick) == 0x000004, "Wrong size on BP_CinematicSystem_C_ReceiveTick");
static_assert(offsetof(BP_CinematicSystem_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_CinematicSystem_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.RegisterExternalAudioComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_RegisterExternalAudioComponent final
{
public:
	const class UAudioComponent*                  AudioComponent;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_RegisterExternalAudioComponent) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_RegisterExternalAudioComponent");
static_assert(sizeof(BP_CinematicSystem_C_RegisterExternalAudioComponent) == 0x000010, "Wrong size on BP_CinematicSystem_C_RegisterExternalAudioComponent");
static_assert(offsetof(BP_CinematicSystem_C_RegisterExternalAudioComponent, AudioComponent) == 0x000000, "Member 'BP_CinematicSystem_C_RegisterExternalAudioComponent::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RegisterExternalAudioComponent, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_RegisterExternalAudioComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.RegisterSpawnedMediaPlayerActor
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicSystem_C_RegisterSpawnedMediaPlayerActor final
{
public:
	class ABP_MediaPlayer_C*                      MediaPlayer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_RegisterSpawnedMediaPlayerActor) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_RegisterSpawnedMediaPlayerActor");
static_assert(sizeof(BP_CinematicSystem_C_RegisterSpawnedMediaPlayerActor) == 0x000008, "Wrong size on BP_CinematicSystem_C_RegisterSpawnedMediaPlayerActor");
static_assert(offsetof(BP_CinematicSystem_C_RegisterSpawnedMediaPlayerActor, MediaPlayer) == 0x000000, "Member 'BP_CinematicSystem_C_RegisterSpawnedMediaPlayerActor::MediaPlayer' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.RegisterSpawnedWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_RegisterSpawnedWidget final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_RegisterSpawnedWidget) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_RegisterSpawnedWidget");
static_assert(sizeof(BP_CinematicSystem_C_RegisterSpawnedWidget) == 0x000010, "Wrong size on BP_CinematicSystem_C_RegisterSpawnedWidget");
static_assert(offsetof(BP_CinematicSystem_C_RegisterSpawnedWidget, Widget) == 0x000000, "Member 'BP_CinematicSystem_C_RegisterSpawnedWidget::Widget' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RegisterSpawnedWidget, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_RegisterSpawnedWidget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.RemoveFrameRateLimit
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicSystem_C_RemoveFrameRateLimit final
{
public:
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_RemoveFrameRateLimit) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_RemoveFrameRateLimit");
static_assert(sizeof(BP_CinematicSystem_C_RemoveFrameRateLimit) == 0x000008, "Wrong size on BP_CinematicSystem_C_RemoveFrameRateLimit");
static_assert(offsetof(BP_CinematicSystem_C_RemoveFrameRateLimit, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000000, "Member 'BP_CinematicSystem_C_RemoveFrameRateLimit::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.RemoveLODSettingsOnGroom
// 0x0030 (0x0030 - 0x0000)
struct BP_CinematicSystem_C_RemoveLODSettingsOnGroom final
{
public:
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentPlatformConsole_CurrentPlatformIsConsole; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_RemoveLODSettingsOnGroom");
static_assert(sizeof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom) == 0x000030, "Wrong size on BP_CinematicSystem_C_RemoveLODSettingsOnGroom");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000000, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_IsCurrentPlatformConsole_CurrentPlatformIsConsole) == 0x000008, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_IsCurrentPlatformConsole_CurrentPlatformIsConsole' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1) == 0x000010, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2) == 0x000018, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_GetConfigurableGameUserSettings_GameUserSettings_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_RemoveLODSettingsOnGroom, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'BP_CinematicSystem_C_RemoveLODSettingsOnGroom::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ResetBindings
// 0x0001 (0x0001 - 0x0000)
struct BP_CinematicSystem_C_ResetBindings final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ResetBindings) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_ResetBindings");
static_assert(sizeof(BP_CinematicSystem_C_ResetBindings) == 0x000001, "Wrong size on BP_CinematicSystem_C_ResetBindings");
static_assert(offsetof(BP_CinematicSystem_C_ResetBindings, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_ResetBindings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ResumeGameAfterCinematic
// 0x0018 (0x0018 - 0x0000)
struct BP_CinematicSystem_C_ResumeGameAfterCinematic final
{
public:
	class UBP_World_Audio_Component_C*            CallFunc_GetWorldAudioComponent_WorldAudioComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateRangedAmbienceParameters_IsValid; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ResumeGameAfterCinematic) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_ResumeGameAfterCinematic");
static_assert(sizeof(BP_CinematicSystem_C_ResumeGameAfterCinematic) == 0x000018, "Wrong size on BP_CinematicSystem_C_ResumeGameAfterCinematic");
static_assert(offsetof(BP_CinematicSystem_C_ResumeGameAfterCinematic, CallFunc_GetWorldAudioComponent_WorldAudioComponent) == 0x000000, "Member 'BP_CinematicSystem_C_ResumeGameAfterCinematic::CallFunc_GetWorldAudioComponent_WorldAudioComponent' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ResumeGameAfterCinematic, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_ResumeGameAfterCinematic::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ResumeGameAfterCinematic, CallFunc_ValidateRangedAmbienceParameters_IsValid) == 0x000010, "Member 'BP_CinematicSystem_C_ResumeGameAfterCinematic::CallFunc_ValidateRangedAmbienceParameters_IsValid' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.SetPauseForSpawnedWidgets
// 0x0058 (0x0058 - 0x0000)
struct BP_CinematicSystem_C_SetPauseForSpawnedWidgets final
{
public:
	bool                                          Paused;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_WidgetSequencerInterface_C> K2Node_DynamicCast_AsBPI_Widget_Sequencer_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_WidgetSequencerInterface_C> K2Node_DynamicCast_AsBPI_Widget_Sequencer_Interface_1; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_SetPauseForSpawnedWidgets");
static_assert(sizeof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets) == 0x000058, "Wrong size on BP_CinematicSystem_C_SetPauseForSpawnedWidgets");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, Paused) == 0x000000, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::Paused' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, K2Node_DynamicCast_AsBPI_Widget_Sequencer_Interface) == 0x000028, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::K2Node_DynamicCast_AsBPI_Widget_Sequencer_Interface' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, K2Node_DynamicCast_AsBPI_Widget_Sequencer_Interface_1) == 0x000040, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::K2Node_DynamicCast_AsBPI_Widget_Sequencer_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseForSpawnedWidgets, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_CinematicSystem_C_SetPauseForSpawnedWidgets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.SetPauseMediaPlayerActor
// 0x0002 (0x0002 - 0x0000)
struct BP_CinematicSystem_C_SetPauseMediaPlayerActor final
{
public:
	bool                                          Paused;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_SetPauseMediaPlayerActor) == 0x000001, "Wrong alignment on BP_CinematicSystem_C_SetPauseMediaPlayerActor");
static_assert(sizeof(BP_CinematicSystem_C_SetPauseMediaPlayerActor) == 0x000002, "Wrong size on BP_CinematicSystem_C_SetPauseMediaPlayerActor");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseMediaPlayerActor, Paused) == 0x000000, "Member 'BP_CinematicSystem_C_SetPauseMediaPlayerActor::Paused' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetPauseMediaPlayerActor, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_CinematicSystem_C_SetPauseMediaPlayerActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.SetSequencePlayRate
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_SetSequencePlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_SequencePlayRate_ImplicitCast;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_SetSequencePlayRate) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_SetSequencePlayRate");
static_assert(sizeof(BP_CinematicSystem_C_SetSequencePlayRate) == 0x000010, "Wrong size on BP_CinematicSystem_C_SetSequencePlayRate");
static_assert(offsetof(BP_CinematicSystem_C_SetSequencePlayRate, PlayRate) == 0x000000, "Member 'BP_CinematicSystem_C_SetSequencePlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetSequencePlayRate, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_SetSequencePlayRate::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetSequencePlayRate, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_CinematicSystem_C_SetSequencePlayRate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetSequencePlayRate, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_CinematicSystem_C_SetSequencePlayRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_SetSequencePlayRate, K2Node_VariableSet_SequencePlayRate_ImplicitCast) == 0x00000C, "Member 'BP_CinematicSystem_C_SetSequencePlayRate::K2Node_VariableSet_SequencePlayRate_ImplicitCast' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.StartLevelSequence
// 0x0278 (0x0278 - 0x0000)
struct BP_CinematicSystem_C_StartLevelSequence final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    Settings;                                          // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0048)(HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0110(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0120(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0140(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0048)(HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Map_Find_Value;                           // 0x01A0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E8(0x0010)()
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0208(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0258(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_StartLevelSequence) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_StartLevelSequence");
static_assert(sizeof(BP_CinematicSystem_C_StartLevelSequence) == 0x000278, "Wrong size on BP_CinematicSystem_C_StartLevelSequence");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, LevelSequence) == 0x000000, "Member 'BP_CinematicSystem_C_StartLevelSequence::LevelSequence' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, Settings) == 0x000008, "Member 'BP_CinematicSystem_C_StartLevelSequence::Settings' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000030, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000038, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000040, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_CinematicSystem_C_StartLevelSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_CinematicSystem_C_StartLevelSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000110, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Map_Keys_Keys) == 0x000120, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Conv_NameToText_ReturnValue) == 0x000140, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Map_Find_Value) == 0x0001A0, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Map_Find_ReturnValue) == 0x0001C8, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x0001D0, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001E0, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E8, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_DynamicCast_AsActor) == 0x0001F8, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_MakeStruct_FormatArgumentData_3) == 0x000208, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_IsValid_ReturnValue) == 0x000250, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, K2Node_MakeArray_Array_1) == 0x000258, "Member 'BP_CinematicSystem_C_StartLevelSequence::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartLevelSequence, CallFunc_Format_ReturnValue_1) == 0x000268, "Member 'BP_CinematicSystem_C_StartLevelSequence::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.StartPostCinematicTransition
// 0x00F0 (0x00F0 - 0x0000)
struct BP_CinematicSystem_C_StartPostCinematicTransition final
{
public:
	class UBP_InputLockComponent_C*               CallFunc_GetInputLockSystem_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InputLockParameters                 K2Node_MakeStruct_S_InputLockParameters;           // 0x0008(0x0002)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetPostCinematicTransitionTransform_Transform; // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_StartPostCinematicTransition) == 0x000010, "Wrong alignment on BP_CinematicSystem_C_StartPostCinematicTransition");
static_assert(sizeof(BP_CinematicSystem_C_StartPostCinematicTransition) == 0x0000F0, "Wrong size on BP_CinematicSystem_C_StartPostCinematicTransition");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_GetInputLockSystem_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_GetInputLockSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, K2Node_MakeStruct_S_InputLockParameters) == 0x000008, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::K2Node_MakeStruct_S_InputLockParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World) == 0x000010, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_PlayAnimMontage_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_GetPlayerController_ReturnValue_1) == 0x000028, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1) == 0x000030, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_GetPostCinematicTransitionTransform_Transform) == 0x000040, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_GetPostCinematicTransitionTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_BreakTransform_Rotation) == 0x0000B8, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPostCinematicTransition, CallFunc_BreakTransform_Scale) == 0x0000D0, "Member 'BP_CinematicSystem_C_StartPostCinematicTransition::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.StartPreCinematicTransitionWithCameraBlend
// 0x00B0 (0x00B0 - 0x0000)
struct BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend final
{
public:
	EALSOverlayState                              CallFunc_GetOverlayForPreCinematicTransition_Overlay; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Character_World_Movement_Data  K2Node_MakeStruct_S_jRPG_Character_World_Movement_Data; // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<E_jRPG_CharacterWorldCapability, bool>   K2Node_MakeMap_Map;                                // 0x0040(0x0050)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PreCinematicCamera_C*               K2Node_DynamicCast_AsBP_Pre_Cinematic_Camera;      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend");
static_assert(sizeof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend) == 0x0000B0, "Wrong size on BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, CallFunc_GetOverlayForPreCinematicTransition_Overlay) == 0x000000, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::CallFunc_GetOverlayForPreCinematicTransition_Overlay' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, K2Node_MakeStruct_S_jRPG_Character_World_Movement_Data) == 0x000008, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::K2Node_MakeStruct_S_jRPG_Character_World_Movement_Data' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World) == 0x000028, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1) == 0x000038, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, K2Node_MakeMap_Map) == 0x000040, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, K2Node_DynamicCast_AsBP_Pre_Cinematic_Camera) == 0x0000A0, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::K2Node_DynamicCast_AsBP_Pre_Cinematic_Camera' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithCameraBlend::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.StartPreCinematicTransitionWithoutCameraBlend
// 0x0070 (0x0070 - 0x0000)
struct BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend final
{
public:
	struct FS_GameFlowTransitionRequest           K2Node_MakeStruct_S_GameFlowTransitionRequest;     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_jRPG_CharacterWorldCapability, bool>   K2Node_MakeMap_Map;                                // 0x0020(0x0050)()
};
static_assert(alignof(BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend");
static_assert(sizeof(BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend) == 0x000070, "Wrong size on BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend, K2Node_MakeStruct_S_GameFlowTransitionRequest) == 0x000000, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend::K2Node_MakeStruct_S_GameFlowTransitionRequest' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World) == 0x000010, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend, K2Node_MakeMap_Map) == 0x000020, "Member 'BP_CinematicSystem_C_StartPreCinematicTransitionWithoutCameraBlend::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.TriggerCinematic
// 0x0158 (0x0158 - 0x0000)
struct BP_CinematicSystem_C_TriggerCinematic final
{
public:
	struct FS_TriggerCinematicVariables           TriggerCinematicVariableStruct;                    // 0x0000(0x0150)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0150(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_TriggerCinematic) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_TriggerCinematic");
static_assert(sizeof(BP_CinematicSystem_C_TriggerCinematic) == 0x000158, "Wrong size on BP_CinematicSystem_C_TriggerCinematic");
static_assert(offsetof(BP_CinematicSystem_C_TriggerCinematic, TriggerCinematicVariableStruct) == 0x000000, "Member 'BP_CinematicSystem_C_TriggerCinematic::TriggerCinematicVariableStruct' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_TriggerCinematic, LatentAction) == 0x000150, "Member 'BP_CinematicSystem_C_TriggerCinematic::LatentAction' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.UnpauseSound
// 0x0030 (0x0030 - 0x0000)
struct BP_CinematicSystem_C_UnpauseSound final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_UnpauseSound) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_UnpauseSound");
static_assert(sizeof(BP_CinematicSystem_C_UnpauseSound) == 0x000030, "Wrong size on BP_CinematicSystem_C_UnpauseSound");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSound, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CinematicSystem_C_UnpauseSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSound, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CinematicSystem_C_UnpauseSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSound, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_UnpauseSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSound, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CinematicSystem_C_UnpauseSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSound, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_UnpauseSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSound, CallFunc_GetCustomGI_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_UnpauseSound::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSound, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_CinematicSystem_C_UnpauseSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.UnpauseSoundAfterSkip
// 0x0008 (0x0008 - 0x0000)
struct BP_CinematicSystem_C_UnpauseSoundAfterSkip final
{
public:
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_UnpauseSoundAfterSkip) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_UnpauseSoundAfterSkip");
static_assert(sizeof(BP_CinematicSystem_C_UnpauseSoundAfterSkip) == 0x000008, "Wrong size on BP_CinematicSystem_C_UnpauseSoundAfterSkip");
static_assert(offsetof(BP_CinematicSystem_C_UnpauseSoundAfterSkip, CallFunc_GetCustomGI_ReturnValue) == 0x000000, "Member 'BP_CinematicSystem_C_UnpauseSoundAfterSkip::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.UnregisterExternalAudioComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_UnregisterExternalAudioComponent final
{
public:
	const class UAudioComponent*                  AudioComponent;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_UnregisterExternalAudioComponent) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_UnregisterExternalAudioComponent");
static_assert(sizeof(BP_CinematicSystem_C_UnregisterExternalAudioComponent) == 0x000010, "Wrong size on BP_CinematicSystem_C_UnregisterExternalAudioComponent");
static_assert(offsetof(BP_CinematicSystem_C_UnregisterExternalAudioComponent, AudioComponent) == 0x000000, "Member 'BP_CinematicSystem_C_UnregisterExternalAudioComponent::AudioComponent' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnregisterExternalAudioComponent, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_UnregisterExternalAudioComponent::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.UnregisterSpawnedWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_CinematicSystem_C_UnregisterSpawnedWidget final
{
public:
	const class UUserWidget*                      Widget;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_UnregisterSpawnedWidget) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_UnregisterSpawnedWidget");
static_assert(sizeof(BP_CinematicSystem_C_UnregisterSpawnedWidget) == 0x000010, "Wrong size on BP_CinematicSystem_C_UnregisterSpawnedWidget");
static_assert(offsetof(BP_CinematicSystem_C_UnregisterSpawnedWidget, Widget) == 0x000000, "Member 'BP_CinematicSystem_C_UnregisterSpawnedWidget::Widget' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UnregisterSpawnedWidget, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_UnregisterSpawnedWidget::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.UpdateDynamicResolutionFrameBudget
// 0x0050 (0x0050 - 0x0000)
struct BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget final
{
public:
	bool                                          FrameRateLimitApplied;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetPlatformNameAsTag_ReturnValue;         // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	class UConfigurableGameUserSettings*          CallFunc_GetConfigurableGameUserSettings_GameUserSettings; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleGraphicPreset_ReturnValue;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatConsoleVariable_Value_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget");
static_assert(sizeof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget) == 0x000050, "Wrong size on BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, FrameRateLimitApplied) == 0x000000, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::FrameRateLimitApplied' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_GetPlatformNameAsTag_ReturnValue) == 0x000004, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_GetPlatformNameAsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_GetConfigurableGameUserSettings_GameUserSettings) == 0x000038, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_GetConfigurableGameUserSettings_GameUserSettings' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_HasTag_ReturnValue) == 0x000040, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_GetConsoleGraphicPreset_ReturnValue) == 0x000044, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_GetConsoleGraphicPreset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget, CallFunc_SetFloatConsoleVariable_Value_ImplicitCast) == 0x00004C, "Member 'BP_CinematicSystem_C_UpdateDynamicResolutionFrameBudget::CallFunc_SetFloatConsoleVariable_Value_ImplicitCast' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.UpdateWorldCharacterIfNeeded
// 0x0040 (0x0040 - 0x0000)
struct BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded final
{
public:
	class FName                                   local_character;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CallFunc_GetCharacterByID_CharacterData;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid__CharacterCustomizationItemData__Valid; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded");
static_assert(sizeof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded) == 0x000040, "Wrong size on BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, local_character) == 0x000000, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::local_character' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_GetCustomGI_ReturnValue_1) == 0x000010, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_GetCustomGI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_GetCharacterByID_CharacterData) == 0x000018, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_GetCharacterByID_CharacterData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_NotEqual_NameName_ReturnValue) == 0x000020, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_GetCustomGI_ReturnValue_2) == 0x000028, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_GetCustomGI_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World) == 0x000030, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_GetCharacterWorld_AsBP_J_RPG_Character_World' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_IsNameValid_ReturnValue) == 0x000038, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_IsValid__CharacterCustomizationItemData__Valid) == 0x000039, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_IsValid__CharacterCustomizationItemData__Valid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'BP_CinematicSystem_C_UpdateWorldCharacterIfNeeded::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ValidateCinematicContext
// 0x0228 (0x0228 - 0x0000)
struct BP_CinematicSystem_C_ValidateCinematicContext final
{
public:
	struct FS_TriggerCinematicVariables           TriggerCinematicParameters;                        // 0x0000(0x0150)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0150(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_IsValid;                                     // 0x0151(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0158(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0168(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0178(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CinematicSystem_C_ValidateCinematicContext) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_ValidateCinematicContext");
static_assert(sizeof(BP_CinematicSystem_C_ValidateCinematicContext) == 0x000228, "Wrong size on BP_CinematicSystem_C_ValidateCinematicContext");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, TriggerCinematicParameters) == 0x000000, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::TriggerCinematicParameters' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, IsValid) == 0x000150, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, local_IsValid) == 0x000151, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::local_IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, CallFunc_Conv_NameToText_ReturnValue) == 0x000158, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000168, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, K2Node_MakeStruct_FormatArgumentData) == 0x000178, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001C0, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, K2Node_MakeArray_Array) == 0x000208, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicContext, CallFunc_Format_ReturnValue) == 0x000218, "Member 'BP_CinematicSystem_C_ValidateCinematicContext::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_CinematicSystem.BP_CinematicSystem_C.ValidateCinematicParameters
// 0x01F8 (0x01F8 - 0x0000)
struct BP_CinematicSystem_C_ValidateCinematicParameters final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_IsValid;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0080(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0090(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayedCinematic_Result;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetBaseFilename_ReturnValue;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0180(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0190(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01E8(0x0010)()
};
static_assert(alignof(BP_CinematicSystem_C_ValidateCinematicParameters) == 0x000008, "Wrong alignment on BP_CinematicSystem_C_ValidateCinematicParameters");
static_assert(sizeof(BP_CinematicSystem_C_ValidateCinematicParameters) == 0x0001F8, "Wrong size on BP_CinematicSystem_C_ValidateCinematicParameters");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, IsValid) == 0x000000, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, local_IsValid) == 0x000001, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::local_IsValid' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, K2Node_MakeArray_Array) == 0x000060, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Format_ReturnValue) == 0x000070, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000080, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, K2Node_MakeStruct_FormatArgumentData_1) == 0x000090, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, K2Node_MakeArray_Array_1) == 0x0000D8, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Format_ReturnValue_1) == 0x0000F0, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_NotEqual_NameName_ReturnValue) == 0x000100, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_HasPlayedCinematic_Result) == 0x000101, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_HasPlayedCinematic_Result' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_BooleanAND_ReturnValue) == 0x000102, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_BooleanAND_ReturnValue_1) == 0x000103, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000108, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000160, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_GetBaseFilename_ReturnValue) == 0x000170, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_GetBaseFilename_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Conv_StringToText_ReturnValue) == 0x000180, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, K2Node_MakeStruct_FormatArgumentData_3) == 0x000190, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, K2Node_MakeArray_Array_2) == 0x0001D8, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_CinematicSystem_C_ValidateCinematicParameters, CallFunc_Format_ReturnValue_2) == 0x0001E8, "Member 'BP_CinematicSystem_C_ValidateCinematicParameters::CallFunc_Format_ReturnValue_2' has a wrong offset!");

}

