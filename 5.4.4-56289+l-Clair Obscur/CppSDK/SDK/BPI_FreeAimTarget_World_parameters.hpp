#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_FreeAimTarget_World

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_FreeAimTarget_World.BPI_FreeAimTarget_World_C.FreeAimHit
// 0x0028 (0x0028 - 0x0000)
struct BPI_FreeAimTarget_World_C_FreeAimHit final
{
public:
	class ABP_jRPG_Character_World_C*             PlayerCharacterWorld;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisabled;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_FreeAimTarget_World_C_FreeAimHit) == 0x000008, "Wrong alignment on BPI_FreeAimTarget_World_C_FreeAimHit");
static_assert(sizeof(BPI_FreeAimTarget_World_C_FreeAimHit) == 0x000028, "Wrong size on BPI_FreeAimTarget_World_C_FreeAimHit");
static_assert(offsetof(BPI_FreeAimTarget_World_C_FreeAimHit, PlayerCharacterWorld) == 0x000000, "Member 'BPI_FreeAimTarget_World_C_FreeAimHit::PlayerCharacterWorld' has a wrong offset!");
static_assert(offsetof(BPI_FreeAimTarget_World_C_FreeAimHit, HitLocation) == 0x000008, "Member 'BPI_FreeAimTarget_World_C_FreeAimHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BPI_FreeAimTarget_World_C_FreeAimHit, IsDisabled) == 0x000020, "Member 'BPI_FreeAimTarget_World_C_FreeAimHit::IsDisabled' has a wrong offset!");

// Function BPI_FreeAimTarget_World.BPI_FreeAimTarget_World_C.IsFreeAimTargetDisabled
// 0x0001 (0x0001 - 0x0000)
struct BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled final
{
public:
	bool                                          IsDisabled;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled) == 0x000001, "Wrong alignment on BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled");
static_assert(sizeof(BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled) == 0x000001, "Wrong size on BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled");
static_assert(offsetof(BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled, IsDisabled) == 0x000000, "Member 'BPI_FreeAimTarget_World_C_IsFreeAimTargetDisabled::IsDisabled' has a wrong offset!");

}

