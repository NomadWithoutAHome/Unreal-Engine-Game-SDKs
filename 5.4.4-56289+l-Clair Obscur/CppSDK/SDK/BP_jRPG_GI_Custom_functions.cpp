#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_GI_Custom

#include "Basic.hpp"

#include "BP_jRPG_GI_Custom_classes.hpp"
#include "BP_jRPG_GI_Custom_parameters.hpp"


namespace SDK
{

// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.AddInteractedDialogues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGuid&                     DialogueGUID                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32&                            DialogueStage                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::AddInteractedDialogues(const struct FGuid& DialogueGUID, const int32& DialogueStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "AddInteractedDialogues");

	Params::BP_jRPG_GI_Custom_C_AddInteractedDialogues Parms{};

	Parms.DialogueGUID = std::move(DialogueGUID);
	Parms.DialogueStage = DialogueStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.AddSkinToCollection
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SkinToAdd                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::AddSkinToCollection(class FName Character, class FName SkinToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "AddSkinToCollection");

	Params::BP_jRPG_GI_Custom_C_AddSkinToCollection Parms{};

	Parms.Character = Character;
	Parms.SkinToAdd = SkinToAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.AddToUnlockedMapSections
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   SectionGrayscale                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  AddedIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::AddToUnlockedMapSections(uint8 SectionGrayscale, int32* AddedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "AddToUnlockedMapSections");

	Params::BP_jRPG_GI_Custom_C_AddToUnlockedMapSections Parms{};

	Parms.SectionGrayscale = SectionGrayscale;

	UObject::ProcessEvent(Func, &Parms);

	if (AddedIndex != nullptr)
		*AddedIndex = Parms.AddedIndex;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.AddVisitedLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             VisitedLevel                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::AddVisitedLevel(class FName VisitedLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "AddVisitedLevel");

	Params::BP_jRPG_GI_Custom_C_AddVisitedLevel Parms{};

	Parms.VisitedLevel = VisitedLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.AdjustAmbienceColume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AdjustVolumeDuration                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AdjustVolumeLevel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const EAudioFaderCurve                  FadeCurve                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::AdjustAmbienceColume(float AdjustVolumeDuration, float AdjustVolumeLevel, const EAudioFaderCurve FadeCurve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "AdjustAmbienceColume");

	Params::BP_jRPG_GI_Custom_C_AdjustAmbienceColume Parms{};

	Parms.AdjustVolumeDuration = AdjustVolumeDuration;
	Parms.AdjustVolumeLevel = AdjustVolumeLevel;
	Parms.FadeCurve = FadeCurve;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ApplyAccessibilitySettings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ApplyAccessibilitySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ApplyAccessibilitySettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ApplyAllUserSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ApplyAllUserSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ApplyAllUserSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ApplyPostProcessSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ApplyPostProcessSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ApplyPostProcessSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.AreAllCharactersDead
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   AllDead                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::AreAllCharactersDead(bool* AllDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "AreAllCharactersDead");

	Params::BP_jRPG_GI_Custom_C_AreAllCharactersDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllDead != nullptr)
		*AllDead = Parms.AllDead;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.BindOnSaveLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TDelegate<void()>&                Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool*                                   AlreadyLoaded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::BindOnSaveLoaded(const TDelegate<void()>& Event, bool* AlreadyLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "BindOnSaveLoaded");

	Params::BP_jRPG_GI_Custom_C_BindOnSaveLoaded Parms{};

	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);

	if (AlreadyLoaded != nullptr)
		*AlreadyLoaded = Parms.AlreadyLoaded;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.CanUseStats
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_jRPG_GI_Custom_C::CanUseStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "CanUseStats");

	Params::BP_jRPG_GI_Custom_C_CanUseStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ChangeMap
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ChangeMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ChangeMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.CheckDestroyable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      ItemToFind                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   CanDestroy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::CheckDestroyable(const class FName& ItemToFind, bool* CanDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "CheckDestroyable");

	Params::BP_jRPG_GI_Custom_C_CheckDestroyable Parms{};

	Parms.ItemToFind = ItemToFind;

	UObject::ProcessEvent(Func, &Parms);

	if (CanDestroy != nullptr)
		*CanDestroy = Parms.CanDestroy;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.CheckDialogueIsAtLeastAtStage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGuid&                     DialogueGUID                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Stage                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAtLeastAtStage                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::CheckDialogueIsAtLeastAtStage(const struct FGuid& DialogueGUID, int32 Stage, bool* IsAtLeastAtStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "CheckDialogueIsAtLeastAtStage");

	Params::BP_jRPG_GI_Custom_C_CheckDialogueIsAtLeastAtStage Parms{};

	Parms.DialogueGUID = std::move(DialogueGUID);
	Parms.Stage = Stage;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAtLeastAtStage != nullptr)
		*IsAtLeastAtStage = Parms.IsAtLeastAtStage;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.CheckHasPlayedTutorial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FName&                      TutorialRowName                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasPlayed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::CheckHasPlayedTutorial(const class FName& TutorialRowName, bool* HasPlayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "CheckHasPlayedTutorial");

	Params::BP_jRPG_GI_Custom_C_CheckHasPlayedTutorial Parms{};

	Parms.TutorialRowName = TutorialRowName;

	UObject::ProcessEvent(Func, &Parms);

	if (HasPlayed != nullptr)
		*HasPlayed = Parms.HasPlayed;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.CheckInteractionDone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool*                                   AllCheckTrue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::CheckInteractionDone(TArray<class FName>& Interaction, bool* AllCheckTrue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "CheckInteractionDone");

	Params::BP_jRPG_GI_Custom_C_CheckInteractionDone Parms{};

	Parms.Interaction = std::move(Interaction);

	UObject::ProcessEvent(Func, &Parms);

	Interaction = std::move(Parms.Interaction);

	if (AllCheckTrue != nullptr)
		*AllCheckTrue = Parms.AllCheckTrue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.CheckInteractiveObjectUnicity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             InteractiveObjectGlobalID                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class AActor*&                    Actor                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::CheckInteractiveObjectUnicity(class FName InteractiveObjectGlobalID, const class AActor*& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "CheckInteractiveObjectUnicity");

	Params::BP_jRPG_GI_Custom_C_CheckInteractiveObjectUnicity Parms{};

	Parms.InteractiveObjectGlobalID = InteractiveObjectGlobalID;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ComputeAudioParametersForSave
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_AreaAudioParameters*          AudioParameters                                        (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ComputeAudioParametersForSave(struct FS_AreaAudioParameters* AudioParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ComputeAudioParametersForSave");

	Params::BP_jRPG_GI_Custom_C_ComputeAudioParametersForSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioParameters != nullptr)
		*AudioParameters = std::move(Parms.AudioParameters);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.CreateNotificationWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::CreateNotificationWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "CreateNotificationWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_CVarChanged_MuteAMB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::DEBUG_CVarChanged_MuteAMB(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_CVarChanged_MuteAMB");

	Params::BP_jRPG_GI_Custom_C_DEBUG_CVarChanged_MuteAMB Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_CVarChanged_MuteMusic
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::DEBUG_CVarChanged_MuteMusic(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_CVarChanged_MuteMusic");

	Params::BP_jRPG_GI_Custom_C_DEBUG_CVarChanged_MuteMusic Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_CVarChanged_MuteSFX
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::DEBUG_CVarChanged_MuteSFX(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_CVarChanged_MuteSFX");

	Params::BP_jRPG_GI_Custom_C_DEBUG_CVarChanged_MuteSFX Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_CVarChanged_MuteVO
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::DEBUG_CVarChanged_MuteVO(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_CVarChanged_MuteVO");

	Params::BP_jRPG_GI_Custom_C_DEBUG_CVarChanged_MuteVO Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_CVarChanged_OnShowColorVisionDeficiencyChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::DEBUG_CVarChanged_OnShowColorVisionDeficiencyChanged(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_CVarChanged_OnShowColorVisionDeficiencyChanged");

	Params::BP_jRPG_GI_Custom_C_DEBUG_CVarChanged_OnShowColorVisionDeficiencyChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_CVarChanged_OnUnlockAllCleasTowerBattles
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::DEBUG_CVarChanged_OnUnlockAllCleasTowerBattles(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_CVarChanged_OnUnlockAllCleasTowerBattles");

	Params::BP_jRPG_GI_Custom_C_DEBUG_CVarChanged_OnUnlockAllCleasTowerBattles Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_RegisterCvarCallbacks
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::DEBUG_RegisterCvarCallbacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_RegisterCvarCallbacks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_RegisterCVars
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::DEBUG_RegisterCVars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_RegisterCVars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DEBUG_ResetCinematics
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::DEBUG_ResetCinematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DEBUG_ResetCinematics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DestroyAllSounds
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::DestroyAllSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DestroyAllSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.DoesUnlockedMapSectionsContains
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// uint8                                   SectionGrayscale                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsContained                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::DoesUnlockedMapSectionsContains(uint8 SectionGrayscale, bool* IsContained)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "DoesUnlockedMapSectionsContains");

	Params::BP_jRPG_GI_Custom_C_DoesUnlockedMapSectionsContains Parms{};

	Parms.SectionGrayscale = SectionGrayscale;

	UObject::ProcessEvent(Func, &Parms);

	if (IsContained != nullptr)
		*IsContained = Parms.IsContained;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ExecuteUbergraph_BP_jRPG_GI_Custom
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ExecuteUbergraph_BP_jRPG_GI_Custom(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ExecuteUbergraph_BP_jRPG_GI_Custom");

	Params::BP_jRPG_GI_Custom_C_ExecuteUbergraph_BP_jRPG_GI_Custom Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.FindNamedIDByGuid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGuid&                     Guid                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNamedID*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UNamedID* UBP_jRPG_GI_Custom_C::FindNamedIDByGuid(const struct FGuid& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "FindNamedIDByGuid");

	Params::BP_jRPG_GI_Custom_C_FindNamedIDByGuid Parms{};

	Parms.Guid = std::move(Guid);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GameInstance_StartPerformanceMeasures
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GameInstance_StartPerformanceMeasures(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GameInstance_StartPerformanceMeasures");

	Params::BP_jRPG_GI_Custom_C_GameInstance_StartPerformanceMeasures Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetAllNamedIDs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UNamedID*>*                AllNamedIDs_0                                          (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetAllNamedIDs(TArray<class UNamedID*>* AllNamedIDs_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetAllNamedIDs");

	Params::BP_jRPG_GI_Custom_C_GetAllNamedIDs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllNamedIDs_0 != nullptr)
		*AllNamedIDs_0 = std::move(Parms.AllNamedIDs_0);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetAllSharedPassiveEffectProgressions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFPassiveEffectProgression>*PassiveEffectProgressions                              (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetAllSharedPassiveEffectProgressions(TArray<struct FFPassiveEffectProgression>* PassiveEffectProgressions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetAllSharedPassiveEffectProgressions");

	Params::BP_jRPG_GI_Custom_C_GetAllSharedPassiveEffectProgressions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PassiveEffectProgressions != nullptr)
		*PassiveEffectProgressions = std::move(Parms.PassiveEffectProgressions);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetAudioControlSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_AudioControlSystem_C**        AudioControlSystem_0                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetAudioControlSystem(class UBP_AudioControlSystem_C** AudioControlSystem_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetAudioControlSystem");

	Params::BP_jRPG_GI_Custom_C_GetAudioControlSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioControlSystem_0 != nullptr)
		*AudioControlSystem_0 = Parms.AudioControlSystem_0;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetCharacterByID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_CharacterData_C**             CharacterData                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetCharacterByID(class FName CharacterId, class UBP_CharacterData_C** CharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetCharacterByID");

	Params::BP_jRPG_GI_Custom_C_GetCharacterByID Parms{};

	Parms.CharacterId = CharacterId;

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterData != nullptr)
		*CharacterData = Parms.CharacterData;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetCharacterCollection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    With_Excluded_Characters                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UBP_CharacterData_C*>*     Characters                                             (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetCharacterCollection(bool With_Excluded_Characters, TArray<class UBP_CharacterData_C*>* Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetCharacterCollection");

	Params::BP_jRPG_GI_Custom_C_GetCharacterCollection Parms{};

	Parms.With_Excluded_Characters = With_Excluded_Characters;

	UObject::ProcessEvent(Func, &Parms);

	if (Characters != nullptr)
		*Characters = std::move(Parms.Characters);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetCharacterCollectionLeftToRight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    With_Excluded_Characters                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UBP_CharacterData_C*>*     Characters                                             (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetCharacterCollectionLeftToRight(bool With_Excluded_Characters, TArray<class UBP_CharacterData_C*>* Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetCharacterCollectionLeftToRight");

	Params::BP_jRPG_GI_Custom_C_GetCharacterCollectionLeftToRight Parms{};

	Parms.With_Excluded_Characters = With_Excluded_Characters;

	UObject::ProcessEvent(Func, &Parms);

	if (Characters != nullptr)
		*Characters = std::move(Parms.Characters);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetCharacterNameCollection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    With_Excluded_Characters                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>*                    Characters                                             (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetCharacterNameCollection(bool With_Excluded_Characters, TArray<class FName>* Characters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetCharacterNameCollection");

	Params::BP_jRPG_GI_Custom_C_GetCharacterNameCollection Parms{};

	Parms.With_Excluded_Characters = With_Excluded_Characters;

	UObject::ProcessEvent(Func, &Parms);

	if (Characters != nullptr)
		*Characters = std::move(Parms.Characters);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetCurrentCharacterWorld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CharacterList*                        CurrentCharacterWorldEnum_0                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetCurrentCharacterWorld(E_CharacterList* CurrentCharacterWorldEnum_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetCurrentCharacterWorld");

	Params::BP_jRPG_GI_Custom_C_GetCurrentCharacterWorld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentCharacterWorldEnum_0 != nullptr)
		*CurrentCharacterWorldEnum_0 = Parms.CurrentCharacterWorldEnum_0;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetFadeOutDurationFromAmbience
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_DataAsset_Ambience_C*         Ambience                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBP_jRPG_GI_Custom_C::GetFadeOutDurationFromAmbience(class UBP_DataAsset_Ambience_C* Ambience)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetFadeOutDurationFromAmbience");

	Params::BP_jRPG_GI_Custom_C_GetFadeOutDurationFromAmbience Parms{};

	Parms.Ambience = Ambience;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetFavoritePools
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<struct FGameplayTag, struct FS_UIFavoritePool>*FavoritePools_0                                        (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetFavoritePools(TMap<struct FGameplayTag, struct FS_UIFavoritePool>* FavoritePools_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetFavoritePools");

	Params::BP_jRPG_GI_Custom_C_GetFavoritePools Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FavoritePools_0 != nullptr)
		*FavoritePools_0 = std::move(Parms.FavoritePools_0);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetInteractedDialogues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<struct FGuid, int32>*              InteractedDialogues_0                                  (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetInteractedDialogues(TMap<struct FGuid, int32>* InteractedDialogues_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetInteractedDialogues");

	Params::BP_jRPG_GI_Custom_C_GetInteractedDialogues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteractedDialogues_0 != nullptr)
		*InteractedDialogues_0 = std::move(Parms.InteractedDialogues_0);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetIsSaveLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   ReturnNode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetIsSaveLoaded(bool* ReturnNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetIsSaveLoaded");

	Params::BP_jRPG_GI_Custom_C_GetIsSaveLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnNode != nullptr)
		*ReturnNode = Parms.ReturnNode;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetItemQuantityInInventory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_jRPG_GI_Custom_C::GetItemQuantityInInventory(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetItemQuantityInInventory");

	Params::BP_jRPG_GI_Custom_C_GetItemQuantityInInventory Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetNotificationPools
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<struct FGameplayTag, struct FS_UINotificationPool>*NotificationPools_0                                    (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetNotificationPools(TMap<struct FGameplayTag, struct FS_UINotificationPool>* NotificationPools_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetNotificationPools");

	Params::BP_jRPG_GI_Custom_C_GetNotificationPools Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NotificationPools_0 != nullptr)
		*NotificationPools_0 = std::move(Parms.NotificationPools_0);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetOrCreateSharedPassiveEffectProgression
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      PassiveEffectID                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFPassiveEffectProgression*      Progression                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetOrCreateSharedPassiveEffectProgression(const class FName& PassiveEffectID, struct FFPassiveEffectProgression* Progression)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetOrCreateSharedPassiveEffectProgression");

	Params::BP_jRPG_GI_Custom_C_GetOrCreateSharedPassiveEffectProgression Parms{};

	Parms.PassiveEffectID = PassiveEffectID;

	UObject::ProcessEvent(Func, &Parms);

	if (Progression != nullptr)
		*Progression = std::move(Parms.Progression);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetOrCreateVendorState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             VendorID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFVendorState*                   Value                                                  (Parm, OutParm, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetOrCreateVendorState(class FName VendorID, struct FFVendorState* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetOrCreateVendorState");

	Params::BP_jRPG_GI_Custom_C_GetOrCreateVendorState Parms{};

	Parms.VendorID = VendorID;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetPersistentFlags
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UNamedID*>*                Keys                                                   (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetPersistentFlags(TArray<class UNamedID*>* Keys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetPersistentFlags");

	Params::BP_jRPG_GI_Custom_C_GetPersistentFlags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Keys != nullptr)
		*Keys = std::move(Parms.Keys);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetPersistentFlagValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UNamedID*                         NamedID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetPersistentFlagValue(class UNamedID* NamedID, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetPersistentFlagValue");

	Params::BP_jRPG_GI_Custom_C_GetPersistentFlagValue Parms{};

	Parms.NamedID = NamedID;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetSettingsPageContext
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag*                    CurrentContext                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::GetSettingsPageContext(struct FGameplayTag* CurrentContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetSettingsPageContext");

	Params::BP_jRPG_GI_Custom_C_GetSettingsPageContext Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentContext != nullptr)
		*CurrentContext = std::move(Parms.CurrentContext);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetSpawnPointAsName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName UBP_jRPG_GI_Custom_C::GetSpawnPointAsName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetSpawnPointAsName");

	Params::BP_jRPG_GI_Custom_C_GetSpawnPointAsName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetUnlockedMapSections
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<uint8>*                          UnlockedMapSections_0                                  (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetUnlockedMapSections(TArray<uint8>* UnlockedMapSections_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetUnlockedMapSections");

	Params::BP_jRPG_GI_Custom_C_GetUnlockedMapSections Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UnlockedMapSections_0 != nullptr)
		*UnlockedMapSections_0 = std::move(Parms.UnlockedMapSections_0);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GetUnlockedMapSectionsNormalized
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<double>*                         NormalizedUnlockedMapSections                          (Parm, OutParm)

void UBP_jRPG_GI_Custom_C::GetUnlockedMapSectionsNormalized(TArray<double>* NormalizedUnlockedMapSections)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GetUnlockedMapSectionsNormalized");

	Params::BP_jRPG_GI_Custom_C_GetUnlockedMapSectionsNormalized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NormalizedUnlockedMapSections != nullptr)
		*NormalizedUnlockedMapSections = std::move(Parms.NormalizedUnlockedMapSections);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.GoBackToMainMenu
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::GoBackToMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "GoBackToMainMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.HandleNextAmbience
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_Ambience_C*         NextAmb                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::HandleNextAmbience(class UBP_DataAsset_Ambience_C* NextAmb, float StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "HandleNextAmbience");

	Params::BP_jRPG_GI_Custom_C_HandleNextAmbience Parms{};

	Parms.NextAmb = NextAmb;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.HasCharacterInCollectionByID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_jRPG_GI_Custom_C::HasCharacterInCollectionByID(class FName CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "HasCharacterInCollectionByID");

	Params::BP_jRPG_GI_Custom_C_HasCharacterInCollectionByID Parms{};

	Parms.CharacterId = CharacterId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.HasUnlockedAnySpawnPointInLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FName&                      LevelName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_jRPG_GI_Custom_C::HasUnlockedAnySpawnPointInLevel(const class FName& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "HasUnlockedAnySpawnPointInLevel");

	Params::BP_jRPG_GI_Custom_C_HasUnlockedAnySpawnPointInLevel Parms{};

	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.HasUnlockedSpawnPointInCurrentLevel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FGameplayTag&              SpawnPointTag_0                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_jRPG_GI_Custom_C::HasUnlockedSpawnPointInCurrentLevel(const struct FGameplayTag& SpawnPointTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "HasUnlockedSpawnPointInCurrentLevel");

	Params::BP_jRPG_GI_Custom_C_HasUnlockedSpawnPointInCurrentLevel Parms{};

	Parms.SpawnPointTag_0 = std::move(SpawnPointTag_0);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.HasVisitedLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FName&                      LevelName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_jRPG_GI_Custom_C::HasVisitedLevel(const class FName& LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "HasVisitedLevel");

	Params::BP_jRPG_GI_Custom_C_HasVisitedLevel Parms{};

	Parms.LevelName = LevelName;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.IncreaseFinishedGameCount
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::IncreaseFinishedGameCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "IncreaseFinishedGameCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.InitCharStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::InitCharStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "InitCharStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.InitializeSystemsAndManagers
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::InitializeSystemsAndManagers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "InitializeSystemsAndManagers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.IsCharacterInParty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_jRPG_GI_Custom_C::IsCharacterInParty(class FName CharacterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "IsCharacterInParty");

	Params::BP_jRPG_GI_Custom_C_IsCharacterInParty Parms{};

	Parms.CharacterId = CharacterId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.IsMapChangeInProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   InProgress                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::IsMapChangeInProgress(bool* InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "IsMapChangeInProgress");

	Params::BP_jRPG_GI_Custom_C_IsMapChangeInProgress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InProgress != nullptr)
		*InProgress = Parms.InProgress;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.IsObjectFavorite
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PoolTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             FavoriteObjectName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsFavorite                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::IsObjectFavorite(const struct FGameplayTag& PoolTag, class FName FavoriteObjectName, bool* IsFavorite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "IsObjectFavorite");

	Params::BP_jRPG_GI_Custom_C_IsObjectFavorite Parms{};

	Parms.PoolTag = std::move(PoolTag);
	Parms.FavoriteObjectName = FavoriteObjectName;

	UObject::ProcessEvent(Func, &Parms);

	if (IsFavorite != nullptr)
		*IsFavorite = Parms.IsFavorite;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.IsSoundPausedForCinematics
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_jRPG_GI_Custom_C::IsSoundPausedForCinematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "IsSoundPausedForCinematics");

	Params::BP_jRPG_GI_Custom_C_IsSoundPausedForCinematics Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.IsThereAnyObjectNotifiedInPool
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PoolTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsFound                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::IsThereAnyObjectNotifiedInPool(const struct FGameplayTag& PoolTag, bool* IsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "IsThereAnyObjectNotifiedInPool");

	Params::BP_jRPG_GI_Custom_C_IsThereAnyObjectNotifiedInPool Parms{};

	Parms.PoolTag = std::move(PoolTag);

	UObject::ProcessEvent(Func, &Parms);

	if (IsFound != nullptr)
		*IsFound = Parms.IsFound;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.LoadFavoritePools
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<struct FGameplayTag, struct FS_UIFavoritePool>&FavoritePools_0                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_jRPG_GI_Custom_C::LoadFavoritePools(const TMap<struct FGameplayTag, struct FS_UIFavoritePool>& FavoritePools_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "LoadFavoritePools");

	Params::BP_jRPG_GI_Custom_C_LoadFavoritePools Parms{};

	Parms.FavoritePools_0 = std::move(FavoritePools_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.LoadNotificationPools
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<struct FGameplayTag, struct FS_UINotificationPool>&NotificationPools_0                                    (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_jRPG_GI_Custom_C::LoadNotificationPools(const TMap<struct FGameplayTag, struct FS_UINotificationPool>& NotificationPools_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "LoadNotificationPools");

	Params::BP_jRPG_GI_Custom_C_LoadNotificationPools Parms{};

	Parms.NotificationPools_0 = std::move(NotificationPools_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.LoadPersistentFlags
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<struct FGuid, bool>&         FlagStates                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_jRPG_GI_Custom_C::LoadPersistentFlags(const TMap<struct FGuid, bool>& FlagStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "LoadPersistentFlags");

	Params::BP_jRPG_GI_Custom_C_LoadPersistentFlags Parms{};

	Parms.FlagStates = std::move(FlagStates);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.LoadSharedPassiveEffectProgression
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFPassiveEffectProgression>&PassiveEffectProgression                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_jRPG_GI_Custom_C::LoadSharedPassiveEffectProgression(TArray<struct FFPassiveEffectProgression>& PassiveEffectProgression)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "LoadSharedPassiveEffectProgression");

	Params::BP_jRPG_GI_Custom_C_LoadSharedPassiveEffectProgression Parms{};

	Parms.PassiveEffectProgression = std::move(PassiveEffectProgression);

	UObject::ProcessEvent(Func, &Parms);

	PassiveEffectProgression = std::move(Parms.PassiveEffectProgression);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.LoadUnlockSpawnPoints
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_LevelSpawnPointsData>& SpawnPointList                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_jRPG_GI_Custom_C::LoadUnlockSpawnPoints(TArray<struct FS_LevelSpawnPointsData>& SpawnPointList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "LoadUnlockSpawnPoints");

	Params::BP_jRPG_GI_Custom_C_LoadUnlockSpawnPoints Parms{};

	Parms.SpawnPointList = std::move(SpawnPointList);

	UObject::ProcessEvent(Func, &Parms);

	SpawnPointList = std::move(Parms.SpawnPointList);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.MarkAudioComponentForUnspawn
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  AudioComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  FadeOutDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::MarkAudioComponentForUnspawn(class UAudioComponent* AudioComponent, double FadeOutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "MarkAudioComponentForUnspawn");

	Params::BP_jRPG_GI_Custom_C_MarkAudioComponentForUnspawn Parms{};

	Parms.AudioComponent = AudioComponent;
	Parms.FadeOutDuration = FadeOutDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.MarkObjectAsRead
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PoolTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             NotifiedObjectName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      MarkCaller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::MarkObjectAsRead(const struct FGameplayTag& PoolTag, class FName NotifiedObjectName, class UUserWidget* MarkCaller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "MarkObjectAsRead");

	Params::BP_jRPG_GI_Custom_C_MarkObjectAsRead Parms{};

	Parms.PoolTag = std::move(PoolTag);
	Parms.NotifiedObjectName = NotifiedObjectName;
	Parms.MarkCaller = MarkCaller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.NotifyObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PoolTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             NotifiedObjectName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::NotifyObject(const struct FGameplayTag& PoolTag, class FName NotifiedObjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "NotifyObject");

	Params::BP_jRPG_GI_Custom_C_NotifyObject Parms{};

	Parms.PoolTag = std::move(PoolTag);
	Parms.NotifiedObjectName = NotifiedObjectName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnAudioPlayStateChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAudioComponentPlayState                PlayState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::OnAudioPlayStateChanged(EAudioComponentPlayState PlayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnAudioPlayStateChanged");

	Params::BP_jRPG_GI_Custom_C_OnAudioPlayStateChanged Parms{};

	Parms.PlayState = PlayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnCharacterExplorationDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterData_C*              CharacterData                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::OnCharacterExplorationDeath(class UBP_CharacterData_C* CharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnCharacterExplorationDeath");

	Params::BP_jRPG_GI_Custom_C_OnCharacterExplorationDeath Parms{};

	Parms.CharacterData = CharacterData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnControllerBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::OnControllerBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnControllerBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnControllerEndPlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::OnControllerEndPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnControllerEndPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnCreditsFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::OnCreditsFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnCreditsFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnCvarChanged_ScreenPercentage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::OnCvarChanged_ScreenPercentage(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnCvarChanged_ScreenPercentage");

	Params::BP_jRPG_GI_Custom_C_OnCvarChanged_ScreenPercentage Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnGameUserSettingsApplied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UConfigurableGameUserSettings*    UserConfig                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::OnGameUserSettingsApplied(class UConfigurableGameUserSettings* UserConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnGameUserSettingsApplied");

	Params::BP_jRPG_GI_Custom_C_OnGameUserSettingsApplied Parms{};

	Parms.UserConfig = UserConfig;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnInitialCinematicCompleted
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::OnInitialCinematicCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnInitialCinematicCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnLoaded_6940291243D1FB3D1A33C5BD82FB6BD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::OnLoaded_6940291243D1FB3D1A33C5BD82FB6BD8(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnLoaded_6940291243D1FB3D1A33C5BD82FB6BD8");

	Params::BP_jRPG_GI_Custom_C_OnLoaded_6940291243D1FB3D1A33C5BD82FB6BD8 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnSaveLoaded
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::OnSaveLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnSaveLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnStatUpdateReady
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::OnStatUpdateReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnStatUpdateReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.OnWeaponChange
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::OnWeaponChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "OnWeaponChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.PersistentGruntSound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       SoundPersistent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::PersistentGruntSound(class USoundBase* SoundPersistent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "PersistentGruntSound");

	Params::BP_jRPG_GI_Custom_C_PersistentGruntSound Parms{};

	Parms.SoundPersistent = SoundPersistent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.PersistentSoundEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       SoundPersistent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Pitch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  tartTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::PersistentSoundEffect(class USoundBase* SoundPersistent, double Volume, double Pitch, double tartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "PersistentSoundEffect");

	Params::BP_jRPG_GI_Custom_C_PersistentSoundEffect Parms{};

	Parms.SoundPersistent = SoundPersistent;
	Parms.Volume = Volume;
	Parms.Pitch = Pitch;
	Parms.tartTime = tartTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.PersistentVoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       VoicePersistent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PitchMultiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeOutTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 CurrentVoiceName_0                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::PersistentVoice(class USoundBase* VoicePersistent, const struct FVector& Location, double PitchMultiplier, double FadeOutTime, class UAudioComponent** CurrentVoiceName_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "PersistentVoice");

	Params::BP_jRPG_GI_Custom_C_PersistentVoice Parms{};

	Parms.VoicePersistent = VoicePersistent;
	Parms.Location = std::move(Location);
	Parms.PitchMultiplier = PitchMultiplier;
	Parms.FadeOutTime = FadeOutTime;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentVoiceName_0 != nullptr)
		*CurrentVoiceName_0 = Parms.CurrentVoiceName_0;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.PlayBattleTransition
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::PlayBattleTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "PlayBattleTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.PlayCredits
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_GameCredits_C*      Credits                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USF_BlueprintLatentAction*        LatentAction                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::PlayCredits(class UBP_DataAsset_GameCredits_C* Credits, class USF_BlueprintLatentAction* LatentAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "PlayCredits");

	Params::BP_jRPG_GI_Custom_C_PlayCredits Parms{};

	Parms.Credits = Credits;
	Parms.LatentAction = LatentAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.PrepareToChangeMap
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::PrepareToChangeMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "PrepareToChangeMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ProcessAudioParameters
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_AudioLevelParameters&   AudioPrameters                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ProcessAudioParameters(const struct FS_AudioLevelParameters& AudioPrameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ProcessAudioParameters");

	Params::BP_jRPG_GI_Custom_C_ProcessAudioParameters Parms{};

	Parms.AudioPrameters = std::move(AudioPrameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ProcessCharacterStat_Final
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ProcessCharacterStat_Final()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ProcessCharacterStat_Final");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ProcessCharacterStat_Step1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StatId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   StatValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ProcessCharacterStat_Step1(int32 StatId, int32 StatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ProcessCharacterStat_Step1");

	Params::BP_jRPG_GI_Custom_C_ProcessCharacterStat_Step1 Parms{};

	Parms.StatId = StatId;
	Parms.StatValue = StatValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ProcessCharacterStat_Step2
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ProcessCharacterStat_Step2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ProcessCharacterStat_Step2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ProcessLevelParameters
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFLevelDataEntry&          LevelData                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ProcessLevelParameters(const struct FFLevelDataEntry& LevelData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ProcessLevelParameters");

	Params::BP_jRPG_GI_Custom_C_ProcessLevelParameters Parms{};

	Parms.LevelData = std::move(LevelData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.QueueStatUpdate
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::QueueStatUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "QueueStatUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ReceivePostInitSubsystemCollection
// (Event, Public, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ReceivePostInitSubsystemCollection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ReceivePostInitSubsystemCollection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ResetDataOnChangeMapIfNeeded
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFLevelDataEntry&          DestinationLevelData                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ResetDataOnChangeMapIfNeeded(const struct FFLevelDataEntry& DestinationLevelData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ResetDataOnChangeMapIfNeeded");

	Params::BP_jRPG_GI_Custom_C_ResetDataOnChangeMapIfNeeded Parms{};

	Parms.DestinationLevelData = std::move(DestinationLevelData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ResetNamedIDsStatesForNewGamePlus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ResetNamedIDsStatesForNewGamePlus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ResetNamedIDsStatesForNewGamePlus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ResetState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ResetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ResetStateByRestPointUsed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ResetStateByRestPointUsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ResetStateByRestPointUsed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ResetStateForNewGamePlus
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ResetStateForNewGamePlus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ResetStateForNewGamePlus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ResumeAmbience
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FadeInDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ResumeAmbience(float FadeInDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ResumeAmbience");

	Params::BP_jRPG_GI_Custom_C_ResumeAmbience Parms{};

	Parms.FadeInDuration = FadeInDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetBattledEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      EnemyID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetBattledEnemy(const class FName& EnemyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetBattledEnemy");

	Params::BP_jRPG_GI_Custom_C_SetBattledEnemy Parms{};

	Parms.EnemyID = EnemyID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetBattleParty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_jRPG_GI_Custom_C::SetBattleParty(TArray<class FName>& CharacterHardcodedName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetBattleParty");

	Params::BP_jRPG_GI_Custom_C_SetBattleParty Parms{};

	Parms.CharacterHardcodedName = std::move(CharacterHardcodedName);

	UObject::ProcessEvent(Func, &Parms);

	CharacterHardcodedName = std::move(Parms.CharacterHardcodedName);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetEncounteredEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      EnemyID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetEncounteredEnemy(const class FName& EnemyID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetEncounteredEnemy");

	Params::BP_jRPG_GI_Custom_C_SetEncounteredEnemy Parms{};

	Parms.EnemyID = EnemyID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetEnemyLastFleePoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      EnemyID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class ABP_FleePoint_C>   RoamingPointIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetEnemyLastFleePoint(const class FName& EnemyID, TSoftObjectPtr<class ABP_FleePoint_C> RoamingPointIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetEnemyLastFleePoint");

	Params::BP_jRPG_GI_Custom_C_SetEnemyLastFleePoint Parms{};

	Parms.EnemyID = EnemyID;
	Parms.RoamingPointIndex = RoamingPointIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetEnemyRoamingPointIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      EnemyID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RoamingPointIndex                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetEnemyRoamingPointIndex(const class FName& EnemyID, int32 RoamingPointIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetEnemyRoamingPointIndex");

	Params::BP_jRPG_GI_Custom_C_SetEnemyRoamingPointIndex Parms{};

	Parms.EnemyID = EnemyID;
	Parms.RoamingPointIndex = RoamingPointIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetEnemyTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      EnemyID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetEnemyTransform(const class FName& EnemyID, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetEnemyTransform");

	Params::BP_jRPG_GI_Custom_C_SetEnemyTransform Parms{};

	Parms.EnemyID = EnemyID;
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetGameplayPaused
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Paused                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetGameplayPaused(bool Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetGameplayPaused");

	Params::BP_jRPG_GI_Custom_C_SetGameplayPaused Parms{};

	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetNewActiveSkin
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>             NewActiveSkin                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TSoftClassPtr<class UClass>*            ActiveSkin                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetNewActiveSkin(class FName CharacterName, TSoftClassPtr<class UClass> NewActiveSkin, TSoftClassPtr<class UClass>* ActiveSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetNewActiveSkin");

	Params::BP_jRPG_GI_Custom_C_SetNewActiveSkin Parms{};

	Parms.CharacterName = CharacterName;
	Parms.NewActiveSkin = NewActiveSkin;

	UObject::ProcessEvent(Func, &Parms);

	if (ActiveSkin != nullptr)
		*ActiveSkin = Parms.ActiveSkin;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetPlayedCinematic
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      Cinematic                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetPlayedCinematic(const class FName& Cinematic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetPlayedCinematic");

	Params::BP_jRPG_GI_Custom_C_SetPlayedCinematic Parms{};

	Parms.Cinematic = Cinematic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetSettingsPageContext
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              NewContext                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetSettingsPageContext(const struct FGameplayTag& NewContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetSettingsPageContext");

	Params::BP_jRPG_GI_Custom_C_SetSettingsPageContext Parms{};

	Parms.NewContext = std::move(NewContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SetTutorialCompleted
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName&                      TutorialRowName                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Completed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SetTutorialCompleted(const class FName& TutorialRowName, bool Completed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SetTutorialCompleted");

	Params::BP_jRPG_GI_Custom_C_SetTutorialCompleted Parms{};

	Parms.TutorialRowName = TutorialRowName;
	Parms.Completed = Completed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ShouldObjectBeNotified
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PoolTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             NotifiedObjectName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsNotified                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ShouldObjectBeNotified(const struct FGameplayTag& PoolTag, class FName NotifiedObjectName, bool* IsNotified)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ShouldObjectBeNotified");

	Params::BP_jRPG_GI_Custom_C_ShouldObjectBeNotified Parms{};

	Parms.PoolTag = std::move(PoolTag);
	Parms.NotifiedObjectName = NotifiedObjectName;

	UObject::ProcessEvent(Func, &Parms);

	if (IsNotified != nullptr)
		*IsNotified = Parms.IsNotified;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ShowCreditsIfNeeded
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ShowCreditsIfNeeded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ShowCreditsIfNeeded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.SpawnNewSound
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       SoundToPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 SpawnedComponent                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::SpawnNewSound(class USoundBase* SoundToPlay, float StartTime, class UAudioComponent** SpawnedComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "SpawnNewSound");

	Params::BP_jRPG_GI_Custom_C_SpawnNewSound Parms{};

	Parms.SoundToPlay = SoundToPlay;
	Parms.StartTime = StartTime;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedComponent != nullptr)
		*SpawnedComponent = Parms.SpawnedComponent;
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.StopAmbience
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FadeOutDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::StopAmbience(float FadeOutDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "StopAmbience");

	Params::BP_jRPG_GI_Custom_C_StopAmbience Parms{};

	Parms.FadeOutDuration = FadeOutDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.Test_Event1
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::Test_Event1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "Test_Event1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.TickStats
// (BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::TickStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "TickStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.todelete
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USoundWave*                 PlayingSoundWave                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const float                             PlaybackPercent                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::todelete(const class USoundWave* PlayingSoundWave, const float PlaybackPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "todelete");

	Params::BP_jRPG_GI_Custom_C_todelete Parms{};

	Parms.PlayingSoundWave = PlayingSoundWave;
	Parms.PlaybackPercent = PlaybackPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ToggleObjectAsFavorite
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              PoolTag                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FName                             FavoriteObjectName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::ToggleObjectAsFavorite(const struct FGameplayTag& PoolTag, class FName FavoriteObjectName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ToggleObjectAsFavorite");

	Params::BP_jRPG_GI_Custom_C_ToggleObjectAsFavorite Parms{};

	Parms.PoolTag = std::move(PoolTag);
	Parms.FavoriteObjectName = FavoriteObjectName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.UnlockSpawnPointForCurrentLevel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayTag&              SpawnPointTag_0                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::UnlockSpawnPointForCurrentLevel(const struct FGameplayTag& SpawnPointTag_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "UnlockSpawnPointForCurrentLevel");

	Params::BP_jRPG_GI_Custom_C_UnlockSpawnPointForCurrentLevel Parms{};

	Parms.SpawnPointTag_0 = std::move(SpawnPointTag_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.UpdateCurrentCharacterWorld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::UpdateCurrentCharacterWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "UpdateCurrentCharacterWorld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.UpdateSharedPassiveEffectProgression
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFPassiveEffectProgression&DirtyProgression                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFPassiveEffectProgression*      UpdatedProgression                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::UpdateSharedPassiveEffectProgression(const struct FFPassiveEffectProgression& DirtyProgression, struct FFPassiveEffectProgression* UpdatedProgression)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "UpdateSharedPassiveEffectProgression");

	Params::BP_jRPG_GI_Custom_C_UpdateSharedPassiveEffectProgression Parms{};

	Parms.DirtyProgression = std::move(DirtyProgression);

	UObject::ProcessEvent(Func, &Parms);

	if (UpdatedProgression != nullptr)
		*UpdatedProgression = std::move(Parms.UpdatedProgression);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.UpdateVendorState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             VendorID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FFVendorState&             VendorState                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::UpdateVendorState(class FName VendorID, const struct FFVendorState& VendorState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "UpdateVendorState");

	Params::BP_jRPG_GI_Custom_C_UpdateVendorState Parms{};

	Parms.VendorID = VendorID;
	Parms.VendorState = std::move(VendorState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.ValidateGameData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_jRPG_GI_Custom_C::ValidateGameData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "ValidateGameData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_GI_Custom.BP_jRPG_GI_Custom_C.WritePersistentFlag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNamedID*                         NamedID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_jRPG_GI_Custom_C::WritePersistentFlag(class UNamedID* NamedID, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_GI_Custom_C", "WritePersistentFlag");

	Params::BP_jRPG_GI_Custom_C_WritePersistentFlag Parms{};

	Parms.NamedID = NamedID;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

