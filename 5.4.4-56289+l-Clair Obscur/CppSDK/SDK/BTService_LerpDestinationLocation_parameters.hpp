#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_LerpDestinationLocation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTService_LerpDestinationLocation.BTService_LerpDestinationLocation_C.ExecuteUbergraph_BTService_LerpDestinationLocation
// 0x00C8 (0x00C8 - 0x0000)
struct BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxSpeedFromPawn_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateLerpParameters_ShouldLerp;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue_1; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceBetweenCurrentAndNextTargetLocation_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation) == 0x000008, "Wrong alignment on BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation");
static_assert(sizeof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation) == 0x0000C8, "Wrong size on BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, EntryPoint) == 0x000000, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_GetMaxSpeedFromPawn_ReturnValue) == 0x000020, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_GetMaxSpeedFromPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_UpdateLerpParameters_ShouldLerp) == 0x000028, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_UpdateLerpParameters_ShouldLerp' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, K2Node_Event_OwnerController) == 0x000038, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, K2Node_Event_ControlledPawn) == 0x000040, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000048, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_GetBlackboardValueAsVector_ReturnValue_1) == 0x000060, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_GetBlackboardValueAsVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_GetDistanceBetweenCurrentAndNextTargetLocation_ReturnValue) == 0x000078, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_GetDistanceBetweenCurrentAndNextTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_SafeDivide_ReturnValue) == 0x000090, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_VLerp_ReturnValue) == 0x0000A0, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation, CallFunc_VLerp_Alpha_ImplicitCast) == 0x0000C0, "Member 'BTService_LerpDestinationLocation_C_ExecuteUbergraph_BTService_LerpDestinationLocation::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BTService_LerpDestinationLocation.BTService_LerpDestinationLocation_C.GetDistanceBetweenCurrentAndNextTargetLocation
// 0x0048 (0x0048 - 0x0000)
struct BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue_1; // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation) == 0x000008, "Wrong alignment on BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation");
static_assert(sizeof(BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation) == 0x000048, "Wrong size on BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation, ReturnValue) == 0x000000, "Member 'BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000008, "Member 'BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation, CallFunc_GetBlackboardValueAsVector_ReturnValue_1) == 0x000020, "Member 'BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation::CallFunc_GetBlackboardValueAsVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation, CallFunc_Vector_Distance_ReturnValue) == 0x000038, "Member 'BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BTService_LerpDestinationLocation_C_GetDistanceBetweenCurrentAndNextTargetLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BTService_LerpDestinationLocation.BTService_LerpDestinationLocation_C.GetMaxSpeedFromPawn
// 0x0038 (0x0038 - 0x0000)
struct BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn) == 0x000008, "Wrong alignment on BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn");
static_assert(sizeof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn) == 0x000038, "Wrong size on BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn, ControlledPawn) == 0x000000, "Member 'BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn, ReturnValue) == 0x000008, "Member 'BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn, CallFunc_GetMovementComponent_ReturnValue) == 0x000010, "Member 'BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn, CallFunc_GetMaxSpeed_ReturnValue) == 0x000018, "Member 'BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn, CallFunc_VSize_ReturnValue) == 0x000020, "Member 'BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn, CallFunc_FMax_A_ImplicitCast) == 0x000030, "Member 'BTService_LerpDestinationLocation_C_GetMaxSpeedFromPawn::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");

// Function BTService_LerpDestinationLocation.BTService_LerpDestinationLocation_C.ReceiveDeactivationAI
// 0x0010 (0x0010 - 0x0000)
struct BTService_LerpDestinationLocation_C_ReceiveDeactivationAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_LerpDestinationLocation_C_ReceiveDeactivationAI) == 0x000008, "Wrong alignment on BTService_LerpDestinationLocation_C_ReceiveDeactivationAI");
static_assert(sizeof(BTService_LerpDestinationLocation_C_ReceiveDeactivationAI) == 0x000010, "Wrong size on BTService_LerpDestinationLocation_C_ReceiveDeactivationAI");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ReceiveDeactivationAI, OwnerController) == 0x000000, "Member 'BTService_LerpDestinationLocation_C_ReceiveDeactivationAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ReceiveDeactivationAI, ControlledPawn) == 0x000008, "Member 'BTService_LerpDestinationLocation_C_ReceiveDeactivationAI::ControlledPawn' has a wrong offset!");

// Function BTService_LerpDestinationLocation.BTService_LerpDestinationLocation_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTService_LerpDestinationLocation_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_LerpDestinationLocation_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTService_LerpDestinationLocation_C_ReceiveTickAI");
static_assert(sizeof(BTService_LerpDestinationLocation_C_ReceiveTickAI) == 0x000018, "Wrong size on BTService_LerpDestinationLocation_C_ReceiveTickAI");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTService_LerpDestinationLocation_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTService_LerpDestinationLocation_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTService_LerpDestinationLocation_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTService_LerpDestinationLocation.BTService_LerpDestinationLocation_C.UpdateLerpParameters
// 0x0050 (0x0050 - 0x0000)
struct BTService_LerpDestinationLocation_C_UpdateLerpParameters final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldLerp;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTService_LerpDestinationLocation_C_UpdateLerpParameters) == 0x000008, "Wrong alignment on BTService_LerpDestinationLocation_C_UpdateLerpParameters");
static_assert(sizeof(BTService_LerpDestinationLocation_C_UpdateLerpParameters) == 0x000050, "Wrong size on BTService_LerpDestinationLocation_C_UpdateLerpParameters");
static_assert(offsetof(BTService_LerpDestinationLocation_C_UpdateLerpParameters, ControlledPawn) == 0x000000, "Member 'BTService_LerpDestinationLocation_C_UpdateLerpParameters::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_UpdateLerpParameters, ShouldLerp) == 0x000008, "Member 'BTService_LerpDestinationLocation_C_UpdateLerpParameters::ShouldLerp' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_UpdateLerpParameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BTService_LerpDestinationLocation_C_UpdateLerpParameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_UpdateLerpParameters, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000028, "Member 'BTService_LerpDestinationLocation_C_UpdateLerpParameters::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_UpdateLerpParameters, CallFunc_Vector_Distance_ReturnValue) == 0x000040, "Member 'BTService_LerpDestinationLocation_C_UpdateLerpParameters::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTService_LerpDestinationLocation_C_UpdateLerpParameters, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000048, "Member 'BTService_LerpDestinationLocation_C_UpdateLerpParameters::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

}

