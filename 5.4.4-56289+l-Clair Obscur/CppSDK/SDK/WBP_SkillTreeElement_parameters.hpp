#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillTreeElement

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "S_SkillIconsDataRow_structs.hpp"
#include "ESkillNodeState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_SkillTreeElement.WBP_SkillTreeElement_C.BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(sizeof(WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature");
static_assert(offsetof(WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseFocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_SkillTreeElement.WBP_SkillTreeElement_C.BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_SkillTreeElement_C_BndEvt__WBP_SkillTreeElement_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_SkillTreeElement.WBP_SkillTreeElement_C.ExecuteUbergraph_WBP_SkillTreeElement
// 0x0068 (0x0068 - 0x0000)
struct WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_SkillIconsDataRow                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement) == 0x000008, "Wrong alignment on WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement");
static_assert(sizeof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement) == 0x000068, "Wrong size on WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, EntryPoint) == 0x000000, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, CallFunc_GetNiagaraComponent_ReturnValue) == 0x000020, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, K2Node_ComponentBoundEvent_Button_1) == 0x000028, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, K2Node_ComponentBoundEvent_Button) == 0x000030, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'WBP_SkillTreeElement_C_ExecuteUbergraph_WBP_SkillTreeElement::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WBP_SkillTreeElement.WBP_SkillTreeElement_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SkillTreeElement_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeElement_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SkillTreeElement_C_PreConstruct");
static_assert(sizeof(WBP_SkillTreeElement_C_PreConstruct) == 0x000001, "Wrong size on WBP_SkillTreeElement_C_PreConstruct");
static_assert(offsetof(WBP_SkillTreeElement_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SkillTreeElement_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SkillTreeElement.WBP_SkillTreeElement_C.SetSkillNodeState
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_SkillTreeElement_C_SetSkillNodeState final
{
public:
	ESkillNodeState                               SkillNodeState_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               Temp_byte_Variable;                                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               Temp_byte_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               Temp_byte_Variable_7;                              // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00B8(0x0014)()
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillNodeState                               Temp_byte_Variable_13;                             // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeElement_C_SetSkillNodeState) == 0x000004, "Wrong alignment on WBP_SkillTreeElement_C_SetSkillNodeState");
static_assert(sizeof(WBP_SkillTreeElement_C_SetSkillNodeState) == 0x0000F0, "Wrong size on WBP_SkillTreeElement_C_SetSkillNodeState");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, SkillNodeState_0) == 0x000000, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::SkillNodeState_0' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable) == 0x000004, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_1) == 0x000014, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_2) == 0x000024, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_3) == 0x000034, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable) == 0x000044, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_4) == 0x000048, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_5) == 0x000058, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_6) == 0x000068, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_7) == 0x000078, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_8) == 0x000088, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_1) == 0x000098, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_2) == 0x000099, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_3) == 0x00009A, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_4) == 0x00009B, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_5) == 0x00009C, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_6) == 0x00009D, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_7) == 0x00009E, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_8) == 0x00009F, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_9) == 0x0000A0, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_10) == 0x0000A1, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_11) == 0x0000A2, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_12) == 0x0000A3, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, K2Node_Select_Default) == 0x0000A4, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, K2Node_Select_Default_1) == 0x0000B4, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, K2Node_MakeStruct_SlateColor) == 0x0000B8, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_struct_Variable_9) == 0x0000CC, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, K2Node_Select_Default_2) == 0x0000DC, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, Temp_byte_Variable_13) == 0x0000DD, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillNodeState, K2Node_Select_Default_3) == 0x0000E0, "Member 'WBP_SkillTreeElement_C_SetSkillNodeState::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_SkillTreeElement.WBP_SkillTreeElement_C.SetSkillSecretLocked
// 0x0009 (0x0009 - 0x0000)
struct WBP_SkillTreeElement_C_SetSkillSecretLocked final
{
public:
	bool                                          IsSecretLocked;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeElement_C_SetSkillSecretLocked) == 0x000001, "Wrong alignment on WBP_SkillTreeElement_C_SetSkillSecretLocked");
static_assert(sizeof(WBP_SkillTreeElement_C_SetSkillSecretLocked) == 0x000009, "Wrong size on WBP_SkillTreeElement_C_SetSkillSecretLocked");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, IsSecretLocked) == 0x000000, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::IsSecretLocked' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, Temp_byte_Variable) == 0x000001, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, Temp_bool_Variable) == 0x000003, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, Temp_bool_Variable_1) == 0x000006, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, K2Node_Select_Default) == 0x000007, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeElement_C_SetSkillSecretLocked, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_SkillTreeElement_C_SetSkillSecretLocked::K2Node_Select_Default_1' has a wrong offset!");

}

