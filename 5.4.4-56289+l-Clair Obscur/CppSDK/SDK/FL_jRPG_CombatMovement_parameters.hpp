#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FL_jRPG_CombatMovement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FL_jRPG_CombatMovement.FL_jRPG_CombatMovement_C.Compute Move to Character Transform
// 0x02A0 (0x02A0 - 0x0000)
struct FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       SelfCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       OtherCharacter;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Index_0;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewParam;                                          // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                local_attackedLocation;                            // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformForBattleSequenceSnapping_ReturnValue; // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetAttackedLocation_ReturnValue;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue_1;     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform) == 0x000010, "Wrong alignment on FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform");
static_assert(sizeof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform) == 0x0002A0, "Wrong size on FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, SelfCharacter) == 0x000000, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::SelfCharacter' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, OtherCharacter) == 0x000008, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::OtherCharacter' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, Angle) == 0x000010, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::Angle' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, Distance) == 0x000018, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::Distance' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, Index_0) == 0x000020, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::Index_0' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, __WorldContext) == 0x000028, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::__WorldContext' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, NewParam) == 0x000030, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::NewParam' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, local_attackedLocation) == 0x000048, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::local_attackedLocation' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_GetTransformForBattleSequenceSnapping_ReturnValue) == 0x000070, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_GetTransformForBattleSequenceSnapping_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_GetAttackedLocation_ReturnValue) == 0x0000D0, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_GetAttackedLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakTransform_Location) == 0x0000E8, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakTransform_Rotation) == 0x000100, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakTransform_Scale) == 0x000118, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_GetForwardVector_ReturnValue) == 0x000130, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_RotateAngleAxis_ReturnValue) == 0x000148, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000160, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000168, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_GetScaledCapsuleRadius_ReturnValue_1) == 0x000170, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_GetScaledCapsuleRadius_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000178, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_FindLookAtRotation_ReturnValue) == 0x000198, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakRotator_Roll) == 0x0001B0, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakRotator_Pitch) == 0x0001B4, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakRotator_Yaw) == 0x0001B8, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, Temp_bool_Variable) == 0x0001BC, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_MakeRotator_ReturnValue) == 0x0001C0, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_GetForwardVector_ReturnValue_1) == 0x0001D8, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, K2Node_Select_Default) == 0x0001F0, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000208, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_Add_VectorVector_ReturnValue) == 0x000220, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakVector_X) == 0x000238, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakVector_Y) == 0x000240, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakVector_Z) == 0x000248, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakVector_X_1) == 0x000250, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakVector_Y_1) == 0x000258, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_BreakVector_Z_1) == 0x000260, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_MakeVector_ReturnValue) == 0x000268, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000280, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000288, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000290, "Member 'FL_jRPG_CombatMovement_C_Compute_Move_to_Character_Transform::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

}

