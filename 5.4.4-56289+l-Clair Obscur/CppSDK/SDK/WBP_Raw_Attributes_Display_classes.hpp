#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Raw_Attributes_Display

#include "Basic.hpp"

#include "EAttributeScalingGrade_structs.hpp"
#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Raw_Attributes_Display.WBP_Raw_Attributes_Display_C
// 0x00C0 (0x03C8 - 0x0308)
class UWBP_Raw_Attributes_Display_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       AttributeScaling;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ValueModificationContainer;          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ModificationArrow;                           // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              IndicatorScale;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextBlock_Name;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextBlock_Number_Stat;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TextBlock_Number_Stat_UpgradeResult;               // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArrowButton_C*                     WBP_ArrowButton_Downgrade;                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ArrowButton_C*                     WBP_ArrowButton_Upgrade;                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BaseButton_C*                      WBP_BaseButton;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonVirtualButton_C*             WBP_CommonVirtualButton_Left;                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonVirtualButton_C*             WBP_CommonVirtualButton_Right;                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ECharacterAttribute                           AttributeType;                                     // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UWBP_Raw_Attributes_Display_C* AttributeWidget, bool IsUpgrade)> OnAttributeChanged; // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         CurrentValue;                                      // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         AllowedMinValue;                                   // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AllowedMaxValue;                                   // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPreviewValue;                               // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AllowUpgrade;                                      // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UWBP_Raw_Attributes_Display_C* AttributeWidget)> OnAttributeFocused; // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AllowDowngrade;                                    // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReadyOnly;                                       // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SD_OnNavigated;                                    // 0x03B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void BndEvt__WBP_Raw_Attributes_Display_WBP_ArrowButton_Downgrade_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Raw_Attributes_Display_WBP_ArrowButton_Upgrade_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Raw_Attributes_Display_WBP_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Raw_Attributes_Display_WBP_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Raw_Attributes_Display_WBP_CommonVirtualButton_Left_K2Node_ComponentBoundEvent_5_OnFocused__DelegateSignature();
	void BndEvt__WBP_Raw_Attributes_Display_WBP_CommonVirtualButton_Right_K2Node_ComponentBoundEvent_6_OnFocused__DelegateSignature();
	void ExecuteUbergraph_WBP_Raw_Attributes_Display(int32 EntryPoint);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	bool OnNavigation(EUINavigation NavigationType);
	void PreConstruct(bool IsDesignTime);
	void SetAllowedMaxValue(int32 AllowedMaxValue_0);
	void SetAllowedMinValue(int32 AllowedMinValue_0);
	void SetAttributeScaling(EAttributeScalingGrade InAttributeScaling);
	void SetAttributeValue(int32 Value);
	void SetColorPreviewAttributeValue(bool SetActive);
	void SetDowngradeAllowed(bool DowngradeAllowed);
	void SetModificationEnabled(bool Enabled);
	void SetPreviewAttributeValue(int32 Value);
	void SetUpgradeAllowed(bool UpgradeAllowed);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Raw_Attributes_Display_C">();
	}
	static class UWBP_Raw_Attributes_Display_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Raw_Attributes_Display_C>();
	}
};
static_assert(alignof(UWBP_Raw_Attributes_Display_C) == 0x000008, "Wrong alignment on UWBP_Raw_Attributes_Display_C");
static_assert(sizeof(UWBP_Raw_Attributes_Display_C) == 0x0003C8, "Wrong size on UWBP_Raw_Attributes_Display_C");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, UberGraphFrame) == 0x000308, "Member 'UWBP_Raw_Attributes_Display_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, AttributeScaling) == 0x000310, "Member 'UWBP_Raw_Attributes_Display_C::AttributeScaling' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, HorizontalBox_ValueModificationContainer) == 0x000318, "Member 'UWBP_Raw_Attributes_Display_C::HorizontalBox_ValueModificationContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, Image_ModificationArrow) == 0x000320, "Member 'UWBP_Raw_Attributes_Display_C::Image_ModificationArrow' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, IndicatorScale) == 0x000328, "Member 'UWBP_Raw_Attributes_Display_C::IndicatorScale' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, TextBlock_Name) == 0x000330, "Member 'UWBP_Raw_Attributes_Display_C::TextBlock_Name' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, TextBlock_Number_Stat) == 0x000338, "Member 'UWBP_Raw_Attributes_Display_C::TextBlock_Number_Stat' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, TextBlock_Number_Stat_UpgradeResult) == 0x000340, "Member 'UWBP_Raw_Attributes_Display_C::TextBlock_Number_Stat_UpgradeResult' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, WBP_ArrowButton_Downgrade) == 0x000348, "Member 'UWBP_Raw_Attributes_Display_C::WBP_ArrowButton_Downgrade' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, WBP_ArrowButton_Upgrade) == 0x000350, "Member 'UWBP_Raw_Attributes_Display_C::WBP_ArrowButton_Upgrade' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, WBP_BaseButton) == 0x000358, "Member 'UWBP_Raw_Attributes_Display_C::WBP_BaseButton' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, WBP_CommonVirtualButton_Left) == 0x000360, "Member 'UWBP_Raw_Attributes_Display_C::WBP_CommonVirtualButton_Left' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, WBP_CommonVirtualButton_Right) == 0x000368, "Member 'UWBP_Raw_Attributes_Display_C::WBP_CommonVirtualButton_Right' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, AttributeType) == 0x000370, "Member 'UWBP_Raw_Attributes_Display_C::AttributeType' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, OnAttributeChanged) == 0x000378, "Member 'UWBP_Raw_Attributes_Display_C::OnAttributeChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, CurrentValue) == 0x000388, "Member 'UWBP_Raw_Attributes_Display_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, AllowedMinValue) == 0x00038C, "Member 'UWBP_Raw_Attributes_Display_C::AllowedMinValue' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, AllowedMaxValue) == 0x000390, "Member 'UWBP_Raw_Attributes_Display_C::AllowedMaxValue' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, CurrentPreviewValue) == 0x000394, "Member 'UWBP_Raw_Attributes_Display_C::CurrentPreviewValue' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, AllowUpgrade) == 0x000398, "Member 'UWBP_Raw_Attributes_Display_C::AllowUpgrade' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, OnAttributeFocused) == 0x0003A0, "Member 'UWBP_Raw_Attributes_Display_C::OnAttributeFocused' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, AllowDowngrade) == 0x0003B0, "Member 'UWBP_Raw_Attributes_Display_C::AllowDowngrade' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, IsReadyOnly) == 0x0003B1, "Member 'UWBP_Raw_Attributes_Display_C::IsReadyOnly' has a wrong offset!");
static_assert(offsetof(UWBP_Raw_Attributes_Display_C, SD_OnNavigated) == 0x0003B8, "Member 'UWBP_Raw_Attributes_Display_C::SD_OnNavigated' has a wrong offset!");

}

