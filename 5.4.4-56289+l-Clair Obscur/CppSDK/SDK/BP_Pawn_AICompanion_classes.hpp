#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Pawn_AICompanion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ALS_CharacterBP_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_CharacterList_structs.hpp"
#include "ALSV4_CPP_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Pawn_AICompanion.BP_Pawn_AICompanion_C
// 0x00D0 (0x0B10 - 0x0A40)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_Pawn_AICompanion_C : public AALS_CharacterBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Pawn_AICompanion_C;              // 0x0A38(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_CharacterVisualAlterationsComponent_C* BP_CharacterVisualAlterationsComponent;         // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_EyeEffectsControllerComponent_C*    BP_EyeEffectsControllerComponent;                  // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CinematicCharacterSkinComponent_C*  BP_CinematicCharacterSkinComponent;                // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_Component_WorldAnimationProfile_C*  BP_Component_WorldAnimationProfile;                // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Face;                                              // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CompanionAppear_0to1_E2F72F6F47AD12FA46FAB0AA7C08371A; // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CompanionAppear__Direction_E2F72F6F47AD12FA46FAB0AA7C08371A; // 0x0A6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6D[0x3];                                      // 0x0A6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CompanionAppear;                                   // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A78[0x8];                                      // 0x0A78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LookAtTransform;                                   // 0x0A80(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinimumDistanceToPlayer;                           // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaximumDistanceToPlayer;                           // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                Components;                                        // 0x0AF0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          ActorIsUnspawning;                                 // 0x0B00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cinematic_Mode;                                    // 0x0B01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StatusRecentlyRendered;                            // 0x0B02(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CompanionAppear__FinishedFunc();
	void CompanionAppear__UpdateFunc();
	void ExecuteUbergraph_BP_Pawn_AICompanion(int32 EntryPoint);
	E_CharacterList GetCharacterEnum();
	bool IsUnspawning();
	void LODcompanions(class UConfigurableGameUserSettings* Settings);
	void MakeCompanionAppear();
	void MakeCompanionDisappear(bool Instant);
	void OnCustomizationChanged(class UBP_CharacterSkinComponent_C* SkinComponent);
	void OptimizeAnimationLODs();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void SetCinematicMode(bool CinematicMode);
	void TeleportToLocation(const struct FVector& Location, const struct FRotator& Rotation, bool SpawnTeleportationFX);
	void TeleportToUnadjustedLocation(const struct FVector& ProjectedLocation, const struct FRotator& Rotation, bool SpawnTeleportationFX);
	void UpdateLookAtTransform();
	void UpdateStance();

	EALSGait GetAllowedGait() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Pawn_AICompanion_C">();
	}
	static class ABP_Pawn_AICompanion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Pawn_AICompanion_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_Pawn_AICompanion_C) == 0x000010, "Wrong alignment on ABP_Pawn_AICompanion_C");
static_assert(sizeof(ABP_Pawn_AICompanion_C) == 0x000B10, "Wrong size on ABP_Pawn_AICompanion_C");
static_assert(offsetof(ABP_Pawn_AICompanion_C, UberGraphFrame_BP_Pawn_AICompanion_C) == 0x000A38, "Member 'ABP_Pawn_AICompanion_C::UberGraphFrame_BP_Pawn_AICompanion_C' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, BP_CharacterVisualAlterationsComponent) == 0x000A40, "Member 'ABP_Pawn_AICompanion_C::BP_CharacterVisualAlterationsComponent' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, BP_EyeEffectsControllerComponent) == 0x000A48, "Member 'ABP_Pawn_AICompanion_C::BP_EyeEffectsControllerComponent' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, BP_CinematicCharacterSkinComponent) == 0x000A50, "Member 'ABP_Pawn_AICompanion_C::BP_CinematicCharacterSkinComponent' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, BP_Component_WorldAnimationProfile) == 0x000A58, "Member 'ABP_Pawn_AICompanion_C::BP_Component_WorldAnimationProfile' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, Face) == 0x000A60, "Member 'ABP_Pawn_AICompanion_C::Face' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, CompanionAppear_0to1_E2F72F6F47AD12FA46FAB0AA7C08371A) == 0x000A68, "Member 'ABP_Pawn_AICompanion_C::CompanionAppear_0to1_E2F72F6F47AD12FA46FAB0AA7C08371A' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, CompanionAppear__Direction_E2F72F6F47AD12FA46FAB0AA7C08371A) == 0x000A6C, "Member 'ABP_Pawn_AICompanion_C::CompanionAppear__Direction_E2F72F6F47AD12FA46FAB0AA7C08371A' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, CompanionAppear) == 0x000A70, "Member 'ABP_Pawn_AICompanion_C::CompanionAppear' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, LookAtTransform) == 0x000A80, "Member 'ABP_Pawn_AICompanion_C::LookAtTransform' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, MinimumDistanceToPlayer) == 0x000AE0, "Member 'ABP_Pawn_AICompanion_C::MinimumDistanceToPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, MaximumDistanceToPlayer) == 0x000AE8, "Member 'ABP_Pawn_AICompanion_C::MaximumDistanceToPlayer' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, Components) == 0x000AF0, "Member 'ABP_Pawn_AICompanion_C::Components' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, ActorIsUnspawning) == 0x000B00, "Member 'ABP_Pawn_AICompanion_C::ActorIsUnspawning' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, Cinematic_Mode) == 0x000B01, "Member 'ABP_Pawn_AICompanion_C::Cinematic_Mode' has a wrong offset!");
static_assert(offsetof(ABP_Pawn_AICompanion_C, StatusRecentlyRendered) == 0x000B02, "Member 'ABP_Pawn_AICompanion_C::StatusRecentlyRendered' has a wrong offset!");

}

