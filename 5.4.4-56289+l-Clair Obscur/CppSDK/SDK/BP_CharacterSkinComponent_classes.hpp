#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterSkinComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_CharacterCustomization_structs.hpp"
#include "S_AnimationProfile_Skins_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharacterSkinComponent.BP_CharacterSkinComponent_C
// 0x0130 (0x01D0 - 0x00A0)
class UBP_CharacterSkinComponent_C : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_CharacterSkinBase_C*                SpawnedCharacterSkin;                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UBP_CharacterSkinComponent_C* SkinComponent)> OnCharacterSkinChanged; // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UClass*                                 AnimInstanceClass;                                 // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FS_AnimationProfile_Skins              AnimationProfile;                                  // 0x00C8(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CurrentCharacterSkinMaterialInstances;             // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UNiagaraComponent*>              ArmRingComponents;                                 // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ArmRingMaterialIndex;                              // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               ArmRingMaterialInstance;                           // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 AttachedFaceOnCharacter;                           // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_CharacterFaceBase_C*                SpawnedCharacterFace;                              // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(class UBP_CharacterSkinComponent_C* SkinComponent)> OnCharacterFaceChanged; // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class UBP_CharacterSkinComponent_C* SkinComponent)> OnCharacterCustomizationChanged; // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USkeletalMeshComponent*                 AttachedBodyOnCharacter;                           // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_CharacterCustomization              CurrentCharacterCustomization;                     // 0x0170(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 SkinAssignPolicyClass;                             // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCharacterSkinAssignPolicy*             SkinAssignPolicy;                                  // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateCharacterFaceMaterialInstances();
	void OnSkinAssignCompleted(class AActor* NewBodySkinObject, class AActor* NewFaceSkinObject);
	void OnFaceSkinAssigned(class AActor* NewFaceSkinObject);
	void OnBodySkinAssigned(class AActor* NewBodySkinObject);
	void GetCurrentAssignPolicy(class UCharacterSkinAssignPolicy** SkinAssignPolicy_0);
	void ConstructSkinAssignPolicy();
	void ApplyFootstepWithSkin();
	void ApplyAnimationProfile();
	void TryCacheCharacterBody();
	void TryCacheCharacterFace();
	void SetupCharacterFace();
	void GetFaceSkeletalMesh(class USkeletalMeshComponent** Face);
	void UpdateArmRing();
	void GetArmRingMaterialInstance(class UMaterialInstanceDynamic** ArmRingMaterialInstance_0);
	void GetArmRingMaterialIndex(int32* ArmRingMaterialIndex_0);
	void GetArmRingComponents(TArray<class UNiagaraComponent*>* ArmRingComponents_0);
	void GetSkinMaterialInstances(TArray<class UMaterialInstanceDynamic*>* SkinMaterialInstances);
	void UpdateCharacterSkinMaterialInstances();
	void ApplyAnimationConfig();
	void CacheAnimationConfig();
	void ShouldApplyCustomization(const struct FS_CharacterCustomization& CharacterCustomization, bool* Result);
	void ApplyCurrentCustomization();
	void OverrideCharacterSkin(class UClass* Character_Skin, class FName Character_Name);
	void OverrideCharacterFace(class UClass* Skin_Face, class FName Character_Name);
	void SetCharacterCustomization(class FName Character_Name, const struct FS_CharacterCustomization& Character_Customization);
	void ReceiveBeginPlay();
	void ApplyCurrentCharacterSkin(class FName Character_Name);
	void ApplyCurrentCharacterFace(class FName Character_Name);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_CharacterSkinComponent(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharacterSkinComponent_C">();
	}
	static class UBP_CharacterSkinComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharacterSkinComponent_C>();
	}
};
static_assert(alignof(UBP_CharacterSkinComponent_C) == 0x000008, "Wrong alignment on UBP_CharacterSkinComponent_C");
static_assert(sizeof(UBP_CharacterSkinComponent_C) == 0x0001D0, "Wrong size on UBP_CharacterSkinComponent_C");
static_assert(offsetof(UBP_CharacterSkinComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_CharacterSkinComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, SpawnedCharacterSkin) == 0x0000A8, "Member 'UBP_CharacterSkinComponent_C::SpawnedCharacterSkin' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, OnCharacterSkinChanged) == 0x0000B0, "Member 'UBP_CharacterSkinComponent_C::OnCharacterSkinChanged' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, AnimInstanceClass) == 0x0000C0, "Member 'UBP_CharacterSkinComponent_C::AnimInstanceClass' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, AnimationProfile) == 0x0000C8, "Member 'UBP_CharacterSkinComponent_C::AnimationProfile' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, CurrentCharacterSkinMaterialInstances) == 0x000108, "Member 'UBP_CharacterSkinComponent_C::CurrentCharacterSkinMaterialInstances' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, ArmRingComponents) == 0x000118, "Member 'UBP_CharacterSkinComponent_C::ArmRingComponents' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, ArmRingMaterialIndex) == 0x000128, "Member 'UBP_CharacterSkinComponent_C::ArmRingMaterialIndex' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, ArmRingMaterialInstance) == 0x000130, "Member 'UBP_CharacterSkinComponent_C::ArmRingMaterialInstance' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, AttachedFaceOnCharacter) == 0x000138, "Member 'UBP_CharacterSkinComponent_C::AttachedFaceOnCharacter' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, SpawnedCharacterFace) == 0x000140, "Member 'UBP_CharacterSkinComponent_C::SpawnedCharacterFace' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, OnCharacterFaceChanged) == 0x000148, "Member 'UBP_CharacterSkinComponent_C::OnCharacterFaceChanged' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, OnCharacterCustomizationChanged) == 0x000158, "Member 'UBP_CharacterSkinComponent_C::OnCharacterCustomizationChanged' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, AttachedBodyOnCharacter) == 0x000168, "Member 'UBP_CharacterSkinComponent_C::AttachedBodyOnCharacter' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, CurrentCharacterCustomization) == 0x000170, "Member 'UBP_CharacterSkinComponent_C::CurrentCharacterCustomization' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, SkinAssignPolicyClass) == 0x0001C0, "Member 'UBP_CharacterSkinComponent_C::SkinAssignPolicyClass' has a wrong offset!");
static_assert(offsetof(UBP_CharacterSkinComponent_C, SkinAssignPolicy) == 0x0001C8, "Member 'UBP_CharacterSkinComponent_C::SkinAssignPolicy' has a wrong offset!");

}

