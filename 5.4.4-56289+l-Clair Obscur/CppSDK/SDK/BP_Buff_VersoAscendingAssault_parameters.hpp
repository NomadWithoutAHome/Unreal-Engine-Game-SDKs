#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Buff_VersoAscendingAssault

#include "Basic.hpp"

#include "S_BalancingTableFloatEntry_structs.hpp"


namespace SDK::Params
{

// Function BP_Buff_VersoAscendingAssault.BP_Buff_VersoAscendingAssault_C.ExecuteUbergraph_BP_Buff_VersoAscendingAssault
// 0x0020 (0x0020 - 0x0000)
struct BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BalancingTableFloatEntry            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault) == 0x000008, "Wrong alignment on BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault");
static_assert(sizeof(BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault) == 0x000020, "Wrong size on BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault");
static_assert(offsetof(BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault, EntryPoint) == 0x000000, "Member 'BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault, CallFunc_FTrunc_ReturnValue) == 0x000010, "Member 'BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault, CallFunc_Clamp_ReturnValue) == 0x000018, "Member 'BP_Buff_VersoAscendingAssault_C_ExecuteUbergraph_BP_Buff_VersoAscendingAssault::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function BP_Buff_VersoAscendingAssault.BP_Buff_VersoAscendingAssault_C.GetCastCount
// 0x0004 (0x0004 - 0x0000)
struct BP_Buff_VersoAscendingAssault_C_GetCastCount final
{
public:
	int32                                         AscendingAssaultCastCount_0;                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Buff_VersoAscendingAssault_C_GetCastCount) == 0x000004, "Wrong alignment on BP_Buff_VersoAscendingAssault_C_GetCastCount");
static_assert(sizeof(BP_Buff_VersoAscendingAssault_C_GetCastCount) == 0x000004, "Wrong size on BP_Buff_VersoAscendingAssault_C_GetCastCount");
static_assert(offsetof(BP_Buff_VersoAscendingAssault_C_GetCastCount, AscendingAssaultCastCount_0) == 0x000000, "Member 'BP_Buff_VersoAscendingAssault_C_GetCastCount::AscendingAssaultCastCount_0' has a wrong offset!");

}

