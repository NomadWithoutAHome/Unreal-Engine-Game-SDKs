#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_MapTeleportPoint

#include "Basic.hpp"

#include "FLevelDataEntry_structs.hpp"
#include "Engine_structs.hpp"
#include "EModalUIResponse_structs.hpp"


namespace SDK::Params
{

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_jRPG_MapTeleportPoint_C_BndEvt__BP_jRPG_MapTeleportPoint_TeleportBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.CheckForErrors
// 0x0230 (0x0230 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFLevelDataEntry                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x01B0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidGameActionWrapper_IsValid;         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0218(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_CheckForErrors");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_CheckForErrors) == 0x000230, "Wrong size on BP_jRPG_MapTeleportPoint_C_CheckForErrors");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_MakeLiteralBool_ReturnValue) == 0x000011, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_MakeLiteralString_ReturnValue) == 0x000018, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001D8, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_MakeLiteralString_ReturnValue_1) == 0x0001E0, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_IsValidGameActionWrapper_IsValid) == 0x0001F0, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_IsValidGameActionWrapper_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, K2Node_MakeArray_Array) == 0x0001F8, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000218, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x000228, "Member 'BP_jRPG_MapTeleportPoint_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.ExecuteUbergraph_BP_jRPG_MapTeleportPoint
// 0x0340 (0x0340 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCurrentLevelData_Found;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_FindCurrentLevelData_LevelData;           // 0x0008(0x01B0)(HasGetValueTypeHash)
	class FName                                   CallFunc_FindCurrentLevelData_RowName;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class ABP_jRPG_MapTeleportPoint_C*      Temp_object_Variable;                              // 0x01C0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class ABP_jRPG_MapTeleportPoint_C*      Temp_object_Variable_1;                            // 0x01C8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0200(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldInfoComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint) == 0x000008, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint) == 0x000340, "Wrong size on BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, EntryPoint) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_FindCurrentLevelData_Found) == 0x000004, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_FindCurrentLevelData_Found' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_FindCurrentLevelData_LevelData) == 0x000008, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_FindCurrentLevelData_LevelData' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_FindCurrentLevelData_RowName) == 0x0001B8, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_FindCurrentLevelData_RowName' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, Temp_object_Variable) == 0x0001C0, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, Temp_object_Variable_1) == 0x0001C8, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001D0, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0001D8, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0001E0, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0001E8, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0001F0, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0001F8, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001FC, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_SweepResult) == 0x000200, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_Event_DeltaSeconds) == 0x0002F8, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002FC, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000300, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OtherActor) == 0x000308, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OtherComp) == 0x000310, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000318, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000320, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000328, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, K2Node_Event_EndPlayReason) == 0x000329, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_GetGameMode_ReturnValue) == 0x000330, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint, CallFunc_GetComponentByClass_ReturnValue) == 0x000338, "Member 'BP_jRPG_MapTeleportPoint_C_ExecuteUbergraph_BP_jRPG_MapTeleportPoint::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.HasDownloadedRequiredContent
// 0x0038 (0x0038 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	class UPlatformsSubsystem*                    CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChunkInstalled_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent) == 0x000008, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent) == 0x000038, "Wrong size on BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, ReturnValue) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, CallFunc_IsChunkInstalled_ReturnValue) == 0x000030, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::CallFunc_IsChunkInstalled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'BP_jRPG_MapTeleportPoint_C_HasDownloadedRequiredContent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.OnModalResponse
// 0x0002 (0x0002 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_OnModalResponse final
{
public:
	EModalUIResponse                              InUserResponse;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_OnModalResponse) == 0x000001, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_OnModalResponse");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_OnModalResponse) == 0x000002, "Wrong size on BP_jRPG_MapTeleportPoint_C_OnModalResponse");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_OnModalResponse, InUserResponse) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_OnModalResponse::InUserResponse' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_OnModalResponse, CallFunc_SetGamePaused_ReturnValue) == 0x000001, "Member 'BP_jRPG_MapTeleportPoint_C_OnModalResponse::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.ProcessChangeMap
// 0x0200 (0x0200 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_ProcessChangeMap final
{
public:
	bool                                          CallFunc_AreBaseGameChunksAvailable_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EModalUIResponse InUserResponse)> K2Node_CreateDelegate_OutputDelegate;           // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_ModalPopup_C*                      CallFunc_CreateModalWindow_OutputPin;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_SaveManager_C*                      CallFunc_GetSaveManager_SaveManager;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidGameActionWrapper_IsValid;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOptionalCondition_Result;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   K2Node_DynamicCast_AsBP_J_RPG_GI_Custom;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFLevelDataEntry                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x01B0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap) == 0x000008, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_ProcessChangeMap");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap) == 0x000200, "Wrong size on BP_jRPG_MapTeleportPoint_C_ProcessChangeMap");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_AreBaseGameChunksAvailable_ReturnValue) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_AreBaseGameChunksAvailable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_SetGamePaused_ReturnValue) == 0x000015, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_CreateModalWindow_OutputPin) == 0x000018, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_CreateModalWindow_OutputPin' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_GetSaveManager_SaveManager) == 0x000020, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_GetSaveManager_SaveManager' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_IsValidGameActionWrapper_IsValid) == 0x000028, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_IsValidGameActionWrapper_IsValid' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_CheckOptionalCondition_Result) == 0x000029, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_CheckOptionalCondition_Result' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, K2Node_DynamicCast_AsBP_J_RPG_GI_Custom) == 0x000038, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::K2Node_DynamicCast_AsBP_J_RPG_GI_Custom' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ProcessChangeMap, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001F8, "Member 'BP_jRPG_MapTeleportPoint_C_ProcessChangeMap::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_ReceiveEndPlay");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_jRPG_MapTeleportPoint_C_ReceiveEndPlay");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_ReceiveTick");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_ReceiveTick) == 0x000004, "Wrong size on BP_jRPG_MapTeleportPoint_C_ReceiveTick");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_jRPG_MapTeleportPoint.BP_jRPG_MapTeleportPoint_C.UpdateReturnSpawnPointTag
// 0x0018 (0x0018 - 0x0000)
struct BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag final
{
public:
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag) == 0x000008, "Wrong alignment on BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag");
static_assert(sizeof(BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag) == 0x000018, "Wrong size on BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag, CallFunc_MatchesTag_ReturnValue) == 0x000000, "Member 'BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000001, "Member 'BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'BP_jRPG_MapTeleportPoint_C_UpdateReturnSpawnPointTag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

