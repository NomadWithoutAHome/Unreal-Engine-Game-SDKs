#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleLinesModel_Base

#include "Basic.hpp"

#include "ECharacterTeamSelector_structs.hpp"
#include "S_BattleLinePool_structs.hpp"
#include "S_BattleLinePoolCandidate_structs.hpp"
#include "S_BattleLineEventPerCharacter_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.AddCharacterSpecificPoolToRool
// 0x0070 (0x0070 - 0x0000)
struct BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool final
{
public:
	struct FS_BattleLineEventPerCharacter         BattleLinePool;                                    // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool");
static_assert(sizeof(BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool) == 0x000070, "Wrong size on BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool");
static_assert(offsetof(BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool, BattleLinePool) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool::BattleLinePool' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool, CharacterStats) == 0x000068, "Member 'BP_BattleLinesModel_Base_C_AddCharacterSpecificPoolToRool::CharacterStats' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.AddPoolToRoll
// 0x0040 (0x0040 - 0x0000)
struct BP_BattleLinesModel_Base_C_AddPoolToRoll final
{
public:
	struct FS_BattleLinePool                      BattleLinePool;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        ProbabilityFactor;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleLinePool                      CallFunc_ModifyPoolProbability_OutPool;            // 0x0020(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_AddPoolToRoll) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_AddPoolToRoll");
static_assert(sizeof(BP_BattleLinesModel_Base_C_AddPoolToRoll) == 0x000040, "Wrong size on BP_BattleLinesModel_Base_C_AddPoolToRoll");
static_assert(offsetof(BP_BattleLinesModel_Base_C_AddPoolToRoll, BattleLinePool) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_AddPoolToRoll::BattleLinePool' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_AddPoolToRoll, ProbabilityFactor) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_AddPoolToRoll::ProbabilityFactor' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_AddPoolToRoll, CallFunc_ModifyPoolProbability_OutPool) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_AddPoolToRoll::CallFunc_ModifyPoolProbability_OutPool' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_AddPoolToRoll, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_BattleLinesModel_Base_C_AddPoolToRoll::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_AddPoolToRoll, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00003C, "Member 'BP_BattleLinesModel_Base_C_AddPoolToRoll::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.EndGatherPools
// 0x0090 (0x0090 - 0x0000)
struct BP_BattleLinesModel_Base_C_EndGatherPools final
{
public:
	TArray<struct FS_BattleLinePoolCandidate>     PoolCandidates;                                    // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_BattleLinePoolCandidate>     Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BattleLinePoolCandidate>     Temp_wildcard_Temp_buffer_array_Variable;          // 0x0030(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FS_BattleLinePool                      CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattleLinePoolCandidate             K2Node_MakeStruct_S_BattleLinePoolCandidate;       // 0x0060(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_EndGatherPools) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_EndGatherPools");
static_assert(sizeof(BP_BattleLinesModel_Base_C_EndGatherPools) == 0x000090, "Wrong size on BP_BattleLinesModel_Base_C_EndGatherPools");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, PoolCandidates) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::PoolCandidates' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, Temp_wildcard_Temp_buffer_array_Variable) == 0x000030, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, K2Node_MakeStruct_S_BattleLinePoolCandidate) == 0x000060, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::K2Node_MakeStruct_S_BattleLinePoolCandidate' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_EndGatherPools, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BP_BattleLinesModel_Base_C_EndGatherPools::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.GetGatheredPoolCandidates
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleLinesModel_Base_C_GetGatheredPoolCandidates final
{
public:
	TArray<struct FS_BattleLinePool>              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_GetGatheredPoolCandidates) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_GetGatheredPoolCandidates");
static_assert(sizeof(BP_BattleLinesModel_Base_C_GetGatheredPoolCandidates) == 0x000010, "Wrong size on BP_BattleLinesModel_Base_C_GetGatheredPoolCandidates");
static_assert(offsetof(BP_BattleLinesModel_Base_C_GetGatheredPoolCandidates, ReturnValue) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_GetGatheredPoolCandidates::ReturnValue' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.GetOwnerCharacterStats
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleLinesModel_Base_C_GetOwnerCharacterStats final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        OwnerCharacterStats_0;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_GetOwnerCharacterStats) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_GetOwnerCharacterStats");
static_assert(sizeof(BP_BattleLinesModel_Base_C_GetOwnerCharacterStats) == 0x000008, "Wrong size on BP_BattleLinesModel_Base_C_GetOwnerCharacterStats");
static_assert(offsetof(BP_BattleLinesModel_Base_C_GetOwnerCharacterStats, OwnerCharacterStats_0) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_GetOwnerCharacterStats::OwnerCharacterStats_0' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.GetSettings
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleLinesModel_Base_C_GetSettings final
{
public:
	class UBP_BattleLineSettings_C*               Settings;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterReactionSystem_C*          CallFunc_GetCharacterReactionSystem_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLineSettings_C*               CallFunc_GetBattleLineSettings_Settings;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_GetSettings) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_GetSettings");
static_assert(sizeof(BP_BattleLinesModel_Base_C_GetSettings) == 0x000018, "Wrong size on BP_BattleLinesModel_Base_C_GetSettings");
static_assert(offsetof(BP_BattleLinesModel_Base_C_GetSettings, Settings) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_GetSettings::Settings' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_GetSettings, CallFunc_GetCharacterReactionSystem_ReturnValue) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_GetSettings::CallFunc_GetCharacterReactionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_GetSettings, CallFunc_GetBattleLineSettings_Settings) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_GetSettings::CallFunc_GetBattleLineSettings_Settings' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.Match_DeathOtherChar
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleLinesModel_Base_C_Match_DeathOtherChar final
{
public:
	class UBP_BattleLineGatherer_C*               Gatherer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    LethalDamages;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetTargetCharacter_NewParam;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPerCharacterPool_Rolled;       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTeam_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_Match_DeathOtherChar");
static_assert(sizeof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar) == 0x000020, "Wrong size on BP_BattleLinesModel_Base_C_Match_DeathOtherChar");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, Gatherer) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::Gatherer' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, LethalDamages) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::LethalDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, CallFunc_GetTargetCharacter_NewParam) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::CallFunc_GetTargetCharacter_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, CallFunc_GetTeam_Team) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, CallFunc_EqualsObjects_ReturnValue) == 0x000019, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, CallFunc_TryRegisterPerCharacterPool_Rolled) == 0x00001B, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::CallFunc_TryRegisterPerCharacterPool_Rolled' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_DeathOtherChar, CallFunc_IsInTeam_ReturnValue) == 0x00001C, "Member 'BP_BattleLinesModel_Base_C_Match_DeathOtherChar::CallFunc_IsInTeam_ReturnValue' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.Match_HealEvent
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleLinesModel_Base_C_Match_HealEvent final
{
public:
	class UBP_BattleLineGatherer_C*               BattleLineGatherer;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleHeal_C*                       HealEvent;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings_1;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTeam_ReturnValue;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPool_Rolled;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPerCharacterPool_Rolled;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue_1;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_Match_HealEvent) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_Match_HealEvent");
static_assert(sizeof(BP_BattleLinesModel_Base_C_Match_HealEvent) == 0x000030, "Wrong size on BP_BattleLinesModel_Base_C_Match_HealEvent");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, BattleLineGatherer) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::BattleLineGatherer' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, HealEvent) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::HealEvent' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_GetTeam_Team) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_GetSettings_Settings) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_GetSettings_Settings' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_GetSettings_Settings_1) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_GetSettings_Settings_1' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_EqualsObjects_ReturnValue) == 0x000028, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_IsInTeam_ReturnValue) == 0x000029, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_IsInTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_TryRegisterPool_Rolled) == 0x00002A, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_TryRegisterPool_Rolled' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_TryRegisterPerCharacterPool_Rolled) == 0x00002B, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_TryRegisterPerCharacterPool_Rolled' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_HealEvent, CallFunc_EqualsObjects_ReturnValue_1) == 0x00002C, "Member 'BP_BattleLinesModel_Base_C_Match_HealEvent::CallFunc_EqualsObjects_ReturnValue_1' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.Match_RevivedByAlly
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleLinesModel_Base_C_Match_RevivedByAlly final
{
public:
	class UBP_BattleLineGatherer_C*               Gatherer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPool_Rolled;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_Match_RevivedByAlly) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_Match_RevivedByAlly");
static_assert(sizeof(BP_BattleLinesModel_Base_C_Match_RevivedByAlly) == 0x000020, "Wrong size on BP_BattleLinesModel_Base_C_Match_RevivedByAlly");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivedByAlly, Gatherer) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_Match_RevivedByAlly::Gatherer' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivedByAlly, SourceCharacter) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_Match_RevivedByAlly::SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivedByAlly, CallFunc_GetSettings_Settings) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_Match_RevivedByAlly::CallFunc_GetSettings_Settings' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivedByAlly, CallFunc_TryRegisterPool_Rolled) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_Match_RevivedByAlly::CallFunc_TryRegisterPool_Rolled' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.Match_RevivingAlly
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleLinesModel_Base_C_Match_RevivingAlly final
{
public:
	class UBP_BattleLineGatherer_C*               Gatherer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        RevivedCharacter;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPool_Rolled;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_Match_RevivingAlly) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_Match_RevivingAlly");
static_assert(sizeof(BP_BattleLinesModel_Base_C_Match_RevivingAlly) == 0x000020, "Wrong size on BP_BattleLinesModel_Base_C_Match_RevivingAlly");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivingAlly, Gatherer) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_Match_RevivingAlly::Gatherer' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivingAlly, RevivedCharacter) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_Match_RevivingAlly::RevivedCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivingAlly, CallFunc_GetSettings_Settings) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_Match_RevivingAlly::CallFunc_GetSettings_Settings' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_RevivingAlly, CallFunc_TryRegisterPool_Rolled) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_Match_RevivingAlly::CallFunc_TryRegisterPool_Rolled' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.Match_TargetAcquired
// 0x0040 (0x0040 - 0x0000)
struct BP_BattleLinesModel_Base_C_Match_TargetAcquired final
{
public:
	class UBP_BattleLineGatherer_C*               Gatherer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        AcquiringCharacter;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        AcquiredCharacter;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInTeam_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings_1;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPerCharacterPool_Rolled;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPool_Rolled;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_Match_TargetAcquired) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_Match_TargetAcquired");
static_assert(sizeof(BP_BattleLinesModel_Base_C_Match_TargetAcquired) == 0x000040, "Wrong size on BP_BattleLinesModel_Base_C_Match_TargetAcquired");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, Gatherer) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::Gatherer' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, AcquiringCharacter) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::AcquiringCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, AcquiredCharacter) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::AcquiredCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, CallFunc_IsInTeam_ReturnValue) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::CallFunc_IsInTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, CallFunc_GetSettings_Settings) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::CallFunc_GetSettings_Settings' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, CallFunc_EqualsObjects_ReturnValue) == 0x000028, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, CallFunc_GetSettings_Settings_1) == 0x000030, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::CallFunc_GetSettings_Settings_1' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, CallFunc_TryRegisterPerCharacterPool_Rolled) == 0x000038, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::CallFunc_TryRegisterPerCharacterPool_Rolled' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TargetAcquired, CallFunc_TryRegisterPool_Rolled) == 0x000039, "Member 'BP_BattleLinesModel_Base_C_Match_TargetAcquired::CallFunc_TryRegisterPool_Rolled' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.Match_TurnStartSelf
// 0x0040 (0x0040 - 0x0000)
struct BP_BattleLinesModel_Base_C_Match_TurnStartSelf final
{
public:
	class UBP_BattleLineGatherer_C*               Gatherer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLineSettings_C*               CallFunc_GetSettings_Settings_2;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPool_Rolled;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPool_Rolled_1;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentAPPercentage01_Percent01;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRegisterPool_Rolled_2;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_Match_TurnStartSelf");
static_assert(sizeof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf) == 0x000040, "Wrong size on BP_BattleLinesModel_Base_C_Match_TurnStartSelf");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, Gatherer) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::Gatherer' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_GetSettings_Settings) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_GetSettings_Settings' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_GetSettings_Settings_1) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_GetSettings_Settings_1' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_GetSettings_Settings_2) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_GetSettings_Settings_2' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_TryRegisterPool_Rolled) == 0x000028, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_TryRegisterPool_Rolled' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000029, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_TryRegisterPool_Rolled_1) == 0x00002A, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_TryRegisterPool_Rolled_1' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_GetCurrentAPPercentage01_Percent01) == 0x000030, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_GetCurrentAPPercentage01_Percent01' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf, CallFunc_TryRegisterPool_Rolled_2) == 0x000039, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf::CallFunc_TryRegisterPool_Rolled_2' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.Match_TurnStartSelf_OLD
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD final
{
public:
	double                                        CallFunc_GetCurrentHPPercentage_Percent01;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetCurrentAPPercentage01_Percent01;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD");
static_assert(sizeof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD) == 0x000020, "Wrong size on BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD, CallFunc_GetCurrentHPPercentage_Percent01) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD::CallFunc_GetCurrentHPPercentage_Percent01' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD, CallFunc_GetCurrentAPPercentage01_Percent01) == 0x000010, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD::CallFunc_GetCurrentAPPercentage01_Percent01' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_Match_TurnStartSelf_OLD::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.MatchDamageReceivedByAll
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll final
{
public:
	class UBP_BattleDamages_C*                    DamageObject;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleLinePool                      MatchingBattleLinePool;                            // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll");
static_assert(sizeof(BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll) == 0x000020, "Wrong size on BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll");
static_assert(offsetof(BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll, DamageObject) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll::DamageObject' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll, MatchingBattleLinePool) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_MatchDamageReceivedByAll::MatchingBattleLinePool' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.ModifyPoolProbability
// 0x0058 (0x0058 - 0x0000)
struct BP_BattleLinesModel_Base_C_ModifyPoolProbability final
{
public:
	struct FS_BattleLinePool                      InPool;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        ProbabilityFactor;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleLinePool                      OutPool;                                           // 0x0020(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleLinePool                      K2Node_MakeStruct_S_BattleLinePool;                // 0x0040(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_ModifyPoolProbability) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_ModifyPoolProbability");
static_assert(sizeof(BP_BattleLinesModel_Base_C_ModifyPoolProbability) == 0x000058, "Wrong size on BP_BattleLinesModel_Base_C_ModifyPoolProbability");
static_assert(offsetof(BP_BattleLinesModel_Base_C_ModifyPoolProbability, InPool) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_ModifyPoolProbability::InPool' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_ModifyPoolProbability, ProbabilityFactor) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_ModifyPoolProbability::ProbabilityFactor' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_ModifyPoolProbability, OutPool) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_ModifyPoolProbability::OutPool' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_ModifyPoolProbability, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_BattleLinesModel_Base_C_ModifyPoolProbability::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_ModifyPoolProbability, K2Node_MakeStruct_S_BattleLinePool) == 0x000040, "Member 'BP_BattleLinesModel_Base_C_ModifyPoolProbability::K2Node_MakeStruct_S_BattleLinePool' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.TryRegisterEvent_OLD
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD final
{
public:
	struct FS_BattleLinePool                      Event;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Rolled;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_roll;                                        // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD");
static_assert(sizeof(BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD) == 0x000030, "Wrong size on BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD, Event) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD::Event' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD, Rolled) == 0x000018, "Member 'BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD::Rolled' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD, local_roll) == 0x000019, "Member 'BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD::local_roll' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_BattleLinesModel_Base_C_TryRegisterEvent_OLD::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_BattleLinesModel_Base.BP_BattleLinesModel_Base_C.TryRegisterPool
// 0x0048 (0x0048 - 0x0000)
struct BP_BattleLinesModel_Base_C_TryRegisterPool final
{
public:
	class UBP_BattleLineGatherer_C*               Event;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleLinePool                      Pool;                                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	double                                        ChancePercent;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rolled;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_roll;                                        // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleLinesModel_Base_C_TryRegisterPool) == 0x000008, "Wrong alignment on BP_BattleLinesModel_Base_C_TryRegisterPool");
static_assert(sizeof(BP_BattleLinesModel_Base_C_TryRegisterPool) == 0x000048, "Wrong size on BP_BattleLinesModel_Base_C_TryRegisterPool");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, Event) == 0x000000, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::Event' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, Pool) == 0x000008, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::Pool' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, ChancePercent) == 0x000020, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::ChancePercent' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, Rolled) == 0x000028, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::Rolled' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, local_roll) == 0x000029, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::local_roll' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleLinesModel_Base_C_TryRegisterPool, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_BattleLinesModel_Base_C_TryRegisterPool::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

