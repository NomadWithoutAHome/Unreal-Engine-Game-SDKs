#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Climbing_V2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_ClimbingComponentState_structs.hpp"
#include "E_Climbing_Direction_structs.hpp"


namespace SDK::Params
{

// Function ABP_Climbing_V2.ABP_Climbing_V2_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Climbing_V2_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Climbing_V2_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Climbing_V2_C_AnimGraph");
static_assert(sizeof(ABP_Climbing_V2_C_AnimGraph) == 0x000010, "Wrong size on ABP_Climbing_V2_C_AnimGraph");
static_assert(offsetof(ABP_Climbing_V2_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Climbing_V2_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Climbing_V2.ABP_Climbing_V2_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Climbing_V2_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Climbing_V2_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Climbing_V2_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Climbing_V2_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Climbing_V2_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Climbing_V2_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Climbing_V2_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Climbing_V2.ABP_Climbing_V2_C.ExecuteUbergraph_ABP_Climbing_V2
// 0x01B8 (0x01B8 - 0x0000)
struct ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable_2;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_9;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable_3;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_12;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_13;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_14;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_15;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_16;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_17;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_19;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable_4;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_20;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_21;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_22;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_23;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable_5;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable_6;                              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_1;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default_2;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_30;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_31;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_32;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_33;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_34;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_35;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_36;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_37;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_38;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_39;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          Temp_byte_Variable_7;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_3;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ClimbingComponent_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_ImplicitCast; // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_0_ImplicitCast; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_1_ImplicitCast; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2) == 0x000008, "Wrong alignment on ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2");
static_assert(sizeof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2) == 0x0001B8, "Wrong size on ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, EntryPoint) == 0x000000, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable) == 0x000005, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable_1) == 0x000006, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00000A, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable_2) == 0x00000B, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000C, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000D, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00000E, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x00000F, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable) == 0x000010, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_1) == 0x000018, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_2) == 0x000020, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_3) == 0x000028, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_4) == 0x000030, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_5) == 0x000038, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_6) == 0x000040, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_7) == 0x000048, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_8) == 0x000050, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_9) == 0x000058, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable_3) == 0x000060, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_Select_Default) == 0x000068, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_10) == 0x000070, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_11) == 0x000078, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_12) == 0x000080, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_13) == 0x000088, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_14) == 0x000090, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_15) == 0x000098, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_16) == 0x0000A0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_17) == 0x0000A8, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_18) == 0x0000B0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_19) == 0x0000B8, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable_4) == 0x0000C0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_20) == 0x0000C8, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_21) == 0x0000D0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_22) == 0x0000D8, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_23) == 0x0000E0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_24) == 0x0000E8, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_25) == 0x0000F0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_26) == 0x0000F8, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_27) == 0x000100, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_28) == 0x000108, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_29) == 0x000110, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable_5) == 0x000118, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable_6) == 0x000119, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_Select_Default_1) == 0x000120, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_Select_Default_2) == 0x000128, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_30) == 0x000130, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_31) == 0x000138, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_32) == 0x000140, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_33) == 0x000148, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_34) == 0x000150, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_35) == 0x000158, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_36) == 0x000160, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_37) == 0x000168, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_38) == 0x000170, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_object_Variable_39) == 0x000178, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, Temp_byte_Variable_7) == 0x000180, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_Select_Default_3) == 0x000188, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_Event_DeltaTimeX) == 0x000190, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000198, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, CallFunc_GetComponentByClass_ReturnValue) == 0x0001A0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_StructMemberSet___FloatProperty_ImplicitCast) == 0x0001A8, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_StructMemberSet___FloatProperty_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_StructMemberSet___FloatProperty_0_ImplicitCast) == 0x0001AC, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_StructMemberSet___FloatProperty_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2, K2Node_StructMemberSet___FloatProperty_1_ImplicitCast) == 0x0001B0, "Member 'ABP_Climbing_V2_C_ExecuteUbergraph_ABP_Climbing_V2::K2Node_StructMemberSet___FloatProperty_1_ImplicitCast' has a wrong offset!");

// Function ABP_Climbing_V2.ABP_Climbing_V2_C.GetAnimationPlayRate
// 0x0010 (0x0010 - 0x0000)
struct ABP_Climbing_V2_C_GetAnimationPlayRate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Climbing_V2_C_GetAnimationPlayRate) == 0x000008, "Wrong alignment on ABP_Climbing_V2_C_GetAnimationPlayRate");
static_assert(sizeof(ABP_Climbing_V2_C_GetAnimationPlayRate) == 0x000010, "Wrong size on ABP_Climbing_V2_C_GetAnimationPlayRate");
static_assert(offsetof(ABP_Climbing_V2_C_GetAnimationPlayRate, ReturnValue) == 0x000000, "Member 'ABP_Climbing_V2_C_GetAnimationPlayRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_GetAnimationPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Climbing_V2_C_GetAnimationPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ABP_Climbing_V2.ABP_Climbing_V2_C.UpdateClimbingComponentData
// 0x0020 (0x0020 - 0x0000)
struct ABP_Climbing_V2_C_UpdateClimbingComponentData final
{
public:
	double                                        CallFunc_GetDistanceToNextClimbingElement_Value;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ClimbingComponentState                      CallFunc_GetClimbingState_ClimbingState;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeToPerformStateChange_Value;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Climbing_Direction                          CallFunc_GetClimbingDirection_ClimbingDirection;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Climbing_V2_C_UpdateClimbingComponentData) == 0x000008, "Wrong alignment on ABP_Climbing_V2_C_UpdateClimbingComponentData");
static_assert(sizeof(ABP_Climbing_V2_C_UpdateClimbingComponentData) == 0x000020, "Wrong size on ABP_Climbing_V2_C_UpdateClimbingComponentData");
static_assert(offsetof(ABP_Climbing_V2_C_UpdateClimbingComponentData, CallFunc_GetDistanceToNextClimbingElement_Value) == 0x000000, "Member 'ABP_Climbing_V2_C_UpdateClimbingComponentData::CallFunc_GetDistanceToNextClimbingElement_Value' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_UpdateClimbingComponentData, CallFunc_GetClimbingState_ClimbingState) == 0x000008, "Member 'ABP_Climbing_V2_C_UpdateClimbingComponentData::CallFunc_GetClimbingState_ClimbingState' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_UpdateClimbingComponentData, CallFunc_GetTimeToPerformStateChange_Value) == 0x000010, "Member 'ABP_Climbing_V2_C_UpdateClimbingComponentData::CallFunc_GetTimeToPerformStateChange_Value' has a wrong offset!");
static_assert(offsetof(ABP_Climbing_V2_C_UpdateClimbingComponentData, CallFunc_GetClimbingDirection_ClimbingDirection) == 0x000018, "Member 'ABP_Climbing_V2_C_UpdateClimbingComponentData::CallFunc_GetClimbingDirection_ClimbingDirection' has a wrong offset!");

}

