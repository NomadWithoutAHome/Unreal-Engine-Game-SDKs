#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DataAsset_Weapon

#include "Basic.hpp"

#include "ECharacterAttribute_structs.hpp"
#include "EAttributeScalingGrade_structs.hpp"
#include "BP_DataAsset_Item_Pictos_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DataAsset_Weapon.BP_DataAsset_Weapon_C
// 0x0088 (0x0100 - 0x0078)
class UBP_DataAsset_Weapon_C final : public UBP_DataAsset_Item_Pictos_C
{
public:
	TMap<ECharacterAttribute, EAttributeScalingGrade> AttributeScalings;                             // 0x0078(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, Deprecated)
	double                                        BasePhysicalPower;                                 // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseMagicalPower;                                  // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   WeaponSkin;                                        // 0x00D8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	class UClass* GetItemInstanceClass();
	void InitGear(class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void GetPowerForCharacter(class UBP_CharacterData_C* CharacterData, double* PhysicalPower, double* MagicalPower);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DataAsset_Weapon_C">();
	}
	static class UBP_DataAsset_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DataAsset_Weapon_C>();
	}
};
static_assert(alignof(UBP_DataAsset_Weapon_C) == 0x000008, "Wrong alignment on UBP_DataAsset_Weapon_C");
static_assert(sizeof(UBP_DataAsset_Weapon_C) == 0x000100, "Wrong size on UBP_DataAsset_Weapon_C");
static_assert(offsetof(UBP_DataAsset_Weapon_C, AttributeScalings) == 0x000078, "Member 'UBP_DataAsset_Weapon_C::AttributeScalings' has a wrong offset!");
static_assert(offsetof(UBP_DataAsset_Weapon_C, BasePhysicalPower) == 0x0000C8, "Member 'UBP_DataAsset_Weapon_C::BasePhysicalPower' has a wrong offset!");
static_assert(offsetof(UBP_DataAsset_Weapon_C, BaseMagicalPower) == 0x0000D0, "Member 'UBP_DataAsset_Weapon_C::BaseMagicalPower' has a wrong offset!");
static_assert(offsetof(UBP_DataAsset_Weapon_C, WeaponSkin) == 0x0000D8, "Member 'UBP_DataAsset_Weapon_C::WeaponSkin' has a wrong offset!");

}

