#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_Character_World

#include "Basic.hpp"

#include "BP_jRPG_Character_World_classes.hpp"
#include "BP_jRPG_Character_World_parameters.hpp"


namespace SDK
{

// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.AddCharacterMovementData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_jRPG_Character_World_Movement_Data&Movement_Data                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHighPriority                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::AddCharacterMovementData(const struct FS_jRPG_Character_World_Movement_Data& Movement_Data, bool IsHighPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "AddCharacterMovementData");

	Params::BP_jRPG_Character_World_C_AddCharacterMovementData Parms{};

	Parms.Movement_Data = std::move(Movement_Data);
	Parms.IsHighPriority = IsHighPriority;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.AddInteractable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::AddInteractable(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "AddInteractable");

	Params::BP_jRPG_Character_World_C_AddInteractable Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.AdjustCharacterSpringArm
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCrouching                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::AdjustCharacterSpringArm(bool IsCrouching, double ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "AdjustCharacterSpringArm");

	Params::BP_jRPG_Character_World_C_AdjustCharacterSpringArm Parms{};

	Parms.IsCrouching = IsCrouching;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.AimAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::AimAction(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "AimAction");

	Params::BP_jRPG_Character_World_C_AimAction Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ApplyCustomizationOnAICompanions
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ApplyCustomizationOnAICompanions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ApplyCustomizationOnAICompanions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ApplyDefaultInputContext
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SetDefaultRunningGait                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ApplyDefaultInputContext(bool SetDefaultRunningGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ApplyDefaultInputContext");

	Params::BP_jRPG_Character_World_C_ApplyDefaultInputContext Parms{};

	Parms.SetDefaultRunningGait = SetDefaultRunningGait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.AreDependenciesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   AreLoaded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::AreDependenciesLoaded(bool* AreLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "AreDependenciesLoaded");

	Params::BP_jRPG_Character_World_C_AreDependenciesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreLoaded != nullptr)
		*AreLoaded = Parms.AreLoaded;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ArmRingChangeFeedbackType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFreeAimFeedbackType                    NewFeedbackType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ArmRingChangeFeedbackType(EFreeAimFeedbackType NewFeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ArmRingChangeFeedbackType");

	Params::BP_jRPG_Character_World_C_ArmRingChangeFeedbackType Parms{};

	Parms.NewFeedbackType = NewFeedbackType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ArmRingDisableFeedbackType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFreeAimFeedbackType                    CurrentFeedbackType                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ArmRingDisableFeedbackType(EFreeAimFeedbackType CurrentFeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ArmRingDisableFeedbackType");

	Params::BP_jRPG_Character_World_C_ArmRingDisableFeedbackType Parms{};

	Parms.CurrentFeedbackType = CurrentFeedbackType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ArmRingEnableFeedbackType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFreeAimFeedbackType                    CurrentFeedbackType                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    CurrentColor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 RotationRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Glow                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ArmRingEnableFeedbackType(EFreeAimFeedbackType CurrentFeedbackType, struct FLinearColor* CurrentColor, double* RotationRate, double* Glow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ArmRingEnableFeedbackType");

	Params::BP_jRPG_Character_World_C_ArmRingEnableFeedbackType Parms{};

	Parms.CurrentFeedbackType = CurrentFeedbackType;

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentColor != nullptr)
		*CurrentColor = std::move(Parms.CurrentColor);

	if (RotationRate != nullptr)
		*RotationRate = Parms.RotationRate;

	if (Glow != nullptr)
		*Glow = Parms.Glow;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.AttachTorch
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::AttachTorch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "AttachTorch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BindEventsToController
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::BindEventsToController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BindEventsToController");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BndEvt__BP_jRPG_Character_World_BP_CharacterSkinComponent_K2Node_ComponentBoundEvent_4_OnCharacterSkinChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UBP_CharacterSkinComponent_C*     SkinComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::BndEvt__BP_jRPG_Character_World_BP_CharacterSkinComponent_K2Node_ComponentBoundEvent_4_OnCharacterSkinChanged__DelegateSignature(class UBP_CharacterSkinComponent_C* SkinComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BndEvt__BP_jRPG_Character_World_BP_CharacterSkinComponent_K2Node_ComponentBoundEvent_4_OnCharacterSkinChanged__DelegateSignature");

	Params::BP_jRPG_Character_World_C_BndEvt__BP_jRPG_Character_World_BP_CharacterSkinComponent_K2Node_ComponentBoundEvent_4_OnCharacterSkinChanged__DelegateSignature Parms{};

	Parms.SkinComponent = SkinComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BndEvt__BP_jRPG_Character_World_BP_ClimbingComponent_K2Node_ComponentBoundEvent_3_OnStartClimbing__DelegateSignature
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::BndEvt__BP_jRPG_Character_World_BP_ClimbingComponent_K2Node_ComponentBoundEvent_3_OnStartClimbing__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BndEvt__BP_jRPG_Character_World_BP_ClimbingComponent_K2Node_ComponentBoundEvent_3_OnStartClimbing__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BndEvt__BP_jRPG_Character_World_BP_ClimbingComponent_K2Node_ComponentBoundEvent_8_OnEndClimbing__DelegateSignature
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::BndEvt__BP_jRPG_Character_World_BP_ClimbingComponent_K2Node_ComponentBoundEvent_8_OnEndClimbing__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BndEvt__BP_jRPG_Character_World_BP_ClimbingComponent_K2Node_ComponentBoundEvent_8_OnEndClimbing__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BndEvt__BP_jRPG_Character_World_BP_FallDetectorComponent_K2Node_ComponentBoundEvent_2_OnKillByFallDetected__DelegateSignature
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::BndEvt__BP_jRPG_Character_World_BP_FallDetectorComponent_K2Node_ComponentBoundEvent_2_OnKillByFallDetected__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BndEvt__BP_jRPG_Character_World_BP_FallDetectorComponent_K2Node_ComponentBoundEvent_2_OnKillByFallDetected__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BndEvt__BP_jRPG_Character_World_MantleComponent_K2Node_ComponentBoundEvent_1_MantleStateChangedSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::BndEvt__BP_jRPG_Character_World_MantleComponent_K2Node_ComponentBoundEvent_1_MantleStateChangedSignature__DelegateSignature(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BndEvt__BP_jRPG_Character_World_MantleComponent_K2Node_ComponentBoundEvent_1_MantleStateChangedSignature__DelegateSignature");

	Params::BP_jRPG_Character_World_C_BndEvt__BP_jRPG_Character_World_MantleComponent_K2Node_ComponentBoundEvent_1_MantleStateChangedSignature__DelegateSignature Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetAllDialogueCameras
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UCineCameraComponent*>*    CineCameraComponents                                   (Parm, OutParm, ContainsInstancedReference)

void ABP_jRPG_Character_World_C::BPI_GetAllDialogueCameras(TArray<class UCineCameraComponent*>* CineCameraComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetAllDialogueCameras");

	Params::BP_jRPG_Character_World_C_BPI_GetAllDialogueCameras Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CineCameraComponents != nullptr)
		*CineCameraComponents = std::move(Parms.CineCameraComponents);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetDialogueAudioComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent**                 AudioComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::BPI_GetDialogueAudioComponent(class UAudioComponent** AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetDialogueAudioComponent");

	Params::BP_jRPG_Character_World_C_BPI_GetDialogueAudioComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponent != nullptr)
		*AudioComponent = Parms.AudioComponent;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetDialogueCameraByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDialogueCameraType                     CameraType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCameraComponent**                CameraComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::BPI_GetDialogueCameraByType(EDialogueCameraType CameraType, class UCameraComponent** CameraComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetDialogueCameraByType");

	Params::BP_jRPG_Character_World_C_BPI_GetDialogueCameraByType Parms{};

	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);

	if (CameraComponent != nullptr)
		*CameraComponent = Parms.CameraComponent;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetDialogueCameraOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_jRPG_Character_World_C::BPI_GetDialogueCameraOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetDialogueCameraOffset");

	Params::BP_jRPG_Character_World_C_BPI_GetDialogueCameraOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetDialogueFocusPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent**                 SceneComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::BPI_GetDialogueFocusPoint(class USceneComponent** SceneComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetDialogueFocusPoint");

	Params::BP_jRPG_Character_World_C_BPI_GetDialogueFocusPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SceneComponent != nullptr)
		*SceneComponent = Parms.SceneComponent;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetInteractingCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_DialogueCharacter_C>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

TScriptInterface<class IBPI_DialogueCharacter_C> ABP_jRPG_Character_World_C::BPI_GetInteractingCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetInteractingCharacter");

	Params::BP_jRPG_Character_World_C_BPI_GetInteractingCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetLightDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NPC_SpolightTypes                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

E_NPC_SpolightTypes ABP_jRPG_Character_World_C::BPI_GetLightDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetLightDirection");

	Params::BP_jRPG_Character_World_C_BPI_GetLightDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetLightingSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NPC_SpolightTypes                     LightDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULightComponent**                 FrontLight                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ULightComponent**                 RimLight                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::BPI_GetLightingSet(E_NPC_SpolightTypes LightDirection, class ULightComponent** FrontLight, class ULightComponent** RimLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetLightingSet");

	Params::BP_jRPG_Character_World_C_BPI_GetLightingSet Parms{};

	Parms.LightDirection = LightDirection;

	UObject::ProcessEvent(Func, &Parms);

	if (FrontLight != nullptr)
		*FrontLight = Parms.FrontLight;

	if (RimLight != nullptr)
		*RimLight = Parms.RimLight;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetReverseSpotlightReceiver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_DialogueCharacter_C>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

TScriptInterface<class IBPI_DialogueCharacter_C> ABP_jRPG_Character_World_C::BPI_GetReverseSpotlightReceiver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetReverseSpotlightReceiver");

	Params::BP_jRPG_Character_World_C_BPI_GetReverseSpotlightReceiver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_GetSpotlightsToActivateDuringDialogue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class ASpotLight>>*SpotLightActors                                        (Parm, OutParm)

void ABP_jRPG_Character_World_C::BPI_GetSpotlightsToActivateDuringDialogue(TArray<TSoftObjectPtr<class ASpotLight>>* SpotLightActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_GetSpotlightsToActivateDuringDialogue");

	Params::BP_jRPG_Character_World_C_BPI_GetSpotlightsToActivateDuringDialogue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpotLightActors != nullptr)
		*SpotLightActors = std::move(Parms.SpotLightActors);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_HasLightingAuthority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::BPI_HasLightingAuthority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_HasLightingAuthority");

	Params::BP_jRPG_Character_World_C_BPI_HasLightingAuthority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.BPI_ShouldMoveCameraPresetsToOtherSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::BPI_ShouldMoveCameraPresetsToOtherSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "BPI_ShouldMoveCameraPresetsToOtherSide");

	Params::BP_jRPG_Character_World_C_BPI_ShouldMoveCameraPresetsToOtherSide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CameraToBasePosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::CameraToBasePosition(float OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CameraToBasePosition");

	Params::BP_jRPG_Character_World_C_CameraToBasePosition Parms{};

	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CameraToPosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   TargetRelativeLocation                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::CameraToPosition(const struct FVector& TargetRelativeLocation, float OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CameraToPosition");

	Params::BP_jRPG_Character_World_C_CameraToPosition Parms{};

	Parms.TargetRelativeLocation = std::move(TargetRelativeLocation);
	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CanAddMovementInput
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::CanAddMovementInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CanAddMovementInput");

	Params::BP_jRPG_Character_World_C_CanAddMovementInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CanBeDetectedByEnemies
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::CanBeDetectedByEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CanBeDetectedByEnemies");

	Params::BP_jRPG_Character_World_C_CanBeDetectedByEnemies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CanDash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::CanDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CanDash");

	Params::BP_jRPG_Character_World_C_CanDash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CanEnterFreeAimCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::CanEnterFreeAimCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CanEnterFreeAimCheck");

	Params::BP_jRPG_Character_World_C_CanEnterFreeAimCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CanPerformExplorationAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::CanPerformExplorationAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CanPerformExplorationAttack");

	Params::BP_jRPG_Character_World_C_CanPerformExplorationAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CanSwitchCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   CharacterSwitchFromButtonPress                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::CanSwitchCharacter(bool* CharacterSwitchFromButtonPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CanSwitchCharacter");

	Params::BP_jRPG_Character_World_C_CanSwitchCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterSwitchFromButtonPress != nullptr)
		*CharacterSwitchFromButtonPress = Parms.CharacterSwitchFromButtonPress;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CharacterSwitch
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::CharacterSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CharacterSwitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.CharacterTalking
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Talking                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::CharacterTalking(bool Talking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "CharacterTalking");

	Params::BP_jRPG_Character_World_C_CharacterTalking Parms{};

	Parms.Talking = Talking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Cinematic_ActivatePlayerCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::Cinematic_ActivatePlayerCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Cinematic_ActivatePlayerCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Cinematic_ActivatePreCameraCinematic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::Cinematic_ActivatePreCameraCinematic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Cinematic_ActivatePreCameraCinematic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Cinematic_GetPreCinematicBlendTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float*                                  PreCinematicCameraBlendTime_0                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::Cinematic_GetPreCinematicBlendTime(float* PreCinematicCameraBlendTime_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Cinematic_GetPreCinematicBlendTime");

	Params::BP_jRPG_Character_World_C_Cinematic_GetPreCinematicBlendTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PreCinematicCameraBlendTime_0 != nullptr)
		*PreCinematicCameraBlendTime_0 = Parms.PreCinematicCameraBlendTime_0;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ComputeActiveCharacter
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ComputeActiveCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ComputeActiveCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ComputeActorRotationDuringAttack
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator*                        Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_jRPG_Character_World_C::ComputeActorRotationDuringAttack(struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ComputeActorRotationDuringAttack");

	Params::BP_jRPG_Character_World_C_ComputeActorRotationDuringAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.DEBUG_CVarChange_DisableAggro
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::DEBUG_CVarChange_DisableAggro(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "DEBUG_CVarChange_DisableAggro");

	Params::BP_jRPG_Character_World_C_DEBUG_CVarChange_DisableAggro Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.DEBUG_CVarChange_DisableCompanions
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::DEBUG_CVarChange_DisableCompanions(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "DEBUG_CVarChange_DisableCompanions");

	Params::BP_jRPG_Character_World_C_DEBUG_CVarChange_DisableCompanions Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.DEBUG_PrintCharacterCapabilities
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::DEBUG_PrintCharacterCapabilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "DEBUG_PrintCharacterCapabilities");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.DEBUG_TeleportEnviro
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TPNumber                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::DEBUG_TeleportEnviro(int32 TPNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "DEBUG_TeleportEnviro");

	Params::BP_jRPG_Character_World_C_DEBUG_TeleportEnviro Parms{};

	Parms.TPNumber = TPNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Despawn
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::Despawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Despawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.EnableIK
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableIK_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::EnableIK(bool EnableIK_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "EnableIK");

	Params::BP_jRPG_Character_World_C_EnableIK Parms{};

	Parms.EnableIK_0 = EnableIK_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.EnableIKTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::EnableIKTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "EnableIKTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.EnableIKTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::EnableIKTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "EnableIKTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Enter Debug Fly Mode
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::Enter_Debug_Fly_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Enter Debug Fly Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.EnterCinematicMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::EnterCinematicMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "EnterCinematicMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ExecuteUbergraph_BP_jRPG_Character_World
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ExecuteUbergraph_BP_jRPG_Character_World(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ExecuteUbergraph_BP_jRPG_Character_World");

	Params::BP_jRPG_Character_World_C_ExecuteUbergraph_BP_jRPG_Character_World Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Exit Debug Fly Mode
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::Exit_Debug_Fly_Mode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Exit Debug Fly Mode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ExitCinematicMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ExitCinematicMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ExitCinematicMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ExplorationAttacked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       PlayerCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   ImpactPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ExplorationAttacked(class ABP_jRPG_Character_World_C* PlayerCharacter, const struct FVector& ImpactPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ExplorationAttacked");

	Params::BP_jRPG_Character_World_C_ExplorationAttacked Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.ImpactPoint = std::move(ImpactPoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FindNearestActorOfClass
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor**                          NearestActor                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 NearestDistance                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::FindNearestActorOfClass(class UClass* Class_0, const struct FVector& TargetLocation, class AActor** NearestActor, double* NearestDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FindNearestActorOfClass");

	Params::BP_jRPG_Character_World_C_FindNearestActorOfClass Parms{};

	Parms.Class_0 = Class_0;
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (NearestActor != nullptr)
		*NearestActor = Parms.NearestActor;

	if (NearestDistance != nullptr)
		*NearestDistance = Parms.NearestDistance;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Force LOD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::Force_LOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Force LOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ForceRefreshCharacterAndCompanions
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ForceRefreshCharacterAndCompanions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ForceRefreshCharacterAndCompanions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ForwardMovementAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ForwardMovementAction(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ForwardMovementAction");

	Params::BP_jRPG_Character_World_C_ForwardMovementAction Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FoV_Control_Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::FoV_Control_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FoV_Control_Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FoV_Control_Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::FoV_Control_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FoV_Control_Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FovControl
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TargetFov                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::FovControl(double TargetFov)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FovControl");

	Params::BP_jRPG_Character_World_C_FovControl Parms{};

	Parms.TargetFov = TargetFov;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FovReset
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::FovReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FovReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FreeAimHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       PlayerCharacterWorld                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::FreeAimHit(class ABP_jRPG_Character_World_C* PlayerCharacterWorld, const struct FVector& HitLocation, bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FreeAimHit");

	Params::BP_jRPG_Character_World_C_FreeAimHit Parms{};

	Parms.PlayerCharacterWorld = PlayerCharacterWorld;
	Parms.HitLocation = std::move(HitLocation);
	Parms.IsDisabled = IsDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FX_ArmRingColor__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::FX_ArmRingColor__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FX_ArmRingColor__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FX_ArmRingColor__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::FX_ArmRingColor__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FX_ArmRingColor__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FXArmRingActivate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AddTrail                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::FXArmRingActivate(bool AddTrail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FXArmRingActivate");

	Params::BP_jRPG_Character_World_C_FXArmRingActivate Parms{};

	Parms.AddTrail = AddTrail;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FXArmRingChangeColor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FLinearColor&              CurrentColor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RotationRate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Glow                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::FXArmRingChangeColor(const struct FLinearColor& CurrentColor, double RotationRate, double Glow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FXArmRingChangeColor");

	Params::BP_jRPG_Character_World_C_FXArmRingChangeColor Parms{};

	Parms.CurrentColor = std::move(CurrentColor);
	Parms.RotationRate = RotationRate;
	Parms.Glow = Glow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.FXArmRingDeactivate
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::FXArmRingDeactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "FXArmRingDeactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GenerateExplorationAttack
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  A                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GenerateExplorationAttack(double A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GenerateExplorationAttack");

	Params::BP_jRPG_Character_World_C_GenerateExplorationAttack Parms{};

	Parms.A = A;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetAllAudioComponents
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UAudioComponent*>*         AudioComponents                                        (Parm, OutParm, ContainsInstancedReference)

void ABP_jRPG_Character_World_C::GetAllAudioComponents(TArray<class UAudioComponent*>* AudioComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetAllAudioComponents");

	Params::BP_jRPG_Character_World_C_GetAllAudioComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponents != nullptr)
		*AudioComponents = std::move(Parms.AudioComponents);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetAllDialogueCameras
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UCineCameraComponent*>*    AllCameras                                             (Parm, OutParm, ContainsInstancedReference)

void ABP_jRPG_Character_World_C::GetAllDialogueCameras(TArray<class UCineCameraComponent*>* AllCameras)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetAllDialogueCameras");

	Params::BP_jRPG_Character_World_C_GetAllDialogueCameras Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllCameras != nullptr)
		*AllCameras = std::move(Parms.AllCameras);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetALSAnimBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UALS_UE5_AnimBP_C**               AsALS_UE5_Anim_BP                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetALSAnimBP(class UALS_UE5_AnimBP_C** AsALS_UE5_Anim_BP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetALSAnimBP");

	Params::BP_jRPG_Character_World_C_GetALSAnimBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsALS_UE5_Anim_BP != nullptr)
		*AsALS_UE5_Anim_BP = Parms.AsALS_UE5_Anim_BP;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetAssetDialogueCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_DialogueCharacter_C**DialogueCharacter                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetAssetDialogueCharacter(class UBP_DataAsset_DialogueCharacter_C** DialogueCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetAssetDialogueCharacter");

	Params::BP_jRPG_Character_World_C_GetAssetDialogueCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DialogueCharacter != nullptr)
		*DialogueCharacter = Parms.DialogueCharacter;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetAudioCharacterManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent**                 AudioCharacterManager                                  (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetAudioCharacterManager(class UActorComponent** AudioCharacterManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetAudioCharacterManager");

	Params::BP_jRPG_Character_World_C_GetAudioCharacterManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioCharacterManager != nullptr)
		*AudioCharacterManager = Parms.AudioCharacterManager;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetAudioComponentByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const EInWorldAudioContainerComponents  Type                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AudioComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetAudioComponentByType(const EInWorldAudioContainerComponents Type, class UAudioComponent** AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetAudioComponentByType");

	Params::BP_jRPG_Character_World_C_GetAudioComponentByType Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponent != nullptr)
		*AudioComponent = Parms.AudioComponent;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetAudioComponents
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent**                 AC_SFX_01_0                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Foleys_01_0                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_FT_L_0                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Vocals_01_0                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_SFX_02_0                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Foleys_02_0                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_FT_R_0                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Vocals_02_0                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Idle_0                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Weapon_L_01_0                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Weapon_L_02_0                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Weapon_R_01_0                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Hand_L_01_0                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent**                 AC_Hand_R_01_0                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetAudioComponents(class UAudioComponent** AC_SFX_01_0, class UAudioComponent** AC_Foleys_01_0, class UAudioComponent** AC_FT_L_0, class UAudioComponent** AC_Vocals_01_0, class UAudioComponent** AC_SFX_02_0, class UAudioComponent** AC_Foleys_02_0, class UAudioComponent** AC_FT_R_0, class UAudioComponent** AC_Vocals_02_0, class UAudioComponent** AC_Idle_0, class UAudioComponent** AC_Weapon_L_01_0, class UAudioComponent** AC_Weapon_L_02_0, class UAudioComponent** AC_Weapon_R_01_0, class UAudioComponent** AC_Hand_L_01_0, class UAudioComponent** AC_Hand_R_01_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetAudioComponents");

	Params::BP_jRPG_Character_World_C_GetAudioComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AC_SFX_01_0 != nullptr)
		*AC_SFX_01_0 = Parms.AC_SFX_01_0;

	if (AC_Foleys_01_0 != nullptr)
		*AC_Foleys_01_0 = Parms.AC_Foleys_01_0;

	if (AC_FT_L_0 != nullptr)
		*AC_FT_L_0 = Parms.AC_FT_L_0;

	if (AC_Vocals_01_0 != nullptr)
		*AC_Vocals_01_0 = Parms.AC_Vocals_01_0;

	if (AC_SFX_02_0 != nullptr)
		*AC_SFX_02_0 = Parms.AC_SFX_02_0;

	if (AC_Foleys_02_0 != nullptr)
		*AC_Foleys_02_0 = Parms.AC_Foleys_02_0;

	if (AC_FT_R_0 != nullptr)
		*AC_FT_R_0 = Parms.AC_FT_R_0;

	if (AC_Vocals_02_0 != nullptr)
		*AC_Vocals_02_0 = Parms.AC_Vocals_02_0;

	if (AC_Idle_0 != nullptr)
		*AC_Idle_0 = Parms.AC_Idle_0;

	if (AC_Weapon_L_01_0 != nullptr)
		*AC_Weapon_L_01_0 = Parms.AC_Weapon_L_01_0;

	if (AC_Weapon_L_02_0 != nullptr)
		*AC_Weapon_L_02_0 = Parms.AC_Weapon_L_02_0;

	if (AC_Weapon_R_01_0 != nullptr)
		*AC_Weapon_R_01_0 = Parms.AC_Weapon_R_01_0;

	if (AC_Hand_L_01_0 != nullptr)
		*AC_Hand_L_01_0 = Parms.AC_Hand_L_01_0;

	if (AC_Hand_R_01_0 != nullptr)
		*AC_Hand_R_01_0 = Parms.AC_Hand_R_01_0;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetCameraComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent**                Camera                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetCameraComponent(class UCameraComponent** Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetCameraComponent");

	Params::BP_jRPG_Character_World_C_GetCameraComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera != nullptr)
		*Camera = Parms.Camera;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetCharacterActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetCharacterActor(class AActor** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetCharacterActor");

	Params::BP_jRPG_Character_World_C_GetCharacterActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetClosestInteractable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          Interactable                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetClosestInteractable(class AActor** Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetClosestInteractable");

	Params::BP_jRPG_Character_World_C_GetClosestInteractable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interactable != nullptr)
		*Interactable = Parms.Interactable;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetCurrentInputDevice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputDevices::EInputDevices*           InputDevice                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetCurrentInputDevice(EInputDevices::EInputDevices* InputDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetCurrentInputDevice");

	Params::BP_jRPG_Character_World_C_GetCurrentInputDevice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputDevice != nullptr)
		*InputDevice = Parms.InputDevice;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetCurrentWorldCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_jRPG_WorldCharacters*         WorldCharacter                                         (Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetCurrentWorldCharacter(bool* Found, struct FS_jRPG_WorldCharacters* WorldCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetCurrentWorldCharacter");

	Params::BP_jRPG_Character_World_C_GetCurrentWorldCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (WorldCharacter != nullptr)
		*WorldCharacter = std::move(Parms.WorldCharacter);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetDialogueCharacterInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_DialogueCharacter_C>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

TScriptInterface<class IBPI_DialogueCharacter_C> ABP_jRPG_Character_World_C::GetDialogueCharacterInterface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetDialogueCharacterInterface");

	Params::BP_jRPG_Character_World_C_GetDialogueCharacterInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetFreeAimCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCameraComponent**                Camera                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetFreeAimCamera(class UCameraComponent** Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetFreeAimCamera");

	Params::BP_jRPG_Character_World_C_GetFreeAimCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera != nullptr)
		*Camera = Parms.Camera;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetIsAttachedToMovingPlatform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::GetIsAttachedToMovingPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetIsAttachedToMovingPlatform");

	Params::BP_jRPG_Character_World_C_GetIsAttachedToMovingPlatform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetMainCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCameraComponent**                MainCamera_0                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetMainCamera(class UCameraComponent** MainCamera_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetMainCamera");

	Params::BP_jRPG_Character_World_C_GetMainCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MainCamera_0 != nullptr)
		*MainCamera_0 = Parms.MainCamera_0;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetNextWorldCharacterName
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName*                            CharacterName                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetNextWorldCharacterName(class FName* CharacterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetNextWorldCharacterName");

	Params::BP_jRPG_Character_World_C_GetNextWorldCharacterName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterName != nullptr)
		*CharacterName = Parms.CharacterName;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetSpringArmFreeAimCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USpringArmComponent**             SpringArm                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetSpringArmFreeAimCamera(class USpringArmComponent** SpringArm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetSpringArmFreeAimCamera");

	Params::BP_jRPG_Character_World_C_GetSpringArmFreeAimCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpringArm != nullptr)
		*SpringArm = Parms.SpringArm;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetSpringArmMainCamera
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USpringArmComponent**             SpringArm_MainCamera                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetSpringArmMainCamera(class USpringArmComponent** SpringArm_MainCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetSpringArmMainCamera");

	Params::BP_jRPG_Character_World_C_GetSpringArmMainCamera Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpringArm_MainCamera != nullptr)
		*SpringArm_MainCamera = Parms.SpringArm_MainCamera;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetTest
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::GetTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetWorldCharacterByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_jRPG_WorldCharacters*         WorldCharacter                                         (Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::GetWorldCharacterByName(class FName RowName, bool* Found, struct FS_jRPG_WorldCharacters* WorldCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetWorldCharacterByName");

	Params::BP_jRPG_Character_World_C_GetWorldCharacterByName Parms{};

	Parms.RowName = RowName;

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (WorldCharacter != nullptr)
		*WorldCharacter = std::move(Parms.WorldCharacter);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GrappleCameraMovement
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::GrappleCameraMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GrappleCameraMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.HasCameraOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   HasOverride                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::HasCameraOverride(bool* HasOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "HasCameraOverride");

	Params::BP_jRPG_Character_World_C_HasCameraOverride Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasOverride != nullptr)
		*HasOverride = Parms.HasOverride;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Hide AI Companions
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::Hide_AI_Companions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Hide AI Companions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InitCharacterCapabilities
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::InitCharacterCapabilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InitCharacterCapabilities");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_24
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_24(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_24");

	Params::BP_jRPG_Character_World_C_InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_24 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_25
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_25(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_25");

	Params::BP_jRPG_Character_World_C_InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_25 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_26
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_26(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_26");

	Params::BP_jRPG_Character_World_C_InpActEvt_AimAction_K2Node_EnhancedInputActionEvent_26 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_CameraTapAction_K2Node_EnhancedInputActionEvent_17
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_CameraTapAction_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_CameraTapAction_K2Node_EnhancedInputActionEvent_17");

	Params::BP_jRPG_Character_World_C_InpActEvt_CameraTapAction_K2Node_EnhancedInputActionEvent_17 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_CharacterSwitchAction_K2Node_EnhancedInputActionEvent_19
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_CharacterSwitchAction_K2Node_EnhancedInputActionEvent_19(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_CharacterSwitchAction_K2Node_EnhancedInputActionEvent_19");

	Params::BP_jRPG_Character_World_C_InpActEvt_CharacterSwitchAction_K2Node_EnhancedInputActionEvent_19 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugFlyMode_K2Node_EnhancedInputActionEvent_14
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugFlyMode_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugFlyMode_K2Node_EnhancedInputActionEvent_14");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugFlyMode_K2Node_EnhancedInputActionEvent_14 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugForceLoadLastSave_K2Node_EnhancedInputActionEvent_16
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugForceLoadLastSave_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugForceLoadLastSave_K2Node_EnhancedInputActionEvent_16");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugForceLoadLastSave_K2Node_EnhancedInputActionEvent_16 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_11
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_11");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_11 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_12
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_12");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_12 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_13
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_13");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugIncreaseCinematicSpeed_K2Node_EnhancedInputActionEvent_13 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugRequestAutoSave_K2Node_EnhancedInputActionEvent_15
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugRequestAutoSave_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugRequestAutoSave_K2Node_EnhancedInputActionEvent_15");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugRequestAutoSave_K2Node_EnhancedInputActionEvent_15 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport10_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport10_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport10_K2Node_EnhancedInputActionEvent_1");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport10_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport1_K2Node_EnhancedInputActionEvent_10
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport1_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport1_K2Node_EnhancedInputActionEvent_10");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport1_K2Node_EnhancedInputActionEvent_10 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport2_K2Node_EnhancedInputActionEvent_9
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport2_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport2_K2Node_EnhancedInputActionEvent_9");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport2_K2Node_EnhancedInputActionEvent_9 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport3_K2Node_EnhancedInputActionEvent_8
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport3_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport3_K2Node_EnhancedInputActionEvent_8");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport3_K2Node_EnhancedInputActionEvent_8 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport4_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport4_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport4_K2Node_EnhancedInputActionEvent_7");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport4_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport5_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport5_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport5_K2Node_EnhancedInputActionEvent_6");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport5_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport6_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport6_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport6_K2Node_EnhancedInputActionEvent_5");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport6_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport7_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport7_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport7_K2Node_EnhancedInputActionEvent_4");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport7_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport8_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport8_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport8_K2Node_EnhancedInputActionEvent_3");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport8_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_DebugTeleport9_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_DebugTeleport9_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_DebugTeleport9_K2Node_EnhancedInputActionEvent_2");

	Params::BP_jRPG_Character_World_C_InpActEvt_DebugTeleport9_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_E_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_E_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_E_K2Node_InputKeyEvent_1");

	Params::BP_jRPG_Character_World_C_InpActEvt_E_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_0");

	Params::BP_jRPG_Character_World_C_InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_jRPG_Character_World_C::InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_0(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_0");

	Params::BP_jRPG_Character_World_C_InpActEvt_Gamepad_LeftThumbstick_K2Node_InputDebugKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_jRPG_Character_World_C::InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_1(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_1");

	Params::BP_jRPG_Character_World_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputDebugKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_HitInWorldAction_K2Node_EnhancedInputActionEvent_18
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_HitInWorldAction_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_HitInWorldAction_K2Node_EnhancedInputActionEvent_18");

	Params::BP_jRPG_Character_World_C_InpActEvt_HitInWorldAction_K2Node_EnhancedInputActionEvent_18 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_I_K2Node_InputDebugKeyEvent_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_jRPG_Character_World_C::InpActEvt_I_K2Node_InputDebugKeyEvent_6(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_I_K2Node_InputDebugKeyEvent_6");

	Params::BP_jRPG_Character_World_C_InpActEvt_I_K2Node_InputDebugKeyEvent_6 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_IA_CameraRightAction_Gamepad_K2Node_EnhancedInputActionEvent_28
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_IA_CameraRightAction_Gamepad_K2Node_EnhancedInputActionEvent_28(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_IA_CameraRightAction_Gamepad_K2Node_EnhancedInputActionEvent_28");

	Params::BP_jRPG_Character_World_C_InpActEvt_IA_CameraRightAction_Gamepad_K2Node_EnhancedInputActionEvent_28 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_IA_CameraRightAction_Keyboard_K2Node_EnhancedInputActionEvent_27
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_IA_CameraRightAction_Keyboard_K2Node_EnhancedInputActionEvent_27(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_IA_CameraRightAction_Keyboard_K2Node_EnhancedInputActionEvent_27");

	Params::BP_jRPG_Character_World_C_InpActEvt_IA_CameraRightAction_Keyboard_K2Node_EnhancedInputActionEvent_27 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_IA_CameraUpAction_Gamepad_K2Node_EnhancedInputActionEvent_30
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_IA_CameraUpAction_Gamepad_K2Node_EnhancedInputActionEvent_30(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_IA_CameraUpAction_Gamepad_K2Node_EnhancedInputActionEvent_30");

	Params::BP_jRPG_Character_World_C_InpActEvt_IA_CameraUpAction_Gamepad_K2Node_EnhancedInputActionEvent_30 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_IA_CameraUpAction_Keyboard_K2Node_EnhancedInputActionEvent_29
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_IA_CameraUpAction_Keyboard_K2Node_EnhancedInputActionEvent_29(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_IA_CameraUpAction_Keyboard_K2Node_EnhancedInputActionEvent_29");

	Params::BP_jRPG_Character_World_C_InpActEvt_IA_CameraUpAction_Keyboard_K2Node_EnhancedInputActionEvent_29 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_IA_FreeAimExplo_Shoot_K2Node_EnhancedInputActionEvent_23
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_IA_FreeAimExplo_Shoot_K2Node_EnhancedInputActionEvent_23(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_IA_FreeAimExplo_Shoot_K2Node_EnhancedInputActionEvent_23");

	Params::BP_jRPG_Character_World_C_InpActEvt_IA_FreeAimExplo_Shoot_K2Node_EnhancedInputActionEvent_23 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_JumpAction_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_JumpAction_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_JumpAction_K2Node_EnhancedInputActionEvent_0");

	Params::BP_jRPG_Character_World_C_InpActEvt_JumpAction_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_NumPadNine_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_NumPadNine_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_NumPadNine_K2Node_InputKeyEvent_2");

	Params::BP_jRPG_Character_World_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_20
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_20(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_20");

	Params::BP_jRPG_Character_World_C_InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_20 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_21
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_21(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_21");

	Params::BP_jRPG_Character_World_C_InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_21 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_22
// (BlueprintEvent)
// Parameters:
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UInputAction*               SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_22(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_22");

	Params::BP_jRPG_Character_World_C_InpActEvt_SprintAction_K2Node_EnhancedInputActionEvent_22 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_T_K2Node_InputDebugKeyEvent_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_jRPG_Character_World_C::InpActEvt_T_K2Node_InputDebugKeyEvent_4(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_T_K2Node_InputDebugKeyEvent_4");

	Params::BP_jRPG_Character_World_C_InpActEvt_T_K2Node_InputDebugKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_U_K2Node_InputDebugKeyEvent_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_jRPG_Character_World_C::InpActEvt_U_K2Node_InputDebugKeyEvent_5(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_U_K2Node_InputDebugKeyEvent_5");

	Params::BP_jRPG_Character_World_C_InpActEvt_U_K2Node_InputDebugKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_V_K2Node_InputDebugKeyEvent_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_jRPG_Character_World_C::InpActEvt_V_K2Node_InputDebugKeyEvent_2(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_V_K2Node_InputDebugKeyEvent_2");

	Params::BP_jRPG_Character_World_C_InpActEvt_V_K2Node_InputDebugKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_Y_K2Node_InputDebugKeyEvent_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// const struct FInputActionValue&         ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_jRPG_Character_World_C::InpActEvt_Y_K2Node_InputDebugKeyEvent_3(const struct FKey& Key, const struct FInputActionValue& ActionValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_Y_K2Node_InputDebugKeyEvent_3");

	Params::BP_jRPG_Character_World_C_InpActEvt_Y_K2Node_InputDebugKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);
	Parms.ActionValue = std::move(ActionValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_ZoomIn_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_ZoomIn_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_ZoomIn_K2Node_InputActionEvent_0");

	Params::BP_jRPG_Character_World_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpActEvt_ZoomOut_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpActEvt_ZoomOut_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpActEvt_ZoomOut_K2Node_InputActionEvent_1");

	Params::BP_jRPG_Character_World_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InpAxisEvt_DebugFlyingUpDown_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::InpAxisEvt_DebugFlyingUpDown_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InpAxisEvt_DebugFlyingUpDown_K2Node_InputAxisEvent_1");

	Params::BP_jRPG_Character_World_C_InpAxisEvt_DebugFlyingUpDown_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InteractWithReader
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::InteractWithReader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InteractWithReader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InterruptExplorationAttack
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::InterruptExplorationAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InterruptExplorationAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.InterruptExplorationAttackTimeline
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::InterruptExplorationAttackTimeline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "InterruptExplorationAttackTimeline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.IsAnyInputUsable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   Usable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::IsAnyInputUsable(bool* Usable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "IsAnyInputUsable");

	Params::BP_jRPG_Character_World_C_IsAnyInputUsable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Usable != nullptr)
		*Usable = Parms.Usable;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.IsFreeAimTargetDisabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   IsDisabled                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::IsFreeAimTargetDisabled(bool* IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "IsFreeAimTargetDisabled");

	Params::BP_jRPG_Character_World_C_IsFreeAimTargetDisabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDisabled != nullptr)
		*IsDisabled = Parms.IsDisabled;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.IsInAnyRoom
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_GameplayRoom_C*>&      Rooms                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::IsInAnyRoom(TArray<class ABP_GameplayRoom_C*>& Rooms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "IsInAnyRoom");

	Params::BP_jRPG_Character_World_C_IsInAnyRoom Parms{};

	Parms.Rooms = std::move(Rooms);

	UObject::ProcessEvent(Func, &Parms);

	Rooms = std::move(Parms.Rooms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.IsInCustomMovement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_Character_World_C::IsInCustomMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "IsInCustomMovement");

	Params::BP_jRPG_Character_World_C_IsInCustomMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.JumpAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::JumpAction(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "JumpAction");

	Params::BP_jRPG_Character_World_C_JumpAction Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.K2_OnEndCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "K2_OnEndCrouch");

	Params::BP_jRPG_Character_World_C_K2_OnEndCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.K2_OnStartCrouch
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   HalfHeightAdjust                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ScaledHalfHeightAdjust                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "K2_OnStartCrouch");

	Params::BP_jRPG_Character_World_C_K2_OnStartCrouch Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.LimitCharacterWorldMovement
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<E_jRPG_CharacterWorldCapability, bool>&Capabilities                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const struct FS_jRPG_Character_World_Movement_Data&Movement_Data                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::LimitCharacterWorldMovement(const TMap<E_jRPG_CharacterWorldCapability, bool>& Capabilities, const struct FS_jRPG_Character_World_Movement_Data& Movement_Data, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "LimitCharacterWorldMovement");

	Params::BP_jRPG_Character_World_C_LimitCharacterWorldMovement Parms{};

	Parms.Capabilities = std::move(Capabilities);
	Parms.Movement_Data = std::move(Movement_Data);
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.LiveActivation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeTimeOfBrush                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeTimeOfCanvas                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::LiveActivation(class FName ParamName, double FadeTimeOfBrush, double FadeTimeOfCanvas)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "LiveActivation");

	Params::BP_jRPG_Character_World_C_LiveActivation Parms{};

	Parms.ParamName = ParamName;
	Parms.FadeTimeOfBrush = FadeTimeOfBrush;
	Parms.FadeTimeOfCanvas = FadeTimeOfCanvas;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.LiveFluidParams
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BrushSize                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::LiveFluidParams(double BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "LiveFluidParams");

	Params::BP_jRPG_Character_World_C_LiveFluidParams Parms{};

	Parms.BrushSize = BrushSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.LoadAndActivateCharacter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasSwitchCharacter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::LoadAndActivateCharacter(class FName CharacterName, bool HasSwitchCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "LoadAndActivateCharacter");

	Params::BP_jRPG_Character_World_C_LoadAndActivateCharacter Parms{};

	Parms.CharacterName = CharacterName;
	Parms.HasSwitchCharacter = HasSwitchCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.LoadCharacter
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::LoadCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "LoadCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.LoadDependencies
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::LoadDependencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "LoadDependencies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnBattleDependenciesLoaded
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnBattleDependenciesLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnBattleDependenciesLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnBattleEnds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnBattleEnds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnBattleEnds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnBattleStarts
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnBattleStarts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnBattleStarts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnBlendOut_417717A14648999DF1C834AF8E5C7DD4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnBlendOut_417717A14648999DF1C834AF8E5C7DD4(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnBlendOut_417717A14648999DF1C834AF8E5C7DD4");

	Params::BP_jRPG_Character_World_C_OnBlendOut_417717A14648999DF1C834AF8E5C7DD4 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnCharacterCapabilitiesUpdated
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnCharacterCapabilitiesUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnCharacterCapabilitiesUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnCharacterCollectionChanged
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnCharacterCollectionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnCharacterCollectionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnCharacterMovementDataQueueUpdated
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnCharacterMovementDataQueueUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnCharacterMovementDataQueueUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnCompleted_417717A14648999DF1C834AF8E5C7DD4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnCompleted_417717A14648999DF1C834AF8E5C7DD4(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnCompleted_417717A14648999DF1C834AF8E5C7DD4");

	Params::BP_jRPG_Character_World_C_OnCompleted_417717A14648999DF1C834AF8E5C7DD4 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnGaitChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EALSGait                                previousGait                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EALSGait                                nextGait                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnGaitChanged(EALSGait previousGait, EALSGait nextGait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnGaitChanged");

	Params::BP_jRPG_Character_World_C_OnGaitChanged Parms{};

	Parms.previousGait = previousGait;
	Parms.nextGait = nextGait;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnGameUserSettingsApplied
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UConfigurableGameUserSettings*UserConfig                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnGameUserSettingsApplied(const class UConfigurableGameUserSettings* UserConfig)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnGameUserSettingsApplied");

	Params::BP_jRPG_Character_World_C_OnGameUserSettingsApplied Parms{};

	Parms.UserConfig = UserConfig;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnInterrupted_417717A14648999DF1C834AF8E5C7DD4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnInterrupted_417717A14648999DF1C834AF8E5C7DD4(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnInterrupted_417717A14648999DF1C834AF8E5C7DD4");

	Params::BP_jRPG_Character_World_C_OnInterrupted_417717A14648999DF1C834AF8E5C7DD4 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FHitResult&                Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_jRPG_Character_World_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnLanded");

	Params::BP_jRPG_Character_World_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnNotifyBegin_417717A14648999DF1C834AF8E5C7DD4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnNotifyBegin_417717A14648999DF1C834AF8E5C7DD4(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnNotifyBegin_417717A14648999DF1C834AF8E5C7DD4");

	Params::BP_jRPG_Character_World_C_OnNotifyBegin_417717A14648999DF1C834AF8E5C7DD4 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnNotifyEnd_417717A14648999DF1C834AF8E5C7DD4
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnNotifyEnd_417717A14648999DF1C834AF8E5C7DD4(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnNotifyEnd_417717A14648999DF1C834AF8E5C7DD4");

	Params::BP_jRPG_Character_World_C_OnNotifyEnd_417717A14648999DF1C834AF8E5C7DD4 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnRollAnimationStarted
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnRollAnimationStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnRollAnimationStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnRollAnimationStopped
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInterrupted                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnRollAnimationStopped(bool IsInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnRollAnimationStopped");

	Params::BP_jRPG_Character_World_C_OnRollAnimationStopped Parms{};

	Parms.IsInterrupted = IsInterrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnSaveLoaded
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::OnSaveLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnSaveLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.OnTargetViewAboutToChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PreviousViewTarget                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CurrentViewTarget                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::OnTargetViewAboutToChanged(class AActor* PreviousViewTarget, class AActor* CurrentViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "OnTargetViewAboutToChanged");

	Params::BP_jRPG_Character_World_C_OnTargetViewAboutToChanged Parms{};

	Parms.PreviousViewTarget = PreviousViewTarget;
	Parms.CurrentViewTarget = CurrentViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.PlayAnimMontageOnCharacterWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::PlayAnimMontageOnCharacterWorld(class UAnimMontage* MontageToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "PlayAnimMontageOnCharacterWorld");

	Params::BP_jRPG_Character_World_C_PlayAnimMontageOnCharacterWorld Parms{};

	Parms.MontageToPlay = MontageToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.PostBattleAggroDelay
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::PostBattleAggroDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "PostBattleAggroDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ReceiveActorBeginOverlap");

	Params::BP_jRPG_Character_World_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ReceiveActorEndOverlap");

	Params::BP_jRPG_Character_World_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_jRPG_Character_World_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ReceiveEndPlay");

	Params::BP_jRPG_Character_World_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ReceivePossessed");

	Params::BP_jRPG_Character_World_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ReceiveTick");

	Params::BP_jRPG_Character_World_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ReceiveUnpossessed");

	Params::BP_jRPG_Character_World_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.RemoveCharacterCapabilitiesOverride
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::RemoveCharacterCapabilitiesOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "RemoveCharacterCapabilitiesOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.RemoveCharacterMovementData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_jRPG_Character_World_Movement_Data&MovementData_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::RemoveCharacterMovementData(const struct FS_jRPG_Character_World_Movement_Data& MovementData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "RemoveCharacterMovementData");

	Params::BP_jRPG_Character_World_C_RemoveCharacterMovementData Parms{};

	Parms.MovementData_0 = std::move(MovementData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.RemoveInteractable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::RemoveInteractable(class AActor* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "RemoveInteractable");

	Params::BP_jRPG_Character_World_C_RemoveInteractable Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ResetCamValuesToCache
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ResetCamValuesToCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ResetCamValuesToCache");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ResetCharacterCapabilitiesAndMovementData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ResetCharacterCapabilitiesAndMovementData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ResetCharacterCapabilitiesAndMovementData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ResetCharacterWorldMovement
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ResetCharacterWorldMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ResetCharacterWorldMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ResetLocationToCheckPoint
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ResetLocationToCheckPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ResetLocationToCheckPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.RightMovementAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::RightMovementAction(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "RightMovementAction");

	Params::BP_jRPG_Character_World_C_RightMovementAction Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SaveCamValuesInCache
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::SaveCamValuesInCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SaveCamValuesInCache");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetAbpBattleForAiming
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aiming                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SetAbpBattleForAiming(bool Aiming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetAbpBattleForAiming");

	Params::BP_jRPG_Character_World_C_SetAbpBattleForAiming Parms{};

	Parms.Aiming = Aiming;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetCharacterCapabilitiesOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_jRPG_Character_World_Capabilities&Capabilities                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SetCharacterCapabilitiesOverride(const struct FS_jRPG_Character_World_Capabilities& Capabilities)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetCharacterCapabilitiesOverride");

	Params::BP_jRPG_Character_World_C_SetCharacterCapabilitiesOverride Parms{};

	Parms.Capabilities = std::move(Capabilities);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetCharacterCustomization
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_CharacterCustomization& CharacterCustomization                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             Character_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SetCharacterCustomization(const struct FS_CharacterCustomization& CharacterCustomization, class FName Character_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetCharacterCustomization");

	Params::BP_jRPG_Character_World_C_SetCharacterCustomization Parms{};

	Parms.CharacterCustomization = std::move(CharacterCustomization);
	Parms.Character_Name = Character_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetCharacterSpotLightsEnabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SetCharacterSpotLightsEnabled(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetCharacterSpotLightsEnabled");

	Params::BP_jRPG_Character_World_C_SetCharacterSpotLightsEnabled Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetGaitToRunningIfPossible
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::SetGaitToRunningIfPossible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetGaitToRunningIfPossible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetGaitToSprintIfPossible
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::SetGaitToSprintIfPossible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetGaitToSprintIfPossible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetIsAttachedToMovingPlatform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAttachedToMovingPlatform_0                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SetIsAttachedToMovingPlatform(bool IsAttachedToMovingPlatform_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetIsAttachedToMovingPlatform");

	Params::BP_jRPG_Character_World_C_SetIsAttachedToMovingPlatform Parms{};

	Parms.IsAttachedToMovingPlatform_0 = IsAttachedToMovingPlatform_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetLastCheckpoint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           SourceObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SetLastCheckpoint(const struct FVector& Location, const struct FRotator& Rotation, class AActor* SourceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetLastCheckpoint");

	Params::BP_jRPG_Character_World_C_SetLastCheckpoint Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.SourceObject = SourceObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SetSpawnLocationFromWorldMap
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::SetSpawnLocationFromWorldMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SetSpawnLocationFromWorldMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SpawnAICompanions
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::SpawnAICompanions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SpawnAICompanions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SpringArmControl
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Target_Arm_Length                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  CameraLagMaxDistance                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SpringArmControl(float Target_Arm_Length, double CameraLagMaxDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SpringArmControl");

	Params::BP_jRPG_Character_World_C_SpringArmControl Parms{};

	Parms.Target_Arm_Length = Target_Arm_Length;
	Parms.CameraLagMaxDistance = CameraLagMaxDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SpringArmControl_Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::SpringArmControl_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SpringArmControl_Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SpringArmControl_Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::SpringArmControl_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SpringArmControl_Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SpringArmReset
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::SpringArmReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SpringArmReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SpringArmReset_Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::SpringArmReset_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SpringArmReset_Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SpringArmReset_Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::SpringArmReset_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SpringArmReset_Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.SprintAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::SprintAction(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "SprintAction");

	Params::BP_jRPG_Character_World_C_SprintAction Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.StanceAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::StanceAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "StanceAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.StopCustomMovement
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::StopCustomMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "StopCustomMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.TeleportCharacter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                DestinationTransform                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  CameraRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_jRPG_Character_World_C::TeleportCharacter(const struct FTransform& DestinationTransform, const struct FRotator& CameraRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "TeleportCharacter");

	Params::BP_jRPG_Character_World_C_TeleportCharacter Parms{};

	Parms.DestinationTransform = std::move(DestinationTransform);
	Parms.CameraRotation = std::move(CameraRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.TeleportCharacterToArea
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FTransform&                DestinationTransform                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  CameraRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_LightingScenarioReference_C*  LightingScenario                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// const struct FS_AreaAudioParameters&    AreaAudioParameters                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// const struct FS_ChangeLevelParameters&  ChangeLevelParameters                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::TeleportCharacterToArea(const struct FTransform& DestinationTransform, const struct FRotator& CameraRotation, class ABP_LightingScenarioReference_C* LightingScenario, const struct FS_AreaAudioParameters& AreaAudioParameters, const struct FS_ChangeLevelParameters& ChangeLevelParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "TeleportCharacterToArea");

	Params::BP_jRPG_Character_World_C_TeleportCharacterToArea Parms{};

	Parms.DestinationTransform = std::move(DestinationTransform);
	Parms.CameraRotation = std::move(CameraRotation);
	Parms.LightingScenario = LightingScenario;
	Parms.AreaAudioParameters = std::move(AreaAudioParameters);
	Parms.ChangeLevelParameters = std::move(ChangeLevelParameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_ExplorationAttack__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_ExplorationAttack__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_ExplorationAttack__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_ExplorationAttack__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_ExplorationAttack__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_ExplorationAttack__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_GrappeCamera__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_GrappeCamera__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_GrappeCamera__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.Timeline_GrappeCamera__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_Character_World_C::Timeline_GrappeCamera__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "Timeline_GrappeCamera__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ToggleGaitIfPossible
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ToggleGaitIfPossible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ToggleGaitIfPossible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UnattachTorch
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UnattachTorch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UnattachTorch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UnloadDependencies
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UnloadDependencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UnloadDependencies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UnspawnAICompanions
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UnspawnAICompanions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UnspawnAICompanions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UpdateCharacterCapabilities
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TMap<E_jRPG_CharacterWorldCapability, bool>&Capabilities                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// const class FString&                    Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::UpdateCharacterCapabilities(const TMap<E_jRPG_CharacterWorldCapability, bool>& Capabilities, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UpdateCharacterCapabilities");

	Params::BP_jRPG_Character_World_C_UpdateCharacterCapabilities Parms{};

	Parms.Capabilities = std::move(Capabilities);
	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UpdateCharacterVisualAlterations
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UpdateCharacterVisualAlterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UpdateCharacterVisualAlterations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UpdateDebugFlyModeSpeed
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UpdateDebugFlyModeSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UpdateDebugFlyModeSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UpdateInteractables
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UpdateInteractables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UpdateInteractables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UpdateSpringArmLength
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UpdateSpringArmLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UpdateSpringArmLength");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.WaterFXDelay
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::WaterFXDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "WaterFXDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ZoomInEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ZoomInEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ZoomInEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.ZoomOutEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_Character_World_C::ZoomOutEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "ZoomOutEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.GetAllowedGait
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EALSGait                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EALSGait ABP_jRPG_Character_World_C::GetAllowedGait() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "GetAllowedGait");

	Params::BP_jRPG_Character_World_C_GetAllowedGait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_Character_World.BP_jRPG_Character_World_C.IsCapabilityAllowed
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_jRPG_CharacterWorldCapability         Capability                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   isAllowed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_Character_World_C::IsCapabilityAllowed(E_jRPG_CharacterWorldCapability Capability, bool* isAllowed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_Character_World_C", "IsCapabilityAllowed");

	Params::BP_jRPG_Character_World_C_IsCapabilityAllowed Parms{};

	Parms.Capability = Capability;

	UObject::ProcessEvent(Func, &Parms);

	if (isAllowed != nullptr)
		*isAllowed = Parms.isAllowed;
}

}

