#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProtoArmRingLight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ProtoArmRingLight.BP_ProtoArmRingLight_C.BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ProtoArmRingLight.BP_ProtoArmRingLight_C.BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ProtoArmRingLight_C_BndEvt__BP_ProtoArmRingLight_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ProtoArmRingLight.BP_ProtoArmRingLight_C.ExecuteUbergraph_BP_ProtoArmRingLight
// 0x01E0 (0x01E0 - 0x0000)
struct BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0060(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_LightSafeArea_C*                    K2Node_DynamicCast_AsBP_Light_Safe_Area;           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LightPerturbatorArea_C*             K2Node_DynamicCast_AsBP_Light_Perturbator_Area;    // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LightSafeArea_C*                    K2Node_DynamicCast_AsBP_Light_Safe_Area_1;         // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Controller_World_C*            K2Node_DynamicCast_AsBP_J_RPG_Controller_World;    // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight) == 0x000008, "Wrong alignment on BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight");
static_assert(sizeof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight) == 0x0001E0, "Wrong size on BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, EntryPoint) == 0x000000, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000030, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, Temp_bool_IsClosed_Variable) == 0x000038, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000040, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000048, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000050, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000058, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_bFromSweep) == 0x00005C, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_SweepResult) == 0x000060, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_AsBP_Light_Safe_Area) == 0x000158, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_AsBP_Light_Safe_Area' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_AsBP_Light_Perturbator_Area) == 0x000168, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_AsBP_Light_Perturbator_Area' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000178, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OtherActor) == 0x000180, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OtherComp) == 0x000188, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000190, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_AsBP_Light_Safe_Area_1) == 0x000198, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_AsBP_Light_Safe_Area_1' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_GetMaterial_ReturnValue) == 0x0001A8, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001B0, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_GetPlayerController_ReturnValue) == 0x0001B8, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_AsBP_J_RPG_Controller_World) == 0x0001C0, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_AsBP_J_RPG_Controller_World' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, K2Node_DynamicCast_bSuccess_3) == 0x0001C8, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, Temp_bool_Has_Been_Initd_Variable) == 0x0001C9, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0001D0, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0001D8, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight, CallFunc_Delay_Duration_ImplicitCast) == 0x0001DC, "Member 'BP_ProtoArmRingLight_C_ExecuteUbergraph_BP_ProtoArmRingLight::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

}

