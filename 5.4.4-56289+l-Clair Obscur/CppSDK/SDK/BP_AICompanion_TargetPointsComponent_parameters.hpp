#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AICompanion_TargetPointsComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SandFall_structs.hpp"


namespace SDK::Params
{

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ExecuteUbergraph_BP_AICompanion_TargetPointsComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent) == 0x000004, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent) == 0x000008, "Wrong size on BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent, EntryPoint) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_AICompanion_TargetPointsComponent_C_ExecuteUbergraph_BP_AICompanion_TargetPointsComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.FindBestPointBasedOnDistance
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance final
{
public:
	class ABP_Pawn_AICompanion_C*                 Companion_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ForbiddenIndexes;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Index_0;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        local_BestDistanceSquared;                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_BestIndex;                                   // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ComputeTargetPoint_Result;                // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance) == 0x0000A8, "Wrong size on BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, Companion_0) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::Companion_0' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, ForbiddenIndexes) == 0x000008, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::ForbiddenIndexes' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, Index_0) == 0x000018, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, local_BestDistanceSquared) == 0x000020, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::local_BestDistanceSquared' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, local_BestIndex) == 0x000028, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::local_BestIndex' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Array_Find_ReturnValue) == 0x000048, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_ComputeTargetPoint_Result) == 0x000080, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_ComputeTargetPoint_Result' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000098, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_AICompanion_TargetPointsComponent_C_FindBestPointBasedOnDistance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.GetOrTryAcquirePoint
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint final
{
public:
	class ABP_Pawn_AICompanion_C*                 Companion_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TryAcquireNextPoint_Point;                // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAcquireNextPoint_Success;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ComputeTargetPoint_Result;                // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnspawning_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeTargetPoint_Result_1;              // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint) == 0x0000A0, "Wrong size on BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, Companion_0) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::Companion_0' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, Point) == 0x000008, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::Point' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, Success) == 0x000020, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::Success' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_TryAcquireNextPoint_Point) == 0x000028, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_TryAcquireNextPoint_Point' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_TryAcquireNextPoint_Success) == 0x000040, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_TryAcquireNextPoint_Success' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_ComputeTargetPoint_Result) == 0x000048, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_ComputeTargetPoint_Result' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_IsUnspawning_ReturnValue) == 0x000060, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_IsUnspawning_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_Map_Find_Value) == 0x000064, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint, CallFunc_ComputeTargetPoint_Result_1) == 0x000088, "Member 'BP_AICompanion_TargetPointsComponent_C_GetOrTryAcquirePoint::CallFunc_ComputeTargetPoint_Result_1' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.GetTotalNumberOfPoints
// 0x0008 (0x0008 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints) == 0x000004, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints) == 0x000008, "Wrong size on BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints, ReturnValue) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_AICompanion_TargetPointsComponent_C_GetTotalNumberOfPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.HasAnyPointAvailable
// 0x0010 (0x0010 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable) == 0x000004, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable) == 0x000010, "Wrong size on BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable, Result) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable::Result' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable, CallFunc_Map_Length_ReturnValue) == 0x000004, "Member 'BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AICompanion_TargetPointsComponent_C_HasAnyPointAvailable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_ReceiveTick");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_AICompanion_TargetPointsComponent_C_ReceiveTick");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ReleasePoint
// 0x0010 (0x0010 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_ReleasePoint final
{
public:
	class ABP_Pawn_AICompanion_C*                 Companion_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_ReleasePoint) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_ReleasePoint");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_ReleasePoint) == 0x000010, "Wrong size on BP_AICompanion_TargetPointsComponent_C_ReleasePoint");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ReleasePoint, Companion_0) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_ReleasePoint::Companion_0' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ReleasePoint, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AICompanion_TargetPointsComponent_C_ReleasePoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ReleasePoint, CallFunc_Map_Remove_ReturnValue) == 0x000009, "Member 'BP_AICompanion_TargetPointsComponent_C_ReleasePoint::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.SearchNextAvailablePointIndex
// 0x0038 (0x0038 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex) == 0x000038, "Wrong size on BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, Index_0) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, Temp_int_Variable) == 0x000004, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, CallFunc_Map_Values_Values) == 0x000018, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, CallFunc_Array_Find_ReturnValue) == 0x00002C, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_AICompanion_TargetPointsComponent_C_SearchNextAvailablePointIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.TryAcquireNextPoint
// 0x0050 (0x0050 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint final
{
public:
	class ABP_Pawn_AICompanion_C*                 Companion_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Point;                                             // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         local_Index;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SearchNextAvailablePointIndex_Index;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyPointAvailable_Result;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint) == 0x000050, "Wrong size on BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint, Companion_0) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint::Companion_0' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint, Point) == 0x000008, "Member 'BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint::Point' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint, Success) == 0x000020, "Member 'BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint::Success' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint, local_Index) == 0x000024, "Member 'BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint::local_Index' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint, CallFunc_SearchNextAvailablePointIndex_Index) == 0x000028, "Member 'BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint::CallFunc_SearchNextAvailablePointIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint, CallFunc_HasAnyPointAvailable_Result) == 0x000048, "Member 'BP_AICompanion_TargetPointsComponent_C_TryAcquireNextPoint::CallFunc_HasAnyPointAvailable_Result' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.UpdatePointsBasedOnDistance
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance final
{
public:
	TMap<class ABP_Pawn_AICompanion_C*, int32>    local_AcquiredPointsByCompanions;                  // 0x0000(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0060(0x0010)(ReferenceParm)
	TArray<class ABP_Pawn_AICompanion_C*>         CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ReferenceParm)
	TArray<int32>                                 CallFunc_Map_Values_Values_1;                      // 0x0080(0x0010)(ReferenceParm)
	class ABP_Pawn_AICompanion_C*                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindBestPointBasedOnDistance_Index;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance) == 0x0000A8, "Wrong size on BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, local_AcquiredPointsByCompanions) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::local_AcquiredPointsByCompanions' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, Temp_int_Array_Index_Variable) == 0x000054, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_Map_Values_Values) == 0x000060, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_Map_Values_Values_1) == 0x000080, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_Map_Values_Values_1' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_FindBestPointBasedOnDistance_Index) == 0x00009C, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_FindBestPointBasedOnDistance_Index' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_AICompanion_TargetPointsComponent_C_UpdatePointsBasedOnDistance::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.ComputeTargetPoint
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint final
{
public:
	struct FVector                                LocalPoint;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Result;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewLocalVar;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint) == 0x000010, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint) == 0x0000C0, "Wrong size on BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint, LocalPoint) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint::LocalPoint' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint, Result) == 0x000018, "Member 'BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint::Result' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint, NewLocalVar) == 0x000030, "Member 'BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint, CallFunc_TransformLocation_ReturnValue) == 0x0000A0, "Member 'BP_AICompanion_TargetPointsComponent_C_ComputeTargetPoint::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.Editor_DrawDebugShapes
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_wildcard_Variable;                            // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_Pawn_AICompanion_C*>         CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ComputeTargetPoint_Result;                // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Values_Values;                        // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Pawn_AICompanion_C*                 CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes) == 0x0000C8, "Wrong size on BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, ReturnValue) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, Temp_wildcard_Variable) == 0x000010, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_ComputeTargetPoint_Result) == 0x000078, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_ComputeTargetPoint_Result' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Map_Values_Values) == 0x000098, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Array_Find_ReturnValue) == 0x0000A8, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AC, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes, CallFunc_GetDisplayName_ReturnValue) == 0x0000B8, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_DrawDebugShapes::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function BP_AICompanion_TargetPointsComponent.BP_AICompanion_TargetPointsComponent_C.Editor_GetDebugShapes
// 0x0028 (0x0028 - 0x0000)
struct BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes final
{
public:
	TArray<struct FEditorDebugShape_Arrow>        Arrows;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FEditorDebugShape_Arrow>        Lines;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes) == 0x000008, "Wrong alignment on BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes");
static_assert(sizeof(BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes) == 0x000028, "Wrong size on BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes, Arrows) == 0x000000, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes::Arrows' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes, Lines) == 0x000010, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes::Lines' has a wrong offset!");
static_assert(offsetof(BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes, ReturnValue) == 0x000020, "Member 'BP_AICompanion_TargetPointsComponent_C_Editor_GetDebugShapes::ReturnValue' has a wrong offset!");

}

