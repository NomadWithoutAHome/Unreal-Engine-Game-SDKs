#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventRoutingSystemComponent

#include "Basic.hpp"

#include "BP_EventRoutingSystemComponent_classes.hpp"
#include "BP_EventRoutingSystemComponent_parameters.hpp"


namespace SDK
{

// Function BP_EventRoutingSystemComponent.BP_EventRoutingSystemComponent_C.ClearLastExecutedEventHandle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EventRoutingSystemComponent_C::ClearLastExecutedEventHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventRoutingSystemComponent_C", "ClearLastExecutedEventHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventRoutingSystemComponent.BP_EventRoutingSystemComponent_C.DeclareEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFRoutedEventHandle&             SkillHandle                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// const TDelegate<void()>&                Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_EventRoutingSystemComponent_C::DeclareEvent(struct FFRoutedEventHandle& SkillHandle, const TDelegate<void()>& Event, const class FString& DebugName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventRoutingSystemComponent_C", "DeclareEvent");

	Params::BP_EventRoutingSystemComponent_C_DeclareEvent Parms{};

	Parms.SkillHandle = std::move(SkillHandle);
	Parms.Event = Event;
	Parms.DebugName = std::move(DebugName);

	UObject::ProcessEvent(Func, &Parms);

	SkillHandle = std::move(Parms.SkillHandle);
}


// Function BP_EventRoutingSystemComponent.BP_EventRoutingSystemComponent_C.ExecuteEventFromHandle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFRoutedEventHandle&             EventHandle                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)

void UBP_EventRoutingSystemComponent_C::ExecuteEventFromHandle(struct FFRoutedEventHandle& EventHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventRoutingSystemComponent_C", "ExecuteEventFromHandle");

	Params::BP_EventRoutingSystemComponent_C_ExecuteEventFromHandle Parms{};

	Parms.EventHandle = std::move(EventHandle);

	UObject::ProcessEvent(Func, &Parms);

	EventHandle = std::move(Parms.EventHandle);
}


// Function BP_EventRoutingSystemComponent.BP_EventRoutingSystemComponent_C.GetLastExecutedEventHandle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFRoutedEventHandle              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

struct FFRoutedEventHandle UBP_EventRoutingSystemComponent_C::GetLastExecutedEventHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventRoutingSystemComponent_C", "GetLastExecutedEventHandle");

	Params::BP_EventRoutingSystemComponent_C_GetLastExecutedEventHandle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

