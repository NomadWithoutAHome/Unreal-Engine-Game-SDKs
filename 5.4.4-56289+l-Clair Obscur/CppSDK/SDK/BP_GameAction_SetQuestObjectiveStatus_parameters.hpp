#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameAction_SetQuestObjectiveStatus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_Quest_structs.hpp"


namespace SDK::Params
{

// Function BP_GameAction_SetQuestObjectiveStatus.BP_GameAction_SetQuestObjectiveStatus_C.ValidateGameAction
// 0x0158 (0x0158 - 0x0000)
struct BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 PropertyPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          ExploreAssetChildren;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AppendPropertyPath_ReturnValue;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0038(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0048(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00F8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetQuestDataTable_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetQuestDataTable_ReturnValue_1;          // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_Quest                               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0138(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction) == 0x000008, "Wrong alignment on BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction");
static_assert(sizeof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction) == 0x000158, "Wrong size on BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, ErrorMessages) == 0x000000, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, PropertyPath) == 0x000010, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::PropertyPath' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, ExploreAssetChildren) == 0x000020, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::ExploreAssetChildren' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_AppendPropertyPath_ReturnValue) == 0x000028, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_AppendPropertyPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_Conv_NameToText_ReturnValue) == 0x000038, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000048, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, K2Node_MakeArray_Array) == 0x0000E8, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, K2Node_MakeArray_Array_1) == 0x0000F8, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_Format_ReturnValue_1) == 0x000118, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_GetQuestDataTable_ReturnValue) == 0x000128, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_GetQuestDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_GetQuestDataTable_ReturnValue_1) == 0x000130, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_GetQuestDataTable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_GetDataTableRowFromName_OutRow) == 0x000138, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_IsValid_ReturnValue) == 0x000151, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_IsValid_ReturnValue_1) == 0x000152, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000153, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_ValidateGameAction::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");

// Function BP_GameAction_SetQuestObjectiveStatus.BP_GameAction_SetQuestObjectiveStatus_C.GetInstanceClass
// 0x0008 (0x0008 - 0x0000)
struct BP_GameAction_SetQuestObjectiveStatus_C_GetInstanceClass final
{
public:
	TSubclassOf<class UGameActionInstance>        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameAction_SetQuestObjectiveStatus_C_GetInstanceClass) == 0x000008, "Wrong alignment on BP_GameAction_SetQuestObjectiveStatus_C_GetInstanceClass");
static_assert(sizeof(BP_GameAction_SetQuestObjectiveStatus_C_GetInstanceClass) == 0x000008, "Wrong size on BP_GameAction_SetQuestObjectiveStatus_C_GetInstanceClass");
static_assert(offsetof(BP_GameAction_SetQuestObjectiveStatus_C_GetInstanceClass, ReturnValue) == 0x000000, "Member 'BP_GameAction_SetQuestObjectiveStatus_C_GetInstanceClass::ReturnValue' has a wrong offset!");

}

