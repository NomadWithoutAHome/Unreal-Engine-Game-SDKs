#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_StanceMechanicComponent

#include "Basic.hpp"

#include "BP_StanceMechanicComponent_classes.hpp"
#include "BP_StanceMechanicComponent_parameters.hpp"


namespace SDK
{

// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.CreatePortraitWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget**                     CreatedUserWidget                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32*                                  SlotIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::CreatePortraitWidget(class UUserWidget** CreatedUserWidget, int32* SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "CreatePortraitWidget");

	Params::BP_StanceMechanicComponent_C_CreatePortraitWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CreatedUserWidget != nullptr)
		*CreatedUserWidget = Parms.CreatedUserWidget;

	if (SlotIndex != nullptr)
		*SlotIndex = Parms.SlotIndex;
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.ExecuteUbergraph_BP_StanceMechanicComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::ExecuteUbergraph_BP_StanceMechanicComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "ExecuteUbergraph_BP_StanceMechanicComponent");

	Params::BP_StanceMechanicComponent_C_ExecuteUbergraph_BP_StanceMechanicComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.GetBattleManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAC_jRPG_BattleManager_C**        BattleManagerReference                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::GetBattleManager(class UAC_jRPG_BattleManager_C** BattleManagerReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "GetBattleManager");

	Params::BP_StanceMechanicComponent_C_GetBattleManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BattleManagerReference != nullptr)
		*BattleManagerReference = Parms.BattleManagerReference;
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.GetNextStance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_StanceType                            DesiredStance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_StanceType*                           NewStance                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::GetNextStance(E_StanceType DesiredStance, E_StanceType* NewStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "GetNextStance");

	Params::BP_StanceMechanicComponent_C_GetNextStance Parms{};

	Parms.DesiredStance = DesiredStance;

	UObject::ProcessEvent(Func, &Parms);

	if (NewStance != nullptr)
		*NewStance = Parms.NewStance;
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.IsStanceSwitchValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const E_StanceType&                     ItemToFind                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::IsStanceSwitchValid(const E_StanceType& ItemToFind, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "IsStanceSwitchValid");

	Params::BP_StanceMechanicComponent_C_IsStanceSwitchValid Parms{};

	Parms.ItemToFind = ItemToFind;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OnBattleFinished_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Victory                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::OnBattleFinished_Event_0(bool Victory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "OnBattleFinished_Event_0");

	Params::BP_StanceMechanicComponent_C_OnBattleFinished_Event_0 Parms{};

	Parms.Victory = Victory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OnDeath
// (BlueprintCallable, BlueprintEvent)

void UBP_StanceMechanicComponent_C::OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "OnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OnTurnEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StanceMechanicComponent_C::OnTurnEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "OnTurnEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OnTurnStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StanceMechanicComponent_C::OnTurnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "OnTurnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.OverrideSwitchStanceOnBaseAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_StanceType                            AttackTurnEndStanceSwitch_0                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::OverrideSwitchStanceOnBaseAttack(E_StanceType AttackTurnEndStanceSwitch_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "OverrideSwitchStanceOnBaseAttack");

	Params::BP_StanceMechanicComponent_C_OverrideSwitchStanceOnBaseAttack Parms{};

	Parms.AttackTurnEndStanceSwitch_0 = AttackTurnEndStanceSwitch_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_StanceMechanicComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "ReceiveEndPlay");

	Params::BP_StanceMechanicComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.ResetBattleActionValidation
// (BlueprintCallable, BlueprintEvent)

void UBP_StanceMechanicComponent_C::ResetBattleActionValidation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "ResetBattleActionValidation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.Sandfall_SwitchStance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_StanceType                            Stance                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::Sandfall_SwitchStance(E_StanceType Stance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "Sandfall_SwitchStance");

	Params::BP_StanceMechanicComponent_C_Sandfall_SwitchStance Parms{};

	Parms.Stance = Stance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.SetIsStanceChangeFromSkill
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::SetIsStanceChangeFromSkill(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "SetIsStanceChangeFromSkill");

	Params::BP_StanceMechanicComponent_C_SetIsStanceChangeFromSkill Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.Stanceless
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StanceMechanicComponent_C::Stanceless()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "Stanceless");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.SwitchStance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_StanceType                            Stance                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResetToNoStanceIfSameStance                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShouldPlayVFX                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_StanceType*                           NewStance                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_StanceMechanicComponent_C::SwitchStance(E_StanceType Stance, bool ResetToNoStanceIfSameStance, bool ShouldPlayVFX, E_StanceType* NewStance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "SwitchStance");

	Params::BP_StanceMechanicComponent_C_SwitchStance Parms{};

	Parms.Stance = Stance;
	Parms.ResetToNoStanceIfSameStance = ResetToNoStanceIfSameStance;
	Parms.ShouldPlayVFX = ShouldPlayVFX;

	UObject::ProcessEvent(Func, &Parms);

	if (NewStance != nullptr)
		*NewStance = Parms.NewStance;
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.SwitchStanceOnBaseAttack_New
// (BlueprintCallable, BlueprintEvent)

void UBP_StanceMechanicComponent_C::SwitchStanceOnBaseAttack_New()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "SwitchStanceOnBaseAttack_New");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_StanceMechanicComponent.BP_StanceMechanicComponent_C.TryRemoveMechanicPanel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_StanceMechanicComponent_C::TryRemoveMechanicPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_StanceMechanicComponent_C", "TryRemoveMechanicPanel");

	UObject::ProcessEvent(Func, nullptr);
}

}

