#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EyeEffectsControllerComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_EyeEffectsControllerComponent.BP_EyeEffectsControllerComponent_C.SetFaceSkeletalMeshComponent
// 0x0010 (0x0010 - 0x0000)
struct BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent final
{
public:
	class USkeletalMeshComponent*                 FaceSkeletalMeshComponent_0;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent) == 0x000008, "Wrong alignment on BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent");
static_assert(sizeof(BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent) == 0x000010, "Wrong size on BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent, FaceSkeletalMeshComponent_0) == 0x000000, "Member 'BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent::FaceSkeletalMeshComponent_0' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EyeEffectsControllerComponent_C_SetFaceSkeletalMeshComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EyeEffectsControllerComponent.BP_EyeEffectsControllerComponent_C.UpdateEyeSparkOrientation
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation final
{
public:
	class UMeshComponent*                         FaceMeshComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation) == 0x000010, "Wrong alignment on BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation");
static_assert(sizeof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation) == 0x0000F0, "Wrong size on BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, FaceMeshComponent) == 0x000000, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::FaceMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, CallFunc_GetSocketTransform_ReturnValue) == 0x000010, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, CallFunc_BreakTransform_Location) == 0x000078, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, CallFunc_GetUpVector_ReturnValue) == 0x0000C0, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_EyeEffectsControllerComponent_C_UpdateEyeSparkOrientation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_EyeEffectsControllerComponent.BP_EyeEffectsControllerComponent_C.OnCharacterCustomizationChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged final
{
public:
	class UBP_CharacterSkinComponent_C*           SkinComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetFaceSkeletalMesh_Face;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged) == 0x000008, "Wrong alignment on BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged");
static_assert(sizeof(BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged) == 0x000010, "Wrong size on BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged, SkinComponent) == 0x000000, "Member 'BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged::SkinComponent' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged, CallFunc_GetFaceSkeletalMesh_Face) == 0x000008, "Member 'BP_EyeEffectsControllerComponent_C_OnCharacterCustomizationChanged::CallFunc_GetFaceSkeletalMesh_Face' has a wrong offset!");

// Function BP_EyeEffectsControllerComponent.BP_EyeEffectsControllerComponent_C.TryRegisterCharacterSkinComponent
// 0x0028 (0x0028 - 0x0000)
struct BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_CharacterSkinComponent_C* SkinComponent)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterSkinComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent) == 0x000008, "Wrong alignment on BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent");
static_assert(sizeof(BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent) == 0x000028, "Wrong size on BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EyeEffectsControllerComponent_C_TryRegisterCharacterSkinComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EyeEffectsControllerComponent.BP_EyeEffectsControllerComponent_C.TryCacheCurrentCharacterFace
// 0x0028 (0x0028 - 0x0000)
struct BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CallFunc_GetComponentsByTag_ReturnValue;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace) == 0x000008, "Wrong alignment on BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace");
static_assert(sizeof(BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace) == 0x000028, "Wrong size on BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace, CallFunc_GetComponentsByTag_ReturnValue) == 0x000008, "Member 'BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000018, "Member 'BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EyeEffectsControllerComponent_C_TryCacheCurrentCharacterFace::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_EyeEffectsControllerComponent.BP_EyeEffectsControllerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EyeEffectsControllerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EyeEffectsControllerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EyeEffectsControllerComponent_C_ReceiveTick");
static_assert(sizeof(BP_EyeEffectsControllerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_EyeEffectsControllerComponent_C_ReceiveTick");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EyeEffectsControllerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EyeEffectsControllerComponent.BP_EyeEffectsControllerComponent_C.ExecuteUbergraph_BP_EyeEffectsControllerComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent) == 0x000004, "Wrong alignment on BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent");
static_assert(sizeof(BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent) == 0x000008, "Wrong size on BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent, EntryPoint) == 0x000000, "Member 'BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_EyeEffectsControllerComponent_C_ExecuteUbergraph_BP_EyeEffectsControllerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

