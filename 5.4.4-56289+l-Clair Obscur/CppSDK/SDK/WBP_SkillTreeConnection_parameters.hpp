#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillTreeConnection

#include "Basic.hpp"

#include "ESkillNodeState_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_SkillTreeConnection.WBP_SkillTreeConnection_C.ExecuteUbergraph_WBP_SkillTreeConnection
// 0x005C (0x005C - 0x0000)
struct WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x001C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0030(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0044(0x0014)()
	ESkillNodeState                               K2Node_CustomEvent_ConnectionState;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection) == 0x000004, "Wrong alignment on WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection");
static_assert(sizeof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection) == 0x00005C, "Wrong size on WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, EntryPoint) == 0x000000, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, K2Node_MakeStruct_SlateColor_1) == 0x00001C, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, K2Node_MakeStruct_SlateColor_2) == 0x000030, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, K2Node_MakeStruct_SlateColor_3) == 0x000044, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, K2Node_CustomEvent_ConnectionState) == 0x000058, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::K2Node_CustomEvent_ConnectionState' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000059, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection, K2Node_SwitchEnum_CmpSuccess) == 0x00005A, "Member 'WBP_SkillTreeConnection_C_ExecuteUbergraph_WBP_SkillTreeConnection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_SkillTreeConnection.WBP_SkillTreeConnection_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SkillTreeConnection_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeConnection_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SkillTreeConnection_C_PreConstruct");
static_assert(sizeof(WBP_SkillTreeConnection_C_PreConstruct) == 0x000001, "Wrong size on WBP_SkillTreeConnection_C_PreConstruct");
static_assert(offsetof(WBP_SkillTreeConnection_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SkillTreeConnection_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SkillTreeConnection.WBP_SkillTreeConnection_C.SetConnectionStateNew
// 0x0001 (0x0001 - 0x0000)
struct WBP_SkillTreeConnection_C_SetConnectionStateNew final
{
public:
	ESkillNodeState                               ConnectionState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SkillTreeConnection_C_SetConnectionStateNew) == 0x000001, "Wrong alignment on WBP_SkillTreeConnection_C_SetConnectionStateNew");
static_assert(sizeof(WBP_SkillTreeConnection_C_SetConnectionStateNew) == 0x000001, "Wrong size on WBP_SkillTreeConnection_C_SetConnectionStateNew");
static_assert(offsetof(WBP_SkillTreeConnection_C_SetConnectionStateNew, ConnectionState) == 0x000000, "Member 'WBP_SkillTreeConnection_C_SetConnectionStateNew::ConnectionState' has a wrong offset!");

}

