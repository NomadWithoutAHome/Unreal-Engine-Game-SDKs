#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OVRLipSync

#include "Basic.hpp"


namespace SDK::Params
{

// Function OVRLipSync.OVRLipSyncActorComponentBase.AssignVisemesToMorphTargets
// 0x0018 (0x0018 - 0x0000)
struct OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         MorphTargetNames;                                  // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets) == 0x000008, "Wrong alignment on OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets");
static_assert(sizeof(OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets) == 0x000018, "Wrong size on OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets");
static_assert(offsetof(OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets, Mesh) == 0x000000, "Member 'OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets::Mesh' has a wrong offset!");
static_assert(offsetof(OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets, MorphTargetNames) == 0x000008, "Member 'OVRLipSyncActorComponentBase_AssignVisemesToMorphTargets::MorphTargetNames' has a wrong offset!");

// Function OVRLipSync.OVRLipSyncActorComponentBase.GetLaughterScore
// 0x0004 (0x0004 - 0x0000)
struct OVRLipSyncActorComponentBase_GetLaughterScore final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncActorComponentBase_GetLaughterScore) == 0x000004, "Wrong alignment on OVRLipSyncActorComponentBase_GetLaughterScore");
static_assert(sizeof(OVRLipSyncActorComponentBase_GetLaughterScore) == 0x000004, "Wrong size on OVRLipSyncActorComponentBase_GetLaughterScore");
static_assert(offsetof(OVRLipSyncActorComponentBase_GetLaughterScore, ReturnValue) == 0x000000, "Member 'OVRLipSyncActorComponentBase_GetLaughterScore::ReturnValue' has a wrong offset!");

// Function OVRLipSync.OVRLipSyncActorComponentBase.GetVisemeNames
// 0x0010 (0x0010 - 0x0000)
struct OVRLipSyncActorComponentBase_GetVisemeNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncActorComponentBase_GetVisemeNames) == 0x000008, "Wrong alignment on OVRLipSyncActorComponentBase_GetVisemeNames");
static_assert(sizeof(OVRLipSyncActorComponentBase_GetVisemeNames) == 0x000010, "Wrong size on OVRLipSyncActorComponentBase_GetVisemeNames");
static_assert(offsetof(OVRLipSyncActorComponentBase_GetVisemeNames, ReturnValue) == 0x000000, "Member 'OVRLipSyncActorComponentBase_GetVisemeNames::ReturnValue' has a wrong offset!");

// Function OVRLipSync.OVRLipSyncActorComponentBase.GetVisemes
// 0x0010 (0x0010 - 0x0000)
struct OVRLipSyncActorComponentBase_GetVisemes final
{
public:
	TArray<float>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncActorComponentBase_GetVisemes) == 0x000008, "Wrong alignment on OVRLipSyncActorComponentBase_GetVisemes");
static_assert(sizeof(OVRLipSyncActorComponentBase_GetVisemes) == 0x000010, "Wrong size on OVRLipSyncActorComponentBase_GetVisemes");
static_assert(offsetof(OVRLipSyncActorComponentBase_GetVisemes, ReturnValue) == 0x000000, "Member 'OVRLipSyncActorComponentBase_GetVisemes::ReturnValue' has a wrong offset!");

// Function OVRLipSync.OVRLipSyncActorComponent.FeedAudio
// 0x0010 (0x0010 - 0x0000)
struct OVRLipSyncActorComponent_FeedAudio final
{
public:
	TArray<uint8>                                 AudioData;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncActorComponent_FeedAudio) == 0x000008, "Wrong alignment on OVRLipSyncActorComponent_FeedAudio");
static_assert(sizeof(OVRLipSyncActorComponent_FeedAudio) == 0x000010, "Wrong size on OVRLipSyncActorComponent_FeedAudio");
static_assert(offsetof(OVRLipSyncActorComponent_FeedAudio, AudioData) == 0x000000, "Member 'OVRLipSyncActorComponent_FeedAudio::AudioData' has a wrong offset!");

// Function OVRLipSync.OVRLipSyncActorComponent.PermissionCallback
// 0x0020 (0x0020 - 0x0000)
struct OVRLipSyncActorComponent_PermissionCallback final
{
public:
	TArray<class FString>                         Permissions;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<bool>                                  GrantResults;                                      // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncActorComponent_PermissionCallback) == 0x000008, "Wrong alignment on OVRLipSyncActorComponent_PermissionCallback");
static_assert(sizeof(OVRLipSyncActorComponent_PermissionCallback) == 0x000020, "Wrong size on OVRLipSyncActorComponent_PermissionCallback");
static_assert(offsetof(OVRLipSyncActorComponent_PermissionCallback, Permissions) == 0x000000, "Member 'OVRLipSyncActorComponent_PermissionCallback::Permissions' has a wrong offset!");
static_assert(offsetof(OVRLipSyncActorComponent_PermissionCallback, GrantResults) == 0x000010, "Member 'OVRLipSyncActorComponent_PermissionCallback::GrantResults' has a wrong offset!");

// Function OVRLipSync.OVRLipSyncPlaybackActorComponent.SetPlaybackSequence
// 0x0008 (0x0008 - 0x0000)
struct OVRLipSyncPlaybackActorComponent_SetPlaybackSequence final
{
public:
	class UOVRLipSyncFrameSequence*               InSequence;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncPlaybackActorComponent_SetPlaybackSequence) == 0x000008, "Wrong alignment on OVRLipSyncPlaybackActorComponent_SetPlaybackSequence");
static_assert(sizeof(OVRLipSyncPlaybackActorComponent_SetPlaybackSequence) == 0x000008, "Wrong size on OVRLipSyncPlaybackActorComponent_SetPlaybackSequence");
static_assert(offsetof(OVRLipSyncPlaybackActorComponent_SetPlaybackSequence, InSequence) == 0x000000, "Member 'OVRLipSyncPlaybackActorComponent_SetPlaybackSequence::InSequence' has a wrong offset!");

// Function OVRLipSync.OVRLipSyncPlaybackActorComponent.Start
// 0x0010 (0x0010 - 0x0000)
struct OVRLipSyncPlaybackActorComponent_Start final
{
public:
	class UAudioComponent*                        InAudioComponent;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOVRLipSyncFrameSequence*               InSequence;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(OVRLipSyncPlaybackActorComponent_Start) == 0x000008, "Wrong alignment on OVRLipSyncPlaybackActorComponent_Start");
static_assert(sizeof(OVRLipSyncPlaybackActorComponent_Start) == 0x000010, "Wrong size on OVRLipSyncPlaybackActorComponent_Start");
static_assert(offsetof(OVRLipSyncPlaybackActorComponent_Start, InAudioComponent) == 0x000000, "Member 'OVRLipSyncPlaybackActorComponent_Start::InAudioComponent' has a wrong offset!");
static_assert(offsetof(OVRLipSyncPlaybackActorComponent_Start, InSequence) == 0x000008, "Member 'OVRLipSyncPlaybackActorComponent_Start::InSequence' has a wrong offset!");

}

