#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelSequenceExecutor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK::Params
{

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnSequenceStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelSequenceExecutor_C_OnSequenceStateLoaded final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_OnSequenceStateLoaded) == 0x000001, "Wrong alignment on BP_LevelSequenceExecutor_C_OnSequenceStateLoaded");
static_assert(sizeof(BP_LevelSequenceExecutor_C_OnSequenceStateLoaded) == 0x000001, "Wrong size on BP_LevelSequenceExecutor_C_OnSequenceStateLoaded");
static_assert(offsetof(BP_LevelSequenceExecutor_C_OnSequenceStateLoaded, State) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_OnSequenceStateLoaded::State' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnLoaded_8738431E4CA73E2081042690EE2C35AC
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC");
static_assert(sizeof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC) == 0x000008, "Wrong size on BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC");
static_assert(offsetof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC, Loaded) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E2081042690EE2C35AC::Loaded' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnLoaded_8738431E4CA73E20810426908D00A7C4
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4");
static_assert(sizeof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4) == 0x000008, "Wrong size on BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4");
static_assert(offsetof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4, Loaded) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426908D00A7C4::Loaded' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.OnLoaded_8738431E4CA73E20810426903BE07941
// 0x0008 (0x0008 - 0x0000)
struct BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941");
static_assert(sizeof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941) == 0x000008, "Wrong size on BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941");
static_assert(offsetof(BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941, Loaded) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_OnLoaded_8738431E4CA73E20810426903BE07941::Loaded' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.IsSequencePlayed
// 0x0001 (0x0001 - 0x0000)
struct BP_LevelSequenceExecutor_C_IsSequencePlayed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_IsSequencePlayed) == 0x000001, "Wrong alignment on BP_LevelSequenceExecutor_C_IsSequencePlayed");
static_assert(sizeof(BP_LevelSequenceExecutor_C_IsSequencePlayed) == 0x000001, "Wrong size on BP_LevelSequenceExecutor_C_IsSequencePlayed");
static_assert(offsetof(BP_LevelSequenceExecutor_C_IsSequencePlayed, ReturnValue) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_IsSequencePlayed::ReturnValue' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.GetFrameForLoading
// 0x0098 (0x0098 - 0x0000)
struct BP_LevelSequenceExecutor_C_GetFrameForLoading final
{
public:
	struct FMovieSceneSequencePlaybackParams      MovieSceneSequencePlaybackParams;                  // 0x0000(0x0038)(Parm, OutParm)
	struct FQualifiedFrameTime                    CallFunc_GetEndTime_ReturnValue;                   // 0x0038(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x0048(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             K2Node_MakeStruct_FrameTime;                       // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackParams      K2Node_MakeStruct_MovieSceneSequencePlaybackParams; // 0x0060(0x0038)()
};
static_assert(alignof(BP_LevelSequenceExecutor_C_GetFrameForLoading) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_GetFrameForLoading");
static_assert(sizeof(BP_LevelSequenceExecutor_C_GetFrameForLoading) == 0x000098, "Wrong size on BP_LevelSequenceExecutor_C_GetFrameForLoading");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFrameForLoading, MovieSceneSequencePlaybackParams) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_GetFrameForLoading::MovieSceneSequencePlaybackParams' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFrameForLoading, CallFunc_GetEndTime_ReturnValue) == 0x000038, "Member 'BP_LevelSequenceExecutor_C_GetFrameForLoading::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFrameForLoading, CallFunc_BreakQualifiedFrameTime_Frame) == 0x000048, "Member 'BP_LevelSequenceExecutor_C_GetFrameForLoading::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFrameForLoading, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x00004C, "Member 'BP_LevelSequenceExecutor_C_GetFrameForLoading::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFrameForLoading, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x000054, "Member 'BP_LevelSequenceExecutor_C_GetFrameForLoading::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFrameForLoading, K2Node_MakeStruct_FrameTime) == 0x000058, "Member 'BP_LevelSequenceExecutor_C_GetFrameForLoading::K2Node_MakeStruct_FrameTime' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFrameForLoading, K2Node_MakeStruct_MovieSceneSequencePlaybackParams) == 0x000060, "Member 'BP_LevelSequenceExecutor_C_GetFrameForLoading::K2Node_MakeStruct_MovieSceneSequencePlaybackParams' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.GetFirstFrame
// 0x0098 (0x0098 - 0x0000)
struct BP_LevelSequenceExecutor_C_GetFirstFrame final
{
public:
	struct FMovieSceneSequencePlaybackParams      MovieSceneSequencePlaybackParams;                  // 0x0000(0x0038)(Parm, OutParm)
	struct FQualifiedFrameTime                    CallFunc_GetStartTime_ReturnValue;                 // 0x0038(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FFrameNumber                           CallFunc_BreakQualifiedFrameTime_Frame;            // 0x0048(0x0004)(NoDestructor, HasGetValueTypeHash)
	struct FFrameRate                             CallFunc_BreakQualifiedFrameTime_FrameRate;        // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQualifiedFrameTime_SubFrame;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFrameTime                             K2Node_MakeStruct_FrameTime;                       // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackParams      K2Node_MakeStruct_MovieSceneSequencePlaybackParams; // 0x0060(0x0038)()
};
static_assert(alignof(BP_LevelSequenceExecutor_C_GetFirstFrame) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_GetFirstFrame");
static_assert(sizeof(BP_LevelSequenceExecutor_C_GetFirstFrame) == 0x000098, "Wrong size on BP_LevelSequenceExecutor_C_GetFirstFrame");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFirstFrame, MovieSceneSequencePlaybackParams) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_GetFirstFrame::MovieSceneSequencePlaybackParams' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFirstFrame, CallFunc_GetStartTime_ReturnValue) == 0x000038, "Member 'BP_LevelSequenceExecutor_C_GetFirstFrame::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFirstFrame, CallFunc_BreakQualifiedFrameTime_Frame) == 0x000048, "Member 'BP_LevelSequenceExecutor_C_GetFirstFrame::CallFunc_BreakQualifiedFrameTime_Frame' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFirstFrame, CallFunc_BreakQualifiedFrameTime_FrameRate) == 0x00004C, "Member 'BP_LevelSequenceExecutor_C_GetFirstFrame::CallFunc_BreakQualifiedFrameTime_FrameRate' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFirstFrame, CallFunc_BreakQualifiedFrameTime_SubFrame) == 0x000054, "Member 'BP_LevelSequenceExecutor_C_GetFirstFrame::CallFunc_BreakQualifiedFrameTime_SubFrame' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFirstFrame, K2Node_MakeStruct_FrameTime) == 0x000058, "Member 'BP_LevelSequenceExecutor_C_GetFirstFrame::K2Node_MakeStruct_FrameTime' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_GetFirstFrame, K2Node_MakeStruct_MovieSceneSequencePlaybackParams) == 0x000060, "Member 'BP_LevelSequenceExecutor_C_GetFirstFrame::K2Node_MakeStruct_MovieSceneSequencePlaybackParams' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.ExecuteUbergraph_BP_LevelSequenceExecutor
// 0x0128 (0x0128 - 0x0000)
struct BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_1;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_State;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackParams      CallFunc_GetFrameForLoading_MovieSceneSequencePlaybackParams; // 0x0098(0x0038)()
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_2;             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneSequencePlaybackParams      CallFunc_GetFirstFrame_MovieSceneSequencePlaybackParams; // 0x00E0(0x0038)()
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReadState_State;                          // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor");
static_assert(sizeof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor) == 0x000128, "Wrong size on BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, EntryPoint) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, Temp_object_Variable) == 0x000008, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_DynamicCast_AsLevel_Sequence) == 0x000010, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, Temp_object_Variable_1) == 0x000028, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_DynamicCast_AsLevel_Sequence_1) == 0x000030, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_DynamicCast_AsLevel_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_CreateDelegate_OutputDelegate_1) == 0x00004C, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_Event_State) == 0x00005C, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_CreateDelegate_OutputDelegate_2) == 0x000060, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, CallFunc_IsPlaying_ReturnValue) == 0x000080, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_CustomEvent_Loaded_1) == 0x000088, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, Temp_object_Variable_2) == 0x000090, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, CallFunc_GetFrameForLoading_MovieSceneSequencePlaybackParams) == 0x000098, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::CallFunc_GetFrameForLoading_MovieSceneSequencePlaybackParams' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_DynamicCast_AsLevel_Sequence_2) == 0x0000D0, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_DynamicCast_AsLevel_Sequence_2' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_DynamicCast_bSuccess_2) == 0x0000D8, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, CallFunc_GetFirstFrame_MovieSceneSequencePlaybackParams) == 0x0000E0, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::CallFunc_GetFirstFrame_MovieSceneSequencePlaybackParams' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, K2Node_CustomEvent_Loaded_2) == 0x000118, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, CallFunc_ReadState_State) == 0x000121, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::CallFunc_ReadState_State' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor, CallFunc_Not_PreBool_ReturnValue_1) == 0x000122, "Member 'BP_LevelSequenceExecutor_C_ExecuteUbergraph_BP_LevelSequenceExecutor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.CreateLevelSequencePlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer final
{
public:
	class ULevelSequence*                         LevelSequence_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer");
static_assert(sizeof(BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer) == 0x000020, "Wrong size on BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer, LevelSequence_0) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer::LevelSequence_0' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000010, "Member 'BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000018, "Member 'BP_LevelSequenceExecutor_C_CreateLevelSequencePlayer::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");

// Function BP_LevelSequenceExecutor.BP_LevelSequenceExecutor_C.CheckForErrors
// 0x0040 (0x0040 - 0x0000)
struct BP_LevelSequenceExecutor_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0028(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LevelSequenceExecutor_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_LevelSequenceExecutor_C_CheckForErrors");
static_assert(sizeof(BP_LevelSequenceExecutor_C_CheckForErrors) == 0x000040, "Wrong size on BP_LevelSequenceExecutor_C_CheckForErrors");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_LevelSequenceExecutor_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_LevelSequenceExecutor_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_LevelSequenceExecutor_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000028, "Member 'BP_LevelSequenceExecutor_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_LevelSequenceExecutor_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CheckForErrors, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x00003C, "Member 'BP_LevelSequenceExecutor_C_CheckForErrors::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LevelSequenceExecutor_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'BP_LevelSequenceExecutor_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

