#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleCheckContext

#include "Basic.hpp"

#include "BP_BattleCheckContext_classes.hpp"
#include "BP_BattleCheckContext_parameters.hpp"


namespace SDK
{

// Function BP_BattleCheckContext.BP_BattleCheckContext_C.Add Check
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CheckName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleCheckContext_C::Add_Check(class FName CheckName, bool CheckMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "Add Check");

	Params::BP_BattleCheckContext_C_Add_Check Parms{};

	Parms.CheckName = CheckName;
	Parms.CheckMode = CheckMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckCanRecoverActionPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   BecauseDead                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleCheckContext_C::CheckCanRecoverActionPoint(bool CheckMode, bool* BecauseDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "CheckCanRecoverActionPoint");

	Params::BP_BattleCheckContext_C_CheckCanRecoverActionPoint Parms{};

	Parms.CheckMode = CheckMode;

	UObject::ProcessEvent(Func, &Parms);

	if (BecauseDead != nullptr)
		*BecauseDead = Parms.BecauseDead;

	return Parms.ReturnValue;
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckCanRecoverHP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   BecauseDead                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleCheckContext_C::CheckCanRecoverHP(bool CheckMode, bool* BecauseDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "CheckCanRecoverHP");

	Params::BP_BattleCheckContext_C_CheckCanRecoverHP Parms{};

	Parms.CheckMode = CheckMode;

	UObject::ProcessEvent(Func, &Parms);

	if (BecauseDead != nullptr)
		*BecauseDead = Parms.BecauseDead;

	return Parms.ReturnValue;
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckCanResurrect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleCheckContext_C::CheckCanResurrect(bool CheckMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "CheckCanResurrect");

	Params::BP_BattleCheckContext_C_CheckCanResurrect Parms{};

	Parms.CheckMode = CheckMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.CheckIsAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bypass                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleCheckContext_C::CheckIsAlive(bool CheckMode, bool Bypass, bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "CheckIsAlive");

	Params::BP_BattleCheckContext_C_CheckIsAlive Parms{};

	Parms.CheckMode = CheckMode;
	Parms.Bypass = Bypass;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.ClearAllChecks
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleCheckContext_C::ClearAllChecks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "ClearAllChecks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.ClearCheckList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    CheckNames                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_BattleCheckContext_C::ClearCheckList(TArray<class FName>& CheckNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "ClearCheckList");

	Params::BP_BattleCheckContext_C_ClearCheckList Parms{};

	Parms.CheckNames = std::move(CheckNames);

	UObject::ProcessEvent(Func, &Parms);

	CheckNames = std::move(Parms.CheckNames);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.GetAllConstants
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>*                    Array                                                  (Parm, OutParm)

void UBP_BattleCheckContext_C::GetAllConstants(TArray<class FName>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "GetAllConstants");

	Params::BP_BattleCheckContext_C_GetAllConstants Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.HasCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class FName&                      ItemToFind                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleCheckContext_C::HasCheck(const class FName& ItemToFind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "HasCheck");

	Params::BP_BattleCheckContext_C_HasCheck Parms{};

	Parms.ItemToFind = ItemToFind;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.InvalidateCheck
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleCheckContext_C::InvalidateCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "InvalidateCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.IsCheckDeclared
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CheckName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleCheckContext_C::IsCheckDeclared(class FName CheckName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "IsCheckDeclared");

	Params::BP_BattleCheckContext_C_IsCheckDeclared Parms{};

	Parms.CheckName = CheckName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.MergeFrom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleCheckContext_C*         Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleCheckContext_C::MergeFrom(class UBP_BattleCheckContext_C* Other)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "MergeFrom");

	Params::BP_BattleCheckContext_C_MergeFrom Parms{};

	Parms.Other = Other;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.OnConstruct
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleCheckContext_C::OnConstruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "OnConstruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.OnHPChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_BattleCheckContext_C::OnHPChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "OnHPChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.OnNewTurn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleCheckContext_C::OnNewTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "OnNewTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleCheckContext.BP_BattleCheckContext_C.ShouldAssert
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Bool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_BattleCheckContext_C::ShouldAssert(bool Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleCheckContext_C", "ShouldAssert");

	Params::BP_BattleCheckContext_C_ShouldAssert Parms{};

	Parms.Bool = Bool;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

