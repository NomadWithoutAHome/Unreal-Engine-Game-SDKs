#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_jRPG_NPC_Dialog

#include "Basic.hpp"

#include "BP_jRPG_NPC_Dialog_classes.hpp"
#include "BP_jRPG_NPC_Dialog_parameters.hpp"


namespace SDK
{

// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueAudioComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAudioComponent**                 AudioComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::BPI_GetDialogueAudioComponent(class UAudioComponent** AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetDialogueAudioComponent");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetDialogueAudioComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponent != nullptr)
		*AudioComponent = Parms.AudioComponent;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueCameraByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDialogueCameraType                     CameraType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCameraComponent**                CameraComponent                                        (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::BPI_GetDialogueCameraByType(EDialogueCameraType CameraType, class UCameraComponent** CameraComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetDialogueCameraByType");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraByType Parms{};

	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);

	if (CameraComponent != nullptr)
		*CameraComponent = Parms.CameraComponent;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_HasLightingAuthority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_NPC_Dialog_C::BPI_HasLightingAuthority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_HasLightingAuthority");

	Params::BP_jRPG_NPC_Dialog_C_BPI_HasLightingAuthority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_ShouldMoveCameraPresetsToOtherSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_jRPG_NPC_Dialog_C::BPI_ShouldMoveCameraPresetsToOtherSide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_ShouldMoveCameraPresetsToOtherSide");

	Params::BP_jRPG_NPC_Dialog_C_BPI_ShouldMoveCameraPresetsToOtherSide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetInteractingCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_DialogueCharacter_C>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

TScriptInterface<class IBPI_DialogueCharacter_C> ABP_jRPG_NPC_Dialog_C::BPI_GetInteractingCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetInteractingCharacter");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetInteractingCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueCameraOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_jRPG_NPC_Dialog_C::BPI_GetDialogueCameraOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetDialogueCameraOffset");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetDialogueCameraOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetReverseSpotlightReceiver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_DialogueCharacter_C>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

TScriptInterface<class IBPI_DialogueCharacter_C> ABP_jRPG_NPC_Dialog_C::BPI_GetReverseSpotlightReceiver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetReverseSpotlightReceiver");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetReverseSpotlightReceiver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetLightDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NPC_SpolightTypes                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

E_NPC_SpolightTypes ABP_jRPG_NPC_Dialog_C::BPI_GetLightDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetLightDirection");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetLightDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetLightingSet
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_NPC_SpolightTypes                     LightDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULightComponent**                 FrontLight                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ULightComponent**                 RimLight                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::BPI_GetLightingSet(E_NPC_SpolightTypes LightDirection, class ULightComponent** FrontLight, class ULightComponent** RimLight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetLightingSet");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetLightingSet Parms{};

	Parms.LightDirection = LightDirection;

	UObject::ProcessEvent(Func, &Parms);

	if (FrontLight != nullptr)
		*FrontLight = Parms.FrontLight;

	if (RimLight != nullptr)
		*RimLight = Parms.RimLight;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetAllDialogueCameras
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UCineCameraComponent*>*    CineCameraComponents                                   (Parm, OutParm, ContainsInstancedReference)

void ABP_jRPG_NPC_Dialog_C::BPI_GetAllDialogueCameras(TArray<class UCineCameraComponent*>* CineCameraComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetAllDialogueCameras");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetAllDialogueCameras Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CineCameraComponents != nullptr)
		*CineCameraComponents = std::move(Parms.CineCameraComponents);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetDialogueFocusPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent**                 SceneComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::BPI_GetDialogueFocusPoint(class USceneComponent** SceneComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetDialogueFocusPoint");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetDialogueFocusPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SceneComponent != nullptr)
		*SceneComponent = Parms.SceneComponent;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BPI_GetSpotlightsToActivateDuringDialogue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class ASpotLight>>*SpotLightActors                                        (Parm, OutParm)

void ABP_jRPG_NPC_Dialog_C::BPI_GetSpotlightsToActivateDuringDialogue(TArray<TSoftObjectPtr<class ASpotLight>>* SpotLightActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BPI_GetSpotlightsToActivateDuringDialogue");

	Params::BP_jRPG_NPC_Dialog_C_BPI_GetSpotlightsToActivateDuringDialogue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpotLightActors != nullptr)
		*SpotLightActors = std::move(Parms.SpotLightActors);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetDialogueCharacterInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_DialogueCharacter_C>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

TScriptInterface<class IBPI_DialogueCharacter_C> ABP_jRPG_NPC_Dialog_C::GetDialogueCharacterInterface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetDialogueCharacterInterface");

	Params::BP_jRPG_NPC_Dialog_C_GetDialogueCharacterInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.AreDependenciesLoaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   AreLoaded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::AreDependenciesLoaded(bool* AreLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "AreDependenciesLoaded");

	Params::BP_jRPG_NPC_Dialog_C_AreDependenciesLoaded Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreLoaded != nullptr)
		*AreLoaded = Parms.AreLoaded;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetCharacterActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor**                          Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::GetCharacterActor(class AActor** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetCharacterActor");

	Params::BP_jRPG_NPC_Dialog_C_GetCharacterActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetCameraComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent**                Camera                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::GetCameraComponent(class UCameraComponent** Camera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetCameraComponent");

	Params::BP_jRPG_NPC_Dialog_C_GetCameraComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera != nullptr)
		*Camera = Parms.Camera;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetAssetDialogueCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_DataAsset_DialogueCharacter_C**DialogueCharacter_0                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::GetAssetDialogueCharacter(class UBP_DataAsset_DialogueCharacter_C** DialogueCharacter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetAssetDialogueCharacter");

	Params::BP_jRPG_NPC_Dialog_C_GetAssetDialogueCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DialogueCharacter_0 != nullptr)
		*DialogueCharacter_0 = Parms.DialogueCharacter_0;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ForceLODDuringDialogue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::ForceLODDuringDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "ForceLODDuringDialogue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UnpauseGameplayAfterDialog
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::UnpauseGameplayAfterDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "UnpauseGameplayAfterDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.PauseGameplayBeforeDialog
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::PauseGameplayBeforeDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "PauseGameplayBeforeDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.Validate Hidden Actors Visiblity Array
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class AActor>>&   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_jRPG_NPC_Dialog_C::Validate_Hidden_Actors_Visiblity_Array(TArray<TSoftObjectPtr<class AActor>>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "Validate Hidden Actors Visiblity Array");

	Params::BP_jRPG_NPC_Dialog_C_Validate_Hidden_Actors_Visiblity_Array Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ForceActorsToUnhideVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::ForceActorsToUnhideVisibility(bool NewHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "ForceActorsToUnhideVisibility");

	Params::BP_jRPG_NPC_Dialog_C_ForceActorsToUnhideVisibility Parms{};

	Parms.NewHidden = NewHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.SetActorsVisibilityForDialogue
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldBeVisible                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::SetActorsVisibilityForDialogue(bool ShouldBeVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "SetActorsVisibilityForDialogue");

	Params::BP_jRPG_NPC_Dialog_C_SetActorsVisibilityForDialogue Parms{};

	Parms.ShouldBeVisible = ShouldBeVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.CanInteractWithMount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   CanInteract                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::CanInteractWithMount(bool* CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "CanInteractWithMount");

	Params::BP_jRPG_NPC_Dialog_C_CanInteractWithMount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanInteract != nullptr)
		*CanInteract = Parms.CanInteract;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GoBackToOriginalLocationAfterDialogue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::GoBackToOriginalLocationAfterDialogue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GoBackToOriginalLocationAfterDialogue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.RuntimeCheckSimulationAndPauseAnim
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::RuntimeCheckSimulationAndPauseAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "RuntimeCheckSimulationAndPauseAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UpdateWorldCharacterIfNeeded
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CharacterList                         Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::UpdateWorldCharacterIfNeeded(E_CharacterList Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "UpdateWorldCharacterIfNeeded");

	Params::BP_jRPG_NPC_Dialog_C_UpdateWorldCharacterIfNeeded Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ComputeDialogueParameters
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_DialogueParameters*           S_DialogueParameters                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::ComputeDialogueParameters(struct FS_DialogueParameters* S_DialogueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "ComputeDialogueParameters");

	Params::BP_jRPG_NPC_Dialog_C_ComputeDialogueParameters Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (S_DialogueParameters != nullptr)
		*S_DialogueParameters = std::move(Parms.S_DialogueParameters);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetUseReversedSpotlightForWorldCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   UseReversedSpotlightForWorldCharacter_0                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::GetUseReversedSpotlightForWorldCharacter(bool* UseReversedSpotlightForWorldCharacter_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetUseReversedSpotlightForWorldCharacter");

	Params::BP_jRPG_NPC_Dialog_C_GetUseReversedSpotlightForWorldCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UseReversedSpotlightForWorldCharacter_0 != nullptr)
		*UseReversedSpotlightForWorldCharacter_0 = Parms.UseReversedSpotlightForWorldCharacter_0;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetTurnOnSpotlights
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_NPC_SpolightTypes*                    TurnOnSpotlights_0                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::GetTurnOnSpotlights(E_NPC_SpolightTypes* TurnOnSpotlights_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetTurnOnSpotlights");

	Params::BP_jRPG_NPC_Dialog_C_GetTurnOnSpotlights Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TurnOnSpotlights_0 != nullptr)
		*TurnOnSpotlights_0 = Parms.TurnOnSpotlights_0;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetAllDialogueCameras
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UCineCameraComponent*>*    Array                                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_jRPG_NPC_Dialog_C::GetAllDialogueCameras(TArray<class UCineCameraComponent*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetAllDialogueCameras");

	Params::BP_jRPG_NPC_Dialog_C_GetAllDialogueCameras Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetMovePresetCamerasToOtherSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   MovePresetCamerasToOtherSide_0                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::GetMovePresetCamerasToOtherSide(bool* MovePresetCamerasToOtherSide_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetMovePresetCamerasToOtherSide");

	Params::BP_jRPG_NPC_Dialog_C_GetMovePresetCamerasToOtherSide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MovePresetCamerasToOtherSide_0 != nullptr)
		*MovePresetCamerasToOtherSide_0 = Parms.MovePresetCamerasToOtherSide_0;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetSpotlightsToActivateDuringDialogue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftObjectPtr<class ASpotLight>>*SpotlightsToActivateDuringDialogues_0                  (Parm, OutParm)

void ABP_jRPG_NPC_Dialog_C::GetSpotlightsToActivateDuringDialogue(TArray<TSoftObjectPtr<class ASpotLight>>* SpotlightsToActivateDuringDialogues_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetSpotlightsToActivateDuringDialogue");

	Params::BP_jRPG_NPC_Dialog_C_GetSpotlightsToActivateDuringDialogue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpotlightsToActivateDuringDialogues_0 != nullptr)
		*SpotlightsToActivateDuringDialogues_0 = std::move(Parms.SpotlightsToActivateDuringDialogues_0);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.GetAllSpeakers
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>*                  Speakers                                               (Parm, OutParm)

void ABP_jRPG_NPC_Dialog_C::GetAllSpeakers(TArray<class AActor*>* Speakers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "GetAllSpeakers");

	Params::BP_jRPG_NPC_Dialog_C_GetAllSpeakers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Speakers != nullptr)
		*Speakers = std::move(Parms.Speakers);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UpdateInteractingCharactersVisibility
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldBeVisible                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::UpdateInteractingCharactersVisibility(bool ShouldBeVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "UpdateInteractingCharactersVisibility");

	Params::BP_jRPG_NPC_Dialog_C_UpdateInteractingCharactersVisibility Parms{};

	Parms.ShouldBeVisible = ShouldBeVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.PrepareInteractingCharacterAfterDialogue
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_DialogueParameters&     DialogueParameters                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::PrepareInteractingCharacterAfterDialogue(const struct FS_DialogueParameters& DialogueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "PrepareInteractingCharacterAfterDialogue");

	Params::BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterAfterDialogue Parms{};

	Parms.DialogueParameters = std::move(DialogueParameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.PrepareInteractingCharacterForDialogue
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_DialogueParameters&     DialogueParameters                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::PrepareInteractingCharacterForDialogue(const struct FS_DialogueParameters& DialogueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "PrepareInteractingCharacterForDialogue");

	Params::BP_jRPG_NPC_Dialog_C_PrepareInteractingCharacterForDialogue Parms{};

	Parms.DialogueParameters = std::move(DialogueParameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UnloadAllDependencies
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::UnloadAllDependencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "UnloadAllDependencies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.LoadAllDependencies
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::LoadAllDependencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "LoadAllDependencies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.IsInteractionAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::IsInteractionAvailable(bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "IsInteractionAvailable");

	Params::BP_jRPG_NPC_Dialog_C_IsInteractionAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.JoinParty
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::JoinParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "JoinParty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.TimelineInteractingCharacterRotation__FinishedFunc
// (BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::TimelineInteractingCharacterRotation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "TimelineInteractingCharacterRotation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.TimelineInteractingCharacterRotation__UpdateFunc
// (BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::TimelineInteractingCharacterRotation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "TimelineInteractingCharacterRotation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.LoadDependencies
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::LoadDependencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "LoadDependencies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.UnloadDependencies
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::UnloadDependencies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "UnloadDependencies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.OnInteractionRequested
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       InteractingWorldCharacter_0                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::OnInteractionRequested(class ABP_jRPG_Character_World_C* InteractingWorldCharacter_0, bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "OnInteractionRequested");

	Params::BP_jRPG_NPC_Dialog_C_OnInteractionRequested Parms{};

	Parms.InteractingWorldCharacter_0 = InteractingWorldCharacter_0;
	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.TriggerDialogInternal
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_DialogueParameters&     DialogueParameters                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::TriggerDialogInternal(const struct FS_DialogueParameters& DialogueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "TriggerDialogInternal");

	Params::BP_jRPG_NPC_Dialog_C_TriggerDialogInternal Parms{};

	Parms.DialogueParameters = std::move(DialogueParameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.OnInteractionRequestedEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::OnInteractionRequestedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "OnInteractionRequestedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.OnPlayerEnteredInteractionRange
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::OnPlayerEnteredInteractionRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "OnPlayerEnteredInteractionRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.OnDialogueFinishedInternal
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::OnDialogueFinishedInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "OnDialogueFinishedInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.TeleportAndTriggerDialogue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       InteractingWorldCharacter_0                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FS_DialogueParameters&     DialogueParameters                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::TeleportAndTriggerDialogue(class ABP_jRPG_Character_World_C* InteractingWorldCharacter_0, const struct FS_DialogueParameters& DialogueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "TeleportAndTriggerDialogue");

	Params::BP_jRPG_NPC_Dialog_C_TeleportAndTriggerDialogue Parms{};

	Parms.InteractingWorldCharacter_0 = InteractingWorldCharacter_0;
	Parms.DialogueParameters = std::move(DialogueParameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.OnPlayerLeftInteractionRange
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::OnPlayerLeftInteractionRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "OnPlayerLeftInteractionRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature");

	Params::BP_jRPG_NPC_Dialog_C_BndEvt__BP_jRPG_NPC_Dialog_BP_ConditionCheckerComponent_K2Node_ComponentBoundEvent_0_OnConditionChanged__DelegateSignature Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.SpotLightDialoguePreviz
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::SpotLightDialoguePreviz()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "SpotLightDialoguePreviz");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.MoveInteractingCharacterToPosition
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_DialogueParameters&     DialogueParameters                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::MoveInteractingCharacterToPosition(const struct FS_DialogueParameters& DialogueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "MoveInteractingCharacterToPosition");

	Params::BP_jRPG_NPC_Dialog_C_MoveInteractingCharacterToPosition Parms{};

	Parms.DialogueParameters = std::move(DialogueParameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.CancelInteractingCharacterRotation
// (BlueprintCallable, BlueprintEvent)

void ABP_jRPG_NPC_Dialog_C::CancelInteractingCharacterRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "CancelInteractingCharacterRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "ReceiveTick");

	Params::BP_jRPG_NPC_Dialog_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_jRPG_NPC_Dialog.BP_jRPG_NPC_Dialog_C.ExecuteUbergraph_BP_jRPG_NPC_Dialog
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_jRPG_NPC_Dialog_C::ExecuteUbergraph_BP_jRPG_NPC_Dialog(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_jRPG_NPC_Dialog_C", "ExecuteUbergraph_BP_jRPG_NPC_Dialog");

	Params::BP_jRPG_NPC_Dialog_C_ExecuteUbergraph_BP_jRPG_NPC_Dialog Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

