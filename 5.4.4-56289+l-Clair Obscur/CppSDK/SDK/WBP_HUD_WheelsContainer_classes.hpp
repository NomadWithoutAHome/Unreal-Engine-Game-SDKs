#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_WheelsContainer

#include "Basic.hpp"

#include "EBattleTurnState_structs.hpp"
#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "CommonUI_classes.hpp"
#include "EBattleForbiddenActionReason_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_WheelsContainer.WBP_HUD_WheelsContainer_C
// 0x00F0 (0x0520 - 0x0430)
class UWBP_HUD_WheelsContainer_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_BattleWheel_C*                     WBP_BattleWheel_Action;                            // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_SkillWheel_C*                  WBP_HUD_SkillWheel_GradientAttacks;                // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_SkillWheel_C*                  WBP_HUD_SkillWheel_Items;                          // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HUD_SkillWheel_C*                  WBP_HUD_SkillWheel_Skills;                         // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               BattleManagerReference;                            // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           Sliced_Array;                                      // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TScriptInterface<class IWBPI_WheelPage_C>     IActiveWheel;                                      // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IWBPI_WheelPage_C>     ILastValidWheel;                                   // 0x0480(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundEventDataTableRowHandle          SoundEvent_Skills_Open;                            // 0x0490(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SoundEvent_Skills_NextPage;                        // 0x04A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SoundEvent_Skills_PreviousPage;                    // 0x04B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SoundEvent_Items_Open;                             // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UWBP_HUD_SkillWheel_C*                  SkillWheelWidgetRef_Primary;                       // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_HUD_SkillWheel_C*                  SkillWheelWidgetRef_Gradient;                      // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSoundEventDataTableRowHandle          SoundEvent_Items_Close;                            // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          Sound_Event_Battle_FreeAimStart;                   // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void()>              OnPageChanged;                                     // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSoundEventDataTableRowHandle          SoundEvent_GradientAttack_Open;                    // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void GetItemsPage(TScriptInterface<class IWBPI_WheelPage_C>* Page);
	void FindActiveWheelTag(struct FGameplayTag* GameplayTag);
	class UObject* GetActiveWheelAsObject();
	TScriptInterface<class IWBPI_WheelPage_C> GetActiveWheel();
	class UCommonActivatableWidget* GetVirtualTreeParent();
	void RegisterSkillWheels();
	void RegisterSkillWheelEvents(class UWBP_HUD_SkillWheel_C* SkillWheelWidget);
	void GetSkillWheel(class UWBP_HUD_SkillWheel_C** SkillWheel);
	void TriggerSkillFromWheel(class FName SecondaryAction);
	void UpdateItemsWheel();
	void UpdateCharacterSkillWheels();
	void Construct();
	void ChangeWheelPage(TScriptInterface<class IWBPI_WheelPage_C> IWheelPage);
	void OnSkillsActionChosen();
	void OnItemsActionChosen();
	void OnUltimateActionChosen();
	void OnAttackActionChosen();
	void OnAimActionChosen();
	void Appear();
	void BackToActionPage();
	void Disappear();
	void OnPlayerTurnStart(bool HasChanged);
	void OnWheelChoiceDenied(EBattleForbiddenActionReason Reason);
	void OnSkillChosenFromList(class FName SkillID);
	void OnBackFromSkills();
	void BndEvt__WBP_HUD_WheelsContainer_WBP_BattleWheel_Action_K2Node_ComponentBoundEvent_10_OnButtonClicked__DelegateSignature(int32 ButtonIndex);
	void BndEvt__WBP_HUD_WheelsContainer_WBP_HUD_SkillWheel_Items_K2Node_ComponentBoundEvent_12_OnSkillChosen__DelegateSignature(class FName SkillID);
	void BndEvt__WBP_HUD_WheelsContainer_WBP_HUD_SkillWheel_Items_K2Node_ComponentBoundEvent_13_OnBackClicked__DelegateSignature();
	void ExecuteUbergraph_WBP_HUD_WheelsContainer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_WheelsContainer_C">();
	}
	static class UWBP_HUD_WheelsContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_WheelsContainer_C>();
	}
};
static_assert(alignof(UWBP_HUD_WheelsContainer_C) == 0x000008, "Wrong alignment on UWBP_HUD_WheelsContainer_C");
static_assert(sizeof(UWBP_HUD_WheelsContainer_C) == 0x000520, "Wrong size on UWBP_HUD_WheelsContainer_C");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, UberGraphFrame) == 0x000430, "Member 'UWBP_HUD_WheelsContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, WBP_BattleWheel_Action) == 0x000438, "Member 'UWBP_HUD_WheelsContainer_C::WBP_BattleWheel_Action' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, WBP_HUD_SkillWheel_GradientAttacks) == 0x000440, "Member 'UWBP_HUD_WheelsContainer_C::WBP_HUD_SkillWheel_GradientAttacks' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, WBP_HUD_SkillWheel_Items) == 0x000448, "Member 'UWBP_HUD_WheelsContainer_C::WBP_HUD_SkillWheel_Items' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, WBP_HUD_SkillWheel_Skills) == 0x000450, "Member 'UWBP_HUD_WheelsContainer_C::WBP_HUD_SkillWheel_Skills' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, BattleManagerReference) == 0x000458, "Member 'UWBP_HUD_WheelsContainer_C::BattleManagerReference' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, Sliced_Array) == 0x000460, "Member 'UWBP_HUD_WheelsContainer_C::Sliced_Array' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, IActiveWheel) == 0x000470, "Member 'UWBP_HUD_WheelsContainer_C::IActiveWheel' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, ILastValidWheel) == 0x000480, "Member 'UWBP_HUD_WheelsContainer_C::ILastValidWheel' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SoundEvent_Skills_Open) == 0x000490, "Member 'UWBP_HUD_WheelsContainer_C::SoundEvent_Skills_Open' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SoundEvent_Skills_NextPage) == 0x0004A0, "Member 'UWBP_HUD_WheelsContainer_C::SoundEvent_Skills_NextPage' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SoundEvent_Skills_PreviousPage) == 0x0004B0, "Member 'UWBP_HUD_WheelsContainer_C::SoundEvent_Skills_PreviousPage' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SoundEvent_Items_Open) == 0x0004C0, "Member 'UWBP_HUD_WheelsContainer_C::SoundEvent_Items_Open' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SkillWheelWidgetRef_Primary) == 0x0004D0, "Member 'UWBP_HUD_WheelsContainer_C::SkillWheelWidgetRef_Primary' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SkillWheelWidgetRef_Gradient) == 0x0004D8, "Member 'UWBP_HUD_WheelsContainer_C::SkillWheelWidgetRef_Gradient' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SoundEvent_Items_Close) == 0x0004E0, "Member 'UWBP_HUD_WheelsContainer_C::SoundEvent_Items_Close' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, Sound_Event_Battle_FreeAimStart) == 0x0004F0, "Member 'UWBP_HUD_WheelsContainer_C::Sound_Event_Battle_FreeAimStart' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, OnPageChanged) == 0x000500, "Member 'UWBP_HUD_WheelsContainer_C::OnPageChanged' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_WheelsContainer_C, SoundEvent_GradientAttack_Open) == 0x000510, "Member 'UWBP_HUD_WheelsContainer_C::SoundEvent_GradientAttack_Open' has a wrong offset!");

}

