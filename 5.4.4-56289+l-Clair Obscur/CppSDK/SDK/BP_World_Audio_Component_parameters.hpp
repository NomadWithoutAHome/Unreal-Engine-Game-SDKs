#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_World_Audio_Component

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_RuntimeSoundDataWithDelay_structs.hpp"


namespace SDK::Params
{

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.CheckForErrors
// 0x0050 (0x0050 - 0x0000)
struct BP_World_Audio_Component_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_World_Audio_Component_C_CheckForErrors");
static_assert(sizeof(BP_World_Audio_Component_C_CheckForErrors) == 0x000050, "Wrong size on BP_World_Audio_Component_C_CheckForErrors");
static_assert(offsetof(BP_World_Audio_Component_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_World_Audio_Component_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_World_Audio_Component_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_World_Audio_Component_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000028, "Member 'BP_World_Audio_Component_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_World_Audio_Component_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_CheckForErrors, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_World_Audio_Component_C_CheckForErrors::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'BP_World_Audio_Component_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.ClearRFXData
// 0x0048 (0x0048 - 0x0000)
struct BP_World_Audio_Component_C_ClearRFXData final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RuntimeSoundDataWithDelay           CallFunc_Array_Get_Item;                           // 0x0010(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_ClearRFXData) == 0x000008, "Wrong alignment on BP_World_Audio_Component_C_ClearRFXData");
static_assert(sizeof(BP_World_Audio_Component_C_ClearRFXData) == 0x000048, "Wrong size on BP_World_Audio_Component_C_ClearRFXData");
static_assert(offsetof(BP_World_Audio_Component_C_ClearRFXData, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_World_Audio_Component_C_ClearRFXData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ClearRFXData, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_World_Audio_Component_C_ClearRFXData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ClearRFXData, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_World_Audio_Component_C_ClearRFXData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ClearRFXData, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_World_Audio_Component_C_ClearRFXData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ClearRFXData, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_World_Audio_Component_C_ClearRFXData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ClearRFXData, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_World_Audio_Component_C_ClearRFXData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.ComputeRFXLocation
// 0x0110 (0x0110 - 0x0000)
struct BP_World_Audio_Component_C_ComputeRFXLocation final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxDistanceAttenuation_ReturnValue;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_wildcard_Variable;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_ComputeRFXLocation) == 0x000008, "Wrong alignment on BP_World_Audio_Component_C_ComputeRFXLocation");
static_assert(sizeof(BP_World_Audio_Component_C_ComputeRFXLocation) == 0x000110, "Wrong size on BP_World_Audio_Component_C_ComputeRFXLocation");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, Sound) == 0x000000, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::Sound' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, Location) == 0x000008, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000020, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_GetMaxDistanceAttenuation_ReturnValue) == 0x000028, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_GetMaxDistanceAttenuation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_GetCameraLocation_ReturnValue) == 0x000030, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000048, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, Temp_wildcard_Variable) == 0x000050, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000060, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000088, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_GetForwardVector_ReturnValue) == 0x000090, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000A8, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0000F0, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000F8, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000100, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ComputeRFXLocation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000108, "Member 'BP_World_Audio_Component_C_ComputeRFXLocation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.ExecuteUbergraph_BP_World_Audio_Component
// 0x0008 (0x0008 - 0x0000)
struct BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component) == 0x000004, "Wrong alignment on BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component");
static_assert(sizeof(BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component) == 0x000008, "Wrong size on BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component");
static_assert(offsetof(BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component, EntryPoint) == 0x000000, "Member 'BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_World_Audio_Component_C_ExecuteUbergraph_BP_World_Audio_Component::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.OnRFXTimerElapsed
// 0x0078 (0x0078 - 0x0000)
struct BP_World_Audio_Component_C_OnRFXTimerElapsed final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_wildcard_Variable;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_ComputeRFXLocation_Location;              // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Array_Random_OutItem;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_OnRFXTimerElapsed) == 0x000008, "Wrong alignment on BP_World_Audio_Component_C_OnRFXTimerElapsed");
static_assert(sizeof(BP_World_Audio_Component_C_OnRFXTimerElapsed) == 0x000078, "Wrong size on BP_World_Audio_Component_C_OnRFXTimerElapsed");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, Temp_int_Variable) == 0x000000, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, Temp_wildcard_Variable) == 0x000020, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_ComputeRFXLocation_Location) == 0x000030, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_ComputeRFXLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000048, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000058, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_Array_Random_OutItem) == 0x000060, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_Array_Random_OutIndex) == 0x000068, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00006C, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_OnRFXTimerElapsed, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000070, "Member 'BP_World_Audio_Component_C_OnRFXTimerElapsed::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.PauseAllRFXs
// 0x0018 (0x0018 - 0x0000)
struct BP_World_Audio_Component_C_PauseAllRFXs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_PauseAllRFXs) == 0x000004, "Wrong alignment on BP_World_Audio_Component_C_PauseAllRFXs");
static_assert(sizeof(BP_World_Audio_Component_C_PauseAllRFXs) == 0x000018, "Wrong size on BP_World_Audio_Component_C_PauseAllRFXs");
static_assert(offsetof(BP_World_Audio_Component_C_PauseAllRFXs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_World_Audio_Component_C_PauseAllRFXs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_PauseAllRFXs, Temp_int_Variable) == 0x000004, "Member 'BP_World_Audio_Component_C_PauseAllRFXs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_PauseAllRFXs, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_World_Audio_Component_C_PauseAllRFXs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_PauseAllRFXs, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_World_Audio_Component_C_PauseAllRFXs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_PauseAllRFXs, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_World_Audio_Component_C_PauseAllRFXs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_PauseAllRFXs, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_World_Audio_Component_C_PauseAllRFXs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_World_Audio_Component_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_World_Audio_Component_C_ReceiveEndPlay");
static_assert(sizeof(BP_World_Audio_Component_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_World_Audio_Component_C_ReceiveEndPlay");
static_assert(offsetof(BP_World_Audio_Component_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_World_Audio_Component_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.StartRFXTimers
// 0x0028 (0x0028 - 0x0000)
struct BP_World_Audio_Component_C_StartRFXTimers final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_StartRFXTimers) == 0x000004, "Wrong alignment on BP_World_Audio_Component_C_StartRFXTimers");
static_assert(sizeof(BP_World_Audio_Component_C_StartRFXTimers) == 0x000028, "Wrong size on BP_World_Audio_Component_C_StartRFXTimers");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_World_Audio_Component_C_StartRFXTimers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, Temp_int_Variable) == 0x000004, "Member 'BP_World_Audio_Component_C_StartRFXTimers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_World_Audio_Component_C_StartRFXTimers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_World_Audio_Component_C_StartRFXTimers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_World_Audio_Component_C_StartRFXTimers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000014, "Member 'BP_World_Audio_Component_C_StartRFXTimers::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, CallFunc_Not_PreBool_ReturnValue) == 0x000015, "Member 'BP_World_Audio_Component_C_StartRFXTimers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, CallFunc_Less_IntInt_ReturnValue) == 0x000016, "Member 'BP_World_Audio_Component_C_StartRFXTimers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StartRFXTimers, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_World_Audio_Component_C_StartRFXTimers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.StopRFX
// 0x0018 (0x0018 - 0x0000)
struct BP_World_Audio_Component_C_StopRFX final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_StopRFX) == 0x000004, "Wrong alignment on BP_World_Audio_Component_C_StopRFX");
static_assert(sizeof(BP_World_Audio_Component_C_StopRFX) == 0x000018, "Wrong size on BP_World_Audio_Component_C_StopRFX");
static_assert(offsetof(BP_World_Audio_Component_C_StopRFX, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_World_Audio_Component_C_StopRFX::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StopRFX, Temp_int_Variable) == 0x000004, "Member 'BP_World_Audio_Component_C_StopRFX::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StopRFX, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_World_Audio_Component_C_StopRFX::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StopRFX, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_World_Audio_Component_C_StopRFX::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StopRFX, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_World_Audio_Component_C_StopRFX::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_StopRFX, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_World_Audio_Component_C_StopRFX::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.UnpauseAllRFXs
// 0x0018 (0x0018 - 0x0000)
struct BP_World_Audio_Component_C_UnpauseAllRFXs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_UnpauseAllRFXs) == 0x000004, "Wrong alignment on BP_World_Audio_Component_C_UnpauseAllRFXs");
static_assert(sizeof(BP_World_Audio_Component_C_UnpauseAllRFXs) == 0x000018, "Wrong size on BP_World_Audio_Component_C_UnpauseAllRFXs");
static_assert(offsetof(BP_World_Audio_Component_C_UnpauseAllRFXs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_World_Audio_Component_C_UnpauseAllRFXs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UnpauseAllRFXs, Temp_int_Variable) == 0x000004, "Member 'BP_World_Audio_Component_C_UnpauseAllRFXs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UnpauseAllRFXs, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_World_Audio_Component_C_UnpauseAllRFXs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UnpauseAllRFXs, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_World_Audio_Component_C_UnpauseAllRFXs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UnpauseAllRFXs, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_World_Audio_Component_C_UnpauseAllRFXs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UnpauseAllRFXs, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_World_Audio_Component_C_UnpauseAllRFXs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.UpdateFullAmbienceFromAsset
// 0x0010 (0x0010 - 0x0000)
struct BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset final
{
public:
	class UBP_DataAsset_Ambience_C*               Ambience;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset) == 0x000008, "Wrong alignment on BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset");
static_assert(sizeof(BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset) == 0x000010, "Wrong size on BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset, Ambience) == 0x000000, "Member 'BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset::Ambience' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset, CallFunc_GetCustomGI_ReturnValue) == 0x000008, "Member 'BP_World_Audio_Component_C_UpdateFullAmbienceFromAsset::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");

// Function BP_World_Audio_Component.BP_World_Audio_Component_C.UpdateRFXData
// 0x0060 (0x0060 - 0x0000)
struct BP_World_Audio_Component_C_UpdateRFXData final
{
public:
	class UBP_DataAsset_Ambience_C*               AmbianceAsset;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_SoundWithDelay_C*         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RuntimeSoundDataWithDelay           K2Node_MakeStruct_S_RuntimeSoundDataWithDelay;     // 0x0028(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_World_Audio_Component_C_UpdateRFXData) == 0x000008, "Wrong alignment on BP_World_Audio_Component_C_UpdateRFXData");
static_assert(sizeof(BP_World_Audio_Component_C_UpdateRFXData) == 0x000060, "Wrong size on BP_World_Audio_Component_C_UpdateRFXData");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, AmbianceAsset) == 0x000000, "Member 'BP_World_Audio_Component_C_UpdateRFXData::AmbianceAsset' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_World_Audio_Component_C_UpdateRFXData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_World_Audio_Component_C_UpdateRFXData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_World_Audio_Component_C_UpdateRFXData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_World_Audio_Component_C_UpdateRFXData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_World_Audio_Component_C_UpdateRFXData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_World_Audio_Component_C_UpdateRFXData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, K2Node_MakeStruct_S_RuntimeSoundDataWithDelay) == 0x000028, "Member 'BP_World_Audio_Component_C_UpdateRFXData::K2Node_MakeStruct_S_RuntimeSoundDataWithDelay' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_World_Audio_Component_C_UpdateRFXData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_World_Audio_Component_C_UpdateRFXData, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_World_Audio_Component_C_UpdateRFXData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

