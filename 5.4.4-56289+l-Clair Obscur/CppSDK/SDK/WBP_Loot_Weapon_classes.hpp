#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Loot_Weapon

#include "Basic.hpp"

#include "WBP_Loot_Base_classes.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "EAttributeScalingGrade_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Loot_Weapon.WBP_Loot_Weapon_C
// 0x0038 (0x0490 - 0x0458)
class UWBP_Loot_Weapon_C final : public UWBP_Loot_Base_C
{
public:
	class UWBP_CharacterSelectorEntry_C*          CharacterIcon;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponAttackType_C*                WBP_WeaponAttackType;                              // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponPower_C*                     WBP_WeaponPower;                                   // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponIcon_C*                      WeaponIcon;                                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponLevelTooltip_C*              WeaponLevelTooltip;                                // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_HeadingText_C*                     WeaponName;                                        // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDynamicEntryBox*                       WeaponScalingList;                                 // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void LoadWeapon(class UBP_ItemInstance_Gear_Weapon_C* InWeaponInstance, class UBP_CharacterData_C* InCharacterData);
	void LoadWeaponAttributeScalings(class UBP_ItemInstance_Gear_Weapon_C* InWeaponInstance, const TMap<ECharacterAttribute, int32>& InWeaponScalingDamageByAttribute);
	void SetBoughtItemData(const struct FS_MerchantItemQueueData& BoughtItem, int32 Quantity);
	void SetItemData(class UBP_GeneratedItemInfo_Base_C* GeneratedItemInfo, const struct FS_LootContext& LootContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Loot_Weapon_C">();
	}
	static class UWBP_Loot_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Loot_Weapon_C>();
	}
};
static_assert(alignof(UWBP_Loot_Weapon_C) == 0x000008, "Wrong alignment on UWBP_Loot_Weapon_C");
static_assert(sizeof(UWBP_Loot_Weapon_C) == 0x000490, "Wrong size on UWBP_Loot_Weapon_C");
static_assert(offsetof(UWBP_Loot_Weapon_C, CharacterIcon) == 0x000458, "Member 'UWBP_Loot_Weapon_C::CharacterIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Loot_Weapon_C, WBP_WeaponAttackType) == 0x000460, "Member 'UWBP_Loot_Weapon_C::WBP_WeaponAttackType' has a wrong offset!");
static_assert(offsetof(UWBP_Loot_Weapon_C, WBP_WeaponPower) == 0x000468, "Member 'UWBP_Loot_Weapon_C::WBP_WeaponPower' has a wrong offset!");
static_assert(offsetof(UWBP_Loot_Weapon_C, WeaponIcon) == 0x000470, "Member 'UWBP_Loot_Weapon_C::WeaponIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Loot_Weapon_C, WeaponLevelTooltip) == 0x000478, "Member 'UWBP_Loot_Weapon_C::WeaponLevelTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Loot_Weapon_C, WeaponName) == 0x000480, "Member 'UWBP_Loot_Weapon_C::WeaponName' has a wrong offset!");
static_assert(offsetof(UWBP_Loot_Weapon_C, WeaponScalingList) == 0x000488, "Member 'UWBP_Loot_Weapon_C::WeaponScalingList' has a wrong offset!");

}

