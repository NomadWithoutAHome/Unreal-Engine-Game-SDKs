#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MiniMap_Main

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "Engine_structs.hpp"
#include "S_MinimapLevelIdentifier_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct WBP_MiniMap_Main_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on WBP_MiniMap_Main_C_BP_OnHandleBackAction");
static_assert(sizeof(WBP_MiniMap_Main_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on WBP_MiniMap_Main_C_BP_OnHandleBackAction");
static_assert(offsetof(WBP_MiniMap_Main_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.ConvertMapLocationToWidgetLocation
// 0x0078 (0x0078 - 0x0000)
struct WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation final
{
public:
	struct FVector2D                              InMapLocation;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OutWidgetLocation;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMapHeight_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMapWidth_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation");
static_assert(sizeof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation) == 0x000078, "Wrong size on WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, InMapLocation) == 0x000000, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::InMapLocation' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, OutWidgetLocation) == 0x000010, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::OutWidgetLocation' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_BreakVector2D_X) == 0x000020, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_GetMapHeight_ReturnValue) == 0x000038, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_GetMapHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_GetMapWidth_ReturnValue) == 0x000048, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_GetMapWidth_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'WBP_MiniMap_Main_C_ConvertMapLocationToWidgetLocation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.DrawUnlockedSections
// 0x0058 (0x0058 - 0x0000)
struct WBP_MiniMap_Main_C_DrawUnlockedSections final
{
public:
	TArray<double>                                UnlockedSections;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0048(0x0008)(NoDestructor)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_DrawUnlockedSections) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_DrawUnlockedSections");
static_assert(sizeof(WBP_MiniMap_Main_C_DrawUnlockedSections) == 0x000058, "Wrong size on WBP_MiniMap_Main_C_DrawUnlockedSections");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, UnlockedSections) == 0x000000, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::UnlockedSections' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000030, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000038, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000048, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_DrawUnlockedSections, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000050, "Member 'WBP_MiniMap_Main_C_DrawUnlockedSections::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.ExecuteUbergraph_WBP_MiniMap_Main
// 0x04A0 (0x04A0 - 0x0000)
struct WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_3;     // 0x0008(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_3;     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_3;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_3;    // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_2;     // 0x0048(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_2;     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_2;   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_2;    // 0x0070(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_1;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x00F0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0118(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_2;                            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_0;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4_0;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0158(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0180(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_3;                            // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5_0;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6_0;                            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_4;                            // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_6;                            // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance_1;          // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_5;     // 0x0230(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_5;     // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_5;   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_5;    // 0x0258(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_InputActionValueToAxis2D_ReturnValue; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MiniMapCapture_C*                   CallFunc_GetActorOfClass_ReturnValue;              // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_GetUnlockedMapSectionsNormalized_NormalizedUnlockedMapSections; // 0x0298(0x0010)(ReferenceParm)
	uint8                                         Pad_2A8[0x8];                                      // 0x02A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x02B0(0x00D0)()
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0380(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_LevelEntrancePOI_C*>        CallFunc_Map_Values_Values;                        // 0x0390(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_LevelEntrancePOI_C*                CallFunc_Array_Get_Item;                           // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetWidgetLocation_WidgetLocation;         // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsQuestObjective_bIsQuestObjective;       // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_4;     // 0x03D0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_4;     // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_4;   // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_4;    // 0x03F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0400(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_2;                            // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2; // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetTriggerParameter_self_CastInput; // 0x0430(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_442[0x2];                                      // 0x0442(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0444(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0455(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_456[0x2];                                      // 0x0456(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7;                              // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7_0;                            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8_0;                            // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_7;                            // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MiniMapWidth_ImplicitCast;      // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_MiniMapHeight_ImplicitCast;     // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main) == 0x000010, "Wrong alignment on WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main");
static_assert(sizeof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main) == 0x0004A0, "Wrong size on WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, EntryPoint) == 0x000000, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ActionValue_3) == 0x000008, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ElapsedTime_3) == 0x000028, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ElapsedTime_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_TriggeredTime_3) == 0x00002C, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_TriggeredTime_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_SourceAction_3) == 0x000030, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_SourceAction_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue) == 0x000040, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ActionValue_2) == 0x000048, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ElapsedTime_2) == 0x000068, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_TriggeredTime_2) == 0x00006C, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_SourceAction_2) == 0x000070, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_SourceAction_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable) == 0x000078, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1) == 0x000080, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable) == 0x000088, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_1) == 0x000090, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_0) == 0x000098, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_1_0) == 0x0000A0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_1_1) == 0x0000A8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_1_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_1) == 0x0000B0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_2) == 0x0000B8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x0000C0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x0000C4, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_CustomEvent_Loaded_1) == 0x0000D0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable_1) == 0x0000D8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_DynamicCast_AsMaterial_Instance) == 0x0000E0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x0000F0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x000110, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x000114, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000118, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable_2) == 0x000120, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000128, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_3) == 0x000130, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_4) == 0x000138, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_3_0) == 0x000140, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_4_0) == 0x000148, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_4_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_bool_Variable) == 0x000150, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000158, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000178, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x00017C, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000180, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x000188, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable_3) == 0x000190, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_5) == 0x000198, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_5_0) == 0x0001A0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_5_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_6) == 0x0001A8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_bool_Variable_1) == 0x0001B0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_6_0) == 0x0001B8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_6_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_bool_Variable_2) == 0x0001C0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable_4) == 0x0001C8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable_5) == 0x0001D0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_bool_Variable_3) == 0x0001D8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_name_Variable) == 0x0001DC, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_Select_Default) == 0x0001E8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_SpawnSound2D_ReturnValue) == 0x0001F0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_name_Variable_1) == 0x0001F8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_CustomEvent_Loaded) == 0x000200, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_IsValid_ReturnValue_1) == 0x000208, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable_6) == 0x000210, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_DynamicCast_AsMaterial_Instance_1) == 0x000218, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_DynamicCast_AsMaterial_Instance_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000228, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ActionValue_5) == 0x000230, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ActionValue_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ElapsedTime_5) == 0x000250, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ElapsedTime_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_TriggeredTime_5) == 0x000254, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_TriggeredTime_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_SourceAction_5) == 0x000258, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_SourceAction_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_int_Loop_Counter_Variable) == 0x000260, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Conv_InputActionValueToAxis2D_ReturnValue) == 0x000268, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Conv_InputActionValueToAxis2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Add_IntInt_ReturnValue) == 0x000278, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_Event_IsDesignTime) == 0x00027C, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000280, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_GetActorOfClass_ReturnValue) == 0x000288, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_GetCustomGI_ReturnValue) == 0x000290, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_GetUnlockedMapSectionsNormalized_NormalizedUnlockedMapSections) == 0x000298, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_GetUnlockedMapSectionsNormalized_NormalizedUnlockedMapSections' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_MakeStruct_SlateBrush) == 0x0002B0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_CreateDelegate_OutputDelegate) == 0x000380, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Map_Values_Values) == 0x000390, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_int_Array_Index_Variable) == 0x0003A0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Array_Length_ReturnValue) == 0x0003A4, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Array_Get_Item) == 0x0003A8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Less_IntInt_ReturnValue) == 0x0003B0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_GetWidgetLocation_WidgetLocation) == 0x0003B8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_GetWidgetLocation_WidgetLocation' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_IsQuestObjective_bIsQuestObjective) == 0x0003C8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_IsQuestObjective_bIsQuestObjective' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ActionValue_4) == 0x0003D0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ActionValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_ElapsedTime_4) == 0x0003F0, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_ElapsedTime_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_TriggeredTime_4) == 0x0003F4, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_TriggeredTime_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_EnhancedInputActionEvent_SourceAction_4) == 0x0003F8, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_EnhancedInputActionEvent_SourceAction_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_struct_Variable) == 0x000400, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_2) == 0x000410, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_1_2) == 0x000418, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_1_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2) == 0x000420, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_Select_Default_1) == 0x000428, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_SetTriggerParameter_self_CastInput) == 0x000430, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_SetTriggerParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_IsValid_ReturnValue_2) == 0x000440, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_IsValid_ReturnValue_3) == 0x000441, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_CreateDelegate_OutputDelegate_1) == 0x000444, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000454, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000455, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_7) == 0x000458, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, CallFunc_BooleanOR_ReturnValue) == 0x000460, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_7_0) == 0x000468, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_7_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_8) == 0x000470, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_real_Variable_8_0) == 0x000478, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_real_Variable_8_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, Temp_object_Variable_7) == 0x000480, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_VariableSet_MiniMapWidth_ImplicitCast) == 0x000488, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_VariableSet_MiniMapWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main, K2Node_VariableSet_MiniMapHeight_ImplicitCast) == 0x000490, "Member 'WBP_MiniMap_Main_C_ExecuteUbergraph_WBP_MiniMap_Main::K2Node_VariableSet_MiniMapHeight_ImplicitCast' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.GenerateLevelPOI
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_MiniMap_Main_C_GenerateLevelPOI final
{
public:
	struct FS_MinimapLevelIdentifier              InLevelIdentifier;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InMapLocation;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_GetCurrentQuestLevelIdentifiers_LevelIdentifiers; // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LevelEntrancePOI_C*                CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ConvertLocationToMapLocation_2DPosition;  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ConvertMapLocationToWidgetLocation_OutWidgetLocation; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationInUnlockedSection_IsInUnlockedSection; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_LevelEntrancePOI_C*                CallFunc_Create_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsQuestObjective_bIsQuestObjective;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_GenerateLevelPOI) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_GenerateLevelPOI");
static_assert(sizeof(WBP_MiniMap_Main_C_GenerateLevelPOI) == 0x0000B0, "Wrong size on WBP_MiniMap_Main_C_GenerateLevelPOI");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, InLevelIdentifier) == 0x000000, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::InLevelIdentifier' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, InMapLocation) == 0x000010, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::InMapLocation' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_GetCurrentQuestLevelIdentifiers_LevelIdentifiers) == 0x000028, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_GetCurrentQuestLevelIdentifiers_LevelIdentifiers' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000038, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_Map_Remove_ReturnValue) == 0x000039, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_Array_Contains_ReturnValue) == 0x00003A, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_Map_Find_Value) == 0x000040, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_Map_Contains_ReturnValue) == 0x000049, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_IsValid_ReturnValue) == 0x00004B, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_ConvertLocationToMapLocation_2DPosition) == 0x000050, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_ConvertLocationToMapLocation_2DPosition' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_ConvertMapLocationToWidgetLocation_OutWidgetLocation) == 0x000068, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_ConvertMapLocationToWidgetLocation_OutWidgetLocation' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_IsLocationInUnlockedSection_IsInUnlockedSection) == 0x000078, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_IsLocationInUnlockedSection_IsInUnlockedSection' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, Temp_int_Variable) == 0x00007C, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, Temp_int_Variable_1) == 0x000084, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, Temp_bool_Variable) == 0x000088, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_GetOwningPlayer_ReturnValue) == 0x000090, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_Create_ReturnValue) == 0x000098, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_AddChildToCanvas_ReturnValue) == 0x0000A0, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, CallFunc_IsQuestObjective_bIsQuestObjective) == 0x0000A8, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::CallFunc_IsQuestObjective_bIsQuestObjective' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevelPOI, K2Node_Select_Default) == 0x0000AC, "Member 'WBP_MiniMap_Main_C_GenerateLevelPOI::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.GenerateLevels
// 0x0078 (0x0078 - 0x0000)
struct WBP_MiniMap_Main_C_GenerateLevels final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_MapTeleportPoint_C*>    Temp_wildcard_Variable;                            // 0x0010(0x0010)(ReferenceParm)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_MapTeleportPoint_C*            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldInfoComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_jRPG_MapTeleportPoint_C*>    CallFunc_GetAllTeleportPoints_TeleportPoints;      // 0x0038(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_MinimapLevelIdentifier              K2Node_MakeStruct_S_MinimapLevelIdentifier;        // 0x0060(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_GenerateLevels) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_GenerateLevels");
static_assert(sizeof(WBP_MiniMap_Main_C_GenerateLevels) == 0x000078, "Wrong size on WBP_MiniMap_Main_C_GenerateLevels");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MiniMap_Main_C_GenerateLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MiniMap_Main_C_GenerateLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, Temp_wildcard_Variable) == 0x000010, "Member 'WBP_MiniMap_Main_C_GenerateLevels::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_GetGameMode_ReturnValue) == 0x000020, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_GetAllTeleportPoints_TeleportPoints) == 0x000038, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_GetAllTeleportPoints_TeleportPoints' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, K2Node_MakeStruct_S_MinimapLevelIdentifier) == 0x000060, "Member 'WBP_MiniMap_Main_C_GenerateLevels::K2Node_MakeStruct_S_MinimapLevelIdentifier' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GenerateLevels, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WBP_MiniMap_Main_C_GenerateLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.GetDisplayedRanged
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_MiniMap_Main_C_GetDisplayedRanged final
{
public:
	struct FVector2D                              min_0;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              max_0;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_GetDisplayedRanged) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_GetDisplayedRanged");
static_assert(sizeof(WBP_MiniMap_Main_C_GetDisplayedRanged) == 0x0000C8, "Wrong size on WBP_MiniMap_Main_C_GetDisplayedRanged");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, min_0) == 0x000000, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::min_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, max_0) == 0x000010, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::max_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_GetViewportSize_ReturnValue) == 0x000030, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_BreakVector2D_X) == 0x000048, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_BreakVector2D_Y) == 0x000050, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000058, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_BreakVector2D_X_1) == 0x000060, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_BreakVector2D_Y_1) == 0x000068, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000080, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000090, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_GetDisplayedRanged, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000B8, "Member 'WBP_MiniMap_Main_C_GetDisplayedRanged::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnObjective_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_CenterOnPlayer_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5
// 0x0030 (0x0030 - 0x0000)
struct WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5");
static_assert(sizeof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5) == 0x000030, "Wrong size on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5, ActionValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5, ElapsedTime) == 0x000020, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5, TriggeredTime) == 0x000024, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5, SourceAction) == 0x000028, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Pan_K2Node_EnhancedInputActionEvent_5::SourceAction' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2
// 0x0030 (0x0030 - 0x0000)
struct WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2");
static_assert(sizeof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2) == 0x000030, "Wrong size on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2, ElapsedTime) == 0x000020, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2, TriggeredTime) == 0x000024, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2, SourceAction) == 0x000028, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_2::SourceAction' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3
// 0x0030 (0x0030 - 0x0000)
struct WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3");
static_assert(sizeof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3) == 0x000030, "Wrong size on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3, ActionValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3, ElapsedTime) == 0x000020, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3, TriggeredTime) == 0x000024, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3, SourceAction) == 0x000028, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_3::SourceAction' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4
// 0x0030 (0x0030 - 0x0000)
struct WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4");
static_assert(sizeof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4) == 0x000030, "Wrong size on WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4, ActionValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4::ActionValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4, ElapsedTime) == 0x000020, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4, TriggeredTime) == 0x000024, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4::TriggeredTime' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4, SourceAction) == 0x000028, "Member 'WBP_MiniMap_Main_C_InpActEvt_IA_UI_MiniMap_Zoom_K2Node_EnhancedInputActionEvent_4::SourceAction' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnLoaded_2FE305B645036488FFDBA899E61DB293
// 0x0008 (0x0008 - 0x0000)
struct WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293");
static_assert(sizeof(WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293) == 0x000008, "Wrong size on WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293");
static_assert(offsetof(WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293, Loaded) == 0x000000, "Member 'WBP_MiniMap_Main_C_OnLoaded_2FE305B645036488FFDBA899E61DB293::Loaded' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00
// 0x0008 (0x0008 - 0x0000)
struct WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00");
static_assert(sizeof(WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00) == 0x000008, "Wrong size on WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00");
static_assert(offsetof(WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00, Loaded) == 0x000000, "Member 'WBP_MiniMap_Main_C_OnLoaded_D0B648A44D6C7E78FA99529F0E5C2A00::Loaded' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnPanTrigger
// 0x0088 (0x0088 - 0x0000)
struct WBP_MiniMap_Main_C_OnPanTrigger final
{
public:
	struct FVector2D                              InTriggerValue;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_wildcard_Variable;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_wildcard_Variable_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_OnPanTrigger) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_OnPanTrigger");
static_assert(sizeof(WBP_MiniMap_Main_C_OnPanTrigger) == 0x000088, "Wrong size on WBP_MiniMap_Main_C_OnPanTrigger");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, InTriggerValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::InTriggerValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, Temp_wildcard_Variable) == 0x000010, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, Temp_wildcard_Variable_1) == 0x000014, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000030, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_MakeVector2D_ReturnValue_1) == 0x000040, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x000050, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000068, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000078, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnPanTrigger, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000080, "Member 'WBP_MiniMap_Main_C_OnPanTrigger::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.OnZoomTrigger
// 0x0028 (0x0028 - 0x0000)
struct WBP_MiniMap_Main_C_OnZoomTrigger final
{
public:
	double                                        InTriggerValue;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_OnZoomTrigger) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_OnZoomTrigger");
static_assert(sizeof(WBP_MiniMap_Main_C_OnZoomTrigger) == 0x000028, "Wrong size on WBP_MiniMap_Main_C_OnZoomTrigger");
static_assert(offsetof(WBP_MiniMap_Main_C_OnZoomTrigger, InTriggerValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_OnZoomTrigger::InTriggerValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnZoomTrigger, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000008, "Member 'WBP_MiniMap_Main_C_OnZoomTrigger::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnZoomTrigger, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_MiniMap_Main_C_OnZoomTrigger::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnZoomTrigger, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'WBP_MiniMap_Main_C_OnZoomTrigger::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_OnZoomTrigger, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'WBP_MiniMap_Main_C_OnZoomTrigger::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MiniMap_Main_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MiniMap_Main_C_PreConstruct");
static_assert(sizeof(WBP_MiniMap_Main_C_PreConstruct) == 0x000001, "Wrong size on WBP_MiniMap_Main_C_PreConstruct");
static_assert(offsetof(WBP_MiniMap_Main_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MiniMap_Main_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.RefreshQuestObjectives
// 0x0058 (0x0058 - 0x0000)
struct WBP_MiniMap_Main_C_RefreshQuestObjectives final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_MinimapLevelIdentifier>      Temp_wildcard_Variable;                            // 0x0010(0x0010)(ReferenceParm)
	struct FS_MinimapLevelIdentifier              CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LevelEntrancePOI_C*                CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_MinimapLevelIdentifier>      CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_MiniMap_Main_C_RefreshQuestObjectives) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_RefreshQuestObjectives");
static_assert(sizeof(WBP_MiniMap_Main_C_RefreshQuestObjectives) == 0x000058, "Wrong size on WBP_MiniMap_Main_C_RefreshQuestObjectives");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, Temp_wildcard_Variable) == 0x000010, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, CallFunc_Map_Find_Value) == 0x000038, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_RefreshQuestObjectives, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'WBP_MiniMap_Main_C_RefreshQuestObjectives::CallFunc_Map_Keys_Keys' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.SetPanLerp
// 0x0058 (0x0058 - 0x0000)
struct WBP_MiniMap_Main_C_SetPanLerp final
{
public:
	double                                        PanLerp_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_SetPanLerp) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_SetPanLerp");
static_assert(sizeof(WBP_MiniMap_Main_C_SetPanLerp) == 0x000058, "Wrong size on WBP_MiniMap_Main_C_SetPanLerp");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, PanLerp_0) == 0x000000, "Member 'WBP_MiniMap_Main_C_SetPanLerp::PanLerp_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_BreakVector2D_Y_1) == 0x000030, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_Lerp_ReturnValue_1) == 0x000038, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_Lerp_ReturnValue_2) == 0x000040, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanLerp, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'WBP_MiniMap_Main_C_SetPanLerp::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.SetPanOffset
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_MiniMap_Main_C_SetPanOffset final
{
public:
	struct FVector2D                              InOffset;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_SetPanOffset) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_SetPanOffset");
static_assert(sizeof(WBP_MiniMap_Main_C_SetPanOffset) == 0x0000C0, "Wrong size on WBP_MiniMap_Main_C_SetPanOffset");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, InOffset) == 0x000000, "Member 'WBP_MiniMap_Main_C_SetPanOffset::InOffset' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_BreakVector2D_X) == 0x000010, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_GetViewportSize_ReturnValue) == 0x000020, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_BreakVector2D_X_2) == 0x000068, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_BreakVector2D_Y_2) == 0x000070, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000088, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000090, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_FClamp_ReturnValue_1) == 0x0000A0, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_MakeVector2D_ReturnValue) == 0x0000A8, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000B8, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetPanOffset, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000BC, "Member 'WBP_MiniMap_Main_C_SetPanOffset::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.SetZoomScale
// 0x0020 (0x0020 - 0x0000)
struct WBP_MiniMap_Main_C_SetZoomScale final
{
public:
	double                                        InZoom;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPanLerp;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_SetZoomScale) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_SetZoomScale");
static_assert(sizeof(WBP_MiniMap_Main_C_SetZoomScale) == 0x000020, "Wrong size on WBP_MiniMap_Main_C_SetZoomScale");
static_assert(offsetof(WBP_MiniMap_Main_C_SetZoomScale, InZoom) == 0x000000, "Member 'WBP_MiniMap_Main_C_SetZoomScale::InZoom' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetZoomScale, IsPanLerp) == 0x000008, "Member 'WBP_MiniMap_Main_C_SetZoomScale::IsPanLerp' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetZoomScale, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'WBP_MiniMap_Main_C_SetZoomScale::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetZoomScale, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'WBP_MiniMap_Main_C_SetZoomScale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_SetZoomScale, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000018, "Member 'WBP_MiniMap_Main_C_SetZoomScale::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.StartPanLerp
// 0x0018 (0x0018 - 0x0000)
struct WBP_MiniMap_Main_C_StartPanLerp final
{
public:
	struct FVector2D                              PanTarget_0;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_StartPanLerp) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_StartPanLerp");
static_assert(sizeof(WBP_MiniMap_Main_C_StartPanLerp) == 0x000018, "Wrong size on WBP_MiniMap_Main_C_StartPanLerp");
static_assert(offsetof(WBP_MiniMap_Main_C_StartPanLerp, PanTarget_0) == 0x000000, "Member 'WBP_MiniMap_Main_C_StartPanLerp::PanTarget_0' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_StartPanLerp, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_MiniMap_Main_C_StartPanLerp::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.UpdatePlayerPosition
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_MiniMap_Main_C_UpdatePlayerPosition final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x00D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ConvertLocationToMapLocation_2DPosition;  // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ConvertMapLocationToWidgetLocation_OutWidgetLocation; // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_UpdatePlayerPosition) == 0x000010, "Wrong alignment on WBP_MiniMap_Main_C_UpdatePlayerPosition");
static_assert(sizeof(WBP_MiniMap_Main_C_UpdatePlayerPosition) == 0x0001A0, "Wrong size on WBP_MiniMap_Main_C_UpdatePlayerPosition");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000070, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakTransform_Location) == 0x000078, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakRotator_Roll) == 0x0000C0, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakRotator_Pitch) == 0x0000C4, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakRotator_Yaw) == 0x0000C8, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0000D0, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakTransform_Location_1) == 0x000130, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakTransform_Rotation_1) == 0x000148, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_BreakTransform_Scale_1) == 0x000160, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_ConvertLocationToMapLocation_2DPosition) == 0x000178, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_ConvertLocationToMapLocation_2DPosition' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePlayerPosition, CallFunc_ConvertMapLocationToWidgetLocation_OutWidgetLocation) == 0x000188, "Member 'WBP_MiniMap_Main_C_UpdatePlayerPosition::CallFunc_ConvertMapLocationToWidgetLocation_OutWidgetLocation' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.UpdatePOIPositions
// 0x0040 (0x0040 - 0x0000)
struct WBP_MiniMap_Main_C_UpdatePOIPositions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_LevelEntrancePOI_C*>        CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_LevelEntrancePOI_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWidgetLocation_WidgetLocation;         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MiniMap_Main_C_UpdatePOIPositions) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_UpdatePOIPositions");
static_assert(sizeof(WBP_MiniMap_Main_C_UpdatePOIPositions) == 0x000040, "Wrong size on WBP_MiniMap_Main_C_UpdatePOIPositions");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, CallFunc_Map_Values_Values) == 0x000010, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, CallFunc_GetWidgetLocation_WidgetLocation) == 0x000028, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::CallFunc_GetWidgetLocation_WidgetLocation' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdatePOIPositions, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_MiniMap_Main_C_UpdatePOIPositions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_MiniMap_Main.WBP_MiniMap_Main_C.UpdateWidgetPosition
// 0x0170 (0x0170 - 0x0000)
struct WBP_MiniMap_Main_C_UpdateWidgetPosition final
{
public:
	struct FVector2D                              InWidgetPosition;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                InWidget;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_LevelEntrancePOI_C*                K2Node_DynamicCast_AsWBP_Level_Entrance_POI;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetDisplayedRanged_Min;                   // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDisplayedRanged_Max;                   // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B[0x5];                                      // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B[0x5];                                      // 0x012B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0150(0x0020)(NoDestructor)
};
static_assert(alignof(WBP_MiniMap_Main_C_UpdateWidgetPosition) == 0x000008, "Wrong alignment on WBP_MiniMap_Main_C_UpdateWidgetPosition");
static_assert(sizeof(WBP_MiniMap_Main_C_UpdateWidgetPosition) == 0x000170, "Wrong size on WBP_MiniMap_Main_C_UpdateWidgetPosition");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, InWidgetPosition) == 0x000000, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::InWidgetPosition' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, InWidget) == 0x000010, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::InWidget' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, Temp_byte_Variable) == 0x000018, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, K2Node_DynamicCast_AsWBP_Level_Entrance_POI) == 0x000020, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::K2Node_DynamicCast_AsWBP_Level_Entrance_POI' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_X) == 0x000038, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, Temp_byte_Variable_1) == 0x000048, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000050, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000058, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_GetViewportSize_ReturnValue) == 0x000060, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000090, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, Temp_bool_Variable) == 0x000098, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, K2Node_MakeStruct_Margin) == 0x0000B8, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_GetDisplayedRanged_Min) == 0x0000C8, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_GetDisplayedRanged_Min' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_GetDisplayedRanged_Max) == 0x0000D8, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_GetDisplayedRanged_Max' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_X_2) == 0x0000E8, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_Y_2) == 0x0000F0, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_X_3) == 0x0000F8, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BreakVector2D_Y_3) == 0x000100, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000108, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_MapRangeClamped_ReturnValue) == 0x000110, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000118, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x000119, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BooleanAND_ReturnValue) == 0x00011A, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000120, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x000128, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, K2Node_Select_Default) == 0x000129, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_BooleanAND_ReturnValue_1) == 0x00012A, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000130, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x000140, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MiniMap_Main_C_UpdateWidgetPosition, K2Node_MakeStruct_Anchors) == 0x000150, "Member 'WBP_MiniMap_Main_C_UpdateWidgetPosition::K2Node_MakeStruct_Anchors' has a wrong offset!");

}

