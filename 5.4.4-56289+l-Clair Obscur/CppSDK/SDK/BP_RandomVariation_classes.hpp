#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RandomVariation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RandomVariation.BP_RandomVariation_C
// 0x0010 (0x00B0 - 0x00A0)
class UBP_RandomVariation_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Color_ShouldRandom;                                // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Scale_ShouldRandom;                                // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RandomVariation(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RandomVariation_C">();
	}
	static class UBP_RandomVariation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RandomVariation_C>();
	}
};
static_assert(alignof(UBP_RandomVariation_C) == 0x000008, "Wrong alignment on UBP_RandomVariation_C");
static_assert(sizeof(UBP_RandomVariation_C) == 0x0000B0, "Wrong size on UBP_RandomVariation_C");
static_assert(offsetof(UBP_RandomVariation_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_RandomVariation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_RandomVariation_C, Color_ShouldRandom) == 0x0000A8, "Member 'UBP_RandomVariation_C::Color_ShouldRandom' has a wrong offset!");
static_assert(offsetof(UBP_RandomVariation_C, Scale_ShouldRandom) == 0x0000A9, "Member 'UBP_RandomVariation_C::Scale_ShouldRandom' has a wrong offset!");

}

