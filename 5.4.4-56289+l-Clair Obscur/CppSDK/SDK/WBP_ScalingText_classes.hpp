#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ScalingText

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ScalingText.WBP_ScalingText_C
// 0x0040 (0x0348 - 0x0308)
class UWBP_ScalingText_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       Text;                                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TextSizeBox;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 TextStyle;                                         // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ContentText;                                       // 0x0328(0x0010)(Edit, BlueprintVisible)
	double                                        TextMaxDesiredWidth;                               // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TextEndPadding;                                    // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ScalingText(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Set_Text(class FText& InText);
	void SetTextMaxDesiredWidth(double TextMaxDesiredWidth_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ScalingText_C">();
	}
	static class UWBP_ScalingText_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ScalingText_C>();
	}
};
static_assert(alignof(UWBP_ScalingText_C) == 0x000008, "Wrong alignment on UWBP_ScalingText_C");
static_assert(sizeof(UWBP_ScalingText_C) == 0x000348, "Wrong size on UWBP_ScalingText_C");
static_assert(offsetof(UWBP_ScalingText_C, UberGraphFrame) == 0x000308, "Member 'UWBP_ScalingText_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ScalingText_C, Text) == 0x000310, "Member 'UWBP_ScalingText_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_ScalingText_C, TextSizeBox) == 0x000318, "Member 'UWBP_ScalingText_C::TextSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_ScalingText_C, TextStyle) == 0x000320, "Member 'UWBP_ScalingText_C::TextStyle' has a wrong offset!");
static_assert(offsetof(UWBP_ScalingText_C, ContentText) == 0x000328, "Member 'UWBP_ScalingText_C::ContentText' has a wrong offset!");
static_assert(offsetof(UWBP_ScalingText_C, TextMaxDesiredWidth) == 0x000338, "Member 'UWBP_ScalingText_C::TextMaxDesiredWidth' has a wrong offset!");
static_assert(offsetof(UWBP_ScalingText_C, TextEndPadding) == 0x000340, "Member 'UWBP_ScalingText_C::TextEndPadding' has a wrong offset!");

}

