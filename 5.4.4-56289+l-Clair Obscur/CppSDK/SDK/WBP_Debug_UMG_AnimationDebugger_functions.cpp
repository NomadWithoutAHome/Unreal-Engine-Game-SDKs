#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Debug_UMG_AnimationDebugger

#include "Basic.hpp"

#include "WBP_Debug_UMG_AnimationDebugger_classes.hpp"
#include "WBP_Debug_UMG_AnimationDebugger_parameters.hpp"


namespace SDK
{

// Function WBP_Debug_UMG_AnimationDebugger.WBP_Debug_UMG_AnimationDebugger_C.ExecuteUbergraph_WBP_Debug_UMG_AnimationDebugger
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Debug_UMG_AnimationDebugger_C::ExecuteUbergraph_WBP_Debug_UMG_AnimationDebugger(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Debug_UMG_AnimationDebugger_C", "ExecuteUbergraph_WBP_Debug_UMG_AnimationDebugger");

	Params::WBP_Debug_UMG_AnimationDebugger_C_ExecuteUbergraph_WBP_Debug_UMG_AnimationDebugger Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Debug_UMG_AnimationDebugger.WBP_Debug_UMG_AnimationDebugger_C.RegisterWidget
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<class UWidgetAnimation*>&        Animations                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_Debug_UMG_AnimationDebugger_C::RegisterWidget(class UUserWidget* Widget, TArray<class UWidgetAnimation*>& Animations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Debug_UMG_AnimationDebugger_C", "RegisterWidget");

	Params::WBP_Debug_UMG_AnimationDebugger_C_RegisterWidget Parms{};

	Parms.Widget = Widget;
	Parms.Animations = std::move(Animations);

	UObject::ProcessEvent(Func, &Parms);

	Animations = std::move(Parms.Animations);
}

}

