#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_CombatMovement

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ECharacterTeamSelector_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.UpdateMovementProgression
// 0x0700 (0x0700 - 0x0000)
struct AC_jRPG_CombatMovement_C_UpdateMovementProgression final
{
public:
	float                                         CurveValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                local_newLocation;                                 // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         local_currentCurveValue;                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0068(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0048)(HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0168(0x0010)(ReferenceParm)
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue_1;          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0190(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesLocationMatch_Result;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0208(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0218(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0270(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0280(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0290(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x02E8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0330(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0380(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x03A0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03F8(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0438(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0480(0x0010)(ReferenceParm)
	struct FDebugFloatHistory                     CallFunc_AddFloatHistorySample_ReturnValue;        // 0x0490(0x0020)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x04B0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0500(0x0010)()
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0528(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0578(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0678(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0688(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x06D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x06E0(0x0010)()
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_UpdateMovementProgression) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_UpdateMovementProgression");
static_assert(sizeof(AC_jRPG_CombatMovement_C_UpdateMovementProgression) == 0x000700, "Wrong size on AC_jRPG_CombatMovement_C_UpdateMovementProgression");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CurveValue) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CurveValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, local_newLocation) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::local_newLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, local_currentCurveValue) == 0x000020, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::local_currentCurveValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_DynamicCast_AsCharacter) == 0x000030, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_VectorToString_ReturnValue) == 0x000040, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetCurrentMontage_ReturnValue) == 0x000050, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000068, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetOwner_ReturnValue_1) == 0x000108, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_DynamicCast_AsCharacter_1) == 0x000158, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_DynamicCast_bSuccess_1) == 0x000160, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeArray_Array) == 0x000168, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetCurrentMontage_ReturnValue_1) == 0x000178, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetCurrentMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Format_ReturnValue) == 0x000180, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000190, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001E8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_DoesLocationMatch_Result) == 0x000200, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_DoesLocationMatch_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_BoolToText_ReturnValue) == 0x000208, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_4) == 0x000218, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeArray_Array_1) == 0x000260, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Format_ReturnValue_1) == 0x000270, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000280, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_5) == 0x000290, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Vector_Distance_ReturnValue) == 0x0002D8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_6) == 0x0002E8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_7) == 0x000330, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetOwner_ReturnValue_2) == 0x000378, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000380, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetDisplayName_ReturnValue) == 0x000390, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_8) == 0x0003A0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetDisplayName_ReturnValue_1) == 0x0003E8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeArray_Array_2) == 0x0003F8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Concat_StrStr_ReturnValue) == 0x000408, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Format_ReturnValue_2) == 0x000418, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_StringToName_ReturnValue) == 0x000428, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000430, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_9) == 0x000438, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeArray_Array_3) == 0x000480, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_AddFloatHistorySample_ReturnValue) == 0x000490, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_AddFloatHistorySample_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Format_ReturnValue_3) == 0x0004B0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_TextToString_ReturnValue) == 0x0004C0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetOwner_ReturnValue_3) == 0x0004D0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0004D8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x0004F0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000500, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_VLerp_ReturnValue) == 0x000510, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_10) == 0x000528, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_GetOwner_ReturnValue_4) == 0x000570, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000578, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000670, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000678, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeStruct_FormatArgumentData_11) == 0x000688, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, K2Node_MakeArray_Array_4) == 0x0006D0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Format_ReturnValue_4) == 0x0006E0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0006F0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovementProgression, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0006F8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovementProgression::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.CallAndResetMovementLatentAction
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction final
{
public:
	class USF_BlueprintLatentAction*              Temp_wildcard_Variable;                            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction");
static_assert(sizeof(AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction) == 0x000010, "Wrong size on AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction");
static_assert(offsetof(AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction, Temp_wildcard_Variable) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_CallAndResetMovementLatentAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.IsMovingTowardsInitialLocation
// 0x0018 (0x0018 - 0x0000)
struct AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation");
static_assert(sizeof(AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation) == 0x000018, "Wrong size on AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation, ReturnValue) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation, CallFunc_Vector_Distance_ReturnValue) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_IsMovingTowardsInitialLocation::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.IsAtInitialLocation
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CombatMovement_C_IsAtInitialLocation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_IsAtInitialLocation) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_IsAtInitialLocation");
static_assert(sizeof(AC_jRPG_CombatMovement_C_IsAtInitialLocation) == 0x000038, "Wrong size on AC_jRPG_CombatMovement_C_IsAtInitialLocation");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocation, ReturnValue) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocation, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocation, CallFunc_Vector_Distance_ReturnValue) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocation::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocation, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocation::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.IsAtInitialLocationOrAboutToBe
// 0x0038 (0x0038 - 0x0000)
struct AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAtInitialLocation_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe");
static_assert(sizeof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe) == 0x000038, "Wrong size on AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, ReturnValue) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_IsAtInitialLocation_ReturnValue) == 0x000001, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_IsAtInitialLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_Vector_Distance_ReturnValue) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000031, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe, CallFunc_BooleanOR_ReturnValue) == 0x000033, "Member 'AC_jRPG_CombatMovement_C_IsAtInitialLocationOrAboutToBe::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.StartMovementToCharacter
// 0x01C0 (0x01C0 - 0x0000)
struct AC_jRPG_CombatMovement_C_StartMovementToCharacter final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       OtherCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbsoluteAngle;                                     // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation_0;                                  // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Compute_Move_to_Character_Transform_NewParam; // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0148(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_StartMovementToCharacter) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_StartMovementToCharacter");
static_assert(sizeof(AC_jRPG_CombatMovement_C_StartMovementToCharacter) == 0x0001C0, "Wrong size on AC_jRPG_CombatMovement_C_StartMovementToCharacter");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, OtherCharacter) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::OtherCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, MontageToPlay) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::MontageToPlay' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, PlayRate) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::PlayRate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, Distance) == 0x000018, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::Distance' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, Angle) == 0x000020, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::Angle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, AbsoluteAngle) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::AbsoluteAngle' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, LatentAction) == 0x000030, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, TargetLocation_0) == 0x000038, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::TargetLocation_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_GetDisplayName_ReturnValue_1) == 0x000098, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_GetOwner_ReturnValue_1) == 0x000100, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_GetOwner_ReturnValue_2) == 0x000108, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000110, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_GetDisplayName_ReturnValue_2) == 0x000120, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_Compute_Move_to_Character_Transform_NewParam) == 0x000130, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_Compute_Move_to_Character_Transform_NewParam' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000148, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, K2Node_MakeArray_Array) == 0x0001A0, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovementToCharacter, CallFunc_Format_ReturnValue) == 0x0001B0, "Member 'AC_jRPG_CombatMovement_C_StartMovementToCharacter::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.GetCurrentCurveValue
// 0x0110 (0x0110 - 0x0000)
struct AC_jRPG_CombatMovement_C_GetCurrentCurveValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0088(0x0010)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_GetCurrentCurveValue");
static_assert(sizeof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue) == 0x000110, "Wrong size on AC_jRPG_CombatMovement_C_GetCurrentCurveValue");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, ReturnValue) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_GetOwner_ReturnValue_1) == 0x000068, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, K2Node_DynamicCast_AsCharacter) == 0x000070, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_GetAnimInstance_ReturnValue) == 0x000080, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000088, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, K2Node_MakeArray_Array) == 0x0000E8, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_GetCurveValue_ReturnValue) == 0x0000F8, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_GetCurrentCurveValue, CallFunc_Format_ReturnValue) == 0x000100, "Member 'AC_jRPG_CombatMovement_C_GetCurrentCurveValue::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.UpdateMovement
// 0x00D8 (0x00D8 - 0x0000)
struct AC_jRPG_CombatMovement_C_UpdateMovement final
{
public:
	struct FVector                                local_newLocation;                                 // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         local_currentCurveValue;                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentCurveValue_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	bool                                          CallFunc_DoesLocationMatch_Result;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0010)()
};
static_assert(alignof(AC_jRPG_CombatMovement_C_UpdateMovement) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_UpdateMovement");
static_assert(sizeof(AC_jRPG_CombatMovement_C_UpdateMovement) == 0x0000D8, "Wrong size on AC_jRPG_CombatMovement_C_UpdateMovement");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, local_newLocation) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::local_newLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, local_currentCurveValue) == 0x000018, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::local_currentCurveValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_GetCurrentCurveValue_ReturnValue) == 0x00001C, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_GetCurrentCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_Conv_VectorToString_ReturnValue) == 0x000040, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_DoesLocationMatch_Result) == 0x000060, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_DoesLocationMatch_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, K2Node_MakeArray_Array) == 0x0000B8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_UpdateMovement, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CombatMovement_C_UpdateMovement::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.QA_CheckExistingMoveToMontage
// 0x01D8 (0x01D8 - 0x0000)
struct AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage final
{
public:
	class UAnimMontage*                           NewMontage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0010)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x00D8(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F0(0x0048)(HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetCurrentMontage_ReturnValue;            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x0158(0x0010)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0170(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0010)()
};
static_assert(alignof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage");
static_assert(sizeof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage) == 0x0001D8, "Wrong size on AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, NewMontage) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::NewMontage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, Reason) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::Reason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_GetOwner_ReturnValue) == 0x0000D0, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0000D8, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F0, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, K2Node_DynamicCast_AsCharacter) == 0x000138, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_GetCurrentMontage_ReturnValue) == 0x000148, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_GetCurrentMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000150, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x000158, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_BooleanOR_ReturnValue) == 0x000168, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, K2Node_MakeStruct_FormatArgumentData_3) == 0x000170, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, K2Node_MakeArray_Array) == 0x0001B8, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_CombatMovement_C_QA_CheckExistingMoveToMontage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.DoesLocationMatch
// 0x01F0 (0x01F0 - 0x0000)
struct AC_jRPG_CombatMovement_C_DoesLocationMatch final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0108(0x0010)()
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0178(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0188(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E0(0x0010)()
};
static_assert(alignof(AC_jRPG_CombatMovement_C_DoesLocationMatch) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_DoesLocationMatch");
static_assert(sizeof(AC_jRPG_CombatMovement_C_DoesLocationMatch) == 0x0001F0, "Wrong size on AC_jRPG_CombatMovement_C_DoesLocationMatch");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, Result) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_Conv_VectorToString_ReturnValue) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_VSize_ReturnValue) == 0x0000A8, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x0000B0, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000108, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000118, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_SelectString_ReturnValue) == 0x000168, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000178, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, K2Node_MakeStruct_FormatArgumentData_3) == 0x000188, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, K2Node_MakeArray_Array) == 0x0001D0, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesLocationMatch, CallFunc_Format_ReturnValue) == 0x0001E0, "Member 'AC_jRPG_CombatMovement_C_DoesLocationMatch::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.DoesRotationMatch
// 0x0058 (0x0058 - 0x0000)
struct AC_jRPG_CombatMovement_C_DoesRotationMatch final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_DoesRotationMatch) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_DoesRotationMatch");
static_assert(sizeof(AC_jRPG_CombatMovement_C_DoesRotationMatch) == 0x000058, "Wrong size on AC_jRPG_CombatMovement_C_DoesRotationMatch");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, Result) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_BreakRotator_Roll_1) == 0x000034, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_BreakRotator_Pitch_1) == 0x000038, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_BreakRotator_Yaw_1) == 0x00003C, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000048, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DoesRotationMatch, CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast) == 0x000050, "Member 'AC_jRPG_CombatMovement_C_DoesRotationMatch::CallFunc_NearlyEqual_FloatFloat_B_ImplicitCast' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CombatMovement_C_OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9) == 0x000004, "Wrong alignment on AC_jRPG_CombatMovement_C_OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9");
static_assert(sizeof(AC_jRPG_CombatMovement_C_OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9) == 0x000008, "Wrong size on AC_jRPG_CombatMovement_C_OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9");
static_assert(offsetof(AC_jRPG_CombatMovement_C_OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9, NotifyName) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_OnNotifyEnd_8640038743EBB9E2014362BE91EB35F9::NotifyName' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CombatMovement_C_OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9) == 0x000004, "Wrong alignment on AC_jRPG_CombatMovement_C_OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9");
static_assert(sizeof(AC_jRPG_CombatMovement_C_OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9) == 0x000008, "Wrong size on AC_jRPG_CombatMovement_C_OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9");
static_assert(offsetof(AC_jRPG_CombatMovement_C_OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9, NotifyName) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_OnNotifyBegin_8640038743EBB9E2014362BE91EB35F9::NotifyName' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.OnInterrupted_8640038743EBB9E2014362BE91EB35F9
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CombatMovement_C_OnInterrupted_8640038743EBB9E2014362BE91EB35F9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_OnInterrupted_8640038743EBB9E2014362BE91EB35F9) == 0x000004, "Wrong alignment on AC_jRPG_CombatMovement_C_OnInterrupted_8640038743EBB9E2014362BE91EB35F9");
static_assert(sizeof(AC_jRPG_CombatMovement_C_OnInterrupted_8640038743EBB9E2014362BE91EB35F9) == 0x000008, "Wrong size on AC_jRPG_CombatMovement_C_OnInterrupted_8640038743EBB9E2014362BE91EB35F9");
static_assert(offsetof(AC_jRPG_CombatMovement_C_OnInterrupted_8640038743EBB9E2014362BE91EB35F9, NotifyName) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_OnInterrupted_8640038743EBB9E2014362BE91EB35F9::NotifyName' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.OnBlendOut_8640038743EBB9E2014362BE91EB35F9
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CombatMovement_C_OnBlendOut_8640038743EBB9E2014362BE91EB35F9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_OnBlendOut_8640038743EBB9E2014362BE91EB35F9) == 0x000004, "Wrong alignment on AC_jRPG_CombatMovement_C_OnBlendOut_8640038743EBB9E2014362BE91EB35F9");
static_assert(sizeof(AC_jRPG_CombatMovement_C_OnBlendOut_8640038743EBB9E2014362BE91EB35F9) == 0x000008, "Wrong size on AC_jRPG_CombatMovement_C_OnBlendOut_8640038743EBB9E2014362BE91EB35F9");
static_assert(offsetof(AC_jRPG_CombatMovement_C_OnBlendOut_8640038743EBB9E2014362BE91EB35F9, NotifyName) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_OnBlendOut_8640038743EBB9E2014362BE91EB35F9::NotifyName' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.OnCompleted_8640038743EBB9E2014362BE91EB35F9
// 0x0008 (0x0008 - 0x0000)
struct AC_jRPG_CombatMovement_C_OnCompleted_8640038743EBB9E2014362BE91EB35F9 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_OnCompleted_8640038743EBB9E2014362BE91EB35F9) == 0x000004, "Wrong alignment on AC_jRPG_CombatMovement_C_OnCompleted_8640038743EBB9E2014362BE91EB35F9");
static_assert(sizeof(AC_jRPG_CombatMovement_C_OnCompleted_8640038743EBB9E2014362BE91EB35F9) == 0x000008, "Wrong size on AC_jRPG_CombatMovement_C_OnCompleted_8640038743EBB9E2014362BE91EB35F9");
static_assert(offsetof(AC_jRPG_CombatMovement_C_OnCompleted_8640038743EBB9E2014362BE91EB35F9, NotifyName) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_OnCompleted_8640038743EBB9E2014362BE91EB35F9::NotifyName' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AC_jRPG_CombatMovement_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_ReceiveTick) == 0x000004, "Wrong alignment on AC_jRPG_CombatMovement_C_ReceiveTick");
static_assert(sizeof(AC_jRPG_CombatMovement_C_ReceiveTick) == 0x000004, "Wrong size on AC_jRPG_CombatMovement_C_ReceiveTick");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.DEBUG_CVarChanged_ShowMoveToDebug
// 0x0001 (0x0001 - 0x0000)
struct AC_jRPG_CombatMovement_C_DEBUG_CVarChanged_ShowMoveToDebug final
{
public:
	bool                                          NewValue;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_DEBUG_CVarChanged_ShowMoveToDebug) == 0x000001, "Wrong alignment on AC_jRPG_CombatMovement_C_DEBUG_CVarChanged_ShowMoveToDebug");
static_assert(sizeof(AC_jRPG_CombatMovement_C_DEBUG_CVarChanged_ShowMoveToDebug) == 0x000001, "Wrong size on AC_jRPG_CombatMovement_C_DEBUG_CVarChanged_ShowMoveToDebug");
static_assert(offsetof(AC_jRPG_CombatMovement_C_DEBUG_CVarChanged_ShowMoveToDebug, NewValue) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_DEBUG_CVarChanged_ShowMoveToDebug::NewValue' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.StartMovement
// 0x0040 (0x0040 - 0x0000)
struct AC_jRPG_CombatMovement_C_StartMovement final
{
public:
	struct FVector                                TargetLocation_0;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           MontageToPlay;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugReason;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_StartMovement) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_StartMovement");
static_assert(sizeof(AC_jRPG_CombatMovement_C_StartMovement) == 0x000040, "Wrong size on AC_jRPG_CombatMovement_C_StartMovement");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovement, TargetLocation_0) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_StartMovement::TargetLocation_0' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovement, MontageToPlay) == 0x000018, "Member 'AC_jRPG_CombatMovement_C_StartMovement::MontageToPlay' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovement, PlayRate) == 0x000020, "Member 'AC_jRPG_CombatMovement_C_StartMovement::PlayRate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovement, LatentAction) == 0x000028, "Member 'AC_jRPG_CombatMovement_C_StartMovement::LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_StartMovement, DebugReason) == 0x000030, "Member 'AC_jRPG_CombatMovement_C_StartMovement::DebugReason' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.MoveToInitialLocation
// 0x0028 (0x0028 - 0x0000)
struct AC_jRPG_CombatMovement_C_MoveToInitialLocation final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              LatentAction;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 DebugReason;                                       // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_MoveToInitialLocation) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_MoveToInitialLocation");
static_assert(sizeof(AC_jRPG_CombatMovement_C_MoveToInitialLocation) == 0x000028, "Wrong size on AC_jRPG_CombatMovement_C_MoveToInitialLocation");
static_assert(offsetof(AC_jRPG_CombatMovement_C_MoveToInitialLocation, MontageToPlay) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_MoveToInitialLocation::MontageToPlay' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_MoveToInitialLocation, PlayRate) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_MoveToInitialLocation::PlayRate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_MoveToInitialLocation, LatentAction) == 0x000010, "Member 'AC_jRPG_CombatMovement_C_MoveToInitialLocation::LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_MoveToInitialLocation, DebugReason) == 0x000018, "Member 'AC_jRPG_CombatMovement_C_MoveToInitialLocation::DebugReason' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.OnMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct AC_jRPG_CombatMovement_C_OnMontageEnded final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_OnMontageEnded) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_OnMontageEnded");
static_assert(sizeof(AC_jRPG_CombatMovement_C_OnMontageEnded) == 0x000010, "Wrong size on AC_jRPG_CombatMovement_C_OnMontageEnded");
static_assert(offsetof(AC_jRPG_CombatMovement_C_OnMontageEnded, Montage) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_OnMontageEnded::Montage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_OnMontageEnded, bInterrupted) == 0x000008, "Member 'AC_jRPG_CombatMovement_C_OnMontageEnded::bInterrupted' has a wrong offset!");

// Function AC_jRPG_CombatMovement.AC_jRPG_CombatMovement_C.ExecuteUbergraph_AC_jRPG_CombatMovement
// 0x0A20 (0x0A20 - 0x0000)
struct AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool NewValue)>                K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_wildcard_Variable;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesRotationMatch_Result;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewValue;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0150(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0160(0x0048)(HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TargetLocation;                 // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_1;                // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PlayRate_1;                     // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction_1;                 // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_DebugReason_1;                  // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0220(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0230(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0240(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0288(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x02D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02E0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0340(0x0010)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0368(0x0048)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x03D8(0x0010)()
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x03E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x03F8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0440(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_PlayRate;                       // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USF_BlueprintLatentAction*              K2Node_CustomEvent_LatentAction;                   // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_DebugReason;                    // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0488(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolCVar_ReturnValue;                  // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_2;          // 0x04A8(0x0010)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x04C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0508(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0564(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsInitialized_Variable;                  // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x3];                                      // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0614(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0624(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_PreviousValue_Variable;                  // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62D[0x3];                                      // 0x062D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_9;                   // 0x0630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x3];                                      // 0x0641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x0644(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655[0x3];                                      // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0664(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x0678(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_689[0x7];                                      // 0x0689(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_10;                  // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_3;          // 0x0698(0x0010)()
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x06A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x06B8(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0700(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0710(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0758(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_2;                     // 0x0770(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0788(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0798(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x07E0(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_11;                  // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue_3;                     // 0x07F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_2;                  // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInterrupted;                   // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x7];                                      // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimMontage*>                   CallFunc_GetAllActiveMontages_ReturnValue;         // 0x0830(0x0010)(ReferenceParm)
	class FString                                 CallFunc_ConcatenateDisplayNamesString_Result;     // 0x0840(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_wildcard_Variable_1;                          // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x0858(0x0010)()
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0870(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualsObjects_ReturnValue;                // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x08B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BA[0x6];                                      // 0x08BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x08C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x08D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0920(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_4;                     // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_12;                  // 0x0940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_13;                  // 0x0948(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_3;                  // 0x0950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_959[0x7];                                      // 0x0959(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_4;                  // 0x0960(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0970(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x0980(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0990(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x09D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x09E8(0x0010)()
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugArrow_Duration_ImplicitCast;     // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugString_Duration_ImplicitCast;    // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HSVToRGB_H_ImplicitCast;                  // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement) == 0x000008, "Wrong alignment on AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement");
static_assert(sizeof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement) == 0x000A20, "Wrong size on AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, EntryPoint) == 0x000000, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::EntryPoint' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000018, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_byte_Variable) == 0x000030, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_int_Variable) == 0x000034, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_int_Variable_1) == 0x000038, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_int_Variable_2) == 0x00003C, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_int_Variable_3) == 0x000040, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_int_Variable_4) == 0x000064, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_wildcard_Variable) == 0x000068, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_Event_DeltaSeconds) == 0x000070, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue) == 0x000078, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_1) == 0x000080, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000088, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000A0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BreakRotator_Roll) == 0x0000B8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BreakRotator_Pitch) == 0x0000BC, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BreakRotator_Yaw) == 0x0000C0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000E0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_2) == 0x0000E8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_RInterpTo_ReturnValue) == 0x0000F0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_DoesRotationMatch_Result) == 0x000108, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_DoesRotationMatch_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BreakRotator_Roll_1) == 0x00010C, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BreakRotator_Pitch_1) == 0x000110, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BreakRotator_Yaw_1) == 0x000114, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Not_PreBool_ReturnValue) == 0x000118, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_MakeRotator_ReturnValue) == 0x000120, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000138, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_3) == 0x000140, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_NewValue) == 0x000148, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000150, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData) == 0x000160, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0001A8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001C8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_FClamp_ReturnValue) == 0x0001D8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_TargetLocation) == 0x0001E0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_TargetLocation' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_MontageToPlay_1) == 0x0001F8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_MontageToPlay_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_PlayRate_1) == 0x000200, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_PlayRate_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_LatentAction_1) == 0x000208, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_LatentAction_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_DebugReason_1) == 0x000210, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_DebugReason_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue) == 0x000220, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000230, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_1) == 0x000240, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_2) == 0x000288, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x0002D0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002E0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_VectorToString_ReturnValue) == 0x000328, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_4) == 0x000338, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000340, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000350, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_4) == 0x000368, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_name_Variable) == 0x0003B0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_NotifyName) == 0x0003B8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_5) == 0x0003C0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetDisplayName_ReturnValue) == 0x0003C8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0003D8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003E8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_5) == 0x0003F8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeArray_Array) == 0x000440, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Format_ReturnValue) == 0x000450, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_MontageToPlay) == 0x000460, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_PlayRate) == 0x000468, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_PlayRate' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_LatentAction) == 0x000470, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_LatentAction' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_DebugReason) == 0x000478, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_DebugReason' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Concat_StrStr_ReturnValue) == 0x000488, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_6) == 0x000498, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetBoolCVar_ReturnValue) == 0x0004A0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetBoolCVar_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_ObjectToText_ReturnValue_2) == 0x0004A8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_ObjectToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BooleanOR_ReturnValue) == 0x0004B8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_6) == 0x0004C0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeArray_Array_1) == 0x000508, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Format_ReturnValue_1) == 0x000518, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_7) == 0x000528, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_AsCharacter) == 0x000530, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_bSuccess) == 0x000538, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_8) == 0x000540, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_AsCharacter_1) == 0x000548, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_bSuccess_1) == 0x000550, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000558, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_IsValid_ReturnValue) == 0x000560, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_NotifyName_1) == 0x000564, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_IntToVector_ReturnValue) == 0x000570, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000588, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Add_VectorVector_ReturnValue) == 0x0005A0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0005B8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Add_IntInt_ReturnValue) == 0x0005D0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0005D8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Divide_VectorVector_ReturnValue) == 0x0005F0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000608, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_bool_IsInitialized_Variable) == 0x000610, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_bool_IsInitialized_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate_4) == 0x000614, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_NotifyName_2) == 0x000624, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_bool_PreviousValue_Variable) == 0x00062C, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_bool_PreviousValue_Variable' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_9) == 0x000630, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000638, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_bSuccess_2) == 0x000640, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate_5) == 0x000644, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetTeam_Team) == 0x000654, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000658, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_Select_Default) == 0x00065C, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Multiply_IntInt_ReturnValue) == 0x000660, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000664, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_NotifyName_3) == 0x000668, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000670, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_HSVToRGB_ReturnValue) == 0x000678, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_IsValid_ReturnValue_1) == 0x000688, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_10) == 0x000690, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_ObjectToText_ReturnValue_3) == 0x000698, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_ObjectToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate_6) == 0x0006A8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_7) == 0x0006B8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000700, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_8) == 0x000710, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeArray_Array_2) == 0x000758, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000768, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Format_ReturnValue_2) == 0x000770, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_NotifyName_4) == 0x000780, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000788, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_9) == 0x000798, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeArray_Array_3) == 0x0007E0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_11) == 0x0007F0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Format_ReturnValue_3) == 0x0007F8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_AsCharacter_2) == 0x000808, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_AsCharacter_2' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_bSuccess_3) == 0x000810, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetAnimInstance_ReturnValue) == 0x000818, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_Montage) == 0x000820, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CustomEvent_bInterrupted) == 0x000828, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CustomEvent_bInterrupted' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetAllActiveMontages_ReturnValue) == 0x000830, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetAllActiveMontages_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_ConcatenateDisplayNamesString_Result) == 0x000840, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_ConcatenateDisplayNamesString_Result' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, Temp_wildcard_Variable_1) == 0x000850, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue_6) == 0x000858, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000868, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_10) == 0x000870, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_EqualsObjects_ReturnValue) == 0x0008B8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_EqualsObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_BooleanAND_ReturnValue) == 0x0008B9, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0008C0, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_CreateDelegate_OutputDelegate_7) == 0x0008C8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_11) == 0x0008D8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeArray_Array_4) == 0x000920, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Format_ReturnValue_4) == 0x000930, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_12) == 0x000940, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_GetOwner_ReturnValue_13) == 0x000948, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_GetOwner_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_AsCharacter_3) == 0x000950, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_AsCharacter_3' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_bSuccess_4) == 0x000958, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_AsCharacter_4) == 0x000960, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_AsCharacter_4' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_DynamicCast_bSuccess_5) == 0x000968, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000970, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Conv_StringToText_ReturnValue_7) == 0x000980, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeStruct_FormatArgumentData_12) == 0x000990, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, K2Node_MakeArray_Array_5) == 0x0009D8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Format_ReturnValue_5) == 0x0009E8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0009F8, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000A00, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000A04, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_DrawDebugArrow_Duration_ImplicitCast) == 0x000A08, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_DrawDebugArrow_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000A0C, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_DrawDebugString_Duration_ImplicitCast) == 0x000A10, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_DrawDebugString_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_HSVToRGB_H_ImplicitCast) == 0x000A14, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_HSVToRGB_H_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000A18, "Member 'AC_jRPG_CombatMovement_C_ExecuteUbergraph_AC_jRPG_CombatMovement::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

}

