#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AICompanion_CompanionManager

#include "Basic.hpp"

#include "BP_AICompanion_CompanionManager_classes.hpp"
#include "BP_AICompanion_CompanionManager_parameters.hpp"


namespace SDK
{

// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.ActivateCompanion
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion_To_Activate                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Teleport_Position                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::ActivateCompanion(class ABP_Pawn_AICompanion_C* Companion_To_Activate, const struct FVector& Teleport_Position, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "ActivateCompanion");

	Params::BP_AICompanion_CompanionManager_C_ActivateCompanion Parms{};

	Parms.Companion_To_Activate = Companion_To_Activate;
	Parms.Teleport_Position = std::move(Teleport_Position);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.ApplyAllCharacterCustomizations
// (BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::ApplyAllCharacterCustomizations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "ApplyAllCharacterCustomizations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.CancelAllLoadRequests
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::CancelAllLoadRequests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "CancelAllLoadRequests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.CanSpawnCompanions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool*                                   CanSpawn                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::CanSpawnCompanions(bool* CanSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "CanSpawnCompanions");

	Params::BP_AICompanion_CompanionManager_C_CanSpawnCompanions Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanSpawn != nullptr)
		*CanSpawn = Parms.CanSpawn;
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.DeactivateCompanion
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion_To_Deactivate                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::DeactivateCompanion(class ABP_Pawn_AICompanion_C* Companion_To_Deactivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "DeactivateCompanion");

	Params::BP_AICompanion_CompanionManager_C_DeactivateCompanion Parms{};

	Parms.Companion_To_Deactivate = Companion_To_Deactivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.DestroyAllCompanionActors
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::DestroyAllCompanionActors(bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "DestroyAllCompanionActors");

	Params::BP_AICompanion_CompanionManager_C_DestroyAllCompanionActors Parms{};

	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.DestroyCompanionsNoLongerInTheParty
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::DestroyCompanionsNoLongerInTheParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "DestroyCompanionsNoLongerInTheParty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.ExecuteUbergraph_BP_AICompanion_CompanionManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::ExecuteUbergraph_BP_AICompanion_CompanionManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "ExecuteUbergraph_BP_AICompanion_CompanionManager");

	Params::BP_AICompanion_CompanionManager_C_ExecuteUbergraph_BP_AICompanion_CompanionManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.GetCompanionNamesInParty
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>*                    Companion_Names_In_Party_0                             (Parm, OutParm)

void UBP_AICompanion_CompanionManager_C::GetCompanionNamesInParty(TArray<class FName>* Companion_Names_In_Party_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "GetCompanionNamesInParty");

	Params::BP_AICompanion_CompanionManager_C_GetCompanionNamesInParty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Companion_Names_In_Party_0 != nullptr)
		*Companion_Names_In_Party_0 = std::move(Parms.Companion_Names_In_Party_0);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.GetCompanionNamesToActivate
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>*                    Companion_Names_To_Activate                            (Parm, OutParm)

void UBP_AICompanion_CompanionManager_C::GetCompanionNamesToActivate(TArray<class FName>* Companion_Names_To_Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "GetCompanionNamesToActivate");

	Params::BP_AICompanion_CompanionManager_C_GetCompanionNamesToActivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Companion_Names_To_Activate != nullptr)
		*Companion_Names_To_Activate = std::move(Parms.Companion_Names_To_Activate);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.Hide All Companions
// (BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::Hide_All_Companions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "Hide All Companions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.OnCompanionDestroyed
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::OnCompanionDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "OnCompanionDestroyed");

	Params::BP_AICompanion_CompanionManager_C_OnCompanionDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.OnLoadRequestCompleted
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_LoadClassAssetRequest_C*      LoadRequest                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::OnLoadRequestCompleted(class UBP_LoadClassAssetRequest_C* LoadRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "OnLoadRequestCompleted");

	Params::BP_AICompanion_CompanionManager_C_OnLoadRequestCompleted Parms{};

	Parms.LoadRequest = LoadRequest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.OnMainMenuClosed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::OnMainMenuClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "OnMainMenuClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.OnMainMenuOpened
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::OnMainMenuOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "OnMainMenuOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.ProjectLocationOnNavigationForCompanion
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   QueryExtent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         ProjectedLocation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::ProjectLocationOnNavigationForCompanion(const struct FVector& Location, const struct FVector& QueryExtent, struct FVector* ProjectedLocation, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "ProjectLocationOnNavigationForCompanion");

	Params::BP_AICompanion_CompanionManager_C_ProjectLocationOnNavigationForCompanion Parms{};

	Parms.Location = std::move(Location);
	Parms.QueryExtent = std::move(QueryExtent);

	UObject::ProcessEvent(Func, &Parms);

	if (ProjectedLocation != nullptr)
		*ProjectedLocation = std::move(Parms.ProjectedLocation);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.ResetCompanionLocations
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SpawnTeleportationFX                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::ResetCompanionLocations(bool SpawnTeleportationFX)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "ResetCompanionLocations");

	Params::BP_AICompanion_CompanionManager_C_ResetCompanionLocations Parms{};

	Parms.SpawnTeleportationFX = SpawnTeleportationFX;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.SetCinematicMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInCinematic                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::SetCinematicMode(bool IsInCinematic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "SetCinematicMode");

	Params::BP_AICompanion_CompanionManager_C_SetCinematicMode Parms{};

	Parms.IsInCinematic = IsInCinematic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.SetCompanionsEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::SetCompanionsEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "SetCompanionsEnabled");

	Params::BP_AICompanion_CompanionManager_C_SetCompanionsEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.Spawn And Update Companions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::Spawn_And_Update_Companions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "Spawn And Update Companions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.Spawn Companion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Companion_Class                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_Pawn_AICompanion_C**          Spawned_Companion                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::Spawn_Companion(class UClass* Companion_Class, class ABP_Pawn_AICompanion_C** Spawned_Companion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "Spawn Companion");

	Params::BP_AICompanion_CompanionManager_C_Spawn_Companion Parms{};

	Parms.Companion_Class = Companion_Class;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawned_Companion != nullptr)
		*Spawned_Companion = Parms.Spawned_Companion;
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.Spawn Companion From Class
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Companion_Class                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_Pawn_AICompanion_C**          Spawned_Companion                                      (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::Spawn_Companion_From_Class(class UClass* Companion_Class, class ABP_Pawn_AICompanion_C** Spawned_Companion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "Spawn Companion From Class");

	Params::BP_AICompanion_CompanionManager_C_Spawn_Companion_From_Class Parms{};

	Parms.Companion_Class = Companion_Class;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawned_Companion != nullptr)
		*Spawned_Companion = Parms.Spawned_Companion;
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.SpawnAllCompanions
// (BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::SpawnAllCompanions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "SpawnAllCompanions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.TryTeleportToLocation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    SpawnTeleportationFX                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::TryTeleportToLocation(class ABP_Pawn_AICompanion_C* Companion, const struct FVector& Location, const struct FRotator& Rotation, bool SpawnTeleportationFX, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "TryTeleportToLocation");

	Params::BP_AICompanion_CompanionManager_C_TryTeleportToLocation Parms{};

	Parms.Companion = Companion;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.SpawnTeleportationFX = SpawnTeleportationFX;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.TryTeleportToTargetPoint
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Pawn_AICompanion_C*           Companion                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SpawnTeleportationFX                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::TryTeleportToTargetPoint(class ABP_Pawn_AICompanion_C* Companion, bool SpawnTeleportationFX, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "TryTeleportToTargetPoint");

	Params::BP_AICompanion_CompanionManager_C_TryTeleportToTargetPoint Parms{};

	Parms.Companion = Companion;
	Parms.SpawnTeleportationFX = SpawnTeleportationFX;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.UnspawnAllCompanions
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AICompanion_CompanionManager_C::UnspawnAllCompanions(bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "UnspawnAllCompanions");

	Params::BP_AICompanion_CompanionManager_C_UnspawnAllCompanions Parms{};

	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.UpdateActivatedCompanions
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::UpdateActivatedCompanions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "UpdateActivatedCompanions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AICompanion_CompanionManager.BP_AICompanion_CompanionManager_C.UpdateCompanionsVisualAlterations
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AICompanion_CompanionManager_C::UpdateCompanionsVisualAlterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AICompanion_CompanionManager_C", "UpdateCompanionsVisualAlterations");

	UObject::ProcessEvent(Func, nullptr);
}

}

