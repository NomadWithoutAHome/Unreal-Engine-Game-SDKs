#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TintUpgradeEntry

#include "Basic.hpp"

#include "S_ItemQuantity_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"


namespace SDK::Params
{

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature final
{
public:
	double                                        Progress;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature");
static_assert(sizeof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature) == 0x000008, "Wrong size on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature");
static_assert(offsetof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature, Progress) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_0_OnButtonBaseActionProgress__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature");
static_assert(sizeof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature) == 0x000008, "Wrong size on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature");
static_assert(offsetof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_2_OnButtonBaseFocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature");
static_assert(sizeof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature) == 0x000008, "Wrong size on WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature");
static_assert(offsetof(WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature, Button) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_BndEvt__WBP_CharacterCardButton_BaseButton_K2Node_ComponentBoundEvent_3_OnButtonBaseUnfocused__DelegateSignature::Button' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.ExecuteUbergraph_WBP_TintUpgradeEntry
// 0x0068 (0x0068 - 0x0000)
struct WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_Progress;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0028(0x0010)(NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpgradeShardToNextLevel_bIsUpgradeSuccessful; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry");
static_assert(sizeof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry) == 0x000068, "Wrong size on WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, EntryPoint) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, K2Node_ComponentBoundEvent_Progress) == 0x000008, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::K2Node_ComponentBoundEvent_Progress' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, K2Node_ComponentBoundEvent_Button_2) == 0x000010, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, K2Node_ComponentBoundEvent_Button_1) == 0x000018, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, K2Node_ComponentBoundEvent_Button) == 0x000020, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, K2Node_MakeStruct_DataTableRowHandle) == 0x000028, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, K2Node_Event_IsDesignTime) == 0x000038, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, CallFunc_GetNiagaraComponent_ReturnValue) == 0x000040, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, CallFunc_GetNiagaraComponent_ReturnValue_1) == 0x000048, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::CallFunc_GetNiagaraComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, CallFunc_GetNiagaraComponent_ReturnValue_2) == 0x000050, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::CallFunc_GetNiagaraComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000058, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry, CallFunc_UpgradeShardToNextLevel_bIsUpgradeSuccessful) == 0x000060, "Member 'WBP_TintUpgradeEntry_C_ExecuteUbergraph_WBP_TintUpgradeEntry::CallFunc_UpgradeShardToNextLevel_bIsUpgradeSuccessful' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.LoadShardStaticData
// 0x0280 (0x0280 - 0x0000)
struct WBP_TintUpgradeEntry_C_LoadShardStaticData final
{
public:
	struct FS_jRPG_Item_StaticData                ShardStaticData;                                   // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   CallFunc_GetConsumableItemFromShard_ItemID;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemStaticDefinitionFromID_Found;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticDefinitionFromID_ReturnValue; // 0x0140(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_DataAsset_Item_Shard_C*             K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard;     // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_LoadShardStaticData) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_LoadShardStaticData");
static_assert(sizeof(WBP_TintUpgradeEntry_C_LoadShardStaticData) == 0x000280, "Wrong size on WBP_TintUpgradeEntry_C_LoadShardStaticData");
static_assert(offsetof(WBP_TintUpgradeEntry_C_LoadShardStaticData, ShardStaticData) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_LoadShardStaticData::ShardStaticData' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_LoadShardStaticData, CallFunc_GetConsumableItemFromShard_ItemID) == 0x000130, "Member 'WBP_TintUpgradeEntry_C_LoadShardStaticData::CallFunc_GetConsumableItemFromShard_ItemID' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_LoadShardStaticData, CallFunc_GetItemStaticDefinitionFromID_Found) == 0x000138, "Member 'WBP_TintUpgradeEntry_C_LoadShardStaticData::CallFunc_GetItemStaticDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_LoadShardStaticData, CallFunc_GetItemStaticDefinitionFromID_ReturnValue) == 0x000140, "Member 'WBP_TintUpgradeEntry_C_LoadShardStaticData::CallFunc_GetItemStaticDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_LoadShardStaticData, K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard) == 0x000270, "Member 'WBP_TintUpgradeEntry_C_LoadShardStaticData::K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_LoadShardStaticData, K2Node_DynamicCast_bSuccess) == 0x000278, "Member 'WBP_TintUpgradeEntry_C_LoadShardStaticData::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TintUpgradeEntry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TintUpgradeEntry_C_PreConstruct");
static_assert(sizeof(WBP_TintUpgradeEntry_C_PreConstruct) == 0x000001, "Wrong size on WBP_TintUpgradeEntry_C_PreConstruct");
static_assert(offsetof(WBP_TintUpgradeEntry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.SetShardDataAsset
// 0x0190 (0x0190 - 0x0000)
struct WBP_TintUpgradeEntry_C_SetShardDataAsset final
{
public:
	class UBP_DataAsset_Item_Shard_C*             ShardData;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_ItemQuantity>                CallFunc_GetShardUpgradeCost_RequiredItems;        // 0x0008(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemQuantity                        CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemStaticDefinitionFromID_Found;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticDefinitionFromID_ReturnValue; // 0x0040(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_ResourceQuantity_C*                CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindItemCountFromInventory_Quantity;      // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_SetShardDataAsset) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_SetShardDataAsset");
static_assert(sizeof(WBP_TintUpgradeEntry_C_SetShardDataAsset) == 0x000190, "Wrong size on WBP_TintUpgradeEntry_C_SetShardDataAsset");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, ShardData) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::ShardData' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_GetShardUpgradeCost_RequiredItems) == 0x000008, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_GetShardUpgradeCost_RequiredItems' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_GetItemStaticDefinitionFromID_Found) == 0x00003C, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_GetItemStaticDefinitionFromID_Found' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_GetItemStaticDefinitionFromID_ReturnValue) == 0x000040, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_GetItemStaticDefinitionFromID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_Add_IntInt_ReturnValue) == 0x000174, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_GetInventoryManager_ReturnValue) == 0x000178, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000180, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetShardDataAsset, CallFunc_FindItemCountFromInventory_Quantity) == 0x000188, "Member 'WBP_TintUpgradeEntry_C_SetShardDataAsset::CallFunc_FindItemCountFromInventory_Quantity' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.SetTintData
// 0x0130 (0x0130 - 0x0000)
struct WBP_TintUpgradeEntry_C_SetTintData final
{
public:
	struct FS_jRPG_Item_StaticData                TintData;                                          // 0x0000(0x0130)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_SetTintData) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_SetTintData");
static_assert(sizeof(WBP_TintUpgradeEntry_C_SetTintData) == 0x000130, "Wrong size on WBP_TintUpgradeEntry_C_SetTintData");
static_assert(offsetof(WBP_TintUpgradeEntry_C_SetTintData, TintData) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_SetTintData::TintData' has a wrong offset!");

// Function WBP_TintUpgradeEntry.WBP_TintUpgradeEntry_C.Update Prompt State
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_TintUpgradeEntry_C_Update_Prompt_State final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemUpgradeSystem_C*                CallFunc_GetItemUpgradeSystem_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_InventoryManager_C*            CallFunc_GetInventoryManager_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_Item_Shard_C*             K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShardUpgradable_IsShardUpgradable;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_ItemQuantity>                CallFunc_GetShardUpgradeCost_RequiredItems;        // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_CanAffordItemCosts_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x00A0(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x00B0(0x0010)(NoDestructor)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_Select_Default_4;                           // 0x00C8(0x0010)(ConstParm, NoDestructor)
};
static_assert(alignof(WBP_TintUpgradeEntry_C_Update_Prompt_State) == 0x000008, "Wrong alignment on WBP_TintUpgradeEntry_C_Update_Prompt_State");
static_assert(sizeof(WBP_TintUpgradeEntry_C_Update_Prompt_State) == 0x0000D8, "Wrong size on WBP_TintUpgradeEntry_C_Update_Prompt_State");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_bool_Variable) == 0x000000, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_real_Variable) == 0x000004, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_real_Variable_1) == 0x000008, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_bool_Variable_1) == 0x00000C, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_byte_Variable) == 0x00000D, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_byte_Variable_1) == 0x00000E, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_bool_Variable_2) == 0x00000F, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_bool_Variable_3) == 0x000010, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_real_Variable_2) == 0x000014, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_real_Variable_3) == 0x000018, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_struct_Variable) == 0x00001C, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_struct_Variable_1) == 0x00002C, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_GetNiagaraComponent_ReturnValue) == 0x000040, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, Temp_bool_Variable_4) == 0x000048, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_GetItemUpgradeSystem_ReturnValue) == 0x000050, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_GetItemUpgradeSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_GetInventoryManager_ReturnValue) == 0x000058, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_GetInventoryManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard) == 0x000060, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_DynamicCast_AsBP_Data_Asset_Item_Shard' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_IsShardUpgradable_IsShardUpgradable) == 0x000069, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_IsShardUpgradable_IsShardUpgradable' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_GetShardUpgradeCost_RequiredItems) == 0x000070, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_GetShardUpgradeCost_RequiredItems' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_CanAffordItemCosts_ReturnValue) == 0x000080, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_CanAffordItemCosts_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_Select_Default) == 0x000084, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_Select_Default_1) == 0x000094, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_Select_Default_2) == 0x000098, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_Select_Default_3) == 0x00009C, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_MakeStruct_DataTableRowHandle) == 0x0000A0, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_MakeStruct_DataTableRowHandle_1) == 0x0000B0, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_HasAnyUserFocus_ReturnValue) == 0x0000C0, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_BooleanAND_ReturnValue) == 0x0000C1, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C2, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_TintUpgradeEntry_C_Update_Prompt_State, K2Node_Select_Default_4) == 0x0000C8, "Member 'WBP_TintUpgradeEntry_C_Update_Prompt_State::K2Node_Select_Default_4' has a wrong offset!");

}

