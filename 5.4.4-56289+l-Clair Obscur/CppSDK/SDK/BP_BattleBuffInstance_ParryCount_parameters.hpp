#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleBuffInstance_ParryCount

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_BattleBuffInstance_ParryCount.BP_BattleBuffInstance_ParryCount_C.ActivateBuff
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_ParryCount_C_ActivateBuff final
{
public:
	const class UAC_jRPG_CharacterBattleStats_C*  CharacterStats;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_ParryCount_C_ActivateBuff) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_ParryCount_C_ActivateBuff");
static_assert(sizeof(BP_BattleBuffInstance_ParryCount_C_ActivateBuff) == 0x000008, "Wrong size on BP_BattleBuffInstance_ParryCount_C_ActivateBuff");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ActivateBuff, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_ParryCount_C_ActivateBuff::CharacterStats' has a wrong offset!");

// Function BP_BattleBuffInstance_ParryCount.BP_BattleBuffInstance_ParryCount_C.ExecuteUbergraph_BP_BattleBuffInstance_ParryCount
// 0x0048 (0x0048 - 0x0000)
struct BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Character;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_CustomEvent_Enemy;                          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_jRPG_Character_Battle_Base_C* Character, class ABP_jRPG_Character_Battle_Base_C* Enemy)> K2Node_CreateDelegate_OutputDelegate; // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuffTarget_IsTarget;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UAC_jRPG_CharacterBattleStats_C*  K2Node_Event_CharacterStats;                       // 0x0040(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount");
static_assert(sizeof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount) == 0x000048, "Wrong size on BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, EntryPoint) == 0x000000, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, K2Node_CustomEvent_Character) == 0x000008, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, K2Node_CustomEvent_Enemy) == 0x000010, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::K2Node_CustomEvent_Enemy' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, CallFunc_IsBuffTarget_IsTarget) == 0x000028, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::CallFunc_IsBuffTarget_IsTarget' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, CallFunc_GetBattleManager_ReturnValue) == 0x000038, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount, K2Node_Event_CharacterStats) == 0x000040, "Member 'BP_BattleBuffInstance_ParryCount_C_ExecuteUbergraph_BP_BattleBuffInstance_ParryCount::K2Node_Event_CharacterStats' has a wrong offset!");

// Function BP_BattleBuffInstance_ParryCount.BP_BattleBuffInstance_ParryCount_C.OnParrySuccess
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_ParryCount_C_OnParrySuccess final
{
public:
	class ABP_jRPG_Character_Battle_Base_C*       Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       Enemy;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_ParryCount_C_OnParrySuccess) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_ParryCount_C_OnParrySuccess");
static_assert(sizeof(BP_BattleBuffInstance_ParryCount_C_OnParrySuccess) == 0x000010, "Wrong size on BP_BattleBuffInstance_ParryCount_C_OnParrySuccess");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_OnParrySuccess, Character) == 0x000000, "Member 'BP_BattleBuffInstance_ParryCount_C_OnParrySuccess::Character' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_ParryCount_C_OnParrySuccess, Enemy) == 0x000008, "Member 'BP_BattleBuffInstance_ParryCount_C_OnParrySuccess::Enemy' has a wrong offset!");

}

