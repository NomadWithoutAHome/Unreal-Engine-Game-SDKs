#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_UpdateSpeedRelatedToDistance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_UpdateSpeedRelatedToDistance.BTService_UpdateSpeedRelatedToDistance_C
// 0x0048 (0x00E0 - 0x0098)
class UBTService_UpdateSpeedRelatedToDistance_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        InitialMaxSpeed;                                   // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CharacterMovementComponent;                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 KeySelectorDistance;                               // 0x00B0(0x0028)(Edit, BlueprintVisible)
	class UBT_FleeAiComponent_C*                  FleeAiComponent;                                   // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	float ComputeSpeed();
	void ExecuteUbergraph_BTService_UpdateSpeedRelatedToDistance(int32 EntryPoint);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveDeactivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_UpdateSpeedRelatedToDistance_C">();
	}
	static class UBTService_UpdateSpeedRelatedToDistance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_UpdateSpeedRelatedToDistance_C>();
	}
};
static_assert(alignof(UBTService_UpdateSpeedRelatedToDistance_C) == 0x000008, "Wrong alignment on UBTService_UpdateSpeedRelatedToDistance_C");
static_assert(sizeof(UBTService_UpdateSpeedRelatedToDistance_C) == 0x0000E0, "Wrong size on UBTService_UpdateSpeedRelatedToDistance_C");
static_assert(offsetof(UBTService_UpdateSpeedRelatedToDistance_C, UberGraphFrame) == 0x000098, "Member 'UBTService_UpdateSpeedRelatedToDistance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateSpeedRelatedToDistance_C, InitialMaxSpeed) == 0x0000A0, "Member 'UBTService_UpdateSpeedRelatedToDistance_C::InitialMaxSpeed' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateSpeedRelatedToDistance_C, CharacterMovementComponent) == 0x0000A8, "Member 'UBTService_UpdateSpeedRelatedToDistance_C::CharacterMovementComponent' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateSpeedRelatedToDistance_C, KeySelectorDistance) == 0x0000B0, "Member 'UBTService_UpdateSpeedRelatedToDistance_C::KeySelectorDistance' has a wrong offset!");
static_assert(offsetof(UBTService_UpdateSpeedRelatedToDistance_C, FleeAiComponent) == 0x0000D8, "Member 'UBTService_UpdateSpeedRelatedToDistance_C::FleeAiComponent' has a wrong offset!");

}

