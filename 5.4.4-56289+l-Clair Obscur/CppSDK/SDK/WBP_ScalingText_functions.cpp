#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ScalingText

#include "Basic.hpp"

#include "WBP_ScalingText_classes.hpp"
#include "WBP_ScalingText_parameters.hpp"


namespace SDK
{

// Function WBP_ScalingText.WBP_ScalingText_C.ExecuteUbergraph_WBP_ScalingText
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ScalingText_C::ExecuteUbergraph_WBP_ScalingText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ScalingText_C", "ExecuteUbergraph_WBP_ScalingText");

	Params::WBP_ScalingText_C_ExecuteUbergraph_WBP_ScalingText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ScalingText.WBP_ScalingText_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ScalingText_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ScalingText_C", "PreConstruct");

	Params::WBP_ScalingText_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_ScalingText.WBP_ScalingText_C.Set Text
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText&                            InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_ScalingText_C::Set_Text(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ScalingText_C", "Set Text");

	Params::WBP_ScalingText_C_Set_Text Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);

	InText = std::move(Parms.InText);
}


// Function WBP_ScalingText.WBP_ScalingText_C.SetTextMaxDesiredWidth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TextMaxDesiredWidth_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_ScalingText_C::SetTextMaxDesiredWidth(double TextMaxDesiredWidth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_ScalingText_C", "SetTextMaxDesiredWidth");

	Params::WBP_ScalingText_C_SetTextMaxDesiredWidth Parms{};

	Parms.TextMaxDesiredWidth_0 = TextMaxDesiredWidth_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

