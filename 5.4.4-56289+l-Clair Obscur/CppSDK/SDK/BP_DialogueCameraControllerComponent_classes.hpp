#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DialogueCameraControllerComponent

#include "Basic.hpp"

#include "E_NPC_SpolightTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DialogueCameraControllerComponent.BP_DialogueCameraControllerComponent_C
// 0x0108 (0x01A8 - 0x00A0)
class UBP_DialogueCameraControllerComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UCineCameraComponent*>           DialogueCameraList;                                // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UCineCameraComponent*, struct FTransform> OriginalCamerasTransform;                   // 0x00B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TMap<class UCineCameraComponent*, struct FTransform> OnDialogueStartCamerasTransform;            // 0x0108(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_NPCAnimationComponent_C*            OwnerAnimationComponentRef;                        // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_World_C*             _CharacterWorldRef;                                // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, Deprecated, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_NPC_Dialog_C*                  NpcDialogueRef;                                    // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, Deprecated, NoDestructor, HasGetValueTypeHash)
	bool                                          OwnerIsCharacterWorld;                             // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class ASpotLight>>      SpotlightsToActivateDuringDialogues;               // 0x0178(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	E_NPC_SpolightTypes                           TurnOnSpotlights;                                  // 0x0188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DialogueCharacter_C> OwnerCharacter;                                 // 0x0190(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldUseAutomaticFocusMode;                       // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetAllCharacterLights(TScriptInterface<class IBPI_DialogueCharacter_C> DialogueCharacter, TArray<class ULightComponent*>* Lights);
	void EndDialogueSetup();
	void DefineDialogueCamerasSide();
	void StartDialogueSetup();
	void ForceCheckSpotlightsOff();
	void CopyLightValuesToCharacterWorld(class ULightComponent* TargetLight, class ULightComponent* ReferenceLight);
	void TurnOnDialogueSpotlights(bool TurnOn);
	void ChangeAllDialogueCamerasSide();
	void ResetCamerasToOriginalTransform();
	void ResetCamerasBetweenShot();
	void SaveCamerasTransformOnDialogueStart();
	void SaveCamerasOriginalTransform();
	void UpdateCameraFocusPoint();
	void CacheEnvironmentSpotlights();
	void CacheCameraList();
	void GetCameraList(TArray<class UCineCameraComponent*>* DialogueCameraList_0);
	void ApplyCharacterCameraOffset();
	void InitializeCamerasAndSpotlights();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void StartPreviz();
	void ExecuteUbergraph_BP_DialogueCameraControllerComponent(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DialogueCameraControllerComponent_C">();
	}
	static class UBP_DialogueCameraControllerComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DialogueCameraControllerComponent_C>();
	}
};
static_assert(alignof(UBP_DialogueCameraControllerComponent_C) == 0x000008, "Wrong alignment on UBP_DialogueCameraControllerComponent_C");
static_assert(sizeof(UBP_DialogueCameraControllerComponent_C) == 0x0001A8, "Wrong size on UBP_DialogueCameraControllerComponent_C");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_DialogueCameraControllerComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, DialogueCameraList) == 0x0000A8, "Member 'UBP_DialogueCameraControllerComponent_C::DialogueCameraList' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, OriginalCamerasTransform) == 0x0000B8, "Member 'UBP_DialogueCameraControllerComponent_C::OriginalCamerasTransform' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, OnDialogueStartCamerasTransform) == 0x000108, "Member 'UBP_DialogueCameraControllerComponent_C::OnDialogueStartCamerasTransform' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, OwnerAnimationComponentRef) == 0x000158, "Member 'UBP_DialogueCameraControllerComponent_C::OwnerAnimationComponentRef' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, _CharacterWorldRef) == 0x000160, "Member 'UBP_DialogueCameraControllerComponent_C::_CharacterWorldRef' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, NpcDialogueRef) == 0x000168, "Member 'UBP_DialogueCameraControllerComponent_C::NpcDialogueRef' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, OwnerIsCharacterWorld) == 0x000170, "Member 'UBP_DialogueCameraControllerComponent_C::OwnerIsCharacterWorld' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, SpotlightsToActivateDuringDialogues) == 0x000178, "Member 'UBP_DialogueCameraControllerComponent_C::SpotlightsToActivateDuringDialogues' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, TurnOnSpotlights) == 0x000188, "Member 'UBP_DialogueCameraControllerComponent_C::TurnOnSpotlights' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, OwnerCharacter) == 0x000190, "Member 'UBP_DialogueCameraControllerComponent_C::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(UBP_DialogueCameraControllerComponent_C, ShouldUseAutomaticFocusMode) == 0x0001A0, "Member 'UBP_DialogueCameraControllerComponent_C::ShouldUseAutomaticFocusMode' has a wrong offset!");

}

