#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponTooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "S_jRPG_Item_StaticData_structs.hpp"
#include "ECharacterAttribute_structs.hpp"
#include "EWeaponQuality_structs.hpp"
#include "EAttributeScalingGrade_structs.hpp"
#include "S_WeaponDefinition_structs.hpp"
#include "FPassiveEffect_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.SequenceEvent__ENTRYPOINTWBP_WeaponTooltip
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponTooltip_C_SequenceEvent__ENTRYPOINTWBP_WeaponTooltip final
{
public:
	class UOverlay*                               Overlay_25;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_SequenceEvent__ENTRYPOINTWBP_WeaponTooltip) == 0x000008, "Wrong alignment on WBP_WeaponTooltip_C_SequenceEvent__ENTRYPOINTWBP_WeaponTooltip");
static_assert(sizeof(WBP_WeaponTooltip_C_SequenceEvent__ENTRYPOINTWBP_WeaponTooltip) == 0x000008, "Wrong size on WBP_WeaponTooltip_C_SequenceEvent__ENTRYPOINTWBP_WeaponTooltip");
static_assert(offsetof(WBP_WeaponTooltip_C_SequenceEvent__ENTRYPOINTWBP_WeaponTooltip, Overlay_25) == 0x000000, "Member 'WBP_WeaponTooltip_C_SequenceEvent__ENTRYPOINTWBP_WeaponTooltip::Overlay_25' has a wrong offset!");

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.ShowUpgrade
// 0x0005 (0x0005 - 0x0000)
struct WBP_WeaponTooltip_C_ShowUpgrade final
{
public:
	bool                                          IsUpgrade;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_ShowUpgrade) == 0x000001, "Wrong alignment on WBP_WeaponTooltip_C_ShowUpgrade");
static_assert(sizeof(WBP_WeaponTooltip_C_ShowUpgrade) == 0x000005, "Wrong size on WBP_WeaponTooltip_C_ShowUpgrade");
static_assert(offsetof(WBP_WeaponTooltip_C_ShowUpgrade, IsUpgrade) == 0x000000, "Member 'WBP_WeaponTooltip_C_ShowUpgrade::IsUpgrade' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_ShowUpgrade, Temp_bool_Variable) == 0x000001, "Member 'WBP_WeaponTooltip_C_ShowUpgrade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_ShowUpgrade, Temp_byte_Variable) == 0x000002, "Member 'WBP_WeaponTooltip_C_ShowUpgrade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_ShowUpgrade, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_WeaponTooltip_C_ShowUpgrade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_ShowUpgrade, K2Node_Select_Default) == 0x000004, "Member 'WBP_WeaponTooltip_C_ShowUpgrade::K2Node_Select_Default' has a wrong offset!");

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.LoadWeaponAttributeScalings
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_WeaponTooltip_C_LoadWeaponAttributeScalings final
{
public:
	class UBP_ItemInstance_Gear_Weapon_C*         InWeaponInstance;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterAttribute, int32>              InWeaponScalingDamageByAttribute;                  // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ECharacterAttribute, EAttributeScalingGrade> CallFunc_GetCurrentAttributeScaling_ReturnValue; // 0x0060(0x0050)()
	TArray<ECharacterAttribute>                   CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterAttribute                           CallFunc_Array_Get_Item;                           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAttributeScalingGrade                        CallFunc_Map_Find_Value_1;                         // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_WeaponAttributeScaling_C*          CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings) == 0x000008, "Wrong alignment on WBP_WeaponTooltip_C_LoadWeaponAttributeScalings");
static_assert(sizeof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings) == 0x0000E8, "Wrong size on WBP_WeaponTooltip_C_LoadWeaponAttributeScalings");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, InWeaponInstance) == 0x000000, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::InWeaponInstance' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, InWeaponScalingDamageByAttribute) == 0x000008, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::InWeaponScalingDamageByAttribute' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_GetCurrentAttributeScaling_ReturnValue) == 0x000060, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_GetCurrentAttributeScaling_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, Temp_int_Loop_Counter_Variable) == 0x0000C0, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Array_Get_Item) == 0x0000C4, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Map_Find_Value) == 0x0000C8, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Map_Find_ReturnValue) == 0x0000CC, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Map_Find_Value_1) == 0x0000CD, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Map_Find_ReturnValue_1) == 0x0000CE, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_SelectInt_ReturnValue) == 0x0000D0, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponAttributeScalings, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x0000E0, "Member 'WBP_WeaponTooltip_C_LoadWeaponAttributeScalings::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.LoadWeaponLuminas
// 0x01F8 (0x01F8 - 0x0000)
struct WBP_WeaponTooltip_C_LoadWeaponLuminas final
{
public:
	struct FS_WeaponDefinition                    InWeaponDefinition;                                // 0x0000(0x00F0)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	EWeaponQuality                                InCurrentQuality;                                  // 0x00F0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EWeaponQuality, class FName>             CallFunc_GetWeaponPassivesByUpgradeLevel_ReturnValue; // 0x00F8(0x0050)()
	int32                                         Temp_int_Variable_1;                               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                Temp_byte_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_WeaponTooltipLumina_C*             CallFunc_BP_CreateEntryOfClass_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<EWeaponQuality>                        CallFunc_GetWeaponQualityLevelsEnum_Array;         // 0x0178(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_Array_Get_Item;                           // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareItemQuality_ReturnValue;           // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPassiveEffect                        CallFunc_GetPassiveEffectDefinition_PassiveEffect; // 0x01A8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetPassiveEffectDefinition_Found;         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNameValid_ReturnValue;                  // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_LoadWeaponLuminas) == 0x000008, "Wrong alignment on WBP_WeaponTooltip_C_LoadWeaponLuminas");
static_assert(sizeof(WBP_WeaponTooltip_C_LoadWeaponLuminas) == 0x0001F8, "Wrong size on WBP_WeaponTooltip_C_LoadWeaponLuminas");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, InWeaponDefinition) == 0x000000, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::InWeaponDefinition' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, InCurrentQuality) == 0x0000F0, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::InCurrentQuality' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Variable) == 0x0000F4, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_GetWeaponPassivesByUpgradeLevel_ReturnValue) == 0x0000F8, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_GetWeaponPassivesByUpgradeLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Variable_1) == 0x000148, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Variable_2) == 0x00014C, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Variable_3) == 0x000150, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Variable_4) == 0x000154, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Array_Index_Variable) == 0x000158, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Loop_Counter_Variable) == 0x00015C, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_int_Variable_5) == 0x000164, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, Temp_byte_Variable) == 0x000168, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_BP_CreateEntryOfClass_ReturnValue) == 0x000170, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_BP_CreateEntryOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_GetWeaponQualityLevelsEnum_Array) == 0x000178, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_GetWeaponQualityLevelsEnum_Array' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_Array_Get_Item) == 0x00018C, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_Less_IntInt_ReturnValue) == 0x00018D, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, K2Node_Select_Default) == 0x000190, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_CompareItemQuality_ReturnValue) == 0x000194, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_CompareItemQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_Map_Find_Value) == 0x000198, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_Map_Find_ReturnValue) == 0x0001A0, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_GetPassiveEffectDefinition_PassiveEffect) == 0x0001A8, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_GetPassiveEffectDefinition_PassiveEffect' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_GetPassiveEffectDefinition_Found) == 0x0001F0, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_GetPassiveEffectDefinition_Found' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_IsNameValid_ReturnValue) == 0x0001F1, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_IsNameValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeaponLuminas, CallFunc_BooleanAND_ReturnValue) == 0x0001F2, "Member 'WBP_WeaponTooltip_C_LoadWeaponLuminas::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.LoadWeapon
// 0x0310 (0x0310 - 0x0000)
struct WBP_WeaponTooltip_C_LoadWeapon final
{
public:
	class UBP_ItemInstance_Gear_Weapon_C*         InWeaponInstance;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    InCharacterData;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponInstancePower_TotalDamage;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_BaseDamage;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponInstancePower_ScalingDamage;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<ECharacterAttribute, int32>              CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute; // 0x0020(0x0050)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetCurrentQuality_Quality;                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponDefinition                    CallFunc_GetWeaponDefinition_WeaponDefinition;     // 0x0078(0x00F0)(HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_jRPG_Item_StaticData                CallFunc_GetItemStaticData_ItemStaticData;         // 0x0170(0x0130)(ContainsInstancedReference, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLevel_ReturnValue_1;            // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EWeaponQuality                                CallFunc_GetWeaponQualityForUpgradeLevel_Quality;  // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetItemQualityColor_ReturnValue;          // 0x02CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumEntries_ReturnValue;                // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EB[0x5];                                      // 0x02EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_3;                           // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_LoadWeapon) == 0x000008, "Wrong alignment on WBP_WeaponTooltip_C_LoadWeapon");
static_assert(sizeof(WBP_WeaponTooltip_C_LoadWeapon) == 0x000310, "Wrong size on WBP_WeaponTooltip_C_LoadWeapon");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, InWeaponInstance) == 0x000000, "Member 'WBP_WeaponTooltip_C_LoadWeapon::InWeaponInstance' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, InCharacterData) == 0x000008, "Member 'WBP_WeaponTooltip_C_LoadWeapon::InCharacterData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_bool_Variable) == 0x000010, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetWeaponInstancePower_TotalDamage) == 0x000014, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetWeaponInstancePower_TotalDamage' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetWeaponInstancePower_BaseDamage) == 0x000018, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetWeaponInstancePower_BaseDamage' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetWeaponInstancePower_ScalingDamage) == 0x00001C, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetWeaponInstancePower_ScalingDamage' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute) == 0x000020, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetWeaponInstancePower_ScalingDamageByAttribute' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000070, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetCurrentQuality_Quality) == 0x000071, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetCurrentQuality_Quality' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetWeaponDefinition_WeaponDefinition) == 0x000078, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetWeaponDefinition_WeaponDefinition' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetCurrentLevel_ReturnValue) == 0x000168, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetCurrentLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetItemStaticData_ItemStaticData) == 0x000170, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetItemStaticData_ItemStaticData' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_object_Variable) == 0x0002A0, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_object_Variable_1) == 0x0002A8, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_bool_Variable_1) == 0x0002B0, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_byte_Variable) == 0x0002B1, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_byte_Variable_1) == 0x0002B2, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, K2Node_Select_Default) == 0x0002B3, "Member 'WBP_WeaponTooltip_C_LoadWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetCurrentLevel_ReturnValue_1) == 0x0002B4, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetCurrentLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002B8, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetNiagaraComponent_ReturnValue) == 0x0002C0, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetWeaponQualityForUpgradeLevel_Quality) == 0x0002C8, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetWeaponQualityForUpgradeLevel_Quality' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetItemQualityColor_ReturnValue) == 0x0002CC, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetItemQualityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_real_Variable) == 0x0002DC, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_real_Variable_1) == 0x0002E0, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_GetNumEntries_ReturnValue) == 0x0002E4, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_GetNumEntries_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002E8, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, CallFunc_BooleanOR_ReturnValue) == 0x0002E9, "Member 'WBP_WeaponTooltip_C_LoadWeapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_bool_Variable_2) == 0x0002EA, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, K2Node_Select_Default_1) == 0x0002F0, "Member 'WBP_WeaponTooltip_C_LoadWeapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, K2Node_Select_Default_2) == 0x0002F8, "Member 'WBP_WeaponTooltip_C_LoadWeapon::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_real_Variable_2) == 0x0002FC, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_real_Variable_3) == 0x000300, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, Temp_bool_Variable_3) == 0x000304, "Member 'WBP_WeaponTooltip_C_LoadWeapon::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_LoadWeapon, K2Node_Select_Default_3) == 0x000308, "Member 'WBP_WeaponTooltip_C_LoadWeapon::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.Event_Explosion
// 0x0008 (0x0008 - 0x0000)
struct WBP_WeaponTooltip_C_Event_Explosion final
{
public:
	class UOverlay*                               Overlay_25;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_Event_Explosion) == 0x000008, "Wrong alignment on WBP_WeaponTooltip_C_Event_Explosion");
static_assert(sizeof(WBP_WeaponTooltip_C_Event_Explosion) == 0x000008, "Wrong size on WBP_WeaponTooltip_C_Event_Explosion");
static_assert(offsetof(WBP_WeaponTooltip_C_Event_Explosion, Overlay_25) == 0x000000, "Member 'WBP_WeaponTooltip_C_Event_Explosion::Overlay_25' has a wrong offset!");

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_WeaponTooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_WeaponTooltip_C_PreConstruct");
static_assert(sizeof(WBP_WeaponTooltip_C_PreConstruct) == 0x000001, "Wrong size on WBP_WeaponTooltip_C_PreConstruct");
static_assert(offsetof(WBP_WeaponTooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_WeaponTooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_WeaponTooltip.WBP_WeaponTooltip_C.ExecuteUbergraph_WBP_WeaponTooltip
// 0x0020 (0x0020 - 0x0000)
struct WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraUIComponent*                    CallFunc_GetNiagaraComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               K2Node_CustomEvent_Overlay_25;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip) == 0x000008, "Wrong alignment on WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip");
static_assert(sizeof(WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip) == 0x000020, "Wrong size on WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip");
static_assert(offsetof(WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip, EntryPoint) == 0x000000, "Member 'WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip, CallFunc_GetNiagaraComponent_ReturnValue) == 0x000008, "Member 'WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip::CallFunc_GetNiagaraComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip, K2Node_CustomEvent_Overlay_25) == 0x000010, "Member 'WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip::K2Node_CustomEvent_Overlay_25' has a wrong offset!");
static_assert(offsetof(WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WBP_WeaponTooltip_C_ExecuteUbergraph_WBP_WeaponTooltip::K2Node_Event_IsDesignTime' has a wrong offset!");

}

