#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_Spline_Random_Long

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_RuntimeSoundDataWithDelay_structs.hpp"


namespace SDK::Params
{

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.CheckForErrors
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C8(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_SoundWithDelay_C*         CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_CheckForErrors");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_CheckForErrors) == 0x0000F8, "Wrong size on BP_Audio_Spline_Random_Long_C_CheckForErrors");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Format_ReturnValue) == 0x000038, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, K2Node_MakeArray_Array_1) == 0x0000A0, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Format_ReturnValue_1) == 0x0000B8, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C8, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_1) == 0x0000D8, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000DC, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_CheckForErrors, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_Audio_Spline_Random_Long_C_CheckForErrors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.DEBUG_DrawMinMaxPositions
// 0x0098 (0x0098 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions final
{
public:
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxDistanceAttenuation_ReturnValue;    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMinMaxDistanceFromLocationInRange_Found; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMinMaxDistanceFromLocationInRange_MinDistance; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinMaxDistanceFromLocationInRange_MaxDistance; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinMaxDistanceFromLocationInRange_Range_ImplicitCast; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions) == 0x000098, "Wrong size on BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetMaxDistanceAttenuation_ReturnValue) == 0x000034, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetMaxDistanceAttenuation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetMinMaxDistanceFromLocationInRange_Found) == 0x000038, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetMinMaxDistanceFromLocationInRange_Found' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetMinMaxDistanceFromLocationInRange_MinDistance) == 0x000040, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetMinMaxDistanceFromLocationInRange_MinDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetMinMaxDistanceFromLocationInRange_MaxDistance) == 0x000048, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetMinMaxDistanceFromLocationInRange_MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000050, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000070, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetMinMaxDistanceFromLocationInRange_Range_ImplicitCast) == 0x000088, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetMinMaxDistanceFromLocationInRange_Range_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000090, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x000094, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawMinMaxPositions::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.DEBUG_DrawPlayedSound
// 0x0020 (0x0020 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                position;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound) == 0x000020, "Wrong size on BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound, Sound) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound::Sound' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound, position) == 0x000008, "Member 'BP_Audio_Spline_Random_Long_C_DEBUG_DrawPlayedSound::position' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.ExecuteUbergraph_BP_Audio_Spline_Random_Long
// 0x0098 (0x0098 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_SoundWithDelay_C*         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RuntimeSoundDataWithDelay           K2Node_MakeStruct_S_RuntimeSoundDataWithDelay;     // 0x0050(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long) == 0x000098, "Wrong size on BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, EntryPoint) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Variable) == 0x00000C, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Array_Index_Variable_2) == 0x000028, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Variable_1) == 0x00002C, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Less_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_IsPackagedBuild_ReturnValue) == 0x000038, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, K2Node_MakeStruct_S_RuntimeSoundDataWithDelay) == 0x000050, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::K2Node_MakeStruct_S_RuntimeSoundDataWithDelay' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Array_Length_ReturnValue_2) == 0x000084, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, Temp_int_Loop_Counter_Variable_2) == 0x000088, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Less_IntInt_ReturnValue_2) == 0x00008C, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long, K2Node_Event_EndPlayReason) == 0x000094, "Member 'BP_Audio_Spline_Random_Long_C_ExecuteUbergraph_BP_Audio_Spline_Random_Long::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.GetMinMaxDistanceFromLocationInRange
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinDistance;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDistance;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_wildcard_Variable;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_wildcard_Variable_1;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_wildcard_Variable_2;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_wildcard_Variable_3;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplineInputKey_ReturnValue;  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_wildcard_Variable_4;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange) == 0x0000E0, "Wrong size on BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Location) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Location' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Range) == 0x000018, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Range' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Found) == 0x000020, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Found' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, MinDistance) == 0x000028, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::MinDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, MaxDistance) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Temp_wildcard_Variable) == 0x000038, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Temp_wildcard_Variable_1) == 0x000040, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Temp_wildcard_Variable_2) == 0x000048, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Temp_wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Temp_wildcard_Variable_3) == 0x000050, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Temp_wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue) == 0x00005C, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_GetLocationAtSplineInputKey_ReturnValue) == 0x000060, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_GetLocationAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_Vector_Distance_ReturnValue) == 0x000078, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000080, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_Subtract_IntInt_ReturnValue) == 0x000090, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x000094, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, Temp_wildcard_Variable_4) == 0x000098, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::Temp_wildcard_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue) == 0x0000A8, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_FMin_ReturnValue) == 0x0000B0, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_FMax_ReturnValue) == 0x0000C0, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_FMin_B_ImplicitCast) == 0x0000C8, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'BP_Audio_Spline_Random_Long_C_GetMinMaxDistanceFromLocationInRange::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.GetRandomSplinePointInRange
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange final
{
public:
	struct FVector                                position;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Points;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Point;                                             // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Random_OutItem;                     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Square_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_wildcard_Variable;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_wildcard_Variable_1;                          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange) == 0x0000B0, "Wrong size on BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, position) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::position' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, Range) == 0x000018, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::Range' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, Points) == 0x000020, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::Points' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, Point) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::Point' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, Found) == 0x000048, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::Found' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, CallFunc_Array_Random_OutItem) == 0x000050, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, CallFunc_Array_Random_OutIndex) == 0x000068, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00006C, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, CallFunc_Square_ReturnValue) == 0x000070, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, Temp_wildcard_Variable) == 0x000078, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, Temp_wildcard_Variable_1) == 0x000080, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0000A0, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointInRange::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.GetRandomSplinePointsInDistanceRange
// 0x0080 (0x0080 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange final
{
public:
	double                                        MinDistance;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDistance;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfPoints;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Points;                                            // 0x0018(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Temp_wildcard_Temp_buffer_array_Variable;          // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FVector>                        Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange) == 0x000080, "Wrong size on BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, MinDistance) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::MinDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, MaxDistance) == 0x000008, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, NumberOfPoints) == 0x000010, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::NumberOfPoints' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, Points) == 0x000018, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::Points' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, Temp_int_Variable) == 0x000028, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, Temp_wildcard_Temp_buffer_array_Variable) == 0x000040, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000050, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000060, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x00007C, "Member 'BP_Audio_Spline_Random_Long_C_GetRandomSplinePointsInDistanceRange::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.GetSplinePointForSound
// 0x00B8 (0x00B8 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_GetSplinePointForSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                position;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxAttenuation;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerLocation;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxDistanceAttenuation_ReturnValue;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerAudioLocation_ReturnValue;       // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMinMaxDistanceFromLocationInRange_Found; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMinMaxDistanceFromLocationInRange_MinDistance; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMinMaxDistanceFromLocationInRange_MaxDistance; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_GetRandomSplinePointsInDistanceRange_Points; // 0x0080(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetRandomSplinePointInRange_Point;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRandomSplinePointInRange_Found;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MaxAttenuation_ImplicitCast;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_GetSplinePointForSound");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound) == 0x0000B8, "Wrong size on BP_Audio_Spline_Random_Long_C_GetSplinePointForSound");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, Sound) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::Sound' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, position) == 0x000008, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::position' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, Found) == 0x000020, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::Found' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, MaxAttenuation) == 0x000028, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::MaxAttenuation' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, PlayerLocation) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetMaxDistanceAttenuation_ReturnValue) == 0x000048, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetMaxDistanceAttenuation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetPlayerAudioLocation_ReturnValue) == 0x000050, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetPlayerAudioLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetMinMaxDistanceFromLocationInRange_Found) == 0x000068, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetMinMaxDistanceFromLocationInRange_Found' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetMinMaxDistanceFromLocationInRange_MinDistance) == 0x000070, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetMinMaxDistanceFromLocationInRange_MinDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetMinMaxDistanceFromLocationInRange_MaxDistance) == 0x000078, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetMinMaxDistanceFromLocationInRange_MaxDistance' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetRandomSplinePointsInDistanceRange_Points) == 0x000080, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetRandomSplinePointsInDistanceRange_Points' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetRandomSplinePointInRange_Point) == 0x000090, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetRandomSplinePointInRange_Point' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_GetRandomSplinePointInRange_Found) == 0x0000A8, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_GetRandomSplinePointInRange_Found' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A9, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_GetSplinePointForSound, K2Node_VariableSet_MaxAttenuation_ImplicitCast) == 0x0000B0, "Member 'BP_Audio_Spline_Random_Long_C_GetSplinePointForSound::K2Node_VariableSet_MaxAttenuation_ImplicitCast' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.OnTimerElapsed
// 0x0028 (0x0028 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_OnTimerElapsed final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_OnTimerElapsed");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed) == 0x000028, "Wrong size on BP_Audio_Spline_Random_Long_C_OnTimerElapsed");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, Temp_int_Variable) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000014, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, CallFunc_Less_IntInt_ReturnValue) == 0x000019, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_OnTimerElapsed, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_Audio_Spline_Random_Long_C_OnTimerElapsed::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.PlayRandomSoundAtRandomPosition
// 0x0070 (0x0070 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition final
{
public:
	struct FS_RuntimeSoundDataWithDelay           RandomSoundData;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Array_Random_OutItem;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_wildcard_Variable;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSplinePointForSound_Position;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSplinePointForSound_Found;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition) == 0x000070, "Wrong size on BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, RandomSoundData) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::RandomSoundData' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, CallFunc_IsPackagedBuild_ReturnValue) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, CallFunc_Array_Random_OutItem) == 0x000038, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, CallFunc_Array_Random_OutIndex) == 0x000040, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, Temp_wildcard_Variable) == 0x000048, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, CallFunc_GetSplinePointForSound_Position) == 0x000050, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::CallFunc_GetSplinePointForSound_Position' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, CallFunc_GetSplinePointForSound_Found) == 0x000068, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::CallFunc_GetSplinePointForSound_Found' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_Audio_Spline_Random_Long_C_PlayRandomSoundAtRandomPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_Audio_Spline_Random_Long_C_ReceiveEndPlay");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_Audio_Spline_Random_Long_C_ReceiveEndPlay");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Audio_Spline_Random_Long_C_ReceiveTick");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_ReceiveTick) == 0x000004, "Wrong size on BP_Audio_Spline_Random_Long_C_ReceiveTick");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Audio_Spline_Random_Long.BP_Audio_Spline_Random_Long_C.StartTimerForSoundData
// 0x0040 (0x0040 - 0x0000)
struct BP_Audio_Spline_Random_Long_C_StartTimerForSoundData final
{
public:
	struct FS_RuntimeSoundDataWithDelay           SoundData_0;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_Spline_Random_Long_C_StartTimerForSoundData) == 0x000008, "Wrong alignment on BP_Audio_Spline_Random_Long_C_StartTimerForSoundData");
static_assert(sizeof(BP_Audio_Spline_Random_Long_C_StartTimerForSoundData) == 0x000040, "Wrong size on BP_Audio_Spline_Random_Long_C_StartTimerForSoundData");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_StartTimerForSoundData, SoundData_0) == 0x000000, "Member 'BP_Audio_Spline_Random_Long_C_StartTimerForSoundData::SoundData_0' has a wrong offset!");
static_assert(offsetof(BP_Audio_Spline_Random_Long_C_StartTimerForSoundData, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_Audio_Spline_Random_Long_C_StartTimerForSoundData::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

