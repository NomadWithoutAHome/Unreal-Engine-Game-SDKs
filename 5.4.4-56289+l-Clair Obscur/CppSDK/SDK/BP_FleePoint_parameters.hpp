#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FleePoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FleePoint.BP_FleePoint_C.CheckForErrors
// 0x0060 (0x0060 - 0x0000)
struct BP_FleePoint_C_CheckForErrors final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_IsValid;                                     // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0010)(ConstParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateObjectArray_IsValid;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ValidateObjectArray_ErrorMessage;         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FleePoint_C_CheckForErrors) == 0x000008, "Wrong alignment on BP_FleePoint_C_CheckForErrors");
static_assert(sizeof(BP_FleePoint_C_CheckForErrors) == 0x000060, "Wrong size on BP_FleePoint_C_CheckForErrors");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, ErrorMessages) == 0x000000, "Member 'BP_FleePoint_C_CheckForErrors::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, ReturnValue) == 0x000010, "Member 'BP_FleePoint_C_CheckForErrors::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, local_IsValid) == 0x000011, "Member 'BP_FleePoint_C_CheckForErrors::local_IsValid' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, Temp_text_Variable) == 0x000018, "Member 'BP_FleePoint_C_CheckForErrors::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_FleePoint_C_CheckForErrors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, CallFunc_Array_IsEmpty_ReturnValue) == 0x00002C, "Member 'BP_FleePoint_C_CheckForErrors::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, CallFunc_ValidateObjectArray_IsValid) == 0x00002D, "Member 'BP_FleePoint_C_CheckForErrors::CallFunc_ValidateObjectArray_IsValid' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, CallFunc_ValidateObjectArray_ErrorMessage) == 0x000030, "Member 'BP_FleePoint_C_CheckForErrors::CallFunc_ValidateObjectArray_ErrorMessage' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_FleePoint_C_CheckForErrors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'BP_FleePoint_C_CheckForErrors::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_CheckForErrors, CallFunc_Array_Add_ReturnValue_1) == 0x000058, "Member 'BP_FleePoint_C_CheckForErrors::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_FleePoint.BP_FleePoint_C.ComputeFleePointDistance
// 0x0060 (0x0060 - 0x0000)
struct BP_FleePoint_C_ComputeFleePointDistance final
{
public:
	class AActor*                                 FleePoint;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtValidDistance;                                 // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_wildcard_Variable;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FleePoint_C_ComputeFleePointDistance) == 0x000008, "Wrong alignment on BP_FleePoint_C_ComputeFleePointDistance");
static_assert(sizeof(BP_FleePoint_C_ComputeFleePointDistance) == 0x000060, "Wrong size on BP_FleePoint_C_ComputeFleePointDistance");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, FleePoint) == 0x000000, "Member 'BP_FleePoint_C_ComputeFleePointDistance::FleePoint' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, Distance) == 0x000008, "Member 'BP_FleePoint_C_ComputeFleePointDistance::Distance' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, IsAtValidDistance) == 0x000010, "Member 'BP_FleePoint_C_ComputeFleePointDistance::IsAtValidDistance' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, Temp_wildcard_Variable) == 0x000018, "Member 'BP_FleePoint_C_ComputeFleePointDistance::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_FleePoint_C_ComputeFleePointDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'BP_FleePoint_C_ComputeFleePointDistance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, CallFunc_Vector_Distance_ReturnValue) == 0x000050, "Member 'BP_FleePoint_C_ComputeFleePointDistance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_FleePoint_C_ComputeFleePointDistance::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000059, "Member 'BP_FleePoint_C_ComputeFleePointDistance::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_ComputeFleePointDistance, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_FleePoint_C_ComputeFleePointDistance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FleePoint.BP_FleePoint_C.FindNextFleePoint
// 0x0130 (0x0130 - 0x0000)
struct BP_FleePoint_C_FindNextFleePoint final
{
public:
	class AActor*                                 PursuerActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FleePoint_C*                        FleePoint;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_FleePoint_C*                        local_BestFleePoint;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        local_BestDotProduct;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_wildcard_Variable;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FleePoint_C*                        CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FleePoint_C_FindNextFleePoint) == 0x000008, "Wrong alignment on BP_FleePoint_C_FindNextFleePoint");
static_assert(sizeof(BP_FleePoint_C_FindNextFleePoint) == 0x000130, "Wrong size on BP_FleePoint_C_FindNextFleePoint");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, PursuerActor) == 0x000000, "Member 'BP_FleePoint_C_FindNextFleePoint::PursuerActor' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, FleePoint) == 0x000008, "Member 'BP_FleePoint_C_FindNextFleePoint::FleePoint' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, local_BestFleePoint) == 0x000010, "Member 'BP_FleePoint_C_FindNextFleePoint::local_BestFleePoint' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, local_BestDotProduct) == 0x000018, "Member 'BP_FleePoint_C_FindNextFleePoint::local_BestDotProduct' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_FleePoint_C_FindNextFleePoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_FleePoint_C_FindNextFleePoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, Temp_wildcard_Variable) == 0x0000A8, "Member 'BP_FleePoint_C_FindNextFleePoint::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000B8, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0000E0, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000F8, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Normal_ReturnValue_1) == 0x000110, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_FindNextFleePoint, CallFunc_Dot_VectorVector_ReturnValue) == 0x000128, "Member 'BP_FleePoint_C_FindNextFleePoint::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_FleePoint.BP_FleePoint_C.LinkFleePoints
// 0x0058 (0x0058 - 0x0000)
struct BP_FleePoint_C_LinkFleePoints final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_FleePoint_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FleePoint_C*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FleePoint_C*                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FleePoint_C_LinkFleePoints) == 0x000008, "Wrong alignment on BP_FleePoint_C_LinkFleePoints");
static_assert(sizeof(BP_FleePoint_C_LinkFleePoints) == 0x000058, "Wrong size on BP_FleePoint_C_LinkFleePoints");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_FleePoint_C_LinkFleePoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, Temp_int_Loop_Counter_Variable_1) == 0x000004, "Member 'BP_FleePoint_C_LinkFleePoints::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_FleePoint_C_LinkFleePoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_FleePoint_C_LinkFleePoints::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_Contains_ReturnValue) == 0x000039, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_RemoveItem_ReturnValue) == 0x00003A, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Not_PreBool_ReturnValue) == 0x00003B, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x00003C, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_Array_AddUnique_ReturnValue) == 0x000050, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_LinkFleePoints, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_FleePoint_C_LinkFleePoints::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FleePoint.BP_FleePoint_C.UpdateDebugDisplay
// 0x01C8 (0x01C8 - 0x0000)
struct BP_FleePoint_C_UpdateDebugDisplay final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0098(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UTextRenderComponent*                   CallFunc_CreateDistanceTextComponentFromActors_TextRenderComponent; // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CallFunc_CreateArrowComponentFromActors_ArrowComponent; // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item_2;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FleePoint_C_UpdateDebugDisplay) == 0x000008, "Wrong alignment on BP_FleePoint_C_UpdateDebugDisplay");
static_assert(sizeof(BP_FleePoint_C_UpdateDebugDisplay) == 0x0001C8, "Wrong size on BP_FleePoint_C_UpdateDebugDisplay");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_FleePoint_C_UpdateDebugDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_FleePoint_C_UpdateDebugDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_FleePoint_C_UpdateDebugDisplay::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, Temp_int_Loop_Counter_Variable_2) == 0x000010, "Member 'BP_FleePoint_C_UpdateDebugDisplay::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_FleePoint_C_UpdateDebugDisplay::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_FleePoint_C_UpdateDebugDisplay::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_BreakVector_Y) == 0x000060, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_MakeVector_ReturnValue) == 0x000078, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000098, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_CreateDistanceTextComponentFromActors_TextRenderComponent) == 0x000190, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_CreateDistanceTextComponentFromActors_TextRenderComponent' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_CreateArrowComponentFromActors_ArrowComponent) == 0x000198, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_CreateArrowComponentFromActors_ArrowComponent' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_Length_ReturnValue_1) == 0x0001A4, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001A8, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_AddUnique_ReturnValue) == 0x0001AC, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001B0, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_Get_Item_2) == 0x0001B8, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Array_Length_ReturnValue_2) == 0x0001C0, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001C4, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UpdateDebugDisplay, CallFunc_IsValid_ReturnValue_1) == 0x0001C5, "Member 'BP_FleePoint_C_UpdateDebugDisplay::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_FleePoint.BP_FleePoint_C.UserConstructionScript
// 0x0003 (0x0003 - 0x0000)
struct BP_FleePoint_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsPackagedBuild_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FleePoint_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_FleePoint_C_UserConstructionScript");
static_assert(sizeof(BP_FleePoint_C_UserConstructionScript) == 0x000003, "Wrong size on BP_FleePoint_C_UserConstructionScript");
static_assert(offsetof(BP_FleePoint_C_UserConstructionScript, CallFunc_IsPackagedBuild_ReturnValue) == 0x000000, "Member 'BP_FleePoint_C_UserConstructionScript::CallFunc_IsPackagedBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UserConstructionScript, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000001, "Member 'BP_FleePoint_C_UserConstructionScript::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FleePoint_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_FleePoint_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

