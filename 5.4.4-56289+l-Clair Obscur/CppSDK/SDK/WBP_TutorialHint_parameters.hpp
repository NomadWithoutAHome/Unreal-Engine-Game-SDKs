#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TutorialHint

#include "Basic.hpp"

#include "CommonInput_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "S_TutorialHintParameters_structs.hpp"
#include "S_TutorialHintContentData_structs.hpp"


namespace SDK::Params
{

// Function WBP_TutorialHint.WBP_TutorialHint_C.ExecuteUbergraph_WBP_TutorialHint
// 0x0020 (0x0020 - 0x0000)
struct WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;            // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint) == 0x000008, "Wrong alignment on WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint");
static_assert(sizeof(WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint) == 0x000020, "Wrong size on WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint");
static_assert(offsetof(WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint, EntryPoint) == 0x000000, "Member 'WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000018, "Member 'WBP_TutorialHint_C_ExecuteUbergraph_WBP_TutorialHint::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");

// Function WBP_TutorialHint.WBP_TutorialHint_C.GetTutorialHintRow
// 0x0010 (0x0010 - 0x0000)
struct WBP_TutorialHint_C_GetTutorialHintRow final
{
public:
	struct FDataTableRowHandle                    TutorialHintRow;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(WBP_TutorialHint_C_GetTutorialHintRow) == 0x000008, "Wrong alignment on WBP_TutorialHint_C_GetTutorialHintRow");
static_assert(sizeof(WBP_TutorialHint_C_GetTutorialHintRow) == 0x000010, "Wrong size on WBP_TutorialHint_C_GetTutorialHintRow");
static_assert(offsetof(WBP_TutorialHint_C_GetTutorialHintRow, TutorialHintRow) == 0x000000, "Member 'WBP_TutorialHint_C_GetTutorialHintRow::TutorialHintRow' has a wrong offset!");

// Function WBP_TutorialHint.WBP_TutorialHint_C.LoadTutorialHintParameters
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_TutorialHint_C_LoadTutorialHintParameters final
{
public:
	struct FS_TutorialHintParameters              TutorialHintParameters_0;                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_GetTutorialHintRow_TutorialHintRow;       // 0x0018(0x0010)(NoDestructor)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0010)()
	struct FS_TutorialHintContentData             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialHint_C_LoadTutorialHintParameters) == 0x000008, "Wrong alignment on WBP_TutorialHint_C_LoadTutorialHintParameters");
static_assert(sizeof(WBP_TutorialHint_C_LoadTutorialHintParameters) == 0x0000C8, "Wrong size on WBP_TutorialHint_C_LoadTutorialHintParameters");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, TutorialHintParameters_0) == 0x000000, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::TutorialHintParameters_0' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, CallFunc_GetTutorialHintRow_TutorialHintRow) == 0x000018, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::CallFunc_GetTutorialHintRow_TutorialHintRow' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, K2Node_MakeArray_Array) == 0x000098, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_LoadTutorialHintParameters, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'WBP_TutorialHint_C_LoadTutorialHintParameters::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_TutorialHint.WBP_TutorialHint_C.OnAppearAnimationFinished
// 0x0020 (0x0020 - 0x0000)
struct WBP_TutorialHint_C_OnAppearAnimationFinished final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialHint_C_OnAppearAnimationFinished) == 0x000008, "Wrong alignment on WBP_TutorialHint_C_OnAppearAnimationFinished");
static_assert(sizeof(WBP_TutorialHint_C_OnAppearAnimationFinished) == 0x000020, "Wrong size on WBP_TutorialHint_C_OnAppearAnimationFinished");
static_assert(offsetof(WBP_TutorialHint_C_OnAppearAnimationFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_TutorialHint_C_OnAppearAnimationFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_OnAppearAnimationFinished, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'WBP_TutorialHint_C_OnAppearAnimationFinished::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_OnAppearAnimationFinished, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'WBP_TutorialHint_C_OnAppearAnimationFinished::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_OnAppearAnimationFinished, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00001C, "Member 'WBP_TutorialHint_C_OnAppearAnimationFinished::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function WBP_TutorialHint.WBP_TutorialHint_C.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_TutorialHint_C_OnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialHint_C_OnInputMethodChanged) == 0x000001, "Wrong alignment on WBP_TutorialHint_C_OnInputMethodChanged");
static_assert(sizeof(WBP_TutorialHint_C_OnInputMethodChanged) == 0x000001, "Wrong size on WBP_TutorialHint_C_OnInputMethodChanged");
static_assert(offsetof(WBP_TutorialHint_C_OnInputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_TutorialHint_C_OnInputMethodChanged::bNewInputType' has a wrong offset!");

// Function WBP_TutorialHint.WBP_TutorialHint_C.PlayAppearAnimation
// 0x0010 (0x0010 - 0x0000)
struct WBP_TutorialHint_C_PlayAppearAnimation final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TutorialHint_C_PlayAppearAnimation) == 0x000008, "Wrong alignment on WBP_TutorialHint_C_PlayAppearAnimation");
static_assert(sizeof(WBP_TutorialHint_C_PlayAppearAnimation) == 0x000010, "Wrong size on WBP_TutorialHint_C_PlayAppearAnimation");
static_assert(offsetof(WBP_TutorialHint_C_PlayAppearAnimation, PlayMode) == 0x000000, "Member 'WBP_TutorialHint_C_PlayAppearAnimation::PlayMode' has a wrong offset!");
static_assert(offsetof(WBP_TutorialHint_C_PlayAppearAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_TutorialHint_C_PlayAppearAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

}

