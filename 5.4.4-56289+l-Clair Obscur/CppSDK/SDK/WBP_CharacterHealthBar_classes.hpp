#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharacterHealthBar

#include "Basic.hpp"

#include "ECharacterTeamSelector_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CharacterHealthBar.WBP_CharacterHealthBar_C
// 0x0128 (0x0408 - 0x02E0)
class UWBP_CharacterHealthBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_BreakAvailable;                               // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_StanceBroken;                                 // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_StackedIncrement;                             // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_StackedFadeOut;                               // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_StackedFadeIn;                                // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_HPLoss;                                       // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_GlowContainer_C*                   BreakIconContainer;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_BreakBarContainer;                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   FX_BreakBar;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   FX_SmokeExplosion;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   FX_SmokeExplosion_1;                               // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ShieldPointsContainer;               // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LineLeftShield;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LineRightShield;                             // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Shield;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_HP;                                    // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_HP_ChangeHighlight;                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       StackedDamageText;                                 // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BreakBar_C*                        WBP_BreakBar;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CharacterBattleStats;                              // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        startHPAnim;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        currentHPAnim;                                     // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        targetHPAnim;                                      // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        hpAnimProgress;                                    // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         HPOpacityOverride;                                 // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	int32                                         StackedDamages;                                    // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BreakBarMaxValue;                                  // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HighlightBarMergeCooldown;                         // 0x03C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HighlightBarMergeProgress;                         // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HighlightBarMergeStartValue;                       // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           hpColorOverride;                                   // 0x03D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           hpBaseColor;                                       // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FX_BreakBarLength;                                 // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FX_BreakBarWidth;                                  // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FX_BreakBarSpawnCount;                             // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FXTimeDilation;                                    // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void SequenceEvent__ENTRYPOINTWBP_CharacterHealthBar(class UNiagaraSystemWidget* FX_BreakBar_0);
	void SetFXTimeDilation(float FXTimeDilation_0);
	void UpdateHealthColor(int32 CurrentShieldCount);
	bool IsHighlightAnimInProgress();
	void UpdateBreakBar(int32 NewValue);
	void InitBreakBar(int32 MaxValue);
	float GetProgressBarHPPercent();
	void UpdateHealthValueEnemies(double Current, double max_0);
	void FX_BreakBar_Event(class UNiagaraSystemWidget* FX_BreakBar_0);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetCharacterBattleStats(class UAC_jRPG_CharacterBattleStats_C* BattleStats);
	void OnHPChanged(double NewHP, double PreviousHP);
	void OnCharacterInitialized();
	void OnShieldPointsChanged(int32 CurrentValue, int32 PreviousValue);
	void OnBreakDamageReceived(class UAC_jRPG_CharacterBattleStats_C* SelfCharacter, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter, int32 PreviousValue);
	void OnStanceBroken(class UAC_jRPG_CharacterBattleStats_C* SelfCharacter);
	void ExecuteUbergraph_WBP_CharacterHealthBar(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CharacterHealthBar_C">();
	}
	static class UWBP_CharacterHealthBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CharacterHealthBar_C>();
	}
};
static_assert(alignof(UWBP_CharacterHealthBar_C) == 0x000008, "Wrong alignment on UWBP_CharacterHealthBar_C");
static_assert(sizeof(UWBP_CharacterHealthBar_C) == 0x000408, "Wrong size on UWBP_CharacterHealthBar_C");
static_assert(offsetof(UWBP_CharacterHealthBar_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_CharacterHealthBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Anim_BreakAvailable) == 0x0002E8, "Member 'UWBP_CharacterHealthBar_C::Anim_BreakAvailable' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Anim_StanceBroken) == 0x0002F0, "Member 'UWBP_CharacterHealthBar_C::Anim_StanceBroken' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Anim_StackedIncrement) == 0x0002F8, "Member 'UWBP_CharacterHealthBar_C::Anim_StackedIncrement' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Anim_StackedFadeOut) == 0x000300, "Member 'UWBP_CharacterHealthBar_C::Anim_StackedFadeOut' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Anim_StackedFadeIn) == 0x000308, "Member 'UWBP_CharacterHealthBar_C::Anim_StackedFadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Anim_HPLoss) == 0x000310, "Member 'UWBP_CharacterHealthBar_C::Anim_HPLoss' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, BreakIconContainer) == 0x000318, "Member 'UWBP_CharacterHealthBar_C::BreakIconContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, CanvasPanel_BreakBarContainer) == 0x000320, "Member 'UWBP_CharacterHealthBar_C::CanvasPanel_BreakBarContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, FX_BreakBar) == 0x000328, "Member 'UWBP_CharacterHealthBar_C::FX_BreakBar' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, FX_SmokeExplosion) == 0x000330, "Member 'UWBP_CharacterHealthBar_C::FX_SmokeExplosion' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, FX_SmokeExplosion_1) == 0x000338, "Member 'UWBP_CharacterHealthBar_C::FX_SmokeExplosion_1' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, HorizontalBox_ShieldPointsContainer) == 0x000340, "Member 'UWBP_CharacterHealthBar_C::HorizontalBox_ShieldPointsContainer' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Image) == 0x000348, "Member 'UWBP_CharacterHealthBar_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Image_1) == 0x000350, "Member 'UWBP_CharacterHealthBar_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Image_LineLeftShield) == 0x000358, "Member 'UWBP_CharacterHealthBar_C::Image_LineLeftShield' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Image_LineRightShield) == 0x000360, "Member 'UWBP_CharacterHealthBar_C::Image_LineRightShield' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, Image_Shield) == 0x000368, "Member 'UWBP_CharacterHealthBar_C::Image_Shield' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, ProgressBar_HP) == 0x000370, "Member 'UWBP_CharacterHealthBar_C::ProgressBar_HP' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, ProgressBar_HP_ChangeHighlight) == 0x000378, "Member 'UWBP_CharacterHealthBar_C::ProgressBar_HP_ChangeHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, StackedDamageText) == 0x000380, "Member 'UWBP_CharacterHealthBar_C::StackedDamageText' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, WBP_BreakBar) == 0x000388, "Member 'UWBP_CharacterHealthBar_C::WBP_BreakBar' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, CharacterBattleStats) == 0x000390, "Member 'UWBP_CharacterHealthBar_C::CharacterBattleStats' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, startHPAnim) == 0x000398, "Member 'UWBP_CharacterHealthBar_C::startHPAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, currentHPAnim) == 0x0003A0, "Member 'UWBP_CharacterHealthBar_C::currentHPAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, targetHPAnim) == 0x0003A8, "Member 'UWBP_CharacterHealthBar_C::targetHPAnim' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, hpAnimProgress) == 0x0003B0, "Member 'UWBP_CharacterHealthBar_C::hpAnimProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, HPOpacityOverride) == 0x0003B8, "Member 'UWBP_CharacterHealthBar_C::HPOpacityOverride' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, StackedDamages) == 0x0003BC, "Member 'UWBP_CharacterHealthBar_C::StackedDamages' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, BreakBarMaxValue) == 0x0003C0, "Member 'UWBP_CharacterHealthBar_C::BreakBarMaxValue' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, HighlightBarMergeCooldown) == 0x0003C4, "Member 'UWBP_CharacterHealthBar_C::HighlightBarMergeCooldown' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, HighlightBarMergeProgress) == 0x0003C8, "Member 'UWBP_CharacterHealthBar_C::HighlightBarMergeProgress' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, HighlightBarMergeStartValue) == 0x0003D0, "Member 'UWBP_CharacterHealthBar_C::HighlightBarMergeStartValue' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, hpColorOverride) == 0x0003D8, "Member 'UWBP_CharacterHealthBar_C::hpColorOverride' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, hpBaseColor) == 0x0003E8, "Member 'UWBP_CharacterHealthBar_C::hpBaseColor' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, FX_BreakBarLength) == 0x0003F8, "Member 'UWBP_CharacterHealthBar_C::FX_BreakBarLength' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, FX_BreakBarWidth) == 0x0003FC, "Member 'UWBP_CharacterHealthBar_C::FX_BreakBarWidth' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, FX_BreakBarSpawnCount) == 0x000400, "Member 'UWBP_CharacterHealthBar_C::FX_BreakBarSpawnCount' has a wrong offset!");
static_assert(offsetof(UWBP_CharacterHealthBar_C, FXTimeDilation) == 0x000404, "Member 'UWBP_CharacterHealthBar_C::FXTimeDilation' has a wrong offset!");

}

