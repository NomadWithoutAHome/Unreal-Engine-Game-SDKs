#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleLineGatherer

#include "Basic.hpp"

#include "BP_BattleLineGatherer_classes.hpp"
#include "BP_BattleLineGatherer_parameters.hpp"


namespace SDK
{

// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.RegisterCandidateLine
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLine&             NewLine                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleLinesModel_Base_C*      SourceModel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::RegisterCandidateLine(const struct FS_BattleLine& NewLine, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "RegisterCandidateLine");

	Params::BP_BattleLineGatherer_C_RegisterCandidateLine Parms{};

	Parms.NewLine = std::move(NewLine);
	Parms.SourceModel = SourceModel;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.RegisterPerCharacterPool
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLineEventPerCharacter&PerCharacterLines                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  RelevantCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleLinesModel_Base_C*      SourceModel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::RegisterPerCharacterPool(const struct FS_BattleLineEventPerCharacter& PerCharacterLines, class UAC_jRPG_CharacterBattleStats_C* RelevantCharacter, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "RegisterPerCharacterPool");

	Params::BP_BattleLineGatherer_C_RegisterPerCharacterPool Parms{};

	Parms.PerCharacterLines = std::move(PerCharacterLines);
	Parms.RelevantCharacter = RelevantCharacter;
	Parms.SourceModel = SourceModel;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.RegisterPool
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLinePool&         Pool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UBP_BattleLinesModel_Base_C*      SourceModel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::RegisterPool(const struct FS_BattleLinePool& Pool, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "RegisterPool");

	Params::BP_BattleLineGatherer_C_RegisterPool Parms{};

	Parms.Pool = std::move(Pool);
	Parms.SourceModel = SourceModel;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.Roll
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleLineGatherer_C::Roll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "Roll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.RollChancePercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ChancePercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Rolled                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::RollChancePercent(double ChancePercent, bool* Rolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "RollChancePercent");

	Params::BP_BattleLineGatherer_C_RollChancePercent Parms{};

	Parms.ChancePercent = ChancePercent;

	UObject::ProcessEvent(Func, &Parms);

	if (Rolled != nullptr)
		*Rolled = Parms.Rolled;
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.RollFromPool
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLinePool&         BattleLinePool                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FS_BattleLine*                   BattleLine                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::RollFromPool(const struct FS_BattleLinePool& BattleLinePool, struct FS_BattleLine* BattleLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "RollFromPool");

	Params::BP_BattleLineGatherer_C_RollFromPool Parms{};

	Parms.BattleLinePool = std::move(BattleLinePool);

	UObject::ProcessEvent(Func, &Parms);

	if (BattleLine != nullptr)
		*BattleLine = std::move(Parms.BattleLine);
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.SelectBattleLineCandidate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_BattleLineCandidate*          ChosenLine                                             (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::SelectBattleLineCandidate(bool* Valid, struct FS_BattleLineCandidate* ChosenLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "SelectBattleLineCandidate");

	Params::BP_BattleLineGatherer_C_SelectBattleLineCandidate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;

	if (ChosenLine != nullptr)
		*ChosenLine = std::move(Parms.ChosenLine);
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.TryRegisterPerCharacterPool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLineEventPerCharacter&PerCharacterLines                                      (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// double                                  ChancePercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  RelevantCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleLinesModel_Base_C*      SourceModel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool*                                   Rolled                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::TryRegisterPerCharacterPool(const struct FS_BattleLineEventPerCharacter& PerCharacterLines, double ChancePercent, class UAC_jRPG_CharacterBattleStats_C* RelevantCharacter, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason, bool* Rolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "TryRegisterPerCharacterPool");

	Params::BP_BattleLineGatherer_C_TryRegisterPerCharacterPool Parms{};

	Parms.PerCharacterLines = std::move(PerCharacterLines);
	Parms.ChancePercent = ChancePercent;
	Parms.RelevantCharacter = RelevantCharacter;
	Parms.SourceModel = SourceModel;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);

	if (Rolled != nullptr)
		*Rolled = Parms.Rolled;
}


// Function BP_BattleLineGatherer.BP_BattleLineGatherer_C.TryRegisterPool
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLinePool&         Pool                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// double                                  ChancePercent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_BattleLinesModel_Base_C*      SourceModel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    DebugReason                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool*                                   Rolled                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_BattleLineGatherer_C::TryRegisterPool(const struct FS_BattleLinePool& Pool, double ChancePercent, class UBP_BattleLinesModel_Base_C* SourceModel, const class FString& DebugReason, bool* Rolled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleLineGatherer_C", "TryRegisterPool");

	Params::BP_BattleLineGatherer_C_TryRegisterPool Parms{};

	Parms.Pool = std::move(Pool);
	Parms.ChancePercent = ChancePercent;
	Parms.SourceModel = SourceModel;
	Parms.DebugReason = std::move(DebugReason);

	UObject::ProcessEvent(Func, &Parms);

	if (Rolled != nullptr)
		*Rolled = Parms.Rolled;
}

}

