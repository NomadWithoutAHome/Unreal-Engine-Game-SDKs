#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterSkinComponent

#include "Basic.hpp"

#include "BP_CharacterSkinComponent_classes.hpp"
#include "BP_CharacterSkinComponent_parameters.hpp"


namespace SDK
{

// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.UpdateCharacterFaceMaterialInstances
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::UpdateCharacterFaceMaterialInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "UpdateCharacterFaceMaterialInstances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.OnSkinAssignCompleted
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewBodySkinObject                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           NewFaceSkinObject                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::OnSkinAssignCompleted(class AActor* NewBodySkinObject, class AActor* NewFaceSkinObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "OnSkinAssignCompleted");

	Params::BP_CharacterSkinComponent_C_OnSkinAssignCompleted Parms{};

	Parms.NewBodySkinObject = NewBodySkinObject;
	Parms.NewFaceSkinObject = NewFaceSkinObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.OnFaceSkinAssigned
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewFaceSkinObject                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::OnFaceSkinAssigned(class AActor* NewFaceSkinObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "OnFaceSkinAssigned");

	Params::BP_CharacterSkinComponent_C_OnFaceSkinAssigned Parms{};

	Parms.NewFaceSkinObject = NewFaceSkinObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.OnBodySkinAssigned
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewBodySkinObject                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::OnBodySkinAssigned(class AActor* NewBodySkinObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "OnBodySkinAssigned");

	Params::BP_CharacterSkinComponent_C_OnBodySkinAssigned Parms{};

	Parms.NewBodySkinObject = NewBodySkinObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.GetCurrentAssignPolicy
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCharacterSkinAssignPolicy**      SkinAssignPolicy_0                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::GetCurrentAssignPolicy(class UCharacterSkinAssignPolicy** SkinAssignPolicy_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "GetCurrentAssignPolicy");

	Params::BP_CharacterSkinComponent_C_GetCurrentAssignPolicy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkinAssignPolicy_0 != nullptr)
		*SkinAssignPolicy_0 = Parms.SkinAssignPolicy_0;
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ConstructSkinAssignPolicy
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::ConstructSkinAssignPolicy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ConstructSkinAssignPolicy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ApplyFootstepWithSkin
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::ApplyFootstepWithSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ApplyFootstepWithSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ApplyAnimationProfile
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::ApplyAnimationProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ApplyAnimationProfile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.TryCacheCharacterBody
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::TryCacheCharacterBody()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "TryCacheCharacterBody");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.TryCacheCharacterFace
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::TryCacheCharacterFace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "TryCacheCharacterFace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.SetupCharacterFace
// (Protected, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::SetupCharacterFace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "SetupCharacterFace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.GetFaceSkeletalMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent**          Face                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::GetFaceSkeletalMesh(class USkeletalMeshComponent** Face)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "GetFaceSkeletalMesh");

	Params::BP_CharacterSkinComponent_C_GetFaceSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Face != nullptr)
		*Face = Parms.Face;
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.UpdateArmRing
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::UpdateArmRing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "UpdateArmRing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.GetArmRingMaterialInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstanceDynamic**        ArmRingMaterialInstance_0                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::GetArmRingMaterialInstance(class UMaterialInstanceDynamic** ArmRingMaterialInstance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "GetArmRingMaterialInstance");

	Params::BP_CharacterSkinComponent_C_GetArmRingMaterialInstance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ArmRingMaterialInstance_0 != nullptr)
		*ArmRingMaterialInstance_0 = Parms.ArmRingMaterialInstance_0;
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.GetArmRingMaterialIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32*                                  ArmRingMaterialIndex_0                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::GetArmRingMaterialIndex(int32* ArmRingMaterialIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "GetArmRingMaterialIndex");

	Params::BP_CharacterSkinComponent_C_GetArmRingMaterialIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ArmRingMaterialIndex_0 != nullptr)
		*ArmRingMaterialIndex_0 = Parms.ArmRingMaterialIndex_0;
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.GetArmRingComponents
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UNiagaraComponent*>*       ArmRingComponents_0                                    (Parm, OutParm, ContainsInstancedReference)

void UBP_CharacterSkinComponent_C::GetArmRingComponents(TArray<class UNiagaraComponent*>* ArmRingComponents_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "GetArmRingComponents");

	Params::BP_CharacterSkinComponent_C_GetArmRingComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ArmRingComponents_0 != nullptr)
		*ArmRingComponents_0 = std::move(Parms.ArmRingComponents_0);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.GetSkinMaterialInstances
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UMaterialInstanceDynamic*>*SkinMaterialInstances                                  (Parm, OutParm)

void UBP_CharacterSkinComponent_C::GetSkinMaterialInstances(TArray<class UMaterialInstanceDynamic*>* SkinMaterialInstances)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "GetSkinMaterialInstances");

	Params::BP_CharacterSkinComponent_C_GetSkinMaterialInstances Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkinMaterialInstances != nullptr)
		*SkinMaterialInstances = std::move(Parms.SkinMaterialInstances);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.UpdateCharacterSkinMaterialInstances
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::UpdateCharacterSkinMaterialInstances()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "UpdateCharacterSkinMaterialInstances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ApplyAnimationConfig
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::ApplyAnimationConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ApplyAnimationConfig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.CacheAnimationConfig
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::CacheAnimationConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "CacheAnimationConfig");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ShouldApplyCustomization
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FS_CharacterCustomization& CharacterCustomization                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool*                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::ShouldApplyCustomization(const struct FS_CharacterCustomization& CharacterCustomization, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ShouldApplyCustomization");

	Params::BP_CharacterSkinComponent_C_ShouldApplyCustomization Parms{};

	Parms.CharacterCustomization = std::move(CharacterCustomization);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ApplyCurrentCustomization
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterSkinComponent_C::ApplyCurrentCustomization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ApplyCurrentCustomization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.OverrideCharacterSkin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Character_Skin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Character_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::OverrideCharacterSkin(class UClass* Character_Skin, class FName Character_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "OverrideCharacterSkin");

	Params::BP_CharacterSkinComponent_C_OverrideCharacterSkin Parms{};

	Parms.Character_Skin = Character_Skin;
	Parms.Character_Name = Character_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.OverrideCharacterFace
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Skin_Face                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Character_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::OverrideCharacterFace(class UClass* Skin_Face, class FName Character_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "OverrideCharacterFace");

	Params::BP_CharacterSkinComponent_C_OverrideCharacterFace Parms{};

	Parms.Skin_Face = Skin_Face;
	Parms.Character_Name = Character_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.SetCharacterCustomization
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FS_CharacterCustomization& Character_Customization                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::SetCharacterCustomization(class FName Character_Name, const struct FS_CharacterCustomization& Character_Customization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "SetCharacterCustomization");

	Params::BP_CharacterSkinComponent_C_SetCharacterCustomization Parms{};

	Parms.Character_Name = Character_Name;
	Parms.Character_Customization = std::move(Character_Customization);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_CharacterSkinComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ApplyCurrentCharacterSkin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::ApplyCurrentCharacterSkin(class FName Character_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ApplyCurrentCharacterSkin");

	Params::BP_CharacterSkinComponent_C_ApplyCurrentCharacterSkin Parms{};

	Parms.Character_Name = Character_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ApplyCurrentCharacterFace
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character_Name                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::ApplyCurrentCharacterFace(class FName Character_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ApplyCurrentCharacterFace");

	Params::BP_CharacterSkinComponent_C_ApplyCurrentCharacterFace Parms{};

	Parms.Character_Name = Character_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ReceiveEndPlay");

	Params::BP_CharacterSkinComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterSkinComponent.BP_CharacterSkinComponent_C.ExecuteUbergraph_BP_CharacterSkinComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterSkinComponent_C::ExecuteUbergraph_BP_CharacterSkinComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterSkinComponent_C", "ExecuteUbergraph_BP_CharacterSkinComponent");

	Params::BP_CharacterSkinComponent_C_ExecuteUbergraph_BP_CharacterSkinComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

