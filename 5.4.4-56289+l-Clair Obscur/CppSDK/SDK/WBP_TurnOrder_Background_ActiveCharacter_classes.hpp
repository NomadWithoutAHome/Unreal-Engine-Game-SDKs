#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TurnOrder_Background_ActiveCharacter

#include "Basic.hpp"

#include "ECharacterTeamSelector_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TurnOrder_Background_ActiveCharacter.WBP_TurnOrder_Background_ActiveCharacter_C
// 0x00D8 (0x03B8 - 0x02E0)
class UWBP_TurnOrder_Background_ActiveCharacter_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_RedTooBlue;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Appear;                                       // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Deco;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_GlobalContainer;                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_CircleDot;                                   // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_MenuHeaderPaint;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Paint_ColorFade;                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Paint_White;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PaintFlow;                                   // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_particules_1PH;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_particules_2PH;                              // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Pattern;                                     // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ShadowColor;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_SlashGrunge;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Spike_solo;                                  // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Spikes;                                      // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_WaterColor;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_Color;                                 // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_MenuHeaderPattern;                     // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_PaintFlowWhite;                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_ShadowColor;                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_TextDecoOverlap;                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_TextDecoOverlap_Shadow;                  // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           TeamColor;                                         // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CurrentTeam;                                       // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Appear();
	void ExecuteUbergraph_WBP_TurnOrder_Background_ActiveCharacter(int32 EntryPoint);
	void SetBackgroundText(const class FText& InName);
	void SetCurrentTeam(ECharacterTeamSelector CurrentTeam_0);
	void SetTeamColor(const struct FLinearColor& TeamColor_0);
	void SwapToBlue();
	void SwapToRed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TurnOrder_Background_ActiveCharacter_C">();
	}
	static class UWBP_TurnOrder_Background_ActiveCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TurnOrder_Background_ActiveCharacter_C>();
	}
};
static_assert(alignof(UWBP_TurnOrder_Background_ActiveCharacter_C) == 0x000008, "Wrong alignment on UWBP_TurnOrder_Background_ActiveCharacter_C");
static_assert(sizeof(UWBP_TurnOrder_Background_ActiveCharacter_C) == 0x0003B8, "Wrong size on UWBP_TurnOrder_Background_ActiveCharacter_C");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Anim_RedTooBlue) == 0x0002E8, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Anim_RedTooBlue' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Anim_Appear) == 0x0002F0, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Anim_Appear' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, CanvasPanel_Deco) == 0x0002F8, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::CanvasPanel_Deco' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, CanvasPanel_GlobalContainer) == 0x000300, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::CanvasPanel_GlobalContainer' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_CircleDot) == 0x000308, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_CircleDot' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_MenuHeaderPaint) == 0x000310, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_MenuHeaderPaint' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_Paint_ColorFade) == 0x000318, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_Paint_ColorFade' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_Paint_White) == 0x000320, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_Paint_White' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_PaintFlow) == 0x000328, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_PaintFlow' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_particules_1PH) == 0x000330, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_particules_1PH' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_particules_2PH) == 0x000338, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_particules_2PH' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_Pattern) == 0x000340, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_Pattern' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_ShadowColor) == 0x000348, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_ShadowColor' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_SlashGrunge) == 0x000350, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_SlashGrunge' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_Spike_solo) == 0x000358, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_Spike_solo' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_Spikes) == 0x000360, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_Spikes' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, Image_WaterColor) == 0x000368, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::Image_WaterColor' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, RetainerBox_Color) == 0x000370, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::RetainerBox_Color' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, RetainerBox_MenuHeaderPattern) == 0x000378, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::RetainerBox_MenuHeaderPattern' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, RetainerBox_PaintFlowWhite) == 0x000380, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::RetainerBox_PaintFlowWhite' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, RetainerBox_ShadowColor) == 0x000388, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::RetainerBox_ShadowColor' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, TextBlock_TextDecoOverlap) == 0x000390, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::TextBlock_TextDecoOverlap' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, TextBlock_TextDecoOverlap_Shadow) == 0x000398, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::TextBlock_TextDecoOverlap_Shadow' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, TeamColor) == 0x0003A0, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::TeamColor' has a wrong offset!");
static_assert(offsetof(UWBP_TurnOrder_Background_ActiveCharacter_C, CurrentTeam) == 0x0003B0, "Member 'UWBP_TurnOrder_Background_ActiveCharacter_C::CurrentTeam' has a wrong offset!");

}

