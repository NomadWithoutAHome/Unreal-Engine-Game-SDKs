#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Battle_Global

#include "Basic.hpp"

#include "EBattleTurnState_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "E_EnemyIdleState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "IKFootToGround_structs.hpp"
#include "ABP_Battle_Global_structs.hpp"
#include "E_BattleLookDirection_structs.hpp"
#include "E_HitReact_Anim_Type_structs.hpp"
#include "E_AiStates_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Battle_Global.ABP_Battle_Global_C
// 0x5BC0 (0x5F30 - 0x0370)
class UABP_Battle_Global_C : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Battle_Global::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;            // 0x0378(0x0078)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03F0(0x0008)()
	struct FAnimSubsystemInstance_NodeRelevancy   AnimBlueprintExtension_NodeRelevancy;              // 0x03F8(0x00A8)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x04A0(0x0008)()
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x04B0(0x0250)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x0700(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x0720(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x0740(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x0788(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x08B0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x08D0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x08F0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x0A18(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x0B40(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0C68(0x0128)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x0D90(0x0080)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_110;                // 0x0E10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_109;                // 0x0E38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_108;                // 0x0E60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_107;                // 0x0E88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_106;                // 0x0EB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_105;                // 0x0ED8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_104;                // 0x0F00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_103;                // 0x0F28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_102;                // 0x0F50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_101;                // 0x0F78(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_48;                   // 0x0FA0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_53;                      // 0x0FE8(0x0020)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_4;               // 0x1008(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_47;                   // 0x1040(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x1088(0x0028)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_4;                 // 0x10B0(0x0040)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x10F0(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_3;                 // 0x11E0(0x0040)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_3;               // 0x1220(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_46;                   // 0x1258(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_7;                     // 0x12A0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x1368(0x0028)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive_1;            // 0x1390(0x00D0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_52;                      // 0x1460(0x0020)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_2;                 // 0x1480(0x0040)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_2;               // 0x14C0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x14F8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x1540(0x0028)()
	struct FAnimNode_ApplyMeshSpaceAdditive       AnimGraphNode_ApplyMeshSpaceAdditive;              // 0x1568(0x00D0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x1638(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x1728(0x0040)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive_1;               // 0x1768(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x17A0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_6;                     // 0x17E8(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x18B0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_51;                      // 0x18D8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x18F8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_50;                      // 0x1920(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_8;                      // 0x1940(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x1A08(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x1A88(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_100;                // 0x1AD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_99;                 // 0x1B00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_98;                 // 0x1B28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_97;                 // 0x1B50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_96;                 // 0x1B78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_95;                 // 0x1BA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_94;                 // 0x1BC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_93;                 // 0x1BF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_92;                 // 0x1C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_91;                 // 0x1C40(0x0028)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_2;                            // 0x1C68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x1CB0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_49;                      // 0x1CF8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x1D18(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_48;                      // 0x1D60(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror_1;                            // 0x1D80(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x1DC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_47;                      // 0x1E10(0x0020)()
	struct FAnimNode_Mirror                       AnimGraphNode_Mirror;                              // 0x1E30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x1E78(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_46;                      // 0x1EC0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_7;                      // 0x1EE0(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1FA8(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x2028(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x2048(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x2068(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x20E8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x2130(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x2158(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x21D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_45;                      // 0x2220(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_6;                      // 0x2240(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2308(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x2388(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_44;                      // 0x23D0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_5;                      // 0x23F0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x24B8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2500(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x2548(0x0128)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x2670(0x00F0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_90;                 // 0x2760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_89;                 // 0x2788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_88;                 // 0x27B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_87;                 // 0x27D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_86;                 // 0x2800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_85;                 // 0x2828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_84;                 // 0x2850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_83;                 // 0x2878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_82;                 // 0x28A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_81;                 // 0x28C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_80;                 // 0x28F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_79;                 // 0x2918(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_78;                 // 0x2940(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_77;                 // 0x2968(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_76;                 // 0x2990(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_75;                 // 0x29B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_74;                 // 0x29E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_73;                 // 0x2A08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_72;                 // 0x2A30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_71;                 // 0x2A58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_70;                 // 0x2A80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_69;                 // 0x2AA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_68;                 // 0x2AD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_67;                 // 0x2AF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_66;                 // 0x2B20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_65;                 // 0x2B48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_64;                 // 0x2B70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_63;                 // 0x2B98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_62;                 // 0x2BC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_61;                 // 0x2BE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_60;                 // 0x2C10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_59;                 // 0x2C38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_58;                 // 0x2C60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_57;                 // 0x2C88(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x2CB0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2CF8(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x2D40(0x0040)()
	struct FAnimNode_MakeDynamicAdditive          AnimGraphNode_MakeDynamicAdditive;                 // 0x2D80(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x2DB8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_5;                     // 0x2E00(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x2EC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_43;                      // 0x2F10(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_56;                 // 0x2F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x2F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x2F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x2FA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x2FD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x2FF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x3020(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x3048(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x3070(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_42;                      // 0x30B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x30D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_41;                      // 0x3120(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x3140(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_40;                      // 0x3188(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x31A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_39;                      // 0x31F0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x3210(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_38;                      // 0x3258(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x3278(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_37;                      // 0x32C0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x32E0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_36;                      // 0x3308(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x3328(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_35;                      // 0x33F0(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_4;                     // 0x3410(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x34D8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x3500(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_34;                      // 0x3548(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_3;                     // 0x3568(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x3630(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x3658(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_33;                      // 0x36A0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x36C0(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x36E8(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x37B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_32;                      // 0x37F8(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x3818(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x38E0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x3908(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_31;                      // 0x3950(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x3970(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_30;                      // 0x3998(0x0020)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x39B8(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x3A68(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_29;                      // 0x3AB0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x3AD0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_28;                      // 0x3B18(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x3B38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_27;                      // 0x3B80(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x3BA0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_26;                      // 0x3BE8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x3C08(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_25;                      // 0x3C50(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x3C70(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x3CE0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x3D00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x3D28(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x3D50(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x3D98(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x3DB8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x3E00(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x3E20(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x3EE8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x3F08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x3F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x3F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x3F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x3FA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x3FD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x3FF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x4020(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x4048(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x4070(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x4098(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x40E0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x4100(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x4128(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x4170(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x4190(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x41B8(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x4280(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x42A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x42D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x42F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x4320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x4348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x4370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x4398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x43C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x43E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x4410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x4438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x4460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x4488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x44B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x44D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x4500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x4528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x4550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x4578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x45A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x45C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x45F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x4618(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x4640(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x4668(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x4690(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x46B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x46E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x4708(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x4730(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x4758(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x4780(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x47A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x47D0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x47F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x4840(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x4860(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x48A8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x48C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x4910(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x4930(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x4978(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x4998(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x49C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x4A08(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x4A28(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x4A70(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x4A90(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x4AD8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x4AF8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x4B40(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x4B60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x4BA8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x4BC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x4C10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x4C30(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x4C78(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x4C98(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x4CE0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x4D00(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x4D48(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x4D68(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x4DB0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x4DD0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x4E18(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x4E38(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x4E80(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x4EA0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x4F68(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x4F88(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x4FB0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x4FD0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x5098(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x50B8(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x5180(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x52A8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x52C8(0x0020)()
	uint8                                         Pad_52E8[0x8];                                     // 0x52E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_FeetToGround                 AnimGraphNode_FeetToGround;                        // 0x52F0(0x0430)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x5720(0x0020)()
	bool                                          __CustomProperty_ShouldDoIKTrace_871A423B4830DB359DEA1C979C543A42; // 0x5740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5741[0x7];                                     // 0x5741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Anim_Idle_Main;                                    // 0x5748(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ForceIdleLoopBlend;                                // 0x5750(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5751[0x7];                                     // 0x5751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PlayRate_Idle_Main;                                // 0x5758(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlendSpace*                            Movement_Blendspace;                               // 0x5760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Medium_IdleMain;                          // 0x5768(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Heavy_IdleMain;                           // 0x5778(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Light_IdleMain;                           // 0x5788(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Stun;                                     // 0x5798(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Death;                                        // 0x57A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimSequenceBase*                      Anim_StunStart_IdleMain;                           // 0x57B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunLoop_IdleMain;                            // 0x57C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunRecovery_IdleMain;                        // 0x57C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ForceStunLoopBlend;                                // 0x57D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57D1[0x7];                                     // 0x57D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Anim_BattleStart_Intro;                            // 0x57D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         BattleStartAnimPlayRate;                           // 0x57E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57EC[0x4];                                     // 0x57EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Anims_IdleBreak_IdleMain;                          // 0x57F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        IdleBreak_BaseTimeBeforePlaying;                   // 0x5800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_Idle_Alternate1;                              // 0x5808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_Idle_Alternate2;                              // 0x5810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_Idle_Alternate3;                              // 0x5818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UAnimSequenceBase*>              Anim_IdleBreak_IdleAlternate1;                     // 0x5820(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_IdleBreak_IdleAlternate2;                     // 0x5830(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_IdleBreak_IdleAlternate3;                     // 0x5840(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Playrate_DeathAnim;                                // 0x5850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Playrate_StunLoop;                                 // 0x5854(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_SolverAlpha;                                    // 0x5858(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585C[0x4];                                     // 0x585C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IdleBreak_TimeBeforePlaying;                       // 0x5860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdleBreak_ArrayLength;                             // 0x5868(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IdleBreak_IndexInArray;                            // 0x586C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RandomIdleStartPosition;                           // 0x5870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RandomIdlePlayRate;                                // 0x5878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LookAtPos;                                         // 0x5880(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookAtAlpha;                                       // 0x5898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x58A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInAir_;                                          // 0x58A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58A2[0x6];                                     // 0x58A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x58A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EnemyIdleState                              CurrentIdleState;                                  // 0x58B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58B1[0x7];                                     // 0x58B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  PawnOwner;                                         // 0x58B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStunned;                                         // 0x58C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFreeAiming;                                      // 0x58C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDefending;                                       // 0x58C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              CurrentBattlePosture;                              // 0x58C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargeting;                                       // 0x58C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChoosingAction;                                  // 0x58C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C6[0x2];                                     // 0x58C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              CharaTurn_MainIdle_TurnStart;                      // 0x58C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              CharaTurn_IdleAlt1_TurnStart;                      // 0x58D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              CharaTurn_IdleAlt2_TurnStart;                      // 0x58E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              CharaTurn_IdleAlt3_TurnStart;                      // 0x58F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Idle;                           // 0x5908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlternate1_Idle;                     // 0x5910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlternate2_Idle;                     // 0x5918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlternate3_Idle;                     // 0x5920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Items_Intro;                    // 0x5928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Items_Intro;                    // 0x5930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Items_Intro;                    // 0x5938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Items_Intro;                    // 0x5940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Items_Idle;                     // 0x5948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Items_Idle;                     // 0x5950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Items_Idle;                     // 0x5958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Items_Idle;                     // 0x5960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Items_Back;                     // 0x5968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Items_Back;                     // 0x5970(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Items_Back;                     // 0x5978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Items_Back;                     // 0x5980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Items_Targeting;                // 0x5988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Items_Targeting;                // 0x5990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Items_Targeting;                // 0x5998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Items_Targeting;                // 0x59A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Skill_Intro;                    // 0x59A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         SkillIntro_PlayRate;                               // 0x59B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B4[0x4];                                     // 0x59B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Skill_Intro;                    // 0x59B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Skill_Intro;                    // 0x59C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Skill_Intro;                    // 0x59C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Skill_Idle;                     // 0x59D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Skill_Idle;                     // 0x59D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Skill_Idle;                     // 0x59E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Skill_Idle;                     // 0x59E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Skill_Back;                     // 0x59F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Skill_Back;                     // 0x59F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Skill_Back;                     // 0x5A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Skill_Back;                     // 0x5A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Skill_Targeting;                // 0x5A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Skill_Targeting;                // 0x5A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Skill_Targeting;                // 0x5A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Skill_Targeting;                // 0x5A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Ultimate_Intro;                 // 0x5A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Ultimate_Intro;                 // 0x5A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Ultimate_Intro;                 // 0x5A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Ultimate_Intro;                 // 0x5A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Ultimate_Idle;                  // 0x5A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Ultimate_Idle;                  // 0x5A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Ultimate_Idle;                  // 0x5A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Ultimate_Idle;                  // 0x5A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Ultimate_Back;                  // 0x5A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Ultimate_Back;                  // 0x5A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Ultimate_Back;                  // 0x5A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Ultimate_Back;                  // 0x5A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_Ultimate_Targeting;             // 0x5A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_Ultimate_Targeting;             // 0x5A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_Ultimate_Targeting;             // 0x5AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_Ultimate_Targeting;             // 0x5AA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_Anim_MainIdle_Defending;                 // 0x5AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_Anim_IdleAlt1_Defending;                 // 0x5AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_Anim_IdleAlt2_Defending;                 // 0x5AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_Anim_IdleAlt3_Defending;                 // 0x5AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         IK_GlobalTraceScaleMultiplier;                     // 0x5AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IK_MaximumDipHeightPelvis;                         // 0x5AD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IK_EnableFootRoll;                                 // 0x5AD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD9[0x7];                                     // 0x5AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Tired_Anim_Additive;                               // 0x5AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Tired_Anim_Playrate;                               // 0x5AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTiredAdditiveSystem;                            // 0x5AEC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AED[0x3];                                     // 0x5AED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Anim_StunLoop_IdleAlt1;                            // 0x5AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunLoop_IdleAlt2;                            // 0x5AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunLoop_IdleAlt3;                            // 0x5B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunStart_IdleAlt1;                           // 0x5B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunStart_IdleAlt2;                           // 0x5B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunStart_IdleAlt3;                           // 0x5B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunRecovery_IdleAlt1;                        // 0x5B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunRecovery_IdleAlt2;                        // 0x5B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Anim_StunRecovery_IdleAlt3;                        // 0x5B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_MainIdle_FreeAim_Idle;                   // 0x5B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt1_FreeAim_Idle;                   // 0x5B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt2_FreeAim_Idle;                   // 0x5B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      CharaTurn_IdleAlt3_FreeAim_Idle;                   // 0x5B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       BP_J_RPG_Character_Battle_Base;                    // 0x5B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EBattleTurnState                              LastValidBattlePosture;                            // 0x5B60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B61[0x7];                                     // 0x5B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EBattleTurnState, class UAnimSequenceBase*> CurrentBattlePostureAnimations;                 // 0x5B68(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasBattleStartIntroAnim;                           // 0x5BB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMainIdleTurnStartAnim;                          // 0x5BB9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleAlt1TurnStartAnim;                          // 0x5BBA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleAlt2TurnStartAnim;                          // 0x5BBB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleAlt3TurnStartAnim;                          // 0x5BBC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleStunRecovery_MainIdle;                      // 0x5BBD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleStunRecovery_IdleAlt1;                      // 0x5BBE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleStunRecovery_IdleAlt2;                      // 0x5BBF(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIdleStunRecovery_IdleAlt3;                      // 0x5BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGettingHit;                                      // 0x5BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_HitReact_Anim_Type                          E_Hit_React_Anim_Type;                             // 0x5BC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BC3[0x5];                                     // 0x5BC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAnimSequenceBase*>              Anim_Hit_Medium_IdleAlt1;                          // 0x5BC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Medium_IdleAlt2;                          // 0x5BD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Medium_IdleAlt3;                          // 0x5BE8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Heavy_IdleAlt1;                           // 0x5BF8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Heavy_IdleAlt2;                           // 0x5C08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Heavy_IdleAlt3;                           // 0x5C18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Light_IdleAlt1;                           // 0x5C28(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Light_IdleAlt2;                           // 0x5C38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Light_IdleAlt3;                           // 0x5C48(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Defending_IdleMain_Chara;                 // 0x5C58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Defending_IdleAlt1_Chara;                 // 0x5C68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Defending_IdleAlt2_Chara;                 // 0x5C78(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UAnimSequenceBase*>              Anim_Hit_Defending_IdleAlt3_Chara;                 // 0x5C88(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        PlayRate_Idle_Alt1;                                // 0x5C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRate_Idle_Alt2;                                // 0x5CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlayRate_Idle_Alt3;                                // 0x5CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRandomizeIdlePlayRate;                       // 0x5CB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayHit2;                                    // 0x5CB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPlayHit1;                                    // 0x5CB2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Randomly_Scale_Bones;                       // 0x5CB3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CB4[0x4];                                     // 0x5CB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ScaleSpine01;                                      // 0x5CB8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleSpine03;                                      // 0x5CD0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleRoot;                                         // 0x5CE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleArmL;                                         // 0x5D00(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleArmR;                                         // 0x5D18(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleLowerArmL;                                    // 0x5D30(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaleLowerArmR;                                    // 0x5D48(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleSpine01_Float;                                // 0x5D60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleSpine03_Float;                                // 0x5D68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleRoot_Float;                                   // 0x5D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleArmR_Float;                                   // 0x5D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScaleArmL_Float;                                   // 0x5D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinBoneVariation;                                  // 0x5D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxBoneVariation;                                  // 0x5D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHitAnimations;                                  // 0x5D98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasStunStartIdleMain;                              // 0x5D99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasStunStartIdleAlt1;                              // 0x5D9A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasStunStartIdleAlt2;                              // 0x5D9B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasStunStartIdleAlt3;                              // 0x5D9C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9D[0x3];                                     // 0x5D9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TiredAnimation_Additive_Alpha;                     // 0x5DA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeIdlePlayRateWithHP;                          // 0x5DA4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA5[0x3];                                     // 0x5DA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        IdlePlayRateWithHP;                                // 0x5DA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AccelerationFactorIdlePlayRateWithHP;              // 0x5DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Fleeing;                                        // 0x5DB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DB9[0x7];                                     // 0x5DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      IdleFleeing;                                       // 0x5DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_jRPG_Enemy_World_Base_Seamless_C*   As_BP_J_RPG_Enemy_World_Base_Seamless;             // 0x5DC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             LookAtLocation;                                    // 0x5DD0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableLookAtSolver;                                // 0x5E30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E31[0x3];                                     // 0x5E31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LookAlpha;                                         // 0x5E34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtInterpolationSpeed;                          // 0x5E38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInPlayMode;                                      // 0x5E3C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPlayedBattleStartIntro;                         // 0x5E3D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E3E[0x2];                                     // 0x5E3E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CurrentHitAnim;                                    // 0x5E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableIK;                                          // 0x5E48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUsingSmartObject;                                // 0x5E49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AiStates                                    CurrentAiState;                                    // 0x5E4A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4B[0x5];                                     // 0x5E4B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          AnimDetectPlayer;                                  // 0x5E50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTargetedCharacter;                               // 0x5E58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E59[0x7];                                     // 0x5E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      CharaTurn_Targeting_Attack;                        // 0x5E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          MirrorIdle;                                        // 0x5E68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnemyWorld;                                      // 0x5E69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E6A[0x6];                                     // 0x5E6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      IdleWorldOverride;                                 // 0x5E70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          HasIdleWorldOVerride;                              // 0x5E78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Has_Detected_Player_Once;                          // 0x5E79(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E7A[0x6];                                     // 0x5E7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WorldCustomIdlePlayRate;                           // 0x5E80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_MainIdle_Start;                           // 0x5E88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle1_Start;                              // 0x5E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle2_Start;                              // 0x5E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle3_Start;                              // 0x5EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_MainIdle_Idle;                            // 0x5EA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle1_Idle;                               // 0x5EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle2_Idle;                               // 0x5EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle3_Idle;                               // 0x5EC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_MainIdle_Stop;                            // 0x5EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle1_Stop;                               // 0x5ED0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle2_Stop;                               // 0x5ED8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Targeted_Idle3_Stop;                               // 0x5EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          HasTargetedIdle_MainIdle;                          // 0x5EE8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTargetedIdle_Idle1;                             // 0x5EE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTargetedIdle_Idle2;                             // 0x5EEA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTargetedIdle_Idle3;                             // 0x5EEB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_BattleLookDirection                         AllyTargeted;                                      // 0x5EEC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EED[0x3];                                     // 0x5EED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      AllyTargeted_Right_Start;                          // 0x5EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AllyTargeted_Right_Idle;                           // 0x5EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AllyTargeted_Right_Stop;                           // 0x5F00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AllyTargeted_Left_Start;                           // 0x5F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AllyTargeted_Left_Idle;                            // 0x5F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimSequenceBase*                      AllyTargeted_Left_Stop;                            // 0x5F18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsBeingCountered;                                  // 0x5F20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasCustomBeingCounteredIdle;                       // 0x5F21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCounteredIdle;                                  // 0x5F22(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F23[0x5];                                     // 0x5F23(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CustomIsBeingCounteredIdle;                        // 0x5F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_ActionEffect();
	void AnimNotify_FinishAction();
	void AnimNotify_OnExitStunRecovery();
	void AnimNotify_RefreshTiredAdditiveAlphaFromStateMachine();
	void ApplyBoneScalesOverrides();
	void BlueprintBeginPlay();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ChangeIdlePlayRateDependingOnHP();
	void ComputeAllyLookDirection(class ABP_jRPG_Character_Battle_Base_C* OtherAlly, E_BattleLookDirection* Direction);
	void Debug_Print_Text(double Value, const class FText& Text, bool Bool, double* Same_Value, bool* SameBool);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_FeetToGround_F06EDA504C897F349EDF40AD0562C306();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_01A08C8742CC30E722BBE89B21773A3B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_0958C7354CE1C6E6E4967B8C54358238();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_1194F6B04E52D22A1BD019A19032CB41();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_198D1AFA480E9BE037AC98BB33F1DD36();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_19CF18ED4638F20252CBD182B3BC656A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_23F540B544D51B269B5AB3BF8D27E04F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_2EDFD44D4BFEF96E0D86D998F5B60E1F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_2F860ABF4D826E4A04E5DC8355FDCEDC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_36567DB047110BCB45845DB8D9090CC4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_36AF79C9436EAF0D96C2748F7392E545();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_437036D3402284D1FA6FA08B1065FEB5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_45992FAC4D51EF24F1FD0B9A1ABBAE13();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_56314F1F4180A48010315F9A43652CF9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_5E79CE384AAE0EA66DE570B89083B34E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_7B338D924845AC0356D2A7A423E279F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_875A83554554DEF1A2C45EA20C4AAF27();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_87ED8F0F40ADFF3E372D3CB9B9FF3DBD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_8CA939AE41BFC84BFDA1578CB19B6D1C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_96932A49474D0118E58C66846FC94845();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_B6BBEA12475FCD82129A81AB23547EE9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_B8BCF00E4EC77FA7D059A88D5E4E2133();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_BD295EEF49F4BCEB0E02E3BF3C474C8E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_C046DAB144B53B0C5E1A94AAADA8654D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_D2D2F32E414CAE3987303D86950BB601();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_DA6C4E3F4765CC30B0173EBDBFC31BF5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_EC72633545F83318B95E2E96BC4C63D2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_SequencePlayer_F3C01EEC49A524006A1F4F988E507B33();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_02864D9D4EACC61FE4006EB5226D4B5F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_03783C6B41E21356978304B56243AA68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_10610E404635EDCA4014B3BE9D65BC42();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_14E5DD9245F0450821A0B5A04B0971FC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_198D9E3545AE430884D652A3EFABF6CA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_1BB19DC74F54C6858B0C1599058B04EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_210DC87F4B6622003E5386A0274E062F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_2319FBDA4F5F08570B855C8BF7571425();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_2374CB974CA51F42301A08AE38EF68D0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_28057B90467BBDC7EB3758BA80481D73();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_2EF0570B4D345B7F7BAB0AB3145FE893();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_3214184D4307682192807C8CA51219A3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_332285D946E9D7AA3282E2B33694B996();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_35E8472343FE04FBA2A1DC91353CF34F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_378570114163FFED7D911B830BC2AEC4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_3962BC86466E7D7523A5F8A752DF7374();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_3D50180445B2134A9F47538F3CC96CD1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_44F2E7F34305922602F0ECA51D5CC1D6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_4E1CDFFD4A698E581F0A72AC93AC2AE6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_4FA6E6D2490CE0C3F0D5F1B8DCBA69B8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_5312D8D44506FD9B96051EAC5E63E5AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_53BACEC745A099F3FB978F9C7D7B3DB4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_55EFD441403600CF8334AEB0062655EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_6CAA28244EB9E6EF047377BEF09DB87D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_6D140F25413605978EF717B378C70958();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_70F8E4FE484DCA30BE1A31B1C10AA85D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_71A2A8AA49B799483954CA93E99CC9CD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_7378A5764588FCD0D1A590B7E5703910();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_79D582474252A1BDD4CD27A0846BFBB8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_7ADFB785450B4463FDD9718DA02F6138();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_7B5F3BBB4EEBBCB2BF15E4AB9AA5552B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_7EA85D33484AC71A07854A91ED484E35();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_8055C6F345444E85CB5090B83CBB3DE0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_814EB3914B8187FA54D8E4A037E9CA23();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_833D0A124497840D92B15F9EE0D886B9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_862A0CF54A64A4923C18299D2C8549EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_879B031A40FE8D771D9ECBAC13597F72();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_8A4590DA4C6E3C31B66DDEB530F8D45C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_8B75D41B42AEA3ADDA1C888CAE572C4E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_8F62EA984E07F6270446EA80F5453FD2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_92C24B0542A21335251347B6D4FA0715();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_93ABA24C4276C88193BEF9AC15AF80B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_992B36054E1C4BCF0AD3A28A437B00E5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_9EA315B64D73ED5DCA824581734C1D7A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_A19F5F754834625C182617B374D8A223();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_A2D5D08B438B44E1E9C6EEBE5EEB88EB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_A477440B43A88B0468AF6590924F39E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_A5EED9054CA91616BDC463BA57CD6A4F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_A64FAC424FBCA9059F755185DCADFF86();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_AAF78CAF45C5F2CB6DA9988AFF7BF9F6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_B45B625A418EE751699535A84950936D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_B72DC2264AC4D0548941F68044D58DCD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_B8A917C649CE37E518879BB8733893A2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_BA189A2141B06E51C0B6FEB43F700118();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_C2B818D74D7A0915F7CFCF9DDFF8FE6A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_C7A2B90441A22D31561D7AB1565AFD69();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_CA21CF2C4689303D02648C8097819D72();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_CA5CC3344579F75E54754487B9ACFFF6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_CE6962354E60C624C12850986973D714();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_E14DE63A4492B07E4916F8806CD6E6C1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_E6634ECE4A08114FE6F4C2B391ACD3C7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_E7A7F2C149146E2D623CC1A575B379D4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_E8042410467A851256FF338068D1CF29();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_F377E9094EE22B9D88118498C6002888();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_FA54ECD4424536930EEE0C97DF66071C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_FB018E8C4489EE817511948C4ED52AFC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Battle_Global_AnimGraphNode_TransitionResult_FDC3689E4BA0DE143B1D42BF80F79ADC();
	void ExecuteUbergraph_ABP_Battle_Global(int32 EntryPoint);
	void GetBattleStartAnim(TArray<class UAnimSequenceBase*>* Anim_BattleStart_Intro_0);
	void GetBattleTurnIntroStartAnimFromState(E_EnemyIdleState IdleStateType, TArray<class UAnimSequenceBase*>* AnimList);
	void GetBattleTurnIntroStartAnimFromState_NoExec(E_EnemyIdleState IdleStateType, TArray<class UAnimSequenceBase*>* AnimList);
	void GetBreakAnimFromState(E_EnemyIdleState IdleStateType, TArray<class UAnimSequenceBase*>* AnimList);
	void GetHitAnimFromState(E_EnemyIdleState IdleStateType, E_HitReact_Anim_Type HitReactType, TArray<class UAnimSequenceBase*>* Anim_Hit_Normal_IdleMain);
	void GetHitEvent();
	void RandomizeBoneScales();
	void RefreshTiredAdditiveAlpha();
	void SelectBattleStartAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SelectBattleTurnIntroStartAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SelectDeathAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SelectHitAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void SelectIdleBreakAnim(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node);
	void UpdateBattleEnemy();
	void UpdateCounteredIdleStatus(bool UseCounteredIdle_0);
	void UpdateIdleBreakTime();
	void UpdateIdleRandomStartPosition();
	void UpdateWorldEnemy(class ABP_jRPG_Enemy_World_Base_Seamless_C* SelfAsEnemyWorld);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Battle_Global_C">();
	}
	static class UABP_Battle_Global_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Battle_Global_C>();
	}
};
static_assert(alignof(UABP_Battle_Global_C) == 0x000010, "Wrong alignment on UABP_Battle_Global_C");
static_assert(sizeof(UABP_Battle_Global_C) == 0x005F30, "Wrong size on UABP_Battle_Global_C");
static_assert(offsetof(UABP_Battle_Global_C, UberGraphFrame) == 0x000370, "Member 'UABP_Battle_Global_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_Battle_Global_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimBlueprintExtension_PropertyAccess) == 0x0003F0, "Member 'UABP_Battle_Global_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimBlueprintExtension_NodeRelevancy) == 0x0003F8, "Member 'UABP_Battle_Global_C::AnimBlueprintExtension_NodeRelevancy' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimBlueprintExtension_Base) == 0x0004A0, "Member 'UABP_Battle_Global_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LookAt) == 0x0004B0, "Member 'UABP_Battle_Global_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LocalToComponentSpace_3) == 0x000700, "Member 'UABP_Battle_Global_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x000720, "Member 'UABP_Battle_Global_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Slot_3) == 0x000740, "Member 'UABP_Battle_Global_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ModifyBone_6) == 0x000788, "Member 'UABP_Battle_Global_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0008B0, "Member 'UABP_Battle_Global_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x0008D0, "Member 'UABP_Battle_Global_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ModifyBone_5) == 0x0008F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ModifyBone_4) == 0x000A18, "Member 'UABP_Battle_Global_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ModifyBone_3) == 0x000B40, "Member 'UABP_Battle_Global_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ModifyBone_2) == 0x000C68, "Member 'UABP_Battle_Global_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SaveCachedPose_5) == 0x000D90, "Member 'UABP_Battle_Global_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_110) == 0x000E10, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_110' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_109) == 0x000E38, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_109' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_108) == 0x000E60, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_108' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_107) == 0x000E88, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_107' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_106) == 0x000EB0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_106' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_105) == 0x000ED8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_105' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_104) == 0x000F00, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_104' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_103) == 0x000F28, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_103' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_102) == 0x000F50, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_102' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_101) == 0x000F78, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_101' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_48) == 0x000FA0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_48' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_53) == 0x000FE8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_53' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_MakeDynamicAdditive_4) == 0x001008, "Member 'UABP_Battle_Global_C::AnimGraphNode_MakeDynamicAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_47) == 0x001040, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_47' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_15) == 0x001088, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequenceEvaluator_4) == 0x0010B0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequenceEvaluator_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0010F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequenceEvaluator_3) == 0x0011E0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequenceEvaluator_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_MakeDynamicAdditive_3) == 0x001220, "Member 'UABP_Battle_Global_C::AnimGraphNode_MakeDynamicAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_46) == 0x001258, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_46' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive_7) == 0x0012A0, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive_7' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_14) == 0x001368, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyMeshSpaceAdditive_1) == 0x001390, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyMeshSpaceAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_52) == 0x001460, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_52' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequenceEvaluator_2) == 0x001480, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequenceEvaluator_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_MakeDynamicAdditive_2) == 0x0014C0, "Member 'UABP_Battle_Global_C::AnimGraphNode_MakeDynamicAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_45) == 0x0014F8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_13) == 0x001540, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyMeshSpaceAdditive) == 0x001568, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyMeshSpaceAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LayeredBoneBlend_1) == 0x001638, "Member 'UABP_Battle_Global_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequenceEvaluator_1) == 0x001728, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_MakeDynamicAdditive_1) == 0x001768, "Member 'UABP_Battle_Global_C::AnimGraphNode_MakeDynamicAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_44) == 0x0017A0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive_6) == 0x0017E8, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive_6' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_12) == 0x0018B0, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_51) == 0x0018D8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_51' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_11) == 0x0018F8, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_50) == 0x001920, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_50' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_8) == 0x001940, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_8' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SaveCachedPose_4) == 0x001A08, "Member 'UABP_Battle_Global_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_10) == 0x001A88, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_9) == 0x001AB0, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_100) == 0x001AD8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_100' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_99) == 0x001B00, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_99' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_98) == 0x001B28, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_98' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_97) == 0x001B50, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_97' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_96) == 0x001B78, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_96' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_95) == 0x001BA0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_95' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_94) == 0x001BC8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_94' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_93) == 0x001BF0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_93' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_92) == 0x001C18, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_92' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_91) == 0x001C40, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_91' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Mirror_2) == 0x001C68, "Member 'UABP_Battle_Global_C::AnimGraphNode_Mirror_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_43) == 0x001CB0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_49) == 0x001CF8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_49' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_42) == 0x001D18, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_48) == 0x001D60, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_48' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Mirror_1) == 0x001D80, "Member 'UABP_Battle_Global_C::AnimGraphNode_Mirror_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_41) == 0x001DC8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_47) == 0x001E10, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_47' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Mirror) == 0x001E30, "Member 'UABP_Battle_Global_C::AnimGraphNode_Mirror' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_40) == 0x001E78, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_46) == 0x001EC0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_46' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_7) == 0x001EE0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_7' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SaveCachedPose_3) == 0x001FA8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LocalToComponentSpace_1) == 0x002028, "Member 'UABP_Battle_Global_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x002048, "Member 'UABP_Battle_Global_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SaveCachedPose_2) == 0x002068, "Member 'UABP_Battle_Global_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Slot_2) == 0x0020E8, "Member 'UABP_Battle_Global_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_8) == 0x002130, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SaveCachedPose_1) == 0x002158, "Member 'UABP_Battle_Global_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_39) == 0x0021D8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_45) == 0x002220, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_45' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_6) == 0x002240, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_6' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SaveCachedPose) == 0x002308, "Member 'UABP_Battle_Global_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_38) == 0x002388, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_44) == 0x0023D0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_44' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_5) == 0x0023F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Slot_1) == 0x0024B8, "Member 'UABP_Battle_Global_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Slot) == 0x002500, "Member 'UABP_Battle_Global_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ModifyBone_1) == 0x002548, "Member 'UABP_Battle_Global_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LayeredBoneBlend) == 0x002670, "Member 'UABP_Battle_Global_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_90) == 0x002760, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_90' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_89) == 0x002788, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_89' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_88) == 0x0027B0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_88' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_87) == 0x0027D8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_87' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_86) == 0x002800, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_86' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_85) == 0x002828, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_85' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_84) == 0x002850, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_84' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_83) == 0x002878, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_83' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_82) == 0x0028A0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_82' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_81) == 0x0028C8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_81' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_80) == 0x0028F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_80' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_79) == 0x002918, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_79' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_78) == 0x002940, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_78' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_77) == 0x002968, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_77' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_76) == 0x002990, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_76' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_75) == 0x0029B8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_75' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_74) == 0x0029E0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_74' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_73) == 0x002A08, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_73' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_72) == 0x002A30, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_72' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_71) == 0x002A58, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_71' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_70) == 0x002A80, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_70' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_69) == 0x002AA8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_69' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_68) == 0x002AD0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_68' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_67) == 0x002AF8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_67' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_66) == 0x002B20, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_66' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_65) == 0x002B48, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_65' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_64) == 0x002B70, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_64' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_63) == 0x002B98, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_63' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_62) == 0x002BC0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_62' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_61) == 0x002BE8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_61' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_60) == 0x002C10, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_60' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_59) == 0x002C38, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_59' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_58) == 0x002C60, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_58' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_57) == 0x002C88, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_57' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_37) == 0x002CB0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_BlendListByBool) == 0x002CF8, "Member 'UABP_Battle_Global_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequenceEvaluator) == 0x002D40, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_MakeDynamicAdditive) == 0x002D80, "Member 'UABP_Battle_Global_C::AnimGraphNode_MakeDynamicAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_36) == 0x002DB8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive_5) == 0x002E00, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_35) == 0x002EC8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_43) == 0x002F10, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_43' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_56) == 0x002F30, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_56' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_55) == 0x002F58, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_54) == 0x002F80, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_53) == 0x002FA8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_52) == 0x002FD0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_51) == 0x002FF8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_50) == 0x003020, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_49) == 0x003048, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_34) == 0x003070, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_42) == 0x0030B8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_42' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_33) == 0x0030D8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_41) == 0x003120, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_41' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_32) == 0x003140, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_40) == 0x003188, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_40' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_31) == 0x0031A8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_39) == 0x0031F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_39' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_30) == 0x003210, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_38) == 0x003258, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_38' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_29) == 0x003278, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_37) == 0x0032C0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_7) == 0x0032E0, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_36) == 0x003308, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_4) == 0x003328, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_35) == 0x0033F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive_4) == 0x003410, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_6) == 0x0034D8, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_28) == 0x003500, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_34) == 0x003548, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive_3) == 0x003568, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_5) == 0x003630, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_27) == 0x003658, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_33) == 0x0036A0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_4) == 0x0036C0, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive_2) == 0x0036E8, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_26) == 0x0037B0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_32) == 0x0037F8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive_1) == 0x003818, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_3) == 0x0038E0, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_25) == 0x003908, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_31) == 0x003950, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_2) == 0x003970, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_30) == 0x003998, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_RotateRootBone) == 0x0039B8, "Member 'UABP_Battle_Global_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_24) == 0x003A68, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_29) == 0x003AB0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_23) == 0x003AD0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_28) == 0x003B18, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_22) == 0x003B38, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_27) == 0x003B80, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_21) == 0x003BA0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_26) == 0x003BE8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_20) == 0x003C08, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_25) == 0x003C50, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_BlendSpacePlayer) == 0x003C70, "Member 'UABP_Battle_Global_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_24) == 0x003CE0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_48) == 0x003D00, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_47) == 0x003D28, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_19) == 0x003D50, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_23) == 0x003D98, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_18) == 0x003DB8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_22) == 0x003E00, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_3) == 0x003E20, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_21) == 0x003EE8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_46) == 0x003F08, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_45) == 0x003F30, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_44) == 0x003F58, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_43) == 0x003F80, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_42) == 0x003FA8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_41) == 0x003FD0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_40) == 0x003FF8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_39) == 0x004020, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_38) == 0x004048, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_37) == 0x004070, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_17) == 0x004098, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_20) == 0x0040E0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_36) == 0x004100, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_16) == 0x004128, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_19) == 0x004170, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose_1) == 0x004190, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ApplyAdditive) == 0x0041B8, "Member 'UABP_Battle_Global_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_35) == 0x004280, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_34) == 0x0042A8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_33) == 0x0042D0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_32) == 0x0042F8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_31) == 0x004320, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_30) == 0x004348, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_29) == 0x004370, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_28) == 0x004398, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_27) == 0x0043C0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_26) == 0x0043E8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_25) == 0x004410, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_24) == 0x004438, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_23) == 0x004460, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_22) == 0x004488, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_21) == 0x0044B0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_20) == 0x0044D8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_19) == 0x004500, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_18) == 0x004528, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_17) == 0x004550, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_16) == 0x004578, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_15) == 0x0045A0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_14) == 0x0045C8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_13) == 0x0045F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_12) == 0x004618, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_11) == 0x004640, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_10) == 0x004668, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_9) == 0x004690, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_8) == 0x0046B8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_7) == 0x0046E0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_6) == 0x004708, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_5) == 0x004730, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_4) == 0x004758, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_3) == 0x004780, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_2) == 0x0047A8, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult_1) == 0x0047D0, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_15) == 0x0047F8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_18) == 0x004840, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_14) == 0x004860, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_17) == 0x0048A8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_13) == 0x0048C8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_16) == 0x004910, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_12) == 0x004930, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_15) == 0x004978, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_TransitionResult) == 0x004998, "Member 'UABP_Battle_Global_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_11) == 0x0049C0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_14) == 0x004A08, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_10) == 0x004A28, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_13) == 0x004A70, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_9) == 0x004A90, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_12) == 0x004AD8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_8) == 0x004AF8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_11) == 0x004B40, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_7) == 0x004B60, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_10) == 0x004BA8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_6) == 0x004BC8, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_9) == 0x004C10, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_5) == 0x004C30, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_8) == 0x004C78, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_4) == 0x004C98, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_7) == 0x004CE0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_3) == 0x004D00, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_6) == 0x004D48, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_2) == 0x004D68, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_5) == 0x004DB0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer_1) == 0x004DD0, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_4) == 0x004E18, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_SequencePlayer) == 0x004E38, "Member 'UABP_Battle_Global_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_3) == 0x004E80, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_2) == 0x004EA0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_2) == 0x004F68, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_UseCachedPose) == 0x004F88, "Member 'UABP_Battle_Global_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult_1) == 0x004FB0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine_1) == 0x004FD0, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateResult) == 0x005098, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_StateMachine) == 0x0050B8, "Member 'UABP_Battle_Global_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ModifyBone) == 0x005180, "Member 'UABP_Battle_Global_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_ComponentToLocalSpace) == 0x0052A8, "Member 'UABP_Battle_Global_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_Root) == 0x0052C8, "Member 'UABP_Battle_Global_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_FeetToGround) == 0x0052F0, "Member 'UABP_Battle_Global_C::AnimGraphNode_FeetToGround' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimGraphNode_LocalToComponentSpace) == 0x005720, "Member 'UABP_Battle_Global_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, __CustomProperty_ShouldDoIKTrace_871A423B4830DB359DEA1C979C543A42) == 0x005740, "Member 'UABP_Battle_Global_C::__CustomProperty_ShouldDoIKTrace_871A423B4830DB359DEA1C979C543A42' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Idle_Main) == 0x005748, "Member 'UABP_Battle_Global_C::Anim_Idle_Main' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ForceIdleLoopBlend) == 0x005750, "Member 'UABP_Battle_Global_C::ForceIdleLoopBlend' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, PlayRate_Idle_Main) == 0x005758, "Member 'UABP_Battle_Global_C::PlayRate_Idle_Main' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Movement_Blendspace) == 0x005760, "Member 'UABP_Battle_Global_C::Movement_Blendspace' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Medium_IdleMain) == 0x005768, "Member 'UABP_Battle_Global_C::Anim_Hit_Medium_IdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Heavy_IdleMain) == 0x005778, "Member 'UABP_Battle_Global_C::Anim_Hit_Heavy_IdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Light_IdleMain) == 0x005788, "Member 'UABP_Battle_Global_C::Anim_Hit_Light_IdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Stun) == 0x005798, "Member 'UABP_Battle_Global_C::Anim_Hit_Stun' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Death) == 0x0057A8, "Member 'UABP_Battle_Global_C::Anim_Death' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunStart_IdleMain) == 0x0057B8, "Member 'UABP_Battle_Global_C::Anim_StunStart_IdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunLoop_IdleMain) == 0x0057C0, "Member 'UABP_Battle_Global_C::Anim_StunLoop_IdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunRecovery_IdleMain) == 0x0057C8, "Member 'UABP_Battle_Global_C::Anim_StunRecovery_IdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ForceStunLoopBlend) == 0x0057D0, "Member 'UABP_Battle_Global_C::ForceStunLoopBlend' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_BattleStart_Intro) == 0x0057D8, "Member 'UABP_Battle_Global_C::Anim_BattleStart_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, BattleStartAnimPlayRate) == 0x0057E8, "Member 'UABP_Battle_Global_C::BattleStartAnimPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anims_IdleBreak_IdleMain) == 0x0057F0, "Member 'UABP_Battle_Global_C::Anims_IdleBreak_IdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IdleBreak_BaseTimeBeforePlaying) == 0x005800, "Member 'UABP_Battle_Global_C::IdleBreak_BaseTimeBeforePlaying' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Idle_Alternate1) == 0x005808, "Member 'UABP_Battle_Global_C::Anim_Idle_Alternate1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Idle_Alternate2) == 0x005810, "Member 'UABP_Battle_Global_C::Anim_Idle_Alternate2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Idle_Alternate3) == 0x005818, "Member 'UABP_Battle_Global_C::Anim_Idle_Alternate3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_IdleBreak_IdleAlternate1) == 0x005820, "Member 'UABP_Battle_Global_C::Anim_IdleBreak_IdleAlternate1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_IdleBreak_IdleAlternate2) == 0x005830, "Member 'UABP_Battle_Global_C::Anim_IdleBreak_IdleAlternate2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_IdleBreak_IdleAlternate3) == 0x005840, "Member 'UABP_Battle_Global_C::Anim_IdleBreak_IdleAlternate3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Playrate_DeathAnim) == 0x005850, "Member 'UABP_Battle_Global_C::Playrate_DeathAnim' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Playrate_StunLoop) == 0x005854, "Member 'UABP_Battle_Global_C::Playrate_StunLoop' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IK_SolverAlpha) == 0x005858, "Member 'UABP_Battle_Global_C::IK_SolverAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IdleBreak_TimeBeforePlaying) == 0x005860, "Member 'UABP_Battle_Global_C::IdleBreak_TimeBeforePlaying' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IdleBreak_ArrayLength) == 0x005868, "Member 'UABP_Battle_Global_C::IdleBreak_ArrayLength' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IdleBreak_IndexInArray) == 0x00586C, "Member 'UABP_Battle_Global_C::IdleBreak_IndexInArray' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, RandomIdleStartPosition) == 0x005870, "Member 'UABP_Battle_Global_C::RandomIdleStartPosition' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, RandomIdlePlayRate) == 0x005878, "Member 'UABP_Battle_Global_C::RandomIdlePlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, LookAtPos) == 0x005880, "Member 'UABP_Battle_Global_C::LookAtPos' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, LookAtAlpha) == 0x005898, "Member 'UABP_Battle_Global_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsDead) == 0x0058A0, "Member 'UABP_Battle_Global_C::IsDead' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsInAir_) == 0x0058A1, "Member 'UABP_Battle_Global_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Speed) == 0x0058A8, "Member 'UABP_Battle_Global_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CurrentIdleState) == 0x0058B0, "Member 'UABP_Battle_Global_C::CurrentIdleState' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, PawnOwner) == 0x0058B8, "Member 'UABP_Battle_Global_C::PawnOwner' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsStunned) == 0x0058C0, "Member 'UABP_Battle_Global_C::IsStunned' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsFreeAiming) == 0x0058C1, "Member 'UABP_Battle_Global_C::IsFreeAiming' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsDefending) == 0x0058C2, "Member 'UABP_Battle_Global_C::IsDefending' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CurrentBattlePosture) == 0x0058C3, "Member 'UABP_Battle_Global_C::CurrentBattlePosture' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsTargeting) == 0x0058C4, "Member 'UABP_Battle_Global_C::IsTargeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsChoosingAction) == 0x0058C5, "Member 'UABP_Battle_Global_C::IsChoosingAction' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_TurnStart) == 0x0058C8, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_TurnStart' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_TurnStart) == 0x0058D8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_TurnStart' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_TurnStart) == 0x0058E8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_TurnStart' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_TurnStart) == 0x0058F8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_TurnStart' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Idle) == 0x005908, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlternate1_Idle) == 0x005910, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlternate1_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlternate2_Idle) == 0x005918, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlternate2_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlternate3_Idle) == 0x005920, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlternate3_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Items_Intro) == 0x005928, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Items_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Items_Intro) == 0x005930, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Items_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Items_Intro) == 0x005938, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Items_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Items_Intro) == 0x005940, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Items_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Items_Idle) == 0x005948, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Items_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Items_Idle) == 0x005950, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Items_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Items_Idle) == 0x005958, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Items_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Items_Idle) == 0x005960, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Items_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Items_Back) == 0x005968, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Items_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Items_Back) == 0x005970, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Items_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Items_Back) == 0x005978, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Items_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Items_Back) == 0x005980, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Items_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Items_Targeting) == 0x005988, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Items_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Items_Targeting) == 0x005990, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Items_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Items_Targeting) == 0x005998, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Items_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Items_Targeting) == 0x0059A0, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Items_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Skill_Intro) == 0x0059A8, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Skill_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, SkillIntro_PlayRate) == 0x0059B0, "Member 'UABP_Battle_Global_C::SkillIntro_PlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Skill_Intro) == 0x0059B8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Skill_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Skill_Intro) == 0x0059C0, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Skill_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Skill_Intro) == 0x0059C8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Skill_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Skill_Idle) == 0x0059D0, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Skill_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Skill_Idle) == 0x0059D8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Skill_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Skill_Idle) == 0x0059E0, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Skill_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Skill_Idle) == 0x0059E8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Skill_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Skill_Back) == 0x0059F0, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Skill_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Skill_Back) == 0x0059F8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Skill_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Skill_Back) == 0x005A00, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Skill_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Skill_Back) == 0x005A08, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Skill_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Skill_Targeting) == 0x005A10, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Skill_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Skill_Targeting) == 0x005A18, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Skill_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Skill_Targeting) == 0x005A20, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Skill_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Skill_Targeting) == 0x005A28, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Skill_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Ultimate_Intro) == 0x005A30, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Ultimate_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Ultimate_Intro) == 0x005A38, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Ultimate_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Ultimate_Intro) == 0x005A40, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Ultimate_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Ultimate_Intro) == 0x005A48, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Ultimate_Intro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Ultimate_Idle) == 0x005A50, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Ultimate_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Ultimate_Idle) == 0x005A58, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Ultimate_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Ultimate_Idle) == 0x005A60, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Ultimate_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Ultimate_Idle) == 0x005A68, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Ultimate_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Ultimate_Back) == 0x005A70, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Ultimate_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Ultimate_Back) == 0x005A78, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Ultimate_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Ultimate_Back) == 0x005A80, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Ultimate_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Ultimate_Back) == 0x005A88, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Ultimate_Back' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_Ultimate_Targeting) == 0x005A90, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_Ultimate_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_Ultimate_Targeting) == 0x005A98, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_Ultimate_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_Ultimate_Targeting) == 0x005AA0, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_Ultimate_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_Ultimate_Targeting) == 0x005AA8, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_Ultimate_Targeting' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_Anim_MainIdle_Defending) == 0x005AB0, "Member 'UABP_Battle_Global_C::CharaTurn_Anim_MainIdle_Defending' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_Anim_IdleAlt1_Defending) == 0x005AB8, "Member 'UABP_Battle_Global_C::CharaTurn_Anim_IdleAlt1_Defending' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_Anim_IdleAlt2_Defending) == 0x005AC0, "Member 'UABP_Battle_Global_C::CharaTurn_Anim_IdleAlt2_Defending' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_Anim_IdleAlt3_Defending) == 0x005AC8, "Member 'UABP_Battle_Global_C::CharaTurn_Anim_IdleAlt3_Defending' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IK_GlobalTraceScaleMultiplier) == 0x005AD0, "Member 'UABP_Battle_Global_C::IK_GlobalTraceScaleMultiplier' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IK_MaximumDipHeightPelvis) == 0x005AD4, "Member 'UABP_Battle_Global_C::IK_MaximumDipHeightPelvis' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IK_EnableFootRoll) == 0x005AD8, "Member 'UABP_Battle_Global_C::IK_EnableFootRoll' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Tired_Anim_Additive) == 0x005AE0, "Member 'UABP_Battle_Global_C::Tired_Anim_Additive' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Tired_Anim_Playrate) == 0x005AE8, "Member 'UABP_Battle_Global_C::Tired_Anim_Playrate' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, UseTiredAdditiveSystem) == 0x005AEC, "Member 'UABP_Battle_Global_C::UseTiredAdditiveSystem' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunLoop_IdleAlt1) == 0x005AF0, "Member 'UABP_Battle_Global_C::Anim_StunLoop_IdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunLoop_IdleAlt2) == 0x005AF8, "Member 'UABP_Battle_Global_C::Anim_StunLoop_IdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunLoop_IdleAlt3) == 0x005B00, "Member 'UABP_Battle_Global_C::Anim_StunLoop_IdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunStart_IdleAlt1) == 0x005B08, "Member 'UABP_Battle_Global_C::Anim_StunStart_IdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunStart_IdleAlt2) == 0x005B10, "Member 'UABP_Battle_Global_C::Anim_StunStart_IdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunStart_IdleAlt3) == 0x005B18, "Member 'UABP_Battle_Global_C::Anim_StunStart_IdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunRecovery_IdleAlt1) == 0x005B20, "Member 'UABP_Battle_Global_C::Anim_StunRecovery_IdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunRecovery_IdleAlt2) == 0x005B28, "Member 'UABP_Battle_Global_C::Anim_StunRecovery_IdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_StunRecovery_IdleAlt3) == 0x005B30, "Member 'UABP_Battle_Global_C::Anim_StunRecovery_IdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_MainIdle_FreeAim_Idle) == 0x005B38, "Member 'UABP_Battle_Global_C::CharaTurn_MainIdle_FreeAim_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt1_FreeAim_Idle) == 0x005B40, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt1_FreeAim_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt2_FreeAim_Idle) == 0x005B48, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt2_FreeAim_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_IdleAlt3_FreeAim_Idle) == 0x005B50, "Member 'UABP_Battle_Global_C::CharaTurn_IdleAlt3_FreeAim_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, BP_J_RPG_Character_Battle_Base) == 0x005B58, "Member 'UABP_Battle_Global_C::BP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, LastValidBattlePosture) == 0x005B60, "Member 'UABP_Battle_Global_C::LastValidBattlePosture' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CurrentBattlePostureAnimations) == 0x005B68, "Member 'UABP_Battle_Global_C::CurrentBattlePostureAnimations' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasBattleStartIntroAnim) == 0x005BB8, "Member 'UABP_Battle_Global_C::HasBattleStartIntroAnim' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasMainIdleTurnStartAnim) == 0x005BB9, "Member 'UABP_Battle_Global_C::HasMainIdleTurnStartAnim' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleAlt1TurnStartAnim) == 0x005BBA, "Member 'UABP_Battle_Global_C::HasIdleAlt1TurnStartAnim' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleAlt2TurnStartAnim) == 0x005BBB, "Member 'UABP_Battle_Global_C::HasIdleAlt2TurnStartAnim' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleAlt3TurnStartAnim) == 0x005BBC, "Member 'UABP_Battle_Global_C::HasIdleAlt3TurnStartAnim' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleStunRecovery_MainIdle) == 0x005BBD, "Member 'UABP_Battle_Global_C::HasIdleStunRecovery_MainIdle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleStunRecovery_IdleAlt1) == 0x005BBE, "Member 'UABP_Battle_Global_C::HasIdleStunRecovery_IdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleStunRecovery_IdleAlt2) == 0x005BBF, "Member 'UABP_Battle_Global_C::HasIdleStunRecovery_IdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleStunRecovery_IdleAlt3) == 0x005BC0, "Member 'UABP_Battle_Global_C::HasIdleStunRecovery_IdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsGettingHit) == 0x005BC1, "Member 'UABP_Battle_Global_C::IsGettingHit' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, E_Hit_React_Anim_Type) == 0x005BC2, "Member 'UABP_Battle_Global_C::E_Hit_React_Anim_Type' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Medium_IdleAlt1) == 0x005BC8, "Member 'UABP_Battle_Global_C::Anim_Hit_Medium_IdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Medium_IdleAlt2) == 0x005BD8, "Member 'UABP_Battle_Global_C::Anim_Hit_Medium_IdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Medium_IdleAlt3) == 0x005BE8, "Member 'UABP_Battle_Global_C::Anim_Hit_Medium_IdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Heavy_IdleAlt1) == 0x005BF8, "Member 'UABP_Battle_Global_C::Anim_Hit_Heavy_IdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Heavy_IdleAlt2) == 0x005C08, "Member 'UABP_Battle_Global_C::Anim_Hit_Heavy_IdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Heavy_IdleAlt3) == 0x005C18, "Member 'UABP_Battle_Global_C::Anim_Hit_Heavy_IdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Light_IdleAlt1) == 0x005C28, "Member 'UABP_Battle_Global_C::Anim_Hit_Light_IdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Light_IdleAlt2) == 0x005C38, "Member 'UABP_Battle_Global_C::Anim_Hit_Light_IdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Light_IdleAlt3) == 0x005C48, "Member 'UABP_Battle_Global_C::Anim_Hit_Light_IdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Defending_IdleMain_Chara) == 0x005C58, "Member 'UABP_Battle_Global_C::Anim_Hit_Defending_IdleMain_Chara' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Defending_IdleAlt1_Chara) == 0x005C68, "Member 'UABP_Battle_Global_C::Anim_Hit_Defending_IdleAlt1_Chara' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Defending_IdleAlt2_Chara) == 0x005C78, "Member 'UABP_Battle_Global_C::Anim_Hit_Defending_IdleAlt2_Chara' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Anim_Hit_Defending_IdleAlt3_Chara) == 0x005C88, "Member 'UABP_Battle_Global_C::Anim_Hit_Defending_IdleAlt3_Chara' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, PlayRate_Idle_Alt1) == 0x005C98, "Member 'UABP_Battle_Global_C::PlayRate_Idle_Alt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, PlayRate_Idle_Alt2) == 0x005CA0, "Member 'UABP_Battle_Global_C::PlayRate_Idle_Alt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, PlayRate_Idle_Alt3) == 0x005CA8, "Member 'UABP_Battle_Global_C::PlayRate_Idle_Alt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ShouldRandomizeIdlePlayRate) == 0x005CB0, "Member 'UABP_Battle_Global_C::ShouldRandomizeIdlePlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ShouldPlayHit2) == 0x005CB1, "Member 'UABP_Battle_Global_C::ShouldPlayHit2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ShouldPlayHit1) == 0x005CB2, "Member 'UABP_Battle_Global_C::ShouldPlayHit1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Should_Randomly_Scale_Bones) == 0x005CB3, "Member 'UABP_Battle_Global_C::Should_Randomly_Scale_Bones' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleSpine01) == 0x005CB8, "Member 'UABP_Battle_Global_C::ScaleSpine01' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleSpine03) == 0x005CD0, "Member 'UABP_Battle_Global_C::ScaleSpine03' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleRoot) == 0x005CE8, "Member 'UABP_Battle_Global_C::ScaleRoot' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleArmL) == 0x005D00, "Member 'UABP_Battle_Global_C::ScaleArmL' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleArmR) == 0x005D18, "Member 'UABP_Battle_Global_C::ScaleArmR' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleLowerArmL) == 0x005D30, "Member 'UABP_Battle_Global_C::ScaleLowerArmL' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleLowerArmR) == 0x005D48, "Member 'UABP_Battle_Global_C::ScaleLowerArmR' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleSpine01_Float) == 0x005D60, "Member 'UABP_Battle_Global_C::ScaleSpine01_Float' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleSpine03_Float) == 0x005D68, "Member 'UABP_Battle_Global_C::ScaleSpine03_Float' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleRoot_Float) == 0x005D70, "Member 'UABP_Battle_Global_C::ScaleRoot_Float' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleArmR_Float) == 0x005D78, "Member 'UABP_Battle_Global_C::ScaleArmR_Float' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ScaleArmL_Float) == 0x005D80, "Member 'UABP_Battle_Global_C::ScaleArmL_Float' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, MinBoneVariation) == 0x005D88, "Member 'UABP_Battle_Global_C::MinBoneVariation' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, MaxBoneVariation) == 0x005D90, "Member 'UABP_Battle_Global_C::MaxBoneVariation' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasHitAnimations) == 0x005D98, "Member 'UABP_Battle_Global_C::HasHitAnimations' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasStunStartIdleMain) == 0x005D99, "Member 'UABP_Battle_Global_C::HasStunStartIdleMain' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasStunStartIdleAlt1) == 0x005D9A, "Member 'UABP_Battle_Global_C::HasStunStartIdleAlt1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasStunStartIdleAlt2) == 0x005D9B, "Member 'UABP_Battle_Global_C::HasStunStartIdleAlt2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasStunStartIdleAlt3) == 0x005D9C, "Member 'UABP_Battle_Global_C::HasStunStartIdleAlt3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, TiredAnimation_Additive_Alpha) == 0x005DA0, "Member 'UABP_Battle_Global_C::TiredAnimation_Additive_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, ChangeIdlePlayRateWithHP) == 0x005DA4, "Member 'UABP_Battle_Global_C::ChangeIdlePlayRateWithHP' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IdlePlayRateWithHP) == 0x005DA8, "Member 'UABP_Battle_Global_C::IdlePlayRateWithHP' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AccelerationFactorIdlePlayRateWithHP) == 0x005DB0, "Member 'UABP_Battle_Global_C::AccelerationFactorIdlePlayRateWithHP' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Is_Fleeing) == 0x005DB8, "Member 'UABP_Battle_Global_C::Is_Fleeing' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IdleFleeing) == 0x005DC0, "Member 'UABP_Battle_Global_C::IdleFleeing' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, As_BP_J_RPG_Enemy_World_Base_Seamless) == 0x005DC8, "Member 'UABP_Battle_Global_C::As_BP_J_RPG_Enemy_World_Base_Seamless' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, LookAtLocation) == 0x005DD0, "Member 'UABP_Battle_Global_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, EnableLookAtSolver) == 0x005E30, "Member 'UABP_Battle_Global_C::EnableLookAtSolver' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, LookAlpha) == 0x005E34, "Member 'UABP_Battle_Global_C::LookAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, LookAtInterpolationSpeed) == 0x005E38, "Member 'UABP_Battle_Global_C::LookAtInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsInPlayMode) == 0x005E3C, "Member 'UABP_Battle_Global_C::IsInPlayMode' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasPlayedBattleStartIntro) == 0x005E3D, "Member 'UABP_Battle_Global_C::HasPlayedBattleStartIntro' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CurrentHitAnim) == 0x005E40, "Member 'UABP_Battle_Global_C::CurrentHitAnim' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, EnableIK) == 0x005E48, "Member 'UABP_Battle_Global_C::EnableIK' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsUsingSmartObject) == 0x005E49, "Member 'UABP_Battle_Global_C::IsUsingSmartObject' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CurrentAiState) == 0x005E4A, "Member 'UABP_Battle_Global_C::CurrentAiState' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AnimDetectPlayer) == 0x005E50, "Member 'UABP_Battle_Global_C::AnimDetectPlayer' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsTargetedCharacter) == 0x005E58, "Member 'UABP_Battle_Global_C::IsTargetedCharacter' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CharaTurn_Targeting_Attack) == 0x005E60, "Member 'UABP_Battle_Global_C::CharaTurn_Targeting_Attack' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, MirrorIdle) == 0x005E68, "Member 'UABP_Battle_Global_C::MirrorIdle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsEnemyWorld) == 0x005E69, "Member 'UABP_Battle_Global_C::IsEnemyWorld' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IdleWorldOverride) == 0x005E70, "Member 'UABP_Battle_Global_C::IdleWorldOverride' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasIdleWorldOVerride) == 0x005E78, "Member 'UABP_Battle_Global_C::HasIdleWorldOVerride' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Has_Detected_Player_Once) == 0x005E79, "Member 'UABP_Battle_Global_C::Has_Detected_Player_Once' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, WorldCustomIdlePlayRate) == 0x005E80, "Member 'UABP_Battle_Global_C::WorldCustomIdlePlayRate' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_MainIdle_Start) == 0x005E88, "Member 'UABP_Battle_Global_C::Targeted_MainIdle_Start' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle1_Start) == 0x005E90, "Member 'UABP_Battle_Global_C::Targeted_Idle1_Start' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle2_Start) == 0x005E98, "Member 'UABP_Battle_Global_C::Targeted_Idle2_Start' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle3_Start) == 0x005EA0, "Member 'UABP_Battle_Global_C::Targeted_Idle3_Start' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_MainIdle_Idle) == 0x005EA8, "Member 'UABP_Battle_Global_C::Targeted_MainIdle_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle1_Idle) == 0x005EB0, "Member 'UABP_Battle_Global_C::Targeted_Idle1_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle2_Idle) == 0x005EB8, "Member 'UABP_Battle_Global_C::Targeted_Idle2_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle3_Idle) == 0x005EC0, "Member 'UABP_Battle_Global_C::Targeted_Idle3_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_MainIdle_Stop) == 0x005EC8, "Member 'UABP_Battle_Global_C::Targeted_MainIdle_Stop' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle1_Stop) == 0x005ED0, "Member 'UABP_Battle_Global_C::Targeted_Idle1_Stop' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle2_Stop) == 0x005ED8, "Member 'UABP_Battle_Global_C::Targeted_Idle2_Stop' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, Targeted_Idle3_Stop) == 0x005EE0, "Member 'UABP_Battle_Global_C::Targeted_Idle3_Stop' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasTargetedIdle_MainIdle) == 0x005EE8, "Member 'UABP_Battle_Global_C::HasTargetedIdle_MainIdle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasTargetedIdle_Idle1) == 0x005EE9, "Member 'UABP_Battle_Global_C::HasTargetedIdle_Idle1' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasTargetedIdle_Idle2) == 0x005EEA, "Member 'UABP_Battle_Global_C::HasTargetedIdle_Idle2' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasTargetedIdle_Idle3) == 0x005EEB, "Member 'UABP_Battle_Global_C::HasTargetedIdle_Idle3' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AllyTargeted) == 0x005EEC, "Member 'UABP_Battle_Global_C::AllyTargeted' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AllyTargeted_Right_Start) == 0x005EF0, "Member 'UABP_Battle_Global_C::AllyTargeted_Right_Start' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AllyTargeted_Right_Idle) == 0x005EF8, "Member 'UABP_Battle_Global_C::AllyTargeted_Right_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AllyTargeted_Right_Stop) == 0x005F00, "Member 'UABP_Battle_Global_C::AllyTargeted_Right_Stop' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AllyTargeted_Left_Start) == 0x005F08, "Member 'UABP_Battle_Global_C::AllyTargeted_Left_Start' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AllyTargeted_Left_Idle) == 0x005F10, "Member 'UABP_Battle_Global_C::AllyTargeted_Left_Idle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, AllyTargeted_Left_Stop) == 0x005F18, "Member 'UABP_Battle_Global_C::AllyTargeted_Left_Stop' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, IsBeingCountered) == 0x005F20, "Member 'UABP_Battle_Global_C::IsBeingCountered' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, HasCustomBeingCounteredIdle) == 0x005F21, "Member 'UABP_Battle_Global_C::HasCustomBeingCounteredIdle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, UseCounteredIdle) == 0x005F22, "Member 'UABP_Battle_Global_C::UseCounteredIdle' has a wrong offset!");
static_assert(offsetof(UABP_Battle_Global_C, CustomIsBeingCounteredIdle) == 0x005F28, "Member 'UABP_Battle_Global_C::CustomIsBeingCounteredIdle' has a wrong offset!");

}

