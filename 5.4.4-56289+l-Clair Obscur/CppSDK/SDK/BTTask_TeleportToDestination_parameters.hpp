#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_TeleportToDestination

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_TeleportToDestination.BTTask_TeleportToDestination_C.ExecuteUbergraph_BTTask_TeleportToDestination
// 0x0060 (0x0060 - 0x0000)
struct BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDestinationLocation_Location;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetDestinationLocation_Rotator;           // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDestinationLocation_Success;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Pawn_AICompanion_C*                 K2Node_DynamicCast_AsBP_Pawn_AICompanion;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination) == 0x000008, "Wrong alignment on BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination");
static_assert(sizeof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination) == 0x000060, "Wrong size on BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, EntryPoint) == 0x000000, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, K2Node_Event_OwnerController) == 0x000008, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, K2Node_Event_ControlledPawn) == 0x000010, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, CallFunc_GetDestinationLocation_Location) == 0x000018, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::CallFunc_GetDestinationLocation_Location' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, CallFunc_GetDestinationLocation_Rotator) == 0x000030, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::CallFunc_GetDestinationLocation_Rotator' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, CallFunc_GetDestinationLocation_Success) == 0x000048, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::CallFunc_GetDestinationLocation_Success' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, K2Node_DynamicCast_AsBP_Pawn_AICompanion) == 0x000050, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::K2Node_DynamicCast_AsBP_Pawn_AICompanion' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BTTask_TeleportToDestination_C_ExecuteUbergraph_BTTask_TeleportToDestination::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTTask_TeleportToDestination.BTTask_TeleportToDestination_C.GetDestinationLocation
// 0x0128 (0x0128 - 0x0000)
struct BTTask_TeleportToDestination_C_GetDestinationLocation final
{
public:
	class AActor*                                 ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetBlackboardValueAsObject_ReturnValue;   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation; // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetRandomReachablePointInRadius_Radius_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_TeleportToDestination_C_GetDestinationLocation) == 0x000008, "Wrong alignment on BTTask_TeleportToDestination_C_GetDestinationLocation");
static_assert(sizeof(BTTask_TeleportToDestination_C_GetDestinationLocation) == 0x000128, "Wrong size on BTTask_TeleportToDestination_C_GetDestinationLocation");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, ControlledPawn) == 0x000000, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, Location) == 0x000008, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::Location' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, Rotator) == 0x000020, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::Rotator' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, Success) == 0x000038, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::Success' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_GetActorBounds_Origin) == 0x000040, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_GetActorBounds_BoxExtent) == 0x000058, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_GetBlackboardValueAsObject_ReturnValue) == 0x000070, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_GetBlackboardValueAsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_BreakVector_X) == 0x000078, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_BreakVector_Y) == 0x000080, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_BreakVector_Z) == 0x000088, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, K2Node_DynamicCast_AsActor) == 0x000090, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000B8, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x0000D0, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation) == 0x0000E8, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_K2_GetRandomReachablePointInRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue) == 0x000100, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_K2_GetRandomReachablePointInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000108, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_GetDestinationLocation, CallFunc_K2_GetRandomReachablePointInRadius_Radius_ImplicitCast) == 0x000120, "Member 'BTTask_TeleportToDestination_C_GetDestinationLocation::CallFunc_K2_GetRandomReachablePointInRadius_Radius_ImplicitCast' has a wrong offset!");

// Function BTTask_TeleportToDestination.BTTask_TeleportToDestination_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_TeleportToDestination_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_TeleportToDestination_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_TeleportToDestination_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_TeleportToDestination_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_TeleportToDestination_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_TeleportToDestination_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_TeleportToDestination_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_TeleportToDestination_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_TeleportToDestination_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

