#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Noah_V2_PostProcess

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "KawaiiPhysics_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_Noah_V2_PostProcess_structs.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Noah_V2_PostProcess.ABP_Noah_V2_PostProcess_C
// 0xFAF0 (0xFE60 - 0x0370)
class UABP_Noah_V2_PostProcess_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Noah_V2_PostProcess::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;      // 0x0378(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_37A[0x6];                                      // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0380(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0388(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0390(0x00B8)()
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_12;                    // 0x0450(0x07A0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0BF0(0x0020)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_11;                    // 0x0C10(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_10;                    // 0x13B0(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_9;                     // 0x1B50(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_8;                     // 0x22F0(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_7;                     // 0x2A90(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_6;                     // 0x3230(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_5;                     // 0x39D0(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_4;                     // 0x4170(0x07A0)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_13;                     // 0x4910(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_12;                     // 0x4E30(0x0520)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x5350(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x5378(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x5398(0x0080)()
	uint8                                         Pad_5418[0x8];                                     // 0x5418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_3;                     // 0x5420(0x07A0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x5BC0(0x0048)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x5C08(0x04D0)(ContainsInstancedReference)
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x60D8(0x0020)()
	uint8                                         Pad_60F8[0x8];                                     // 0x60F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_2;                     // 0x6100(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics_1;                     // 0x68A0(0x07A0)()
	struct FAnimNode_KawaiiPhysics                AnimGraphNode_KawaiiPhysics;                       // 0x7040(0x07A0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x77E0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x7800(0x0020)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_11;                     // 0x7820(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_10;                     // 0x7D40(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_9;                      // 0x8260(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_8;                      // 0x8780(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_7;                      // 0x8CA0(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_6;                      // 0x91C0(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_5;                      // 0x96E0(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_4;                      // 0x9C00(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_3;                      // 0xA120(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_2;                      // 0xA640(0x0520)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0xAB60(0x0520)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0xB080(0x0028)()
	uint8                                         Pad_B0A8[0x8];                                     // 0xB0A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0xB0B0(0x0520)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_43;                       // 0xB5D0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_42;                       // 0xB770(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_41;                       // 0xB910(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_40;                       // 0xBAB0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_39;                       // 0xBC50(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_38;                       // 0xBDF0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_37;                       // 0xBF90(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_36;                       // 0xC130(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_35;                       // 0xC2D0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_34;                       // 0xC470(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_33;                       // 0xC610(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_32;                       // 0xC7B0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_31;                       // 0xC950(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_30;                       // 0xCAF0(0x01A0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0xCC90(0x0080)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_29;                       // 0xCD10(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_28;                       // 0xCEB0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_27;                       // 0xD050(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_26;                       // 0xD1F0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_25;                       // 0xD390(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_24;                       // 0xD530(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_23;                       // 0xD6D0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_22;                       // 0xD870(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_21;                       // 0xDA10(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_20;                       // 0xDBB0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_19;                       // 0xDD50(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_18;                       // 0xDEF0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_17;                       // 0xE090(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_16;                       // 0xE230(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_15;                       // 0xE3D0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_14;                       // 0xE570(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_13;                       // 0xE710(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_12;                       // 0xE8B0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_11;                       // 0xEA50(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_10;                       // 0xEBF0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_9;                        // 0xED90(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_8;                        // 0xEF30(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_7;                        // 0xF0D0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_6;                        // 0xF270(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_5;                        // 0xF410(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_4;                        // 0xF5B0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_3;                        // 0xF750(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_2;                        // 0xF8F0(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver_1;                        // 0xFA90(0x01A0)()
	struct FAnimNode_PoseDriver                   AnimGraphNode_PoseDriver;                          // 0xFC30(0x01A0)()
	struct FKawaiiPhysicsSettings                 Physics_Settings_Coat;                             // 0xFDD0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FVector                                External_Force;                                    // 0xFDE8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CoatShouldGoGup;                                   // 0xFE00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE01[0x7];                                     // 0xFE01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FallingVelocity;                                   // 0xFE08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Pelvis;                                            // 0xFE10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCharacter;                                       // 0xFE18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE19[0x7];                                     // 0xFE19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  PawnOwner;                                         // 0xFE20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CharacterMesh;                                     // 0xFE28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               PreviousRotator;                                   // 0xFE30(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        RotationVelocity;                                  // 0xFE48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CoatTurnVelocityThreshold;                         // 0xFE50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldDisablePostProcess;                          // 0xFE58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Noah_V2_PostProcess(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Noah_V2_PostProcess_C">();
	}
	static class UABP_Noah_V2_PostProcess_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Noah_V2_PostProcess_C>();
	}
};
static_assert(alignof(UABP_Noah_V2_PostProcess_C) == 0x000010, "Wrong alignment on UABP_Noah_V2_PostProcess_C");
static_assert(sizeof(UABP_Noah_V2_PostProcess_C) == 0x00FE60, "Wrong size on UABP_Noah_V2_PostProcess_C");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, UberGraphFrame) == 0x000370, "Member 'UABP_Noah_V2_PostProcess_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_Noah_V2_PostProcess_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimBlueprintExtension_PropertyAccess) == 0x000380, "Member 'UABP_Noah_V2_PostProcess_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimBlueprintExtension_Base) == 0x000388, "Member 'UABP_Noah_V2_PostProcess_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_LinkedInputPose) == 0x000390, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_12) == 0x000450, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_12' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000BF0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_11) == 0x000C10, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_11' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_10) == 0x0013B0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_10' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_9) == 0x001B50, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_9' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_8) == 0x0022F0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_8' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_7) == 0x002A90, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_7' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_6) == 0x003230, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_6' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_5) == 0x0039D0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_5' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_4) == 0x004170, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_4' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_13) == 0x004910, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_13' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_12) == 0x004E30, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_12' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_UseCachedPose_1) == 0x005350, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_Root) == 0x005378, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_SaveCachedPose_1) == 0x005398, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_3) == 0x005420, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_3' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_BlendListByBool) == 0x005BC0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_ControlRig) == 0x005C08, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0060D8, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_2) == 0x006100, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_2' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics_1) == 0x0068A0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics_1' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_KawaiiPhysics) == 0x007040, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_KawaiiPhysics' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_LocalToComponentSpace) == 0x0077E0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_ComponentToLocalSpace) == 0x007800, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_11) == 0x007820, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_11' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_10) == 0x007D40, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_10' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_9) == 0x008260, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_9' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_8) == 0x008780, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_8' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_7) == 0x008CA0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_7' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_6) == 0x0091C0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_6' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_5) == 0x0096E0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_5' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_4) == 0x009C00, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_4' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_3) == 0x00A120, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_3' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_2) == 0x00A640, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_2' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics_1) == 0x00AB60, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_UseCachedPose) == 0x00B080, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_AnimDynamics) == 0x00B0B0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_43) == 0x00B5D0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_43' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_42) == 0x00B770, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_42' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_41) == 0x00B910, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_41' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_40) == 0x00BAB0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_40' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_39) == 0x00BC50, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_39' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_38) == 0x00BDF0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_38' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_37) == 0x00BF90, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_37' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_36) == 0x00C130, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_36' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_35) == 0x00C2D0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_35' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_34) == 0x00C470, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_34' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_33) == 0x00C610, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_33' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_32) == 0x00C7B0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_32' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_31) == 0x00C950, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_31' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_30) == 0x00CAF0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_30' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_SaveCachedPose) == 0x00CC90, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_29) == 0x00CD10, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_29' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_28) == 0x00CEB0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_28' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_27) == 0x00D050, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_27' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_26) == 0x00D1F0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_26' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_25) == 0x00D390, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_25' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_24) == 0x00D530, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_24' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_23) == 0x00D6D0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_23' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_22) == 0x00D870, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_22' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_21) == 0x00DA10, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_21' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_20) == 0x00DBB0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_20' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_19) == 0x00DD50, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_19' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_18) == 0x00DEF0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_18' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_17) == 0x00E090, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_17' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_16) == 0x00E230, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_16' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_15) == 0x00E3D0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_15' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_14) == 0x00E570, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_14' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_13) == 0x00E710, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_13' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_12) == 0x00E8B0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_12' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_11) == 0x00EA50, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_11' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_10) == 0x00EBF0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_10' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_9) == 0x00ED90, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_9' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_8) == 0x00EF30, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_8' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_7) == 0x00F0D0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_7' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_6) == 0x00F270, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_6' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_5) == 0x00F410, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_5' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_4) == 0x00F5B0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_4' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_3) == 0x00F750, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_3' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_2) == 0x00F8F0, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_2' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver_1) == 0x00FA90, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver_1' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, AnimGraphNode_PoseDriver) == 0x00FC30, "Member 'UABP_Noah_V2_PostProcess_C::AnimGraphNode_PoseDriver' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, Physics_Settings_Coat) == 0x00FDD0, "Member 'UABP_Noah_V2_PostProcess_C::Physics_Settings_Coat' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, External_Force) == 0x00FDE8, "Member 'UABP_Noah_V2_PostProcess_C::External_Force' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, CoatShouldGoGup) == 0x00FE00, "Member 'UABP_Noah_V2_PostProcess_C::CoatShouldGoGup' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, FallingVelocity) == 0x00FE08, "Member 'UABP_Noah_V2_PostProcess_C::FallingVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, Pelvis) == 0x00FE10, "Member 'UABP_Noah_V2_PostProcess_C::Pelvis' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, IsCharacter) == 0x00FE18, "Member 'UABP_Noah_V2_PostProcess_C::IsCharacter' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, PawnOwner) == 0x00FE20, "Member 'UABP_Noah_V2_PostProcess_C::PawnOwner' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, CharacterMesh) == 0x00FE28, "Member 'UABP_Noah_V2_PostProcess_C::CharacterMesh' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, PreviousRotator) == 0x00FE30, "Member 'UABP_Noah_V2_PostProcess_C::PreviousRotator' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, RotationVelocity) == 0x00FE48, "Member 'UABP_Noah_V2_PostProcess_C::RotationVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, CoatTurnVelocityThreshold) == 0x00FE50, "Member 'UABP_Noah_V2_PostProcess_C::CoatTurnVelocityThreshold' has a wrong offset!");
static_assert(offsetof(UABP_Noah_V2_PostProcess_C, ShouldDisablePostProcess) == 0x00FE58, "Member 'UABP_Noah_V2_PostProcess_C::ShouldDisablePostProcess' has a wrong offset!");

}

