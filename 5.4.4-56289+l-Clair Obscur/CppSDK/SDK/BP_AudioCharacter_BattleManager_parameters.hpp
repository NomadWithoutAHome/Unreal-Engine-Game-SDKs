#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioCharacter_BattleManager

#include "Basic.hpp"

#include "S_BattleLine_structs.hpp"
#include "EUiBattleType_structs.hpp"
#include "ECharacterTeamSelector_structs.hpp"
#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"
#include "EOnoType_structs.hpp"
#include "S_BattleHitSoundOverrideHandle_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EBattleHitBy_structs.hpp"
#include "EBattleCommonSFX_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "EFootstepsType_structs.hpp"


namespace SDK::Params
{

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayEventBattleLine
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayEventBattleLine final
{
public:
	struct FS_BattleLine                          BattleLine;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_BattleManager_C*               CallFunc_GetBattleManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayReactionBattleLines_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0020(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0048)(HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActiveSkillBattleLine_Active;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayEventBattleLine");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine) == 0x0000A8, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayEventBattleLine");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, BattleLine) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::BattleLine' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, CallFunc_GetBattleManager_ReturnValue) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, CallFunc_CanPlayReactionBattleLines_ReturnValue) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::CallFunc_CanPlayReactionBattleLines_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, CallFunc_SpawnSound2D_ReturnValue) == 0x000078, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, CallFunc_HasActiveSkillBattleLine_Active) == 0x0000A0, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::CallFunc_HasActiveSkillBattleLine_Active' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayEventBattleLine, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'BP_AudioCharacter_BattleManager_C_PlayEventBattleLine::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.OnDamageReceived
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_OnDamageReceived final
{
public:
	class UBP_BattleDamages_C*                    BattleDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetTargetCharacter_NewParam;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECharacterTeamSelector                        CallFunc_GetTeam_Team;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_jRPG_Character_Battle_Base_C*> CallFunc_GetAllCharactersFromTeam_Characters;    // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_OnDamageReceived) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_OnDamageReceived");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_OnDamageReceived) == 0x000028, "Wrong size on BP_AudioCharacter_BattleManager_C_OnDamageReceived");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_OnDamageReceived, BattleDamage) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_OnDamageReceived::BattleDamage' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_OnDamageReceived, CallFunc_GetTargetCharacter_NewParam) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_OnDamageReceived::CallFunc_GetTargetCharacter_NewParam' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_OnDamageReceived, CallFunc_GetTeam_Team) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_OnDamageReceived::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_OnDamageReceived, CallFunc_GetAllCharactersFromTeam_Characters) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_OnDamageReceived::CallFunc_GetAllCharactersFromTeam_Characters' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayDialogueBattleLineInternal
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal final
{
public:
	class USoundBase*                             SoundAsset;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal, SoundAsset) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal::SoundAsset' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayDialogueBattleLineInternal::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.GetBattleLineModel
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_GetBattleLineModel final
{
public:
	class UBP_BattleLinesModel_Base_C*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_GetBattleLineModel) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_GetBattleLineModel");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_GetBattleLineModel) == 0x000008, "Wrong size on BP_AudioCharacter_BattleManager_C_GetBattleLineModel");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_GetBattleLineModel, ReturnValue) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_GetBattleLineModel::ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.TryInterruptActiveSkillBattleLine
// 0x0002 (0x0002 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine final
{
public:
	bool                                          HasInterrupted;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActiveSkillBattleLine_Active;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine) == 0x000002, "Wrong size on BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine, HasInterrupted) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine::HasInterrupted' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine, CallFunc_HasActiveSkillBattleLine_Active) == 0x000001, "Member 'BP_AudioCharacter_BattleManager_C_TryInterruptActiveSkillBattleLine::CallFunc_HasActiveSkillBattleLine_Active' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HasActiveSkillBattleLine
// 0x0003 (0x0003 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine) == 0x000003, "Wrong size on BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine, Active) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine::Active' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine, CallFunc_IsPlaying_ReturnValue) == 0x000001, "Member 'BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AudioCharacter_BattleManager_C_HasActiveSkillBattleLine::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlaySkillBattleLineInternal
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal final
{
public:
	class USoundBase*                             SoundAsset;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal, SoundAsset) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal::SoundAsset' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlaySkillBattleLineInternal::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.StopAllSFXs
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_StopAllSFXs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_StopAllSFXs) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_StopAllSFXs");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_StopAllSFXs) == 0x000020, "Wrong size on BP_AudioCharacter_BattleManager_C_StopAllSFXs");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_StopAllSFXs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_StopAllSFXs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_StopAllSFXs, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AudioCharacter_BattleManager_C_StopAllSFXs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_StopAllSFXs, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_StopAllSFXs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_StopAllSFXs, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_StopAllSFXs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_StopAllSFXs, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_StopAllSFXs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_StopAllSFXs, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_AudioCharacter_BattleManager_C_StopAllSFXs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_StopAllSFXs, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'BP_AudioCharacter_BattleManager_C_StopAllSFXs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ProcessTaggedGameplayEvent
// 0x0080 (0x0080 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent final
{
public:
	struct FTaggedGameplayEvent                   Event;                                             // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent) == 0x000080, "Wrong size on BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent, Event) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_ProcessTaggedGameplayEvent::Event' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.RemoveHitOverride
// 0x00B8 (0x00B8 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_RemoveHitOverride final
{
public:
	struct FS_BattleHitSoundOverrideHandle        OutHitOverrideHandle;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleHitSoundOverrideHandle        K2Node_MakeStruct_S_BattleHitSoundOverrideHandle;  // 0x0018(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_RemoveHitOverride");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride) == 0x0000B8, "Wrong size on BP_AudioCharacter_BattleManager_C_RemoveHitOverride");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, OutHitOverrideHandle) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::OutHitOverrideHandle' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, K2Node_MakeStruct_S_BattleHitSoundOverrideHandle) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::K2Node_MakeStruct_S_BattleHitSoundOverrideHandle' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000030, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, CallFunc_Array_RemoveItem_ReturnValue) == 0x000098, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_RemoveHitOverride, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'BP_AudioCharacter_BattleManager_C_RemoveHitOverride::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitSoundFromDamageObject
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_ResolveHitSound_Sound;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject, BattleDamages) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject, CallFunc_ResolveHitSound_Sound) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject::CallFunc_ResolveHitSound_Sound' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitSoundFromDamageObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PushHitOverride
// 0x0180 (0x0180 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PushHitOverride final
{
public:
	class UBP_DataAsset_BattleHitSound_C*         HitSoundAsset;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleHitSoundOverrideHandle        OutHitOverrideHandle;                              // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleHitSoundOverrideHandle        local_pushedElement;                               // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0038(0x0010)()
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetGameContentAssetFromCallStackDebugString_DebugString; // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0010)()
	struct FS_BattleHitSoundOverrideHandle        K2Node_MakeStruct_S_BattleHitSoundOverrideHandle;  // 0x00F8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0110(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0158(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue_1;                     // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PushHitOverride) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PushHitOverride");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PushHitOverride) == 0x000180, "Wrong size on BP_AudioCharacter_BattleManager_C_PushHitOverride");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, HitSoundAsset) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::HitSoundAsset' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, OutHitOverrideHandle) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::OutHitOverrideHandle' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, local_pushedElement) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::local_pushedElement' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000038, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_IsValid_Guid_ReturnValue) == 0x000048, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_GetGameContentAssetFromCallStackDebugString_DebugString) == 0x0000C8, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_GetGameContentAssetFromCallStackDebugString_DebugString' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_NewGuid_ReturnValue) == 0x0000D8, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_NewGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, K2Node_MakeStruct_S_BattleHitSoundOverrideHandle) == 0x0000F8, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::K2Node_MakeStruct_S_BattleHitSoundOverrideHandle' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, K2Node_MakeStruct_FormatArgumentData_1) == 0x000110, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, K2Node_MakeArray_Array_1) == 0x000158, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_Format_ReturnValue_1) == 0x000168, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PushHitOverride, CallFunc_Array_Add_ReturnValue) == 0x000178, "Member 'BP_AudioCharacter_BattleManager_C_PushHitOverride::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ResolveHitSound
// 0x0030 (0x0030 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_ResolveHitSound final
{
public:
	class UBP_BattleDamages_C*                    BattleDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_BattleHitSound_C*         CallFunc_ResolveHitSoundAsset_HitSoundAsset;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetHitSoundOverride_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_GetSoundForDamage_Sound;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_ResolveHitSound) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_ResolveHitSound");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_ResolveHitSound) == 0x000030, "Wrong size on BP_AudioCharacter_BattleManager_C_ResolveHitSound");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSound, BattleDamage) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSound::BattleDamage' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSound, Sound) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSound::Sound' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSound, CallFunc_ResolveHitSoundAsset_HitSoundAsset) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSound::CallFunc_ResolveHitSoundAsset_HitSoundAsset' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSound, CallFunc_GetHitSoundOverride_ReturnValue) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSound::CallFunc_GetHitSoundOverride_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSound, CallFunc_GetSoundForDamage_Sound) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSound::CallFunc_GetSoundForDamage_Sound' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSound, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSound, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ResolveHitSoundAsset
// 0x0048 (0x0048 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset final
{
public:
	class UBP_BattleDamages_C*                    BattleDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_BattleHitSound_C*         HitSoundAsset;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DataAsset_BattleHitSound_C*         local_HitSound;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_BattleHitSound_C*         CallFunc_GetCharacterBaseHitSound_DefaultHitSound; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleHitSoundOverrideHandle        CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset) == 0x000048, "Wrong size on BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, BattleDamage) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::BattleDamage' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, HitSoundAsset) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::HitSoundAsset' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, local_HitSound) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::local_HitSound' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, CallFunc_Array_LastIndex_ReturnValue) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, CallFunc_GetCharacterBaseHitSound_DefaultHitSound) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::CallFunc_GetCharacterBaseHitSound_DefaultHitSound' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000041, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'BP_AudioCharacter_BattleManager_C_ResolveHitSoundAsset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Internal_PlayOnoFromData
// 0x0098 (0x0098 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData final
{
public:
	EOnoType                                      OnoType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleAudioCharacter_GetComponents_C> K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_CharacterBattleAudioProfile_C* CallFunc_GetBattleAudioProfile_AudioProfile;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_SFX;    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Weapon_L; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Weapon_R; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foley;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Vocal;  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foot_L; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foot_R; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_HitBy;  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMetaSoundSource*                       CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData) == 0x000098, "Wrong size on BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, OnoType) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::OnoType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioProfile_AudioProfile) == 0x000028, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioProfile_AudioProfile' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base) == 0x000030, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::K2Node_DynamicCast_AsBP_J_RPG_Character_Battle_Base' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_SFX) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_SFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_Weapon_L) == 0x000048, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_Weapon_L' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_Weapon_R) == 0x000050, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_Weapon_R' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_Foley) == 0x000058, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_Foley' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_Vocal) == 0x000060, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_Vocal' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_Foot_L) == 0x000068, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_Foot_L' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_Foot_R) == 0x000070, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_Foot_R' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_GetBattleAudioContainerComponents_HitBy) == 0x000078, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_GetBattleAudioContainerComponents_HitBy' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000090, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayOnoFromData::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqOno
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno final
{
public:
	EOnoType                                      OnoType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno) == 0x000001, "Wrong size on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno, OnoType) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqOno::OnoType' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.CleanSpawnedAudioComponentList
// 0x0060 (0x0060 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList final
{
public:
	TArray<int32>                                 Temp_wildcard_Temp_buffer_array_Variable;          // 0x0000(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList) == 0x000060, "Wrong size on BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, Temp_wildcard_Temp_buffer_array_Variable) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Max_ReturnValue) == 0x000028, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList, CallFunc_Not_PreBool_ReturnValue) == 0x00005E, "Member 'BP_AudioCharacter_BattleManager_C_CleanSpawnedAudioComponentList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Internal_PlayAudioComponent
// 0x0148 (0x0148 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        OriginComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        local_SpawnedAudioComponent;                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C8(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent) == 0x000148, "Wrong size on BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, Sound) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::Sound' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, OriginComponent) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::OriginComponent' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, AttenuationOverride) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, ShouldAttachToComponent_) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::ShouldAttachToComponent_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, local_SpawnedAudioComponent) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::local_SpawnedAudioComponent' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000038, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000098, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0000B0, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000B8, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C8, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E0, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_AudioCharacter_BattleManager_C_Internal_PlayAudioComponent::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleDeactivateControlBusMix
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix final
{
public:
	class USoundControlBusMix*                    Deactivate_ControlBusMix;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix) == 0x000008, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix, Deactivate_ControlBusMix) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleDeactivateControlBusMix::Deactivate_ControlBusMix' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleActivateControlBusMix
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix final
{
public:
	class USoundControlBusMix*                    Activate_ControlBusMix;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix) == 0x000008, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix, Activate_ControlBusMix) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleActivateControlBusMix::Activate_ControlBusMix' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleDeathCommonBodyFall
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall final
{
public:
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall, AttenuationOverride) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall::ShouldAttachToComponent_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommonBodyFall::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.BattleHitBy_CallByBP
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP final
{
public:
	EBattleHitBy                                  BattleHitBy_CallByBP_0;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP) == 0x000001, "Wrong size on BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP, BattleHitBy_CallByBP_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_BattleHitBy_CallByBP::BattleHitBy_CallByBP_0' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleDeathCommon
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon final
{
public:
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon, AttenuationOverride) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon::ShouldAttachToComponent_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleDeathCommon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleHitByCommon
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon final
{
public:
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon, AttenuationOverride) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon::ShouldAttachToComponent_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon, CallFunc_IsValid_ReturnValue_3) == 0x00000C, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitByCommon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleHitBy
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleHitBy final
{
public:
	class UMetaSoundSource*                       BattleHitBy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleHitBy) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleHitBy");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleHitBy) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleHitBy");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitBy, BattleHitBy) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitBy::BattleHitBy' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleHitBy, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleHitBy::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqStep
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep final
{
public:
	class USoundBase*                             Battle_PlaySeqStep_0;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRight;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundShouldFollow_;                                // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep) == 0x000028, "Wrong size on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep, Battle_PlaySeqStep_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep::Battle_PlaySeqStep_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep, IsRight) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep::IsRight' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep, AttenuationOverride) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep, SoundShouldFollow_) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep::SoundShouldFollow_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep, Temp_bool_Variable) == 0x000019, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep, K2Node_Select_Default) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqStep::K2Node_Select_Default' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqVocal
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal final
{
public:
	class USoundBase*                             Battle_PlaySeqVocal_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundShouldFollow_;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal, Battle_PlaySeqVocal_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal::Battle_PlaySeqVocal_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal, SoundShouldFollow_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqVocal::SoundShouldFollow_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.BattleCommonSFX
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_BattleCommonSFX final
{
public:
	EBattleCommonSFX                              Common_SFX;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleCommonSFX                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_BattleCommonSFX) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_BattleCommonSFX");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_BattleCommonSFX) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_BattleCommonSFX");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_BattleCommonSFX, Common_SFX) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_BattleCommonSFX::Common_SFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_BattleCommonSFX, Temp_byte_Variable) == 0x000001, "Member 'BP_AudioCharacter_BattleManager_C_BattleCommonSFX::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_BattleCommonSFX, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_AudioCharacter_BattleManager_C_BattleCommonSFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_BattleCommonSFX, K2Node_Select_Default) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_BattleCommonSFX::K2Node_Select_Default' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattlePlaceholder
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder final
{
public:
	class USoundBase*                             Battle_Placeholder;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder) == 0x000008, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder, Battle_Placeholder) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattlePlaceholder::Battle_Placeholder' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleFoley
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleFoley final
{
public:
	class UMetaSoundSource*                       Battle_Foley;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleFoley) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleFoley");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleFoley) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleFoley");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFoley, Battle_Foley) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFoley::Battle_Foley' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFoley, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFoley::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFoley, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFoley::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleFootstep
// 0x0090 (0x0090 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleFootstep final
{
public:
	EFootstepsType                                FootstepType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0020(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             local_soundToPlay;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x005B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CallFunc_Map_Find_Value_1;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleFootstep");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep) == 0x000090, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleFootstep");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, FootstepType) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::FootstepType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, Location) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::Location' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, SurfaceType) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, ShouldAttachToComponent_) == 0x000021, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::ShouldAttachToComponent_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, local_soundToPlay) == 0x000028, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::local_soundToPlay' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000030, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_IsValid_ReturnValue_2) == 0x00005A, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, Temp_byte_Variable) == 0x00005B, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000060, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_Map_Find_Value_1) == 0x000068, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_Map_Find_ReturnValue_1) == 0x000070, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface) == 0x000078, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::K2Node_DynamicCast_AsAudio_Parameter_Controller_Interface' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleFootstep, CallFunc_IsValid_ReturnValue_3) == 0x000089, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleFootstep::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleVocal
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleVocal final
{
public:
	class UMetaSoundSource*                       Battle_Vocal;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleVocal) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleVocal");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleVocal) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleVocal");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleVocal, Battle_Vocal) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleVocal::Battle_Vocal' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleVocal, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleVocal::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleVocal, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleVocal::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleWeaponRight
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight final
{
public:
	class UMetaSoundSource*                       Battle_Weapon_Right;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight, Battle_Weapon_Right) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight::Battle_Weapon_Right' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleWeaponRight::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleWeaponLeft
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft final
{
public:
	class UMetaSoundSource*                       Battle_Weapon_Left;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft, Battle_Weapon_Left) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft::Battle_Weapon_Left' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleWeaponLeft::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleSFX
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleSFX final
{
public:
	class UMetaSoundSource*                       Battle_SFX;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleSFX) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleSFX");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleSFX) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleSFX");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleSFX, Battle_SFX) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleSFX::Battle_SFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleSFX, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleSFX::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleSFX, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleSFX::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleUiCharacter
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter final
{
public:
	EUiBattleType                                 Battle_UI_Type;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUiBattleType                                 Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter) == 0x000028, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter, Battle_UI_Type) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter::Battle_UI_Type' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter, ShouldAttachToComponent_) == 0x000001, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter::ShouldAttachToComponent_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter, Temp_byte_Variable) == 0x000002, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter, K2Node_Select_Default) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleUiCharacter::K2Node_Select_Default' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.HandleBattleOno
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_HandleBattleOno final
{
public:
	EOnoType                                      OnoType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_HandleBattleOno) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_HandleBattleOno");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_HandleBattleOno) == 0x000001, "Wrong size on BP_AudioCharacter_BattleManager_C_HandleBattleOno");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_HandleBattleOno, OnoType) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_HandleBattleOno::OnoType' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqFoley
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley final
{
public:
	class USoundBase*                             Battle_PlaySeqFoley_0;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundShouldFollow_;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley, Battle_PlaySeqFoley_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley::Battle_PlaySeqFoley_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley, SoundShouldFollow_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqFoley::SoundShouldFollow_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Init
// 0x0188 (0x0188 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Init final
{
public:
	class UMetaSoundSource*                       NewLocalVar_0;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetCharacterBattleLinesClass_CharacterBattleLineClass; // 0x0010(0x0028)(HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Battle_Lines_Model_Base; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0010)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLinesModel_Base_C*            CallFunc_SpawnObject_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleAudioCharacter_GetComponents_C> K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_DataAsset_CharacterBattleAudioProfile_C* CallFunc_GetBattleAudioProfile_AudioProfile;  // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_BattleAudioCharacter_GetComponents_C> K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components_1; // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_SFX;    // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Weapon_L; // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Weapon_R; // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foley;  // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Vocal;  // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foot_L; // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_Foot_R; // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetBattleAudioContainerComponents_HitBy;  // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Init) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Init");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Init) == 0x000188, "Wrong size on BP_AudioCharacter_BattleManager_C_Init");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, NewLocalVar_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Init::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetCharacterBattleLinesClass_CharacterBattleLineClass) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetCharacterBattleLinesClass_CharacterBattleLineClass' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000048, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_ClassDynamicCast_AsBP_Battle_Lines_Model_Base) == 0x000058, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_ClassDynamicCast_AsBP_Battle_Lines_Model_Base' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_IsValidClass_ReturnValue) == 0x000078, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_MakeArray_Array) == 0x0000C8, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0000D8, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetOwner_ReturnValue_1) == 0x0000F0, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_SpawnObject_ReturnValue) == 0x0000F8, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components) == 0x000100, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioProfile_AudioProfile) == 0x000118, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioProfile_AudioProfile' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetOwner_ReturnValue_2) == 0x000128, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components_1) == 0x000130, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_DynamicCast_AsBPI_Battle_Audio_Character_Get_Components_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'BP_AudioCharacter_BattleManager_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_SFX) == 0x000148, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_SFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_Weapon_L) == 0x000150, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_Weapon_L' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_Weapon_R) == 0x000158, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_Weapon_R' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_Foley) == 0x000160, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_Foley' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_Vocal) == 0x000168, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_Vocal' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_Foot_L) == 0x000170, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_Foot_L' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_Foot_R) == 0x000178, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_Foot_R' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Init, CallFunc_GetBattleAudioContainerComponents_HitBy) == 0x000180, "Member 'BP_AudioCharacter_BattleManager_C_Init::CallFunc_GetBattleAudioContainerComponents_HitBy' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlayWeaponR
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR final
{
public:
	class USoundBase*                             Battle_Weapon_R;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundShouldFollow_;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR, Battle_Weapon_R) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR::Battle_Weapon_R' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR, SoundShouldFollow_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlayWeaponR::SoundShouldFollow_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle Play Weapon L
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L final
{
public:
	class USoundBase*                             Battle_Weapon_L;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundShouldFollow_;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L, Battle_Weapon_L) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L::Battle_Weapon_L' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L, SoundShouldFollow_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Battle_Play_Weapon_L::SoundShouldFollow_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Battle_PlaySeqSFX
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX final
{
public:
	class USoundBase*                             Battle_PlaySeqSFX_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundShouldFollow_;                                // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX, Battle_PlaySeqSFX_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX::Battle_PlaySeqSFX_0' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX, SoundShouldFollow_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_Battle_PlaySeqSFX::SoundShouldFollow_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleWeaponLeft
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft final
{
public:
	class UMetaSoundSource*                       BattleWeaponLeft;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft, BattleWeaponLeft) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft::BattleWeaponLeft' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleWeaponLeft::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleWeaponRight
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight final
{
public:
	class UMetaSoundSource*                       BattleWeaponRight;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight, BattleWeaponRight) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight::BattleWeaponRight' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleWeaponRight::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleVocalEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent final
{
public:
	class UMetaSoundSource*                       BattleVocal;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent, BattleVocal) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent::BattleVocal' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleVocalEvent::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleSFXEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent final
{
public:
	class UMetaSoundSource*                       BattleSFX;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent, BattleSFX) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent::BattleSFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleSFXEvent::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleFootstepEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent final
{
public:
	EFootstepsType                                FootstepType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent) == 0x000028, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent, FootstepType) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent::FootstepType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent, Location) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent::Location' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent, SurfaceType) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent::SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent, ShouldAttachToComponent_) == 0x000021, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleFootstepEvent::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleFoley
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleFoley final
{
public:
	class UMetaSoundSource*                       BattleFoley;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleFoley) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleFoley");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleFoley) == 0x000018, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleFoley");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleFoley, BattleFoley) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleFoley::BattleFoley' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleFoley, AttenuationOverride) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleFoley::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleFoley, ShouldAttachToComponent_) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleFoley::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleUi
// 0x0002 (0x0002 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleUi final
{
public:
	EUiBattleType                                 UI_Battle_Type;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleUi) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleUi");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleUi) == 0x000002, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleUi");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleUi, UI_Battle_Type) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleUi::UI_Battle_Type' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleUi, ShouldAttachToComponent_) == 0x000001, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleUi::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleSoundProto
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto final
{
public:
	class USoundBase*                             BattlePlaceholder;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto) == 0x000008, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto, BattlePlaceholder) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleSoundProto::BattlePlaceholder' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitByEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayHitByEvent final
{
public:
	class UMetaSoundSource*                       BattleHitBy;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayHitByEvent) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayHitByEvent");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayHitByEvent) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayHitByEvent");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitByEvent, BattleHitBy) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitByEvent::BattleHitBy' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitByEvent, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitByEvent::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitByCommonEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent final
{
public:
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent, AttenuationOverride) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitByCommonEvent::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayHitBy_CallByBP
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP final
{
public:
	EBattleHitBy                                  Hit_By_CallByBP;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP) == 0x000001, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP, Hit_By_CallByBP) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayHitBy_CallByBP::Hit_By_CallByBP' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Deactivate ControlBusMix
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix final
{
public:
	class USoundControlBusMix*                    Deactivate_ControlBusMix_0;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix) == 0x000008, "Wrong size on BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix, Deactivate_ControlBusMix_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Deactivate_ControlBusMix::Deactivate_ControlBusMix_0' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.Activate ControlBusMix
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix final
{
public:
	class USoundControlBusMix*                    Activate_ControlBusMix_0;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix) == 0x000008, "Wrong size on BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix, Activate_ControlBusMix_0) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_Activate_ControlBusMix::Activate_ControlBusMix_0' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayDeathCommon
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayDeathCommon final
{
public:
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayDeathCommon");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayDeathCommon");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon, AttenuationOverride) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayDeathCommon::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayDeathCommon::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleCommonSFX
// 0x0002 (0x0002 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX final
{
public:
	EBattleCommonSFX                              Battle_Common_SFX;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX) == 0x000002, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX, Battle_Common_SFX) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX::Battle_Common_SFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX, ShouldAttachToComponent_) == 0x000001, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleCommonSFX::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayDeathCommon_Bodyfall
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall final
{
public:
	class USoundAttenuation*                      AttenuationOverride;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttachToComponent_;                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall) == 0x000010, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall, AttenuationOverride) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall::AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall, ShouldAttachToComponent_) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_PlayDeathCommon_Bodyfall::ShouldAttachToComponent_' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.PlayBattleOno
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_PlayBattleOno final
{
public:
	EOnoType                                      OnoType;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_PlayBattleOno) == 0x000001, "Wrong alignment on BP_AudioCharacter_BattleManager_C_PlayBattleOno");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_PlayBattleOno) == 0x000001, "Wrong size on BP_AudioCharacter_BattleManager_C_PlayBattleOno");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_PlayBattleOno, OnoType) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_PlayBattleOno::OnoType' has a wrong offset!");

// Function BP_AudioCharacter_BattleManager.BP_AudioCharacter_BattleManager_C.ExecuteUbergraph_BP_AudioCharacter_BattleManager
// 0x00F8 (0x00F8 - 0x0000)
struct BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_Event_BattleWeaponLeft;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride_7;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__11;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_Event_BattleWeaponRight;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride_6;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__10;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_Event_BattleVocal;                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride_5;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__9;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_Event_BattleSFX;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride_4;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__8;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootstepsType                                K2Node_Event_FootstepType;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_Location;                             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              K2Node_Event_SurfaceType;                          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__7;           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMetaSoundSource*                       K2Node_Event_BattleFoley;                          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride_3;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__6;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUiBattleType                                 K2Node_Event_UI_Battle_Type;                       // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__5;           // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x5];                                       // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Event_BattlePlaceholder;                    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMetaSoundSource*                       K2Node_Event_BattleHitBy;                          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__4;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride_2;                // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__3;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleHitBy                                  K2Node_Event_Hit_By_CallByBP;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundControlBusMix*                    K2Node_Event_Deactivate_ControlBusMix;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundControlBusMix*                    K2Node_Event_Activate_ControlBusMix;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride_1;                // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__2;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattleCommonSFX                              K2Node_Event_Battle_Common_SFX;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent__1;           // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAttenuation*                      K2Node_Event_AttenuationOverride;                  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ShouldAttachToComponent_;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOnoType                                      K2Node_Event_OnoType;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager) == 0x000008, "Wrong alignment on BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager");
static_assert(sizeof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager) == 0x0000F8, "Wrong size on BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, EntryPoint) == 0x000000, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_BattleWeaponLeft) == 0x000008, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_BattleWeaponLeft' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride_7) == 0x000010, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride_7' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__11) == 0x000018, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__11' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_BattleWeaponRight) == 0x000020, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_BattleWeaponRight' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride_6) == 0x000028, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride_6' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__10) == 0x000030, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__10' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_BattleVocal) == 0x000038, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_BattleVocal' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride_5) == 0x000040, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride_5' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__9) == 0x000048, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__9' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_BattleSFX) == 0x000050, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_BattleSFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride_4) == 0x000058, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride_4' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__8) == 0x000060, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__8' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_FootstepType) == 0x000061, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_FootstepType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_Location) == 0x000068, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_SurfaceType) == 0x000080, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_SurfaceType' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__7) == 0x000081, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__7' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_BattleFoley) == 0x000088, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_BattleFoley' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride_3) == 0x000090, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride_3' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__6) == 0x000098, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__6' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_UI_Battle_Type) == 0x000099, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_UI_Battle_Type' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__5) == 0x00009A, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__5' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_BattlePlaceholder) == 0x0000A0, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_BattlePlaceholder' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_BattleHitBy) == 0x0000A8, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_BattleHitBy' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__4) == 0x0000B0, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__4' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride_2) == 0x0000B8, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride_2' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__3) == 0x0000C0, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__3' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_Hit_By_CallByBP) == 0x0000C1, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_Hit_By_CallByBP' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_Deactivate_ControlBusMix) == 0x0000C8, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_Deactivate_ControlBusMix' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_Activate_ControlBusMix) == 0x0000D0, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_Activate_ControlBusMix' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride_1) == 0x0000D8, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride_1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__2) == 0x0000E0, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__2' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_Battle_Common_SFX) == 0x0000E1, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_Battle_Common_SFX' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent__1) == 0x0000E2, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent__1' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_AttenuationOverride) == 0x0000E8, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_AttenuationOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_ShouldAttachToComponent_) == 0x0000F0, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_ShouldAttachToComponent_' has a wrong offset!");
static_assert(offsetof(BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager, K2Node_Event_OnoType) == 0x0000F1, "Member 'BP_AudioCharacter_BattleManager_C_ExecuteUbergraph_BP_AudioCharacter_BattleManager::K2Node_Event_OnoType' has a wrong offset!");

}

