#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_LevelSequenceExecutor

#include "Basic.hpp"

#include "BP_GameActionInstance_LevelSequenceExecutor_classes.hpp"
#include "BP_GameActionInstance_LevelSequenceExecutor_parameters.hpp"


namespace SDK
{

// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.OnLevelSequencePlayed
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_GameActionInstance_LevelSequenceExecutor_C::OnLevelSequencePlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_LevelSequenceExecutor_C", "OnLevelSequencePlayed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameActionInstance_LevelSequenceExecutor_C::ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_LevelSequenceExecutor_C", "ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor");

	Params::BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.ExecuteGameAction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class APlayerController*          Controller                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameActionInstance_LevelSequenceExecutor_C::ExecuteGameAction(const class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_LevelSequenceExecutor_C", "ExecuteGameAction");

	Params::BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.ShouldTriggerAutoSaveAfterExecution
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_GameActionInstance_LevelSequenceExecutor_C::ShouldTriggerAutoSaveAfterExecution() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_LevelSequenceExecutor_C", "ShouldTriggerAutoSaveAfterExecution");

	Params::BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.GetLevelSequenceData
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ABP_LevelSequenceExecutor_C**     Executor                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   FinishGameActionWhenSequenceIsStarted                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   DoNothingIfSequenceIsAlreadyPlayed                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameActionInstance_LevelSequenceExecutor_C::GetLevelSequenceData(class ABP_LevelSequenceExecutor_C** Executor, bool* FinishGameActionWhenSequenceIsStarted, bool* DoNothingIfSequenceIsAlreadyPlayed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_LevelSequenceExecutor_C", "GetLevelSequenceData");

	Params::BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Executor != nullptr)
		*Executor = Parms.Executor;

	if (FinishGameActionWhenSequenceIsStarted != nullptr)
		*FinishGameActionWhenSequenceIsStarted = Parms.FinishGameActionWhenSequenceIsStarted;

	if (DoNothingIfSequenceIsAlreadyPlayed != nullptr)
		*DoNothingIfSequenceIsAlreadyPlayed = Parms.DoNothingIfSequenceIsAlreadyPlayed;
}


// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.GetDebugString
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UBP_GameActionInstance_LevelSequenceExecutor_C::GetDebugString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameActionInstance_LevelSequenceExecutor_C", "GetDebugString");

	Params::BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

