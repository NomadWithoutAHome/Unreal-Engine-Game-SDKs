#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PDT_GameAction

#include "Basic.hpp"

#include "SandFall_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PDT_GameAction.BP_PDT_GameAction_C.AppendPropertyPath
// 0x0050 (0x0050 - 0x0000)
struct BP_PDT_GameAction_C_AppendPropertyPath final
{
public:
	class FString                                 CurrentPath;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	class FString                                 PropertyName;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PDT_GameAction_C_AppendPropertyPath) == 0x000008, "Wrong alignment on BP_PDT_GameAction_C_AppendPropertyPath");
static_assert(sizeof(BP_PDT_GameAction_C_AppendPropertyPath) == 0x000050, "Wrong size on BP_PDT_GameAction_C_AppendPropertyPath");
static_assert(offsetof(BP_PDT_GameAction_C_AppendPropertyPath, CurrentPath) == 0x000000, "Member 'BP_PDT_GameAction_C_AppendPropertyPath::CurrentPath' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_AppendPropertyPath, PropertyName) == 0x000010, "Member 'BP_PDT_GameAction_C_AppendPropertyPath::PropertyName' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_AppendPropertyPath, ReturnValue) == 0x000020, "Member 'BP_PDT_GameAction_C_AppendPropertyPath::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_AppendPropertyPath, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_PDT_GameAction_C_AppendPropertyPath::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_AppendPropertyPath, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_PDT_GameAction_C_AppendPropertyPath::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function BP_PDT_GameAction.BP_PDT_GameAction_C.GetInstanceClass
// 0x0008 (0x0008 - 0x0000)
struct BP_PDT_GameAction_C_GetInstanceClass final
{
public:
	TSubclassOf<class UGameActionInstance>        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PDT_GameAction_C_GetInstanceClass) == 0x000008, "Wrong alignment on BP_PDT_GameAction_C_GetInstanceClass");
static_assert(sizeof(BP_PDT_GameAction_C_GetInstanceClass) == 0x000008, "Wrong size on BP_PDT_GameAction_C_GetInstanceClass");
static_assert(offsetof(BP_PDT_GameAction_C_GetInstanceClass, ReturnValue) == 0x000000, "Member 'BP_PDT_GameAction_C_GetInstanceClass::ReturnValue' has a wrong offset!");

// Function BP_PDT_GameAction.BP_PDT_GameAction_C.IsGameActionWrapperValid
// 0x0018 (0x0018 - 0x0000)
struct BP_PDT_GameAction_C_IsGameActionWrapperValid final
{
public:
	struct FGameAction_Wrapper                    GameAction_Wrapper;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PDT_GameAction_C_IsGameActionWrapperValid) == 0x000008, "Wrong alignment on BP_PDT_GameAction_C_IsGameActionWrapperValid");
static_assert(sizeof(BP_PDT_GameAction_C_IsGameActionWrapperValid) == 0x000018, "Wrong size on BP_PDT_GameAction_C_IsGameActionWrapperValid");
static_assert(offsetof(BP_PDT_GameAction_C_IsGameActionWrapperValid, GameAction_Wrapper) == 0x000000, "Member 'BP_PDT_GameAction_C_IsGameActionWrapperValid::GameAction_Wrapper' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_IsGameActionWrapperValid, ReturnValue) == 0x000010, "Member 'BP_PDT_GameAction_C_IsGameActionWrapperValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_IsGameActionWrapperValid, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_PDT_GameAction_C_IsGameActionWrapperValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_IsGameActionWrapperValid, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_PDT_GameAction_C_IsGameActionWrapperValid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_IsGameActionWrapperValid, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'BP_PDT_GameAction_C_IsGameActionWrapperValid::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PDT_GameAction.BP_PDT_GameAction_C.ReportValidationError
// 0x0170 (0x0170 - 0x0000)
struct BP_PDT_GameAction_C_ReportValidationError final
{
public:
	TArray<class FText>                           ErrorMesssages;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 PropertyPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0098(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00A8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0100(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PDT_GameAction_C_ReportValidationError) == 0x000008, "Wrong alignment on BP_PDT_GameAction_C_ReportValidationError");
static_assert(sizeof(BP_PDT_GameAction_C_ReportValidationError) == 0x000170, "Wrong size on BP_PDT_GameAction_C_ReportValidationError");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, ErrorMesssages) == 0x000000, "Member 'BP_PDT_GameAction_C_ReportValidationError::ErrorMesssages' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, PropertyPath) == 0x000010, "Member 'BP_PDT_GameAction_C_ReportValidationError::PropertyPath' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, Message) == 0x000020, "Member 'BP_PDT_GameAction_C_ReportValidationError::Message' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_PDT_GameAction_C_ReportValidationError::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'BP_PDT_GameAction_C_ReportValidationError::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'BP_PDT_GameAction_C_ReportValidationError::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000098, "Member 'BP_PDT_GameAction_C_ReportValidationError::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000A8, "Member 'BP_PDT_GameAction_C_ReportValidationError::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'BP_PDT_GameAction_C_ReportValidationError::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, K2Node_MakeStruct_FormatArgumentData_2) == 0x000100, "Member 'BP_PDT_GameAction_C_ReportValidationError::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, K2Node_MakeArray_Array) == 0x000148, "Member 'BP_PDT_GameAction_C_ReportValidationError::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, CallFunc_Format_ReturnValue) == 0x000158, "Member 'BP_PDT_GameAction_C_ReportValidationError::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ReportValidationError, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'BP_PDT_GameAction_C_ReportValidationError::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PDT_GameAction.BP_PDT_GameAction_C.ValidateGameAction
// 0x0028 (0x0028 - 0x0000)
struct BP_PDT_GameAction_C_ValidateGameAction final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 PropertyPath;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          ExploreAssetChildren;                              // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PDT_GameAction_C_ValidateGameAction) == 0x000008, "Wrong alignment on BP_PDT_GameAction_C_ValidateGameAction");
static_assert(sizeof(BP_PDT_GameAction_C_ValidateGameAction) == 0x000028, "Wrong size on BP_PDT_GameAction_C_ValidateGameAction");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameAction, ErrorMessages) == 0x000000, "Member 'BP_PDT_GameAction_C_ValidateGameAction::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameAction, PropertyPath) == 0x000010, "Member 'BP_PDT_GameAction_C_ValidateGameAction::PropertyPath' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameAction, ExploreAssetChildren) == 0x000020, "Member 'BP_PDT_GameAction_C_ValidateGameAction::ExploreAssetChildren' has a wrong offset!");

// Function BP_PDT_GameAction.BP_PDT_GameAction_C.ValidateGameActionWrapper
// 0x00F0 (0x00F0 - 0x0000)
struct BP_PDT_GameAction_C_ValidateGameActionWrapper final
{
public:
	TArray<class FText>                           ErrorMessages;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameAction_Wrapper                    GameActionWrapper;                                 // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 PropertyPath;                                      // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          ExploreAssetChildren;                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 local_relevantPropertyPath;                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UBP_PDT_GameAction_C*                   local_relevantAction;                              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_PDT_GameAction_C*                   K2Node_DynamicCast_AsBP_PDT_Game_Action;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PDT_GameAction_C*                   K2Node_DynamicCast_AsBP_PDT_Game_Action_1;         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PDT_GameAction_C_ValidateGameActionWrapper) == 0x000008, "Wrong alignment on BP_PDT_GameAction_C_ValidateGameActionWrapper");
static_assert(sizeof(BP_PDT_GameAction_C_ValidateGameActionWrapper) == 0x0000F0, "Wrong size on BP_PDT_GameAction_C_ValidateGameActionWrapper");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, ErrorMessages) == 0x000000, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::ErrorMessages' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, GameActionWrapper) == 0x000010, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::GameActionWrapper' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, PropertyPath) == 0x000020, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::PropertyPath' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, ExploreAssetChildren) == 0x000030, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::ExploreAssetChildren' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, local_relevantPropertyPath) == 0x000038, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::local_relevantPropertyPath' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, local_relevantAction) == 0x000048, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::local_relevantAction' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, K2Node_DynamicCast_AsBP_PDT_Game_Action) == 0x000070, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::K2Node_DynamicCast_AsBP_PDT_Game_Action' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_IsValid_ReturnValue_1) == 0x00007A, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, K2Node_DynamicCast_AsBP_PDT_Game_Action_1) == 0x0000B0, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::K2Node_DynamicCast_AsBP_PDT_Game_Action_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_IsValid_ReturnValue_3) == 0x0000B9, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000BA, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_GetDisplayName_ReturnValue_1) == 0x0000C0, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D8, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_IsValid_ReturnValue_4) == 0x0000E8, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000E9, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PDT_GameAction_C_ValidateGameActionWrapper, CallFunc_IsValid_ReturnValue_5) == 0x0000EA, "Member 'BP_PDT_GameAction_C_ValidateGameActionWrapper::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

}

