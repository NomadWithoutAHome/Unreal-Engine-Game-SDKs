#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GoldAmount

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_GoldAmount.WBP_GoldAmount_C.SetAnimationLerp
// 0x0028 (0x0028 - 0x0000)
struct WBP_GoldAmount_C_SetAnimationLerp final
{
public:
	double                                        AnimationLerp_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GoldAmount_C_SetAnimationLerp) == 0x000008, "Wrong alignment on WBP_GoldAmount_C_SetAnimationLerp");
static_assert(sizeof(WBP_GoldAmount_C_SetAnimationLerp) == 0x000028, "Wrong size on WBP_GoldAmount_C_SetAnimationLerp");
static_assert(offsetof(WBP_GoldAmount_C_SetAnimationLerp, AnimationLerp_0) == 0x000000, "Member 'WBP_GoldAmount_C_SetAnimationLerp::AnimationLerp_0' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_SetAnimationLerp, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WBP_GoldAmount_C_SetAnimationLerp::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_SetAnimationLerp, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000010, "Member 'WBP_GoldAmount_C_SetAnimationLerp::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_SetAnimationLerp, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'WBP_GoldAmount_C_SetAnimationLerp::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_SetAnimationLerp, CallFunc_FFloor_ReturnValue) == 0x000020, "Member 'WBP_GoldAmount_C_SetAnimationLerp::CallFunc_FFloor_ReturnValue' has a wrong offset!");

// Function WBP_GoldAmount.WBP_GoldAmount_C.UpdateCurrentValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_GoldAmount_C_UpdateCurrentValue final
{
public:
	int32                                         CurrentValue_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0010)()
};
static_assert(alignof(WBP_GoldAmount_C_UpdateCurrentValue) == 0x000008, "Wrong alignment on WBP_GoldAmount_C_UpdateCurrentValue");
static_assert(sizeof(WBP_GoldAmount_C_UpdateCurrentValue) == 0x000018, "Wrong size on WBP_GoldAmount_C_UpdateCurrentValue");
static_assert(offsetof(WBP_GoldAmount_C_UpdateCurrentValue, CurrentValue_0) == 0x000000, "Member 'WBP_GoldAmount_C_UpdateCurrentValue::CurrentValue_0' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_UpdateCurrentValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_GoldAmount_C_UpdateCurrentValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_GoldAmount.WBP_GoldAmount_C.AnimateValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_GoldAmount_C_AnimateValue final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GoldAmount_C_AnimateValue) == 0x000004, "Wrong alignment on WBP_GoldAmount_C_AnimateValue");
static_assert(sizeof(WBP_GoldAmount_C_AnimateValue) == 0x000004, "Wrong size on WBP_GoldAmount_C_AnimateValue");
static_assert(offsetof(WBP_GoldAmount_C_AnimateValue, NewValue) == 0x000000, "Member 'WBP_GoldAmount_C_AnimateValue::NewValue' has a wrong offset!");

// Function WBP_GoldAmount.WBP_GoldAmount_C.SetCurrentValue
// 0x0004 (0x0004 - 0x0000)
struct WBP_GoldAmount_C_SetCurrentValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GoldAmount_C_SetCurrentValue) == 0x000004, "Wrong alignment on WBP_GoldAmount_C_SetCurrentValue");
static_assert(sizeof(WBP_GoldAmount_C_SetCurrentValue) == 0x000004, "Wrong size on WBP_GoldAmount_C_SetCurrentValue");
static_assert(offsetof(WBP_GoldAmount_C_SetCurrentValue, Value) == 0x000000, "Member 'WBP_GoldAmount_C_SetCurrentValue::Value' has a wrong offset!");

// Function WBP_GoldAmount.WBP_GoldAmount_C.ExecuteUbergraph_WBP_GoldAmount
// 0x0020 (0x0020 - 0x0000)
struct WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_NewValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGoldAmount_GoldAmount;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount) == 0x000008, "Wrong alignment on WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount");
static_assert(sizeof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount) == 0x000020, "Wrong size on WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount");
static_assert(offsetof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount, EntryPoint) == 0x000000, "Member 'WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount, K2Node_CustomEvent_NewValue) == 0x000010, "Member 'WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount, K2Node_CustomEvent_Value) == 0x000014, "Member 'WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount, CallFunc_GetGoldAmount_GoldAmount) == 0x000018, "Member 'WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount::CallFunc_GetGoldAmount_GoldAmount' has a wrong offset!");
static_assert(offsetof(WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_GoldAmount_C_ExecuteUbergraph_WBP_GoldAmount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

