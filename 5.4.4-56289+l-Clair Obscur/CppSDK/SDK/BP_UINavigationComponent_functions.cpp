#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UINavigationComponent

#include "Basic.hpp"

#include "BP_UINavigationComponent_classes.hpp"
#include "BP_UINavigationComponent_parameters.hpp"


namespace SDK
{

// Function BP_UINavigationComponent.BP_UINavigationComponent_C.BP_UINavigationComponent_AutoGenFunc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_InputKeyState_C*              KeyState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::BP_UINavigationComponent_AutoGenFunc(class UBP_InputKeyState_C* KeyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "BP_UINavigationComponent_AutoGenFunc");

	Params::BP_UINavigationComponent_C_BP_UINavigationComponent_AutoGenFunc Parms{};

	Parms.KeyState = KeyState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetInputActionUICallback
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EInputAction                            InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void()>                 ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

const TDelegate<void()> UBP_UINavigationComponent_C::GetInputActionUICallback(EInputAction InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetInputActionUICallback");

	Params::BP_UINavigationComponent_C_GetInputActionUICallback Parms{};

	Parms.InputAction = InputAction;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.Has Any Input Action From List
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EInputAction*                           ArrayElement                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::Has_Any_Input_Action_From_List(TScriptInterface<class IBPI_UINavigationElement_C> Element, bool* Return_Value, EInputAction* ArrayElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "Has Any Input Action From List");

	Params::BP_UINavigationComponent_C_Has_Any_Input_Action_From_List Parms{};

	Parms.Element = Element;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;

	if (ArrayElement != nullptr)
		*ArrayElement = Parms.ArrayElement;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UnregisterInputAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::UnregisterInputAction(TScriptInterface<class IBPI_UINavigationElement_C> Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UnregisterInputAction");

	Params::BP_UINavigationComponent_C_UnregisterInputAction Parms{};

	Parms.Element = Element;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.OnElementAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::OnElementAction(TScriptInterface<class IBPI_UINavigationElement_C> InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "OnElementAction");

	Params::BP_UINavigationComponent_C_OnElementAction Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.OnInputActionPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::OnInputActionPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "OnInputActionPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.StopForceNavigationToElement
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::StopForceNavigationToElement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "StopForceNavigationToElement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterInputAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputAction                            InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_UINavigationElement_C>Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterInputAction(EInputAction InputAction, TScriptInterface<class IBPI_UINavigationElement_C> Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterInputAction");

	Params::BP_UINavigationComponent_C_RegisterInputAction Parms{};

	Parms.InputAction = InputAction;
	Parms.Element = Element;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ForceNavigationToElement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TScriptInterface<class IBPI_UINavigationElement_C>&Element                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TDelegate<void(TScriptInterface<class IBPI_UINavigationElement_C> NavigationElement)>&OnActivated                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    RestrictInput                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HijackInteraction_0                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ForceNavigationToElement(const TScriptInterface<class IBPI_UINavigationElement_C>& Element, const TDelegate<void(TScriptInterface<class IBPI_UINavigationElement_C> NavigationElement)>& OnActivated, bool RestrictInput, bool HijackInteraction_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ForceNavigationToElement");

	Params::BP_UINavigationComponent_C_ForceNavigationToElement Parms{};

	Parms.Element = Element;
	Parms.OnActivated = OnActivated;
	Parms.RestrictInput = RestrictInput;
	Parms.HijackInteraction_0 = HijackInteraction_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.CreateInputActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::CreateInputActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "CreateInputActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.StopHighlightOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::StopHighlightOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "StopHighlightOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.HighlightWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UWidget*&                   TargetWidget                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::HighlightWidget(const class UWidget*& TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "HighlightWidget");

	Params::BP_UINavigationComponent_C_HighlightWidget Parms{};

	Parms.TargetWidget = TargetWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.HighlightNothing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::HighlightNothing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "HighlightNothing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.HighlightWidgets
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const TArray<class UWidget*>&           TargetWidget                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_UINavigationComponent_C::HighlightWidgets(const TArray<class UWidget*>& TargetWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "HighlightWidgets");

	Params::BP_UINavigationComponent_C_HighlightWidgets Parms{};

	Parms.TargetWidget = std::move(TargetWidget);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.PrintNavigationStack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::PrintNavigationStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "PrintNavigationStack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterListNavigationGeneric_FromAny
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Vertical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterListNavigationGeneric_FromAny(TArray<class UObject*>& Objects, bool Vertical, bool Loop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterListNavigationGeneric_FromAny");

	Params::BP_UINavigationComponent_C_RegisterListNavigationGeneric_FromAny Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Vertical = Vertical;
	Parms.Loop = Loop;

	UObject::ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DeclareNavigationElementsGeneric
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 NavigationElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DeclareNavigationElementsGeneric(TArray<class UObject*>& NavigationElement, class UObject* Outer_0, EUINavigationLayer NavigationLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DeclareNavigationElementsGeneric");

	Params::BP_UINavigationComponent_C_DeclareNavigationElementsGeneric Parms{};

	Parms.NavigationElement = std::move(NavigationElement);
	Parms.Outer_0 = Outer_0;
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);

	NavigationElement = std::move(Parms.NavigationElement);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DeclareNavigationElementGeneric
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          NavigationElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_UINavigationElement_C>*BPI_NavigationElement                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DeclareNavigationElementGeneric(class UObject* NavigationElement, class UObject* Outer_0, EUINavigationLayer NavigationLayer, TScriptInterface<class IBPI_UINavigationElement_C>* BPI_NavigationElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DeclareNavigationElementGeneric");

	Params::BP_UINavigationComponent_C_DeclareNavigationElementGeneric Parms{};

	Parms.NavigationElement = NavigationElement;
	Parms.Outer_0 = Outer_0;
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);

	if (BPI_NavigationElement != nullptr)
		*BPI_NavigationElement = Parms.BPI_NavigationElement;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DeclareNavigationElements
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IBPI_UINavigationElement_C>>&NavigationElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DeclareNavigationElements(TArray<TScriptInterface<class IBPI_UINavigationElement_C>>& NavigationElement, class UObject* Outer_0, EUINavigationLayer NavigationLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DeclareNavigationElements");

	Params::BP_UINavigationComponent_C_DeclareNavigationElements Parms{};

	Parms.NavigationElement = std::move(NavigationElement);
	Parms.Outer_0 = Outer_0;
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);

	NavigationElement = std::move(Parms.NavigationElement);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DeclareNavigationElement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>NavigationElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DeclareNavigationElement(TScriptInterface<class IBPI_UINavigationElement_C> NavigationElement, class UObject* Outer_0, EUINavigationLayer NavigationLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DeclareNavigationElement");

	Params::BP_UINavigationComponent_C_DeclareNavigationElement Parms{};

	Parms.NavigationElement = NavigationElement;
	Parms.Outer_0 = Outer_0;
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.EDITORONLY_CheckOuters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::EDITORONLY_CheckOuters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "EDITORONLY_CheckOuters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UnregisterFromOuterObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::UnregisterFromOuterObject(class UObject* Outer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UnregisterFromOuterObject");

	Params::BP_UINavigationComponent_C_UnregisterFromOuterObject Parms{};

	Parms.Outer_0 = Outer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.CreateVirtualContainer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     PanelWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode*              NewNavigationNode                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// class UBP_UINavigationGenericElement_PanelWidget_C*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

class UBP_UINavigationGenericElement_PanelWidget_C* UBP_UINavigationComponent_C::CreateVirtualContainer(class UPanelWidget* PanelWidget, class UObject* Outer_0, struct FFUINavigationNode* NewNavigationNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "CreateVirtualContainer");

	Params::BP_UINavigationComponent_C_CreateVirtualContainer Parms{};

	Parms.PanelWidget = PanelWidget;
	Parms.Outer_0 = Outer_0;

	UObject::ProcessEvent(Func, &Parms);

	if (NewNavigationNode != nullptr)
		*NewNavigationNode = std::move(Parms.NewNavigationNode);

	return Parms.ReturnValue;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.HasNavigationFromActiveNode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EUINavigationDirection                  Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   HasNavigation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::HasNavigationFromActiveNode(EUINavigationDirection Direction, bool* HasNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "HasNavigationFromActiveNode");

	Params::BP_UINavigationComponent_C_HasNavigationFromActiveNode Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);

	if (HasNavigation != nullptr)
		*HasNavigation = Parms.HasNavigation;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DEBUG_GetInputActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_UINavigationInputActor_C**    InputActor_0                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DEBUG_GetInputActor(class ABP_UINavigationInputActor_C** InputActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DEBUG_GetInputActor");

	Params::BP_UINavigationComponent_C_DEBUG_GetInputActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputActor_0 != nullptr)
		*InputActor_0 = Parms.InputActor_0;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.InsertNavigationGridLine
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFNavigationGridCreationInfo&    NavGridInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class UObject*>&                 Column                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsColumn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OffsetX                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OffsetY                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFNavigationGridCreationInfo*    NavGridInfo_Out                                        (Parm, OutParm, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::InsertNavigationGridLine(struct FFNavigationGridCreationInfo& NavGridInfo, TArray<class UObject*>& Column, bool IsColumn, bool IsRow, int32 OffsetX, int32 OffsetY, struct FFNavigationGridCreationInfo* NavGridInfo_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "InsertNavigationGridLine");

	Params::BP_UINavigationComponent_C_InsertNavigationGridLine Parms{};

	Parms.NavGridInfo = std::move(NavGridInfo);
	Parms.Column = std::move(Column);
	Parms.IsColumn = IsColumn;
	Parms.IsRow = IsRow;
	Parms.OffsetX = OffsetX;
	Parms.OffsetY = OffsetY;

	UObject::ProcessEvent(Func, &Parms);

	NavGridInfo = std::move(Parms.NavGridInfo);
	Column = std::move(Parms.Column);

	if (NavGridInfo_Out != nullptr)
		*NavGridInfo_Out = std::move(Parms.NavGridInfo_Out);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.Register Parent Node
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFUINavigationNode&              ParentNode                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode&              ChildNode                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::Register_Parent_Node(struct FFUINavigationNode& ParentNode, struct FFUINavigationNode& ChildNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "Register Parent Node");

	Params::BP_UINavigationComponent_C_Register_Parent_Node Parms{};

	Parms.ParentNode = std::move(ParentNode);
	Parms.ChildNode = std::move(ChildNode);

	UObject::ProcessEvent(Func, &Parms);

	ParentNode = std::move(Parms.ParentNode);
	ChildNode = std::move(Parms.ChildNode);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterParentNodeForChildren
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UObject*>&                 Children                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_UINavigationComponent_C::RegisterParentNodeForChildren(class UObject* Parent, TArray<class UObject*>& Children)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterParentNodeForChildren");

	Params::BP_UINavigationComponent_C_RegisterParentNodeForChildren Parms{};

	Parms.Parent = Parent;
	Parms.Children = std::move(Children);

	UObject::ProcessEvent(Func, &Parms);

	Children = std::move(Parms.Children);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterNavigationGrid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFNavigationGridCreationInfo&    NavGridInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterNavigationGrid(struct FFNavigationGridCreationInfo& NavGridInfo, class UObject* Outer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterNavigationGrid");

	Params::BP_UINavigationComponent_C_RegisterNavigationGrid Parms{};

	Parms.NavGridInfo = std::move(NavGridInfo);
	Parms.Outer_0 = Outer_0;

	UObject::ProcessEvent(Func, &Parms);

	NavGridInfo = std::move(Parms.NavGridInfo);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.AppendNavigationGridLine
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFNavigationGridCreationInfo&    NavGridInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class UObject*>&                 Column                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsColumn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OffsetX                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OffsetY                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFNavigationGridCreationInfo*    NavGridInfo_Out                                        (Parm, OutParm, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::AppendNavigationGridLine(struct FFNavigationGridCreationInfo& NavGridInfo, TArray<class UObject*>& Column, bool IsColumn, bool IsRow, int32 OffsetX, int32 OffsetY, struct FFNavigationGridCreationInfo* NavGridInfo_Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "AppendNavigationGridLine");

	Params::BP_UINavigationComponent_C_AppendNavigationGridLine Parms{};

	Parms.NavGridInfo = std::move(NavGridInfo);
	Parms.Column = std::move(Column);
	Parms.IsColumn = IsColumn;
	Parms.IsRow = IsRow;
	Parms.OffsetX = OffsetX;
	Parms.OffsetY = OffsetY;

	UObject::ProcessEvent(Func, &Parms);

	NavGridInfo = std::move(Parms.NavGridInfo);
	Column = std::move(Parms.Column);

	if (NavGridInfo_Out != nullptr)
		*NavGridInfo_Out = std::move(Parms.NavGridInfo_Out);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.InitializeNavigationGrid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFNavigationGridCreationInfo*    FNavigationGridCreationInfo                            (Parm, OutParm, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::InitializeNavigationGrid(struct FFNavigationGridCreationInfo* FNavigationGridCreationInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "InitializeNavigationGrid");

	Params::BP_UINavigationComponent_C_InitializeNavigationGrid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FNavigationGridCreationInfo != nullptr)
		*FNavigationGridCreationInfo = std::move(Parms.FNavigationGridCreationInfo);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.SetNavigationDefaultObject
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::SetNavigationDefaultObject(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "SetNavigationDefaultObject");

	Params::BP_UINavigationComponent_C_SetNavigationDefaultObject Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetChildNavigationNodes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ParentNodeID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFUINavigationNode>*      NavNodes                                               (Parm, OutParm)

void UBP_UINavigationComponent_C::GetChildNavigationNodes(int32 ParentNodeID, TArray<struct FFUINavigationNode>* NavNodes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetChildNavigationNodes");

	Params::BP_UINavigationComponent_C_GetChildNavigationNodes Parms{};

	Parms.ParentNodeID = ParentNodeID;

	UObject::ProcessEvent(Func, &Parms);

	if (NavNodes != nullptr)
		*NavNodes = std::move(Parms.NavNodes);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetRootNavigationNodes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFUINavigationNode>*      RootNodes                                              (Parm, OutParm)

void UBP_UINavigationComponent_C::GetRootNavigationNodes(TArray<struct FFUINavigationNode>* RootNodes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetRootNavigationNodes");

	Params::BP_UINavigationComponent_C_GetRootNavigationNodes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RootNodes != nullptr)
		*RootNodes = std::move(Parms.RootNodes);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetNavigationNodeFullHierarchy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFUINavigationNode&              Node                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// TArray<int32>*                          HierarchyNodeIDs                                       (Parm, OutParm)

void UBP_UINavigationComponent_C::GetNavigationNodeFullHierarchy(struct FFUINavigationNode& Node, TArray<int32>* HierarchyNodeIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetNavigationNodeFullHierarchy");

	Params::BP_UINavigationComponent_C_GetNavigationNodeFullHierarchy Parms{};

	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);

	Node = std::move(Parms.Node);

	if (HierarchyNodeIDs != nullptr)
		*HierarchyNodeIDs = std::move(Parms.HierarchyNodeIDs);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.FindFirstHierarchyNodeInStack
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFUINavigationNode&              NavigationNode                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// int32*                                  FirstParentStackIndex                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  FirstParentNodeID                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::FindFirstHierarchyNodeInStack(struct FFUINavigationNode& NavigationNode, int32* FirstParentStackIndex, int32* FirstParentNodeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "FindFirstHierarchyNodeInStack");

	Params::BP_UINavigationComponent_C_FindFirstHierarchyNodeInStack Parms{};

	Parms.NavigationNode = std::move(NavigationNode);

	UObject::ProcessEvent(Func, &Parms);

	NavigationNode = std::move(Parms.NavigationNode);

	if (FirstParentStackIndex != nullptr)
		*FirstParentStackIndex = Parms.FirstParentStackIndex;

	if (FirstParentNodeID != nullptr)
		*FirstParentNodeID = Parms.FirstParentNodeID;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetActiveNode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFUINavigationNode*              Output                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::GetActiveNode(struct FFUINavigationNode* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetActiveNode");

	Params::BP_UINavigationComponent_C_GetActiveNode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterDirectionalLink_OneToOne_Generic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bidirectionnal                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterDirectionalLink_OneToOne_Generic(class UObject* Source, class UObject* Target, const struct FVector2D& Direction, bool Bidirectionnal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterDirectionalLink_OneToOne_Generic");

	Params::BP_UINavigationComponent_C_RegisterDirectionalLink_OneToOne_Generic Parms{};

	Parms.Source = Source;
	Parms.Target = Target;
	Parms.Direction = std::move(Direction);
	Parms.Bidirectionnal = Bidirectionnal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterPanelAsNavigationList
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     PanelWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Vertical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterPanelAsNavigationList(class UPanelWidget* PanelWidget, bool Vertical, class UObject* Outer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterPanelAsNavigationList");

	Params::BP_UINavigationComponent_C_RegisterPanelAsNavigationList Parms{};

	Parms.PanelWidget = PanelWidget;
	Parms.Vertical = Vertical;
	Parms.Outer_0 = Outer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterDirectionalLink_ManyToOne_Generic
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterDirectionalLink_ManyToOne_Generic(TArray<class UObject*>& Objects, class UObject* Target, const struct FVector2D& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterDirectionalLink_ManyToOne_Generic");

	Params::BP_UINavigationComponent_C_RegisterDirectionalLink_ManyToOne_Generic Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Target = Target;
	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetOrCreateNavigationElementList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<TScriptInterface<class IBPI_UINavigationElement_C>>*Value                                                  (Parm, OutParm)

void UBP_UINavigationComponent_C::GetOrCreateNavigationElementList(TArray<class UObject*>& Objects, TArray<TScriptInterface<class IBPI_UINavigationElement_C>>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetOrCreateNavigationElementList");

	Params::BP_UINavigationComponent_C_GetOrCreateNavigationElementList Parms{};

	Parms.Objects = std::move(Objects);

	UObject::ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetOrCreateNavigationElement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_UINavigationElement_C>*Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::GetOrCreateNavigationElement(class UObject* InputPin, TScriptInterface<class IBPI_UINavigationElement_C>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetOrCreateNavigationElement");

	Params::BP_UINavigationComponent_C_GetOrCreateNavigationElement Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetNavigationElement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UObject*&                   Object                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_UINavigationElement_C>*Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::GetNavigationElement(const class UObject*& Object, TScriptInterface<class IBPI_UINavigationElement_C>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetNavigationElement");

	Params::BP_UINavigationComponent_C_GetNavigationElement Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.NavigationNodeToString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFUINavigationNode&        NavNode                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class FText*                            Str                                                    (Parm, OutParm)

void UBP_UINavigationComponent_C::NavigationNodeToString(const struct FFUINavigationNode& NavNode, class FText* Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "NavigationNodeToString");

	Params::BP_UINavigationComponent_C_NavigationNodeToString Parms{};

	Parms.NavNode = std::move(NavNode);

	UObject::ProcessEvent(Func, &Parms);

	if (Str != nullptr)
		*Str = std::move(Parms.Str);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.IsNavigationNodeValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFUINavigationNode&        NavigationNode                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_UINavigationComponent_C::IsNavigationNodeValid(const struct FFUINavigationNode& NavigationNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "IsNavigationNodeValid");

	Params::BP_UINavigationComponent_C_IsNavigationNodeValid Parms{};

	Parms.NavigationNode = std::move(NavigationNode);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.CreateNavigationElement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_UINavigationElement_C>*Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::CreateNavigationElement(class UObject* InputPin, TScriptInterface<class IBPI_UINavigationElement_C>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "CreateNavigationElement");

	Params::BP_UINavigationComponent_C_CreateNavigationElement Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.CreateNavigationNode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>NavigationElement                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*&                         Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode*              NewNavigationNode                                      (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::CreateNavigationNode(TScriptInterface<class IBPI_UINavigationElement_C> NavigationElement, class UObject*& Outer_0, EUINavigationLayer NavigationLayer, struct FFUINavigationNode* NewNavigationNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "CreateNavigationNode");

	Params::BP_UINavigationComponent_C_CreateNavigationNode Parms{};

	Parms.NavigationElement = NavigationElement;
	Parms.Outer_0 = Outer_0;
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);

	Outer_0 = Parms.Outer_0;

	if (NewNavigationNode != nullptr)
		*NewNavigationNode = std::move(Parms.NewNavigationNode);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetNavigationNodeFromElement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode*              NavigationNode                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::GetNavigationNodeFromElement(TScriptInterface<class IBPI_UINavigationElement_C> Object, struct FFUINavigationNode* NavigationNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetNavigationNodeFromElement");

	Params::BP_UINavigationComponent_C_GetNavigationNodeFromElement Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (NavigationNode != nullptr)
		*NavigationNode = std::move(Parms.NavigationNode);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetOrCreateNavigationNodeFromElement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode*              NavigationNode                                         (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::GetOrCreateNavigationNodeFromElement(TScriptInterface<class IBPI_UINavigationElement_C> Object, struct FFUINavigationNode* NavigationNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetOrCreateNavigationNodeFromElement");

	Params::BP_UINavigationComponent_C_GetOrCreateNavigationNodeFromElement Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (NavigationNode != nullptr)
		*NavigationNode = std::move(Parms.NavigationNode);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.CreateGenericNavigationElement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UBP_UINavigationGenericElement_Widget_C*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

class UBP_UINavigationGenericElement_Widget_C* UBP_UINavigationComponent_C::CreateGenericNavigationElement(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "CreateGenericNavigationElement");

	Params::BP_UINavigationComponent_C_CreateGenericNavigationElement Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.IsActiveNavigationNodeObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>InterfaceObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_UINavigationComponent_C::IsActiveNavigationNodeObject(TScriptInterface<class IBPI_UINavigationElement_C> InterfaceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "IsActiveNavigationNodeObject");

	Params::BP_UINavigationComponent_C_IsActiveNavigationNodeObject Parms{};

	Parms.InterfaceObject = InterfaceObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.IsActiveNavigationNode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FFUINavigationNode&        NavNode                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_UINavigationComponent_C::IsActiveNavigationNode(const struct FFUINavigationNode& NavNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "IsActiveNavigationNode");

	Params::BP_UINavigationComponent_C_IsActiveNavigationNode Parms{};

	Parms.NavNode = std::move(NavNode);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UnregisterNavigationGraph
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::UnregisterNavigationGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UnregisterNavigationGraph");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterListNavigationGenericDeclareChildren
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>&                 Objects                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Vertical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          Outer_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterListNavigationGenericDeclareChildren(TArray<class UObject*>& Objects, bool Vertical, class UObject* Outer_0, EUINavigationLayer NavigationLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterListNavigationGenericDeclareChildren");

	Params::BP_UINavigationComponent_C_RegisterListNavigationGenericDeclareChildren Parms{};

	Parms.Objects = std::move(Objects);
	Parms.Vertical = Vertical;
	Parms.Outer_0 = Outer_0;
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);

	Objects = std::move(Parms.Objects);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UnfocusNavigableElement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>NavElement                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::UnfocusNavigableElement(TScriptInterface<class IBPI_UINavigationElement_C> NavElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UnfocusNavigableElement");

	Params::BP_UINavigationComponent_C_UnfocusNavigableElement Parms{};

	Parms.NavElement = NavElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.FocusNavigableElement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>NavElement                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::FocusNavigableElement(TScriptInterface<class IBPI_UINavigationElement_C> NavElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "FocusNavigableElement");

	Params::BP_UINavigationComponent_C_FocusNavigableElement Parms{};

	Parms.NavElement = NavElement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.FindNodeByNavigableElement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>NavElement                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode*              Value                                                  (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::FindNodeByNavigableElement(TScriptInterface<class IBPI_UINavigationElement_C> NavElement, struct FFUINavigationNode* Value, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "FindNodeByNavigableElement");

	Params::BP_UINavigationComponent_C_FindNodeByNavigableElement Parms{};

	Parms.NavElement = NavElement;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UpdateNavigationNode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFUINavigationNode&        NavNode                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::UpdateNavigationNode(const struct FFUINavigationNode& NavNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UpdateNavigationNode");

	Params::BP_UINavigationComponent_C_UpdateNavigationNode Parms{};

	Parms.NavNode = std::move(NavNode);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DeactivateNavigationNode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFUINavigationNode&        NavigationNode                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DeactivateNavigationNode(const struct FFUINavigationNode& NavigationNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DeactivateNavigationNode");

	Params::BP_UINavigationComponent_C_DeactivateNavigationNode Parms{};

	Parms.NavigationNode = std::move(NavigationNode);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ActivateNavigationNodeHierarchy
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFUINavigationNode&              FinalNode                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ActivateNavigationNodeHierarchy(struct FFUINavigationNode& FinalNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ActivateNavigationNodeHierarchy");

	Params::BP_UINavigationComponent_C_ActivateNavigationNodeHierarchy Parms{};

	Parms.FinalNode = std::move(FinalNode);

	UObject::ProcessEvent(Func, &Parms);

	FinalNode = std::move(Parms.FinalNode);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ActivateNavigationNodeInternal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFUINavigationNode&        NavigationNode                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFinalNode                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ActivateNavigationNodeInternal(const struct FFUINavigationNode& NavigationNode, bool IsFinalNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ActivateNavigationNodeInternal");

	Params::BP_UINavigationComponent_C_ActivateNavigationNodeInternal Parms{};

	Parms.NavigationNode = std::move(NavigationNode);
	Parms.IsFinalNode = IsFinalNode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ActivateNavigationElementGeneric
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ActivateNavigationElementGeneric(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ActivateNavigationElementGeneric");

	Params::BP_UINavigationComponent_C_ActivateNavigationElementGeneric Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ActivateNavigationElement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ActivateNavigationElement(TScriptInterface<class IBPI_UINavigationElement_C> Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ActivateNavigationElement");

	Params::BP_UINavigationComponent_C_ActivateNavigationElement Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DEPRECATED_ActivateNavigationNode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FFUINavigationNode&        NavigationNode                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DEPRECATED_ActivateNavigationNode(const struct FFUINavigationNode& NavigationNode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DEPRECATED_ActivateNavigationNode");

	Params::BP_UINavigationComponent_C_DEPRECATED_ActivateNavigationNode Parms{};

	Parms.NavigationNode = std::move(NavigationNode);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.Get Tied Object From Interface
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>InterfaceObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject**                         Object                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::Get_Tied_Object_From_Interface(TScriptInterface<class IBPI_UINavigationElement_C> InterfaceObject, class UObject** Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "Get Tied Object From Interface");

	Params::BP_UINavigationComponent_C_Get_Tied_Object_From_Interface Parms{};

	Parms.InterfaceObject = InterfaceObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Object != nullptr)
		*Object = Parms.Object;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.Has Any Face Action From List
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFaceActions*                           Array_Element                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::Has_Any_Face_Action_From_List(TScriptInterface<class IBPI_UINavigationElement_C> Element, bool* Return_Value, EFaceActions* Array_Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "Has Any Face Action From List");

	Params::BP_UINavigationComponent_C_Has_Any_Face_Action_From_List Parms{};

	Parms.Element = Element;

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;

	if (Array_Element != nullptr)
		*Array_Element = Parms.Array_Element;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UnregisterFaceAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::UnregisterFaceAction(TScriptInterface<class IBPI_UINavigationElement_C> Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UnregisterFaceAction");

	Params::BP_UINavigationComponent_C_UnregisterFaceAction Parms{};

	Parms.Element = Element;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterFaceAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFaceActions                            FaceButton                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_UINavigationElement_C>Element                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterFaceAction(EFaceActions FaceButton, TScriptInterface<class IBPI_UINavigationElement_C> Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterFaceAction");

	Params::BP_UINavigationComponent_C_RegisterFaceAction Parms{};

	Parms.FaceButton = FaceButton;
	Parms.Element = Element;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DEPRECATED_GetNextOrPrevious
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IBPI_UINavigationElement_C>CurrentElement                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<TScriptInterface<class IBPI_UINavigationElement_C>>&Elements                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Next                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Wrap                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IBPI_UINavigationElement_C>*Output                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DEPRECATED_GetNextOrPrevious(TScriptInterface<class IBPI_UINavigationElement_C> CurrentElement, TArray<TScriptInterface<class IBPI_UINavigationElement_C>>& Elements, bool Next, bool Wrap, TScriptInterface<class IBPI_UINavigationElement_C>* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DEPRECATED_GetNextOrPrevious");

	Params::BP_UINavigationComponent_C_DEPRECATED_GetNextOrPrevious Parms{};

	Parms.CurrentElement = CurrentElement;
	Parms.Elements = std::move(Elements);
	Parms.Next = Next;
	Parms.Wrap = Wrap;

	UObject::ProcessEvent(Func, &Parms);

	Elements = std::move(Parms.Elements);

	if (Output != nullptr)
		*Output = Parms.Output;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterListNavigation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IBPI_UINavigationElement_C>>&Elements                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Vertical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::RegisterListNavigation(TArray<TScriptInterface<class IBPI_UINavigationElement_C>>& Elements, bool Vertical, bool Loop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterListNavigation");

	Params::BP_UINavigationComponent_C_RegisterListNavigation Parms{};

	Parms.Elements = std::move(Elements);
	Parms.Vertical = Vertical;
	Parms.Loop = Loop;

	UObject::ProcessEvent(Func, &Parms);

	Elements = std::move(Parms.Elements);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.SetDirectionalLink
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector2D&                 Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode&              NavNode                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// int32                                   TargetNodeID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFUINavigationNode*              StructOut                                              (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::SetDirectionalLink(const struct FVector2D& Direction, struct FFUINavigationNode& NavNode, int32 TargetNodeID, struct FFUINavigationNode* StructOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "SetDirectionalLink");

	Params::BP_UINavigationComponent_C_SetDirectionalLink Parms{};

	Parms.Direction = std::move(Direction);
	Parms.NavNode = std::move(NavNode);
	Parms.TargetNodeID = TargetNodeID;

	UObject::ProcessEvent(Func, &Parms);

	NavNode = std::move(Parms.NavNode);

	if (StructOut != nullptr)
		*StructOut = std::move(Parms.StructOut);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.TryDirectionalNavigationOnNode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FIntVector&                Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FFUINavigationNode&        FUINavigationNode                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Consumed                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::TryDirectionalNavigationOnNode(const struct FIntVector& Direction, const struct FFUINavigationNode& FUINavigationNode, EUINavigationLayer NavigationLayer, bool* Consumed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "TryDirectionalNavigationOnNode");

	Params::BP_UINavigationComponent_C_TryDirectionalNavigationOnNode Parms{};

	Parms.Direction = std::move(Direction);
	Parms.FUINavigationNode = std::move(FUINavigationNode);
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);

	if (Consumed != nullptr)
		*Consumed = Parms.Consumed;
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UnregisterActions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IBPI_UINavigationElement_C>>&ActionElementsToRemove                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_UINavigationComponent_C::UnregisterActions(TArray<TScriptInterface<class IBPI_UINavigationElement_C>>& ActionElementsToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UnregisterActions");

	Params::BP_UINavigationComponent_C_UnregisterActions Parms{};

	Parms.ActionElementsToRemove = std::move(ActionElementsToRemove);

	UObject::ProcessEvent(Func, &Parms);

	ActionElementsToRemove = std::move(Parms.ActionElementsToRemove);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RegisterFaceActions
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TScriptInterface<class IBPI_UINavigationElement_C>>&ActionElements                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_UINavigationComponent_C::RegisterFaceActions(TArray<TScriptInterface<class IBPI_UINavigationElement_C>>& ActionElements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RegisterFaceActions");

	Params::BP_UINavigationComponent_C_RegisterFaceActions Parms{};

	Parms.ActionElements = std::move(ActionElements);

	UObject::ProcessEvent(Func, &Parms);

	ActionElements = std::move(Parms.ActionElements);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.OnActionButtonPressed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFaceActions                            Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::OnActionButtonPressed(EFaceActions Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "OnActionButtonPressed");

	Params::BP_UINavigationComponent_C_OnActionButtonPressed Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.OnDirectionalNavigation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FIntVector&                Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUINavigationLayer                      NavigationLayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::OnDirectionalNavigation(const struct FIntVector& Direction, EUINavigationLayer NavigationLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "OnDirectionalNavigation");

	Params::BP_UINavigationComponent_C_OnDirectionalNavigation Parms{};

	Parms.Direction = std::move(Direction);
	Parms.NavigationLayer = NavigationLayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.FaceDownButtonPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::FaceDownButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "FaceDownButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.FaceRightButtonPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::FaceRightButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "FaceRightButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.FaceUpButtonPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::FaceUpButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "FaceUpButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.FaceLeftButtonPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::FaceLeftButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "FaceLeftButtonPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DownPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::DownPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DownPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.RightPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::RightPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "RightPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.UpPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::UpPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "UpPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.LeftPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::LeftPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "LeftPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ReceiveTick");

	Params::BP_UINavigationComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_UINavigationComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.EnableInput
// (BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::EnableInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "EnableInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DisableInput
// (BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::DisableInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DisableInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.InputAction_UI_OpenGameMenu
// (BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::InputAction_UI_OpenGameMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "InputAction_UI_OpenGameMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.DEBUG_OnOverlayToggle
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::DEBUG_OnOverlayToggle(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "DEBUG_OnOverlayToggle");

	Params::BP_UINavigationComponent_C_DEBUG_OnOverlayToggle Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.InputAction_Unsupported
// (BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::InputAction_Unsupported()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "InputAction_Unsupported");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.OnInputActionUI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EInputAction                            InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::OnInputActionUI(EInputAction InputAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "OnInputActionUI");

	Params::BP_UINavigationComponent_C_OnInputActionUI Parms{};

	Parms.InputAction = InputAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.InputAction_UI_Cancel
// (BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::InputAction_UI_Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "InputAction_UI_Cancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.InputAction_UI_Confirm
// (BlueprintCallable, BlueprintEvent)

void UBP_UINavigationComponent_C::InputAction_UI_Confirm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "InputAction_UI_Confirm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ReceiveEndPlay");

	Params::BP_UINavigationComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.ExecuteUbergraph_BP_UINavigationComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::ExecuteUbergraph_BP_UINavigationComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "ExecuteUbergraph_BP_UINavigationComponent");

	Params::BP_UINavigationComponent_C_ExecuteUbergraph_BP_UINavigationComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UINavigationComponent.BP_UINavigationComponent_C.GetGridPositionForWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FFNavigationGridCreationInfo&    Grid                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FIntVector*                      Coords                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UINavigationComponent_C::GetGridPositionForWidget(class UObject* Object, struct FFNavigationGridCreationInfo& Grid, struct FIntVector* Coords, bool* Found) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UINavigationComponent_C", "GetGridPositionForWidget");

	Params::BP_UINavigationComponent_C_GetGridPositionForWidget Parms{};

	Parms.Object = Object;
	Parms.Grid = std::move(Grid);

	UObject::ProcessEvent(Func, &Parms);

	Grid = std::move(Parms.Grid);

	if (Coords != nullptr)
		*Coords = std::move(Parms.Coords);

	if (Found != nullptr)
		*Found = Parms.Found;
}

}

