#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CinematicCharacter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_CinematicCharacter_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DragonIKPlugin_structs.hpp"
#include "E_Cine_HandPosesType_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CinematicCharacter.ABP_CinematicCharacter_C
// 0x1D70 (0x20E0 - 0x0370)
class UABP_CinematicCharacter_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_CinematicCharacter::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;       // 0x0378(0x0018)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0390(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0398(0x0008)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x03A0(0x0080)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0420(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0468(0x0020)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_2;                     // 0x0488(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0550(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0598(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x05B8(0x0020)()
	uint8                                         Pad_5D8[0x8];                                      // 0x05D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_DragonAimSolver              AnimGraphNode_DragonAimSolver;                     // 0x05E0(0x0D80)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive_1;                     // 0x1360(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1428(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1478(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x14A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x14C8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1510(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1530(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1578(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1598(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x15B8(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1680(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x16C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x16F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1718(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1740(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1760(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x17D0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x17F0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x18B8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x18E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1908(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1930(0x0028)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x1958(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1A20(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1A68(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1AB0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1AD0(0x00C8)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x1B98(0x00F0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1C88(0x0080)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1D08(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1DF8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1E20(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1E48(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1EC8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x1EF0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1F38(0x0080)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1FB8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2000(0x0048)()
	E_Cine_HandPosesType                          HandsPose;                                         // 0x2048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2049[0x7];                                     // 0x2049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CineCharacter_Main_C*               As_BP_Cine_Character_Main;                         // 0x2050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Mocap_Hands;                                   // 0x2058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2059[0x3];                                     // 0x2059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HandsManualBlendWeight;                            // 0x205C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousPelvisLocation;                            // 0x2060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookAtAlpha;                                       // 0x2078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_207C[0x4];                                     // 0x207C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtPosition;                                    // 0x2080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Breathing_Alpha;                                   // 0x2098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         BreathingPlayRate;                                 // 0x20A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         Start_PositionBreathingAnimation;                  // 0x20A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Turning_Direction;                                 // 0x20A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20AC[0x4];                                     // 0x20AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x20B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Automatic_Movement_System;                     // 0x20B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20B9[0x7];                                     // 0x20B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlendSpace*                            Movement_Blend_Space;                              // 0x20C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          OnlyMoveHeadForLookAt;                             // 0x20C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C9[0x7];                                     // 0x20C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LookAtInterpolationSpeed;                          // 0x20D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HandAdditive_Activate;                             // 0x20D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BreathingPlayRateRandomize();
	void CheckIfPelvisHasMoved();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_BlendListByBool_E3FC68794220DEC4112B179B71758877();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_DragonAimSolver_820EFBEE42328E95486EC2AFF3471F68();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_TransitionResult_07D3976043C530225F447C87DCF75376();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_TransitionResult_2CC49723491184FB7CB5D88B2354F293();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_TransitionResult_68763F7C4E3C80A226A66A92D3809994();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_TransitionResult_6BB48218429E454AC7F995B242279C9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_TransitionResult_8328285A49490A851B0A56BF345CE3AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_CinematicCharacter_AnimGraphNode_TransitionResult_9EA42E19433B497700A2E881B609D42F();
	void ExecuteUbergraph_ABP_CinematicCharacter(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CinematicCharacter_C">();
	}
	static class UABP_CinematicCharacter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CinematicCharacter_C>();
	}
};
static_assert(alignof(UABP_CinematicCharacter_C) == 0x000010, "Wrong alignment on UABP_CinematicCharacter_C");
static_assert(sizeof(UABP_CinematicCharacter_C) == 0x0020E0, "Wrong size on UABP_CinematicCharacter_C");
static_assert(offsetof(UABP_CinematicCharacter_C, UberGraphFrame) == 0x000370, "Member 'UABP_CinematicCharacter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, __AnimBlueprintMutables) == 0x000378, "Member 'UABP_CinematicCharacter_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimBlueprintExtension_PropertyAccess) == 0x000390, "Member 'UABP_CinematicCharacter_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimBlueprintExtension_Base) == 0x000398, "Member 'UABP_CinematicCharacter_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SaveCachedPose_3) == 0x0003A0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_Slot_1) == 0x000420, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_Root) == 0x000468, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_ApplyAdditive_2) == 0x000488, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_ApplyAdditive_2' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SequencePlayer_4) == 0x000550, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_LocalToComponentSpace) == 0x000598, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_ComponentToLocalSpace) == 0x0005B8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_DragonAimSolver) == 0x0005E0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_DragonAimSolver' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_ApplyAdditive_1) == 0x001360, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_ApplyAdditive_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_TransitionResult_5) == 0x001428, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_TransitionResult_4) == 0x001450, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_TransitionResult_3) == 0x001478, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_TransitionResult_2) == 0x0014A0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SequencePlayer_3) == 0x0014C8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateResult_5) == 0x001510, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SequencePlayer_2) == 0x001530, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateResult_4) == 0x001578, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateResult_3) == 0x001598, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateMachine_2) == 0x0015B8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_BlendListByBool_1) == 0x001680, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_TransitionResult_1) == 0x0016C8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_TransitionResult) == 0x0016F0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose_7) == 0x001718, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateResult_2) == 0x001740, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_BlendSpacePlayer) == 0x001760, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateResult_1) == 0x0017D0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateMachine_1) == 0x0017F0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose_6) == 0x0018B8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose_5) == 0x0018E0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose_4) == 0x001908, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose_3) == 0x001930, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_ApplyAdditive) == 0x001958, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_BlendListByBool) == 0x001A20, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SequencePlayer_1) == 0x001A68, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateResult) == 0x001AB0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_StateMachine) == 0x001AD0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_LayeredBoneBlend_1) == 0x001B98, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SaveCachedPose_2) == 0x001C88, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_LayeredBoneBlend) == 0x001D08, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose_2) == 0x001DF8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose_1) == 0x001E20, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SaveCachedPose_1) == 0x001E48, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_UseCachedPose) == 0x001EC8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_Slot) == 0x001EF0, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SaveCachedPose) == 0x001F38, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_BlendListByEnum) == 0x001FB8, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, AnimGraphNode_SequencePlayer) == 0x002000, "Member 'UABP_CinematicCharacter_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, HandsPose) == 0x002048, "Member 'UABP_CinematicCharacter_C::HandsPose' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, As_BP_Cine_Character_Main) == 0x002050, "Member 'UABP_CinematicCharacter_C::As_BP_Cine_Character_Main' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, Use_Mocap_Hands) == 0x002058, "Member 'UABP_CinematicCharacter_C::Use_Mocap_Hands' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, HandsManualBlendWeight) == 0x00205C, "Member 'UABP_CinematicCharacter_C::HandsManualBlendWeight' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, PreviousPelvisLocation) == 0x002060, "Member 'UABP_CinematicCharacter_C::PreviousPelvisLocation' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, LookAtAlpha) == 0x002078, "Member 'UABP_CinematicCharacter_C::LookAtAlpha' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, LookAtPosition) == 0x002080, "Member 'UABP_CinematicCharacter_C::LookAtPosition' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, Breathing_Alpha) == 0x002098, "Member 'UABP_CinematicCharacter_C::Breathing_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, BreathingPlayRate) == 0x0020A0, "Member 'UABP_CinematicCharacter_C::BreathingPlayRate' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, Start_PositionBreathingAnimation) == 0x0020A4, "Member 'UABP_CinematicCharacter_C::Start_PositionBreathingAnimation' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, Turning_Direction) == 0x0020A8, "Member 'UABP_CinematicCharacter_C::Turning_Direction' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, Speed) == 0x0020B0, "Member 'UABP_CinematicCharacter_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, Use_Automatic_Movement_System) == 0x0020B8, "Member 'UABP_CinematicCharacter_C::Use_Automatic_Movement_System' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, Movement_Blend_Space) == 0x0020C0, "Member 'UABP_CinematicCharacter_C::Movement_Blend_Space' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, OnlyMoveHeadForLookAt) == 0x0020C8, "Member 'UABP_CinematicCharacter_C::OnlyMoveHeadForLookAt' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, LookAtInterpolationSpeed) == 0x0020D0, "Member 'UABP_CinematicCharacter_C::LookAtInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(UABP_CinematicCharacter_C, HandAdditive_Activate) == 0x0020D8, "Member 'UABP_CinematicCharacter_C::HandAdditive_Activate' has a wrong offset!");

}

