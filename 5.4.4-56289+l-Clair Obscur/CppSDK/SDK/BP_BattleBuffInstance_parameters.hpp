#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleBuffInstance

#include "Basic.hpp"

#include "EPerfectionReason_structs.hpp"
#include "E_jRPG_CharacterAttachmentSlot_structs.hpp"
#include "EDamageReason_structs.hpp"
#include "EAPChangeReason_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_StanceType_structs.hpp"
#include "E_PerfectionUpdateType_structs.hpp"
#include "Engine_structs.hpp"
#include "FAudioBattle_BuffActivation_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ActivateBuff
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_ActivateBuff final
{
public:
	const class UAC_jRPG_CharacterBattleStats_C*  CharacterStats;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ActivateBuff) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ActivateBuff");
static_assert(sizeof(BP_BattleBuffInstance_C_ActivateBuff) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_ActivateBuff");
static_assert(offsetof(BP_BattleBuffInstance_C_ActivateBuff, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_C_ActivateBuff::CharacterStats' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterTurnStart
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_OnCharacterTurnStart final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UBP_DependencyRefCounter_C*       TurnStartDependencies;                             // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnCharacterTurnStart) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_OnCharacterTurnStart");
static_assert(sizeof(BP_BattleBuffInstance_C_OnCharacterTurnStart) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_OnCharacterTurnStart");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterTurnStart, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnCharacterTurnStart::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterTurnStart, TurnStartDependencies) == 0x000008, "Member 'BP_BattleBuffInstance_C_OnCharacterTurnStart::TurnStartDependencies' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessReceivedRawDamages
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessReceivedRawDamages final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessReceivedRawDamages) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessReceivedRawDamages");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessReceivedRawDamages) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessReceivedRawDamages");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessReceivedRawDamages, BattleDamages) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessReceivedRawDamages::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessReceivedRawDamages, Out) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessReceivedRawDamages::Out' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ExecuteUbergraph_BP_BattleBuffInstance
// 0x00E8 (0x00E8 - 0x0000)
struct BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_DynamicCast_AsSound_Base;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_TargetCharacter;                      // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_SourceCharacter;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_ReceivedDamages;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    K2Node_Event_BattleDamages;                        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_CharacterStats_2;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UAction_AddBuff_C*                K2Node_Event_BuffAddAction;                        // 0x0050(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        K2Node_Event_CharacterStats_1;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UBP_DependencyRefCounter_C*       K2Node_Event_TurnStartDependencies;                // 0x0060(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    K2Node_Event_BattleDamage;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleEvent_APChange_C*             K2Node_Event_AP_Change;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UAC_jRPG_CharacterBattleStats_C*  K2Node_Event_CharacterStats;                       // 0x0078(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDataRowHandleSet_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFAudioBattle_BuffActivation           CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance");
static_assert(sizeof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance) == 0x0000E8, "Wrong size on BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, EntryPoint) == 0x000000, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, Temp_object_Variable) == 0x000010, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_DynamicCast_AsSound_Base) == 0x000018, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_DynamicCast_AsSound_Base' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_TargetCharacter) == 0x000028, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_SourceCharacter) == 0x000030, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_ReceivedDamages) == 0x000038, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_ReceivedDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_BattleDamages) == 0x000040, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_CharacterStats_2) == 0x000048, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_CharacterStats_2' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_BuffAddAction) == 0x000050, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_BuffAddAction' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_CharacterStats_1) == 0x000058, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_CharacterStats_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_TurnStartDependencies) == 0x000060, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_TurnStartDependencies' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_BattleDamage) == 0x000068, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_BattleDamage' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_AP_Change) == 0x000070, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_AP_Change' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_Event_CharacterStats) == 0x000078, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_Event_CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, CallFunc_IsDataRowHandleSet_ReturnValue) == 0x0000B0, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::CallFunc_IsDataRowHandleSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B8, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'BP_BattleBuffInstance_C_ExecuteUbergraph_BP_BattleBuffInstance::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetDamageSourceCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_GetDamageSourceCharacter final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_GetDamageSourceCharacter) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_GetDamageSourceCharacter");
static_assert(sizeof(BP_BattleBuffInstance_C_GetDamageSourceCharacter) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_GetDamageSourceCharacter");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDamageSourceCharacter, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_C_GetDamageSourceCharacter::CharacterStats' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetDamageSourceType
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleBuffInstance_C_GetDamageSourceType final
{
public:
	EDamageReason                                 DamageSourceType;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_GetDamageSourceType) == 0x000001, "Wrong alignment on BP_BattleBuffInstance_C_GetDamageSourceType");
static_assert(sizeof(BP_BattleBuffInstance_C_GetDamageSourceType) == 0x000001, "Wrong size on BP_BattleBuffInstance_C_GetDamageSourceType");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDamageSourceType, DamageSourceType) == 0x000000, "Member 'BP_BattleBuffInstance_C_GetDamageSourceType::DamageSourceType' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsTurnStartInProgress
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleBuffInstance_C_IsTurnStartInProgress final
{
public:
	bool                                          InProgress;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_IsTurnStartInProgress) == 0x000001, "Wrong alignment on BP_BattleBuffInstance_C_IsTurnStartInProgress");
static_assert(sizeof(BP_BattleBuffInstance_C_IsTurnStartInProgress) == 0x000001, "Wrong size on BP_BattleBuffInstance_C_IsTurnStartInProgress");
static_assert(offsetof(BP_BattleBuffInstance_C_IsTurnStartInProgress, InProgress) == 0x000000, "Member 'BP_BattleBuffInstance_C_IsTurnStartInProgress::InProgress' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterDealtDamages
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleBuffInstance_C_OnCharacterDealtDamages final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Damages;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProcessedDamages;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnCharacterDealtDamages) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_OnCharacterDealtDamages");
static_assert(sizeof(BP_BattleBuffInstance_C_OnCharacterDealtDamages) == 0x000018, "Wrong size on BP_BattleBuffInstance_C_OnCharacterDealtDamages");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterDealtDamages, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnCharacterDealtDamages::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterDealtDamages, Damages) == 0x000008, "Member 'BP_BattleBuffInstance_C_OnCharacterDealtDamages::Damages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterDealtDamages, ProcessedDamages) == 0x000010, "Member 'BP_BattleBuffInstance_C_OnCharacterDealtDamages::ProcessedDamages' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetInstigatorObject
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_GetInstigatorObject final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_GetInstigatorObject) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_GetInstigatorObject");
static_assert(sizeof(BP_BattleBuffInstance_C_GetInstigatorObject) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_GetInstigatorObject");
static_assert(offsetof(BP_BattleBuffInstance_C_GetInstigatorObject, ReturnValue) == 0x000000, "Member 'BP_BattleBuffInstance_C_GetInstigatorObject::ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.SetInstigatorObject
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_SetInstigatorObject final
{
public:
	class UObject*                                Instigator;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_SetInstigatorObject) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_SetInstigatorObject");
static_assert(sizeof(BP_BattleBuffInstance_C_SetInstigatorObject) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_SetInstigatorObject");
static_assert(offsetof(BP_BattleBuffInstance_C_SetInstigatorObject, Instigator) == 0x000000, "Member 'BP_BattleBuffInstance_C_SetInstigatorObject::Instigator' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ModifyOwnerSkillStates
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BattleBuffInstance_C_ModifyOwnerSkillStates final
{
public:
	TMap<class UBP_DataAsset_Skill_C*, class UBP_SkillState_C*> SkillStates;                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UBP_DataAsset_Skill_C*, class UBP_SkillState_C*> NewLocalVar;                         // 0x0050(0x0050)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_BattleBuffInstance_C_ModifyOwnerSkillStates) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ModifyOwnerSkillStates");
static_assert(sizeof(BP_BattleBuffInstance_C_ModifyOwnerSkillStates) == 0x0000A0, "Wrong size on BP_BattleBuffInstance_C_ModifyOwnerSkillStates");
static_assert(offsetof(BP_BattleBuffInstance_C_ModifyOwnerSkillStates, SkillStates) == 0x000000, "Member 'BP_BattleBuffInstance_C_ModifyOwnerSkillStates::SkillStates' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ModifyOwnerSkillStates, NewLocalVar) == 0x000050, "Member 'BP_BattleBuffInstance_C_ModifyOwnerSkillStates::NewLocalVar' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessBattleStartEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessBattleStartEvent final
{
public:
	class UBP_DependencyRefCounter_C*             DepsRefCount;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessBattleStartEvent) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessBattleStartEvent");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessBattleStartEvent) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_ProcessBattleStartEvent");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessBattleStartEvent, DepsRefCount) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessBattleStartEvent::DepsRefCount' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessDealtDamageCriticalHitChance
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance final
{
public:
	class UBP_BattleDamages_C*                    Damages;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance, Damages) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance::Damages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance, Out) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessDealtDamageCriticalHitChance::Out' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnVisualEffectDimChange
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleBuffInstance_C_OnVisualEffectDimChange final
{
public:
	bool                                          IsDimmed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnVisualEffectDimChange) == 0x000001, "Wrong alignment on BP_BattleBuffInstance_C_OnVisualEffectDimChange");
static_assert(sizeof(BP_BattleBuffInstance_C_OnVisualEffectDimChange) == 0x000001, "Wrong size on BP_BattleBuffInstance_C_OnVisualEffectDimChange");
static_assert(offsetof(BP_BattleBuffInstance_C_OnVisualEffectDimChange, IsDimmed) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnVisualEffectDimChange::IsDimmed' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.SetTurnDuration
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_SetTurnDuration final
{
public:
	int32                                         TurnDuration_0;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_SetTurnDuration) == 0x000004, "Wrong alignment on BP_BattleBuffInstance_C_SetTurnDuration");
static_assert(sizeof(BP_BattleBuffInstance_C_SetTurnDuration) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_SetTurnDuration");
static_assert(offsetof(BP_BattleBuffInstance_C_SetTurnDuration, TurnDuration_0) == 0x000000, "Member 'BP_BattleBuffInstance_C_SetTurnDuration::TurnDuration_0' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_SetTurnDuration, CallFunc_Max_ReturnValue) == 0x000004, "Member 'BP_BattleBuffInstance_C_SetTurnDuration::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnBuffStackCountChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleBuffInstance_C_OnBuffStackCountChanged final
{
public:
	int32                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnBuffStackCountChanged) == 0x000004, "Wrong alignment on BP_BattleBuffInstance_C_OnBuffStackCountChanged");
static_assert(sizeof(BP_BattleBuffInstance_C_OnBuffStackCountChanged) == 0x000004, "Wrong size on BP_BattleBuffInstance_C_OnBuffStackCountChanged");
static_assert(offsetof(BP_BattleBuffInstance_C_OnBuffStackCountChanged, NewValue) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnBuffStackCountChanged::NewValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ShouldKeepOnDeath
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleBuffInstance_C_ShouldKeepOnDeath final
{
public:
	bool                                          Keep;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ShouldKeepOnDeath) == 0x000001, "Wrong alignment on BP_BattleBuffInstance_C_ShouldKeepOnDeath");
static_assert(sizeof(BP_BattleBuffInstance_C_ShouldKeepOnDeath) == 0x000001, "Wrong size on BP_BattleBuffInstance_C_ShouldKeepOnDeath");
static_assert(offsetof(BP_BattleBuffInstance_C_ShouldKeepOnDeath, Keep) == 0x000000, "Member 'BP_BattleBuffInstance_C_ShouldKeepOnDeath::Keep' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.FeedbackBuffTriggeredOnTarget
// 0x0038 (0x0038 - 0x0000)
struct BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_HUD_DamageFeedback_C*              CallFunc_SpawnDamagePopupFromDamages_DamageWidget; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget");
static_assert(sizeof(BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget) == 0x000038, "Wrong size on BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget");
static_assert(offsetof(BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget, Text) == 0x000000, "Member 'BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget::Text' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget, Color) == 0x000010, "Member 'BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget::Color' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000020, "Member 'BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget, CallFunc_GetCharacterBattleBase_IsValid) == 0x000028, "Member 'BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget, CallFunc_SpawnDamagePopupFromDamages_DamageWidget) == 0x000030, "Member 'BP_BattleBuffInstance_C_FeedbackBuffTriggeredOnTarget::CallFunc_SpawnDamagePopupFromDamages_DamageWidget' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsBuffPermanent
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleBuffInstance_C_IsBuffPermanent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_IsBuffPermanent) == 0x000001, "Wrong alignment on BP_BattleBuffInstance_C_IsBuffPermanent");
static_assert(sizeof(BP_BattleBuffInstance_C_IsBuffPermanent) == 0x000001, "Wrong size on BP_BattleBuffInstance_C_IsBuffPermanent");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffPermanent, ReturnValue) == 0x000000, "Member 'BP_BattleBuffInstance_C_IsBuffPermanent::ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnGradientGaugeChange
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_OnGradientGaugeChange final
{
public:
	class UBP_GradientGaugeChangeEvent_C*         GradientChangeEvent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnGradientGaugeChange) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_OnGradientGaugeChange");
static_assert(sizeof(BP_BattleBuffInstance_C_OnGradientGaugeChange) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_OnGradientGaugeChange");
static_assert(offsetof(BP_BattleBuffInstance_C_OnGradientGaugeChange, GradientChangeEvent) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnGradientGaugeChange::GradientChangeEvent' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetBuffDisplayName
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_GetBuffDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_BattleBuffInstance_C_GetBuffDisplayName) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_GetBuffDisplayName");
static_assert(sizeof(BP_BattleBuffInstance_C_GetBuffDisplayName) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_GetBuffDisplayName");
static_assert(offsetof(BP_BattleBuffInstance_C_GetBuffDisplayName, ReturnValue) == 0x000000, "Member 'BP_BattleBuffInstance_C_GetBuffDisplayName::ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetStackCount
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleBuffInstance_C_GetStackCount final
{
public:
	int32                                         StackCount_0;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_GetStackCount) == 0x000004, "Wrong alignment on BP_BattleBuffInstance_C_GetStackCount");
static_assert(sizeof(BP_BattleBuffInstance_C_GetStackCount) == 0x000004, "Wrong size on BP_BattleBuffInstance_C_GetStackCount");
static_assert(offsetof(BP_BattleBuffInstance_C_GetStackCount, StackCount_0) == 0x000000, "Member 'BP_BattleBuffInstance_C_GetStackCount::StackCount_0' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ChangeStackCount
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleBuffInstance_C_ChangeStackCount final
{
public:
	int32                                         StackCount_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_jRPG_BuffSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCustomBuffWidget_DummyOut;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ChangeStackCount) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ChangeStackCount");
static_assert(sizeof(BP_BattleBuffInstance_C_ChangeStackCount) == 0x000028, "Wrong size on BP_BattleBuffInstance_C_ChangeStackCount");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, StackCount_0) == 0x000000, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::StackCount_0' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ChangeStackCount, CallFunc_UpdateCustomBuffWidget_DummyOut) == 0x000021, "Member 'BP_BattleBuffInstance_C_ChangeStackCount::CallFunc_UpdateCustomBuffWidget_DummyOut' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.UpdateCustomBuffWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_UpdateCustomBuffWidget final
{
public:
	class UWBP_jRPG_BuffSlot_C*                   BuffWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyOut;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_UpdateCustomBuffWidget) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_UpdateCustomBuffWidget");
static_assert(sizeof(BP_BattleBuffInstance_C_UpdateCustomBuffWidget) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_UpdateCustomBuffWidget");
static_assert(offsetof(BP_BattleBuffInstance_C_UpdateCustomBuffWidget, BuffWidget) == 0x000000, "Member 'BP_BattleBuffInstance_C_UpdateCustomBuffWidget::BuffWidget' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_UpdateCustomBuffWidget, DummyOut) == 0x000008, "Member 'BP_BattleBuffInstance_C_UpdateCustomBuffWidget::DummyOut' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.InitializeCustomBuffWidget
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_InitializeCustomBuffWidget final
{
public:
	class UWBP_jRPG_BuffSlot_C*                   BuffWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyOut;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_InitializeCustomBuffWidget) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_InitializeCustomBuffWidget");
static_assert(sizeof(BP_BattleBuffInstance_C_InitializeCustomBuffWidget) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_InitializeCustomBuffWidget");
static_assert(offsetof(BP_BattleBuffInstance_C_InitializeCustomBuffWidget, BuffWidget) == 0x000000, "Member 'BP_BattleBuffInstance_C_InitializeCustomBuffWidget::BuffWidget' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_InitializeCustomBuffWidget, DummyOut) == 0x000008, "Member 'BP_BattleBuffInstance_C_InitializeCustomBuffWidget::DummyOut' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.RegisterBuffWidget
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleBuffInstance_C_RegisterBuffWidget final
{
public:
	const class UWBP_jRPG_BuffSlot_C*             BuffSlotWidget;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCustomBuffWidget_DummyOut;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeCustomBuffWidget_DummyOut;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_RegisterBuffWidget) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_RegisterBuffWidget");
static_assert(sizeof(BP_BattleBuffInstance_C_RegisterBuffWidget) == 0x000018, "Wrong size on BP_BattleBuffInstance_C_RegisterBuffWidget");
static_assert(offsetof(BP_BattleBuffInstance_C_RegisterBuffWidget, BuffSlotWidget) == 0x000000, "Member 'BP_BattleBuffInstance_C_RegisterBuffWidget::BuffSlotWidget' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RegisterBuffWidget, CallFunc_UpdateCustomBuffWidget_DummyOut) == 0x000008, "Member 'BP_BattleBuffInstance_C_RegisterBuffWidget::CallFunc_UpdateCustomBuffWidget_DummyOut' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RegisterBuffWidget, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_BattleBuffInstance_C_RegisterBuffWidget::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RegisterBuffWidget, CallFunc_InitializeCustomBuffWidget_DummyOut) == 0x000010, "Member 'BP_BattleBuffInstance_C_RegisterBuffWidget::CallFunc_InitializeCustomBuffWidget_DummyOut' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RegisterBuffWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000011, "Member 'BP_BattleBuffInstance_C_RegisterBuffWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessPermeateDamage
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessPermeateDamage final
{
public:
	class UBP_BattleDamages_C*                    Damages;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessPermeateDamage) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessPermeateDamage");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessPermeateDamage) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessPermeateDamage");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessPermeateDamage, Damages) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessPermeateDamage::Damages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessPermeateDamage, Out) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessPermeateDamage::Out' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessAttackElement
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessAttackElement final
{
public:
	class UBP_BattleDamages_C*                    Damages;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessAttackElement) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessAttackElement");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessAttackElement) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessAttackElement");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAttackElement, Damages) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessAttackElement::Damages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAttackElement, Out) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessAttackElement::Out' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnStanceChange
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleBuffInstance_C_OnStanceChange final
{
public:
	E_StanceType                                  NewStance;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  previousStance;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  NewStance1;                                        // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_StanceType                                  PreviousStance1;                                   // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnStanceChange) == 0x000001, "Wrong alignment on BP_BattleBuffInstance_C_OnStanceChange");
static_assert(sizeof(BP_BattleBuffInstance_C_OnStanceChange) == 0x000004, "Wrong size on BP_BattleBuffInstance_C_OnStanceChange");
static_assert(offsetof(BP_BattleBuffInstance_C_OnStanceChange, NewStance) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnStanceChange::NewStance' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnStanceChange, previousStance) == 0x000001, "Member 'BP_BattleBuffInstance_C_OnStanceChange::previousStance' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnStanceChange, NewStance1) == 0x000002, "Member 'BP_BattleBuffInstance_C_OnStanceChange::NewStance1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnStanceChange, PreviousStance1) == 0x000003, "Member 'BP_BattleBuffInstance_C_OnStanceChange::PreviousStance1' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessHeal
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessHeal final
{
public:
	class UBP_BattleHeal_C*                       Heal;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyOut;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessHeal) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessHeal");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessHeal) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessHeal");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessHeal, Heal) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessHeal::Heal' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessHeal, DummyOut) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessHeal::DummyOut' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessAPChange
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessAPChange final
{
public:
	int32                                         NewAPAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousAPAmount;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAPChangeReason                               ChangeReason;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasChanged;                                        // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChangedValue;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessAPChange) == 0x000004, "Wrong alignment on BP_BattleBuffInstance_C_ProcessAPChange");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessAPChange) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessAPChange");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAPChange, NewAPAmount) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessAPChange::NewAPAmount' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAPChange, PreviousAPAmount) == 0x000004, "Member 'BP_BattleBuffInstance_C_ProcessAPChange::PreviousAPAmount' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAPChange, ChangeReason) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessAPChange::ChangeReason' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAPChange, HasChanged) == 0x000009, "Member 'BP_BattleBuffInstance_C_ProcessAPChange::HasChanged' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAPChange, ChangedValue) == 0x00000C, "Member 'BP_BattleBuffInstance_C_ProcessAPChange::ChangedValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnPerfectionChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_OnPerfectionChanged final
{
public:
	int32                                         NewPerfection;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DeltaPerfection;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PerfectionUpdateType                        PerfectionChangeType;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerfectionReason                             PerfectionChangeReason;                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FinalPerfection;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnPerfectionChanged) == 0x000004, "Wrong alignment on BP_BattleBuffInstance_C_OnPerfectionChanged");
static_assert(sizeof(BP_BattleBuffInstance_C_OnPerfectionChanged) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_OnPerfectionChanged");
static_assert(offsetof(BP_BattleBuffInstance_C_OnPerfectionChanged, NewPerfection) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnPerfectionChanged::NewPerfection' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnPerfectionChanged, DeltaPerfection) == 0x000004, "Member 'BP_BattleBuffInstance_C_OnPerfectionChanged::DeltaPerfection' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnPerfectionChanged, PerfectionChangeType) == 0x000008, "Member 'BP_BattleBuffInstance_C_OnPerfectionChanged::PerfectionChangeType' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnPerfectionChanged, PerfectionChangeReason) == 0x000009, "Member 'BP_BattleBuffInstance_C_OnPerfectionChanged::PerfectionChangeReason' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnPerfectionChanged, FinalPerfection) == 0x00000C, "Member 'BP_BattleBuffInstance_C_OnPerfectionChanged::FinalPerfection' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.GetDebugText
// 0x01C8 (0x01C8 - 0x0000)
struct BP_BattleBuffInstance_C_GetDebugText final
{
public:
	class FText                                   DebugInfo;                                         // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0010)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0150(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0160(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B8(0x0010)()
};
static_assert(alignof(BP_BattleBuffInstance_C_GetDebugText) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_GetDebugText");
static_assert(sizeof(BP_BattleBuffInstance_C_GetDebugText) == 0x0001C8, "Wrong size on BP_BattleBuffInstance_C_GetDebugText");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, DebugInfo) == 0x000000, "Member 'BP_BattleBuffInstance_C_GetDebugText::DebugInfo' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, Temp_bool_Variable) == 0x000010, "Member 'BP_BattleBuffInstance_C_GetDebugText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, Temp_string_Variable) == 0x000018, "Member 'BP_BattleBuffInstance_C_GetDebugText::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, Temp_string_Variable_1) == 0x000028, "Member 'BP_BattleBuffInstance_C_GetDebugText::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'BP_BattleBuffInstance_C_GetDebugText::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_BattleBuffInstance_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, K2Node_Select_Default) == 0x000088, "Member 'BP_BattleBuffInstance_C_GetDebugText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'BP_BattleBuffInstance_C_GetDebugText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000A8, "Member 'BP_BattleBuffInstance_C_GetDebugText::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'BP_BattleBuffInstance_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'BP_BattleBuffInstance_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, CallFunc_GetDisplayName_ReturnValue) == 0x000140, "Member 'BP_BattleBuffInstance_C_GetDebugText::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000150, "Member 'BP_BattleBuffInstance_C_GetDebugText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, K2Node_MakeStruct_FormatArgumentData_3) == 0x000160, "Member 'BP_BattleBuffInstance_C_GetDebugText::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, K2Node_MakeArray_Array) == 0x0001A8, "Member 'BP_BattleBuffInstance_C_GetDebugText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_GetDebugText, CallFunc_Format_ReturnValue) == 0x0001B8, "Member 'BP_BattleBuffInstance_C_GetDebugText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.MarkBuffForRemoval
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattleBuffInstance_C_MarkBuffForRemoval final
{
public:
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0000(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0048(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
};
static_assert(alignof(BP_BattleBuffInstance_C_MarkBuffForRemoval) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_MarkBuffForRemoval");
static_assert(sizeof(BP_BattleBuffInstance_C_MarkBuffForRemoval) == 0x0000B8, "Wrong size on BP_BattleBuffInstance_C_MarkBuffForRemoval");
static_assert(offsetof(BP_BattleBuffInstance_C_MarkBuffForRemoval, K2Node_MakeStruct_FormatArgumentData) == 0x000000, "Member 'BP_BattleBuffInstance_C_MarkBuffForRemoval::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_MarkBuffForRemoval, K2Node_MakeStruct_FormatArgumentData_1) == 0x000048, "Member 'BP_BattleBuffInstance_C_MarkBuffForRemoval::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_MarkBuffForRemoval, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_BattleBuffInstance_C_MarkBuffForRemoval::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_MarkBuffForRemoval, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'BP_BattleBuffInstance_C_MarkBuffForRemoval::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_MarkBuffForRemoval, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_BattleBuffInstance_C_MarkBuffForRemoval::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsBuffTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_IsBuffTarget final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTarget;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_IsBuffTarget) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_IsBuffTarget");
static_assert(sizeof(BP_BattleBuffInstance_C_IsBuffTarget) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_IsBuffTarget");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffTarget, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_C_IsBuffTarget::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffTarget, IsTarget) == 0x000008, "Member 'BP_BattleBuffInstance_C_IsBuffTarget::IsTarget' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BP_BattleBuffInstance_C_IsBuffTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessDealtRawDamages
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessDealtRawDamages final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessDealtRawDamages) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessDealtRawDamages");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessDealtRawDamages) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessDealtRawDamages");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessDealtRawDamages, BattleDamages) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessDealtRawDamages::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessDealtRawDamages, Out) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessDealtRawDamages::Out' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.HideAllParticleSystems
// 0x0038 (0x0038 - 0x0000)
struct BP_BattleBuffInstance_C_HideAllParticleSystems final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_HideAllParticleSystems) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_HideAllParticleSystems");
static_assert(sizeof(BP_BattleBuffInstance_C_HideAllParticleSystems) == 0x000038, "Wrong size on BP_BattleBuffInstance_C_HideAllParticleSystems");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_HideAllParticleSystems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000035, "Member 'BP_BattleBuffInstance_C_HideAllParticleSystems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ShowAllParticleSystems
// 0x0038 (0x0038 - 0x0000)
struct BP_BattleBuffInstance_C_ShowAllParticleSystems final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ShowAllParticleSystems) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ShowAllParticleSystems");
static_assert(sizeof(BP_BattleBuffInstance_C_ShowAllParticleSystems) == 0x000038, "Wrong size on BP_BattleBuffInstance_C_ShowAllParticleSystems");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ShowAllParticleSystems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000035, "Member 'BP_BattleBuffInstance_C_ShowAllParticleSystems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.RemoveAllParticleSystems
// 0x0050 (0x0050 - 0x0000)
struct BP_BattleBuffInstance_C_RemoveAllParticleSystems final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_RemoveAllParticleSystems) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_RemoveAllParticleSystems");
static_assert(sizeof(BP_BattleBuffInstance_C_RemoveAllParticleSystems) == 0x000050, "Wrong size on BP_BattleBuffInstance_C_RemoveAllParticleSystems");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, Temp_int_Loop_Counter_Variable_1) == 0x000004, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Max_ReturnValue) == 0x00003C, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000044, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_RemoveAllParticleSystems, CallFunc_Max_ReturnValue_1) == 0x000048, "Member 'BP_BattleBuffInstance_C_RemoveAllParticleSystems::CallFunc_Max_ReturnValue_1' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.AddCharacterParticleSystem
// 0x0088 (0x0088 - 0x0000)
struct BP_BattleBuffInstance_C_AddCharacterParticleSystem final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_jRPG_CharacterAttachmentSlot                AttachmentSlot;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        ParticleSystemCascade;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PartySystemRotation;                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraSystem*                         SystemNiagara;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PositionOffset;                                    // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemCompoCascade;                        // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_jRPG_Character_Battle_Base_C*       CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterBattleBase_IsValid;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_AddCharacterParticleSystem_ParticleSystemComponent_Cascade; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_AddCharacterParticleSystem_NiagaraSystem; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_AddCharacterParticleSystem) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_AddCharacterParticleSystem");
static_assert(sizeof(BP_BattleBuffInstance_C_AddCharacterParticleSystem) == 0x000088, "Wrong size on BP_BattleBuffInstance_C_AddCharacterParticleSystem");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::CharacterStats' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, AttachmentSlot) == 0x000008, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::AttachmentSlot' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, ParticleSystemCascade) == 0x000010, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::ParticleSystemCascade' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, PartySystemRotation) == 0x000018, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::PartySystemRotation' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, SystemNiagara) == 0x000030, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::SystemNiagara' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, PositionOffset) == 0x000038, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::PositionOffset' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, ParticleSystemCompoCascade) == 0x000050, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::ParticleSystemCompoCascade' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, NiagaraSystem) == 0x000058, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase) == 0x000060, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::CallFunc_GetCharacterBattleBase_jRPG_CharacterBattleBase' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, CallFunc_GetCharacterBattleBase_IsValid) == 0x000068, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::CallFunc_GetCharacterBattleBase_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, CallFunc_AddCharacterParticleSystem_ParticleSystemComponent_Cascade) == 0x000070, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::CallFunc_AddCharacterParticleSystem_ParticleSystemComponent_Cascade' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, CallFunc_AddCharacterParticleSystem_NiagaraSystem) == 0x000078, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::CallFunc_AddCharacterParticleSystem_NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_AddCharacterParticleSystem, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'BP_BattleBuffInstance_C_AddCharacterParticleSystem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessReceivedFinalDamages
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessReceivedFinalDamages final
{
public:
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTurnHitCount;                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessReceivedFinalDamages) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessReceivedFinalDamages");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessReceivedFinalDamages) == 0x000010, "Wrong size on BP_BattleBuffInstance_C_ProcessReceivedFinalDamages");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessReceivedFinalDamages, BattleDamages) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessReceivedFinalDamages::BattleDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessReceivedFinalDamages, CurrentTurnHitCount) == 0x000008, "Member 'BP_BattleBuffInstance_C_ProcessReceivedFinalDamages::CurrentTurnHitCount' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessReceivedFinalDamages, Out) == 0x00000C, "Member 'BP_BattleBuffInstance_C_ProcessReceivedFinalDamages::Out' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnLoaded_148FF7BA4C95776B122106A0489F695B
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B");
static_assert(sizeof(BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B");
static_assert(offsetof(BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B, Loaded) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnLoaded_148FF7BA4C95776B122106A0489F695B::Loaded' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterReceivedDamages
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleBuffInstance_C_OnCharacterReceivedDamages final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAC_jRPG_CharacterBattleStats_C*        SourceCharacter;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ReceivedDamages;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleDamages_C*                    BattleDamages;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnCharacterReceivedDamages) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_OnCharacterReceivedDamages");
static_assert(sizeof(BP_BattleBuffInstance_C_OnCharacterReceivedDamages) == 0x000020, "Wrong size on BP_BattleBuffInstance_C_OnCharacterReceivedDamages");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterReceivedDamages, TargetCharacter) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnCharacterReceivedDamages::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterReceivedDamages, SourceCharacter) == 0x000008, "Member 'BP_BattleBuffInstance_C_OnCharacterReceivedDamages::SourceCharacter' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterReceivedDamages, ReceivedDamages) == 0x000010, "Member 'BP_BattleBuffInstance_C_OnCharacterReceivedDamages::ReceivedDamages' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterReceivedDamages, BattleDamages) == 0x000018, "Member 'BP_BattleBuffInstance_C_OnCharacterReceivedDamages::BattleDamages' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.OnCharacterKilled
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_OnCharacterKilled final
{
public:
	class UAC_jRPG_CharacterBattleStats_C*        CharacterStats;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_OnCharacterKilled) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_OnCharacterKilled");
static_assert(sizeof(BP_BattleBuffInstance_C_OnCharacterKilled) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_OnCharacterKilled");
static_assert(offsetof(BP_BattleBuffInstance_C_OnCharacterKilled, CharacterStats) == 0x000000, "Member 'BP_BattleBuffInstance_C_OnCharacterKilled::CharacterStats' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.ProcessAddBuffAction
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_ProcessAddBuffAction final
{
public:
	const class UAction_AddBuff_C*                BuffAddAction;                                     // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_ProcessAddBuffAction) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_ProcessAddBuffAction");
static_assert(sizeof(BP_BattleBuffInstance_C_ProcessAddBuffAction) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_ProcessAddBuffAction");
static_assert(offsetof(BP_BattleBuffInstance_C_ProcessAddBuffAction, BuffAddAction) == 0x000000, "Member 'BP_BattleBuffInstance_C_ProcessAddBuffAction::BuffAddAction' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.BPI_OnAnyCharacterDamaged
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged final
{
public:
	class UBP_BattleDamages_C*                    BattleDamage;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged");
static_assert(sizeof(BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged");
static_assert(offsetof(BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged, BattleDamage) == 0x000000, "Member 'BP_BattleBuffInstance_C_BPI_OnAnyCharacterDamaged::BattleDamage' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.BPI_OnAnyCharacterAP_Changed
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed final
{
public:
	class UBP_BattleEvent_APChange_C*             AP_Change;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed");
static_assert(sizeof(BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed) == 0x000008, "Wrong size on BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed");
static_assert(offsetof(BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed, AP_Change) == 0x000000, "Member 'BP_BattleBuffInstance_C_BPI_OnAnyCharacterAP_Changed::AP_Change' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsBuffFromFamily
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleBuffInstance_C_IsBuffFromFamily final
{
public:
	TSubclassOf<class UBP_BattleBuffInstance_C>   TestFamily;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_IsBuffFromFamily) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_IsBuffFromFamily");
static_assert(sizeof(BP_BattleBuffInstance_C_IsBuffFromFamily) == 0x000020, "Wrong size on BP_BattleBuffInstance_C_IsBuffFromFamily");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, TestFamily) == 0x000000, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::TestFamily' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, ReturnValue) == 0x000008, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000009, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000018, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, CallFunc_ClassIsChildOf_ReturnValue) == 0x00001A, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsBuffFromFamily, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'BP_BattleBuffInstance_C_IsBuffFromFamily::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BattleBuffInstance.BP_BattleBuffInstance_C.IsSameBuffFamily
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleBuffInstance_C_IsSameBuffFamily final
{
public:
	class UBP_BattleBuffInstance_C*               BattleBuffInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSame;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuffFromFamily_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleBuffInstance_C_IsSameBuffFamily) == 0x000008, "Wrong alignment on BP_BattleBuffInstance_C_IsSameBuffFamily");
static_assert(sizeof(BP_BattleBuffInstance_C_IsSameBuffFamily) == 0x000028, "Wrong size on BP_BattleBuffInstance_C_IsSameBuffFamily");
static_assert(offsetof(BP_BattleBuffInstance_C_IsSameBuffFamily, BattleBuffInstance) == 0x000000, "Member 'BP_BattleBuffInstance_C_IsSameBuffFamily::BattleBuffInstance' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsSameBuffFamily, IsSame) == 0x000008, "Member 'BP_BattleBuffInstance_C_IsSameBuffFamily::IsSame' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsSameBuffFamily, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_BattleBuffInstance_C_IsSameBuffFamily::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsSameBuffFamily, CallFunc_GetObjectClass_ReturnValue_1) == 0x000018, "Member 'BP_BattleBuffInstance_C_IsSameBuffFamily::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsSameBuffFamily, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000020, "Member 'BP_BattleBuffInstance_C_IsSameBuffFamily::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsSameBuffFamily, CallFunc_IsBuffFromFamily_ReturnValue) == 0x000021, "Member 'BP_BattleBuffInstance_C_IsSameBuffFamily::CallFunc_IsBuffFromFamily_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleBuffInstance_C_IsSameBuffFamily, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_BattleBuffInstance_C_IsSameBuffFamily::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

