#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleBuffInstance_AggregatorBase

#include "Basic.hpp"

#include "BP_BattleBuffInstance_AggregatorBase_classes.hpp"
#include "BP_BattleBuffInstance_AggregatorBase_parameters.hpp"


namespace SDK
{

// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.OnChildBuffInstanceAdded
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_AggregatorBase_C::OnChildBuffInstanceAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "OnChildBuffInstanceAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.OnChildBuffInstanceRemoved
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_BattleBuffInstance_AggregatorBase_C::OnChildBuffInstanceRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "OnChildBuffInstanceRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.OnChildBuffInstanceStackChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleBuffInstance_C*         BuffInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_AggregatorBase_C::OnChildBuffInstanceStackChanged(class UBP_BattleBuffInstance_C* BuffInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "OnChildBuffInstanceStackChanged");

	Params::BP_BattleBuffInstance_AggregatorBase_C_OnChildBuffInstanceStackChanged Parms{};

	Parms.BuffInstance = BuffInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.GetDamageSourceCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C** CharacterStats                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_AggregatorBase_C::GetDamageSourceCharacter(class UAC_jRPG_CharacterBattleStats_C** CharacterStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "GetDamageSourceCharacter");

	Params::BP_BattleBuffInstance_AggregatorBase_C_GetDamageSourceCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterStats != nullptr)
		*CharacterStats = Parms.CharacterStats;
}


// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.ComputeAggregatorStackCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_BattleBuffInstance_AggregatorBase_C::ComputeAggregatorStackCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "ComputeAggregatorStackCount");

	Params::BP_BattleBuffInstance_AggregatorBase_C_ComputeAggregatorStackCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.GetBuffDisplayName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_BattleBuffInstance_AggregatorBase_C::GetBuffDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "GetBuffDisplayName");

	Params::BP_BattleBuffInstance_AggregatorBase_C_GetBuffDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.RemoveChildBuffInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UBP_BattleBuffInstance_C*&  ChildBuffInstance                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_AggregatorBase_C::RemoveChildBuffInstance(const class UBP_BattleBuffInstance_C*& ChildBuffInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "RemoveChildBuffInstance");

	Params::BP_BattleBuffInstance_AggregatorBase_C_RemoveChildBuffInstance Parms{};

	Parms.ChildBuffInstance = ChildBuffInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BattleBuffInstance_AggregatorBase.BP_BattleBuffInstance_AggregatorBase_C.AddChildBuffInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class UBP_BattleBuffInstance_C*&  ChildBuff                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UBP_BattleBuffInstance_AggregatorBase_C::AddChildBuffInstance(const class UBP_BattleBuffInstance_C*& ChildBuff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BattleBuffInstance_AggregatorBase_C", "AddChildBuffInstance");

	Params::BP_BattleBuffInstance_AggregatorBase_C_AddChildBuffInstance Parms{};

	Parms.ChildBuff = ChildBuff;

	UObject::ProcessEvent(Func, &Parms);
}

}

