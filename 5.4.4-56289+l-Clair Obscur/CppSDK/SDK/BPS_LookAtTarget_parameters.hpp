#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS_LookAtTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPS_LookAtTarget.BPS_LookAtTarget_C.ExecuteUbergraph_BPS_LookAtTarget
// 0x0100 (0x0100 - 0x0000)
struct BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetBlackboardValueAsRotator_ReturnValue;  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_RotationRateZ_ImplicitCast;     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget) == 0x000008, "Wrong alignment on BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget");
static_assert(sizeof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget) == 0x000100, "Wrong size on BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, EntryPoint) == 0x000000, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_GetBlackboardValueAsRotator_ReturnValue) == 0x000018, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_GetBlackboardValueAsRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_DynamicCast_AsCharacter) == 0x000030, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_BreakRotator_Roll) == 0x000058, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_BreakRotator_Pitch) == 0x00005C, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_BreakRotator_Yaw) == 0x000060, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_Event_OwnerController) == 0x000068, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_Event_ControlledPawn) == 0x000070, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_Event_DeltaSeconds) == 0x000078, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000080, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_RLerp_ReturnValue) == 0x000088, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000A1, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_FClamp_ReturnValue) == 0x0000C0, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_RLerp_Alpha_ImplicitCast) == 0x0000D8, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000F0, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget, K2Node_VariableSet_RotationRateZ_ImplicitCast) == 0x0000F8, "Member 'BPS_LookAtTarget_C_ExecuteUbergraph_BPS_LookAtTarget::K2Node_VariableSet_RotationRateZ_ImplicitCast' has a wrong offset!");

// Function BPS_LookAtTarget.BPS_LookAtTarget_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BPS_LookAtTarget_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS_LookAtTarget_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BPS_LookAtTarget_C_ReceiveExecuteAI");
static_assert(sizeof(BPS_LookAtTarget_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BPS_LookAtTarget_C_ReceiveExecuteAI");
static_assert(offsetof(BPS_LookAtTarget_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BPS_LookAtTarget_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BPS_LookAtTarget_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BPS_LookAtTarget.BPS_LookAtTarget_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BPS_LookAtTarget_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS_LookAtTarget_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BPS_LookAtTarget_C_ReceiveTickAI");
static_assert(sizeof(BPS_LookAtTarget_C_ReceiveTickAI) == 0x000018, "Wrong size on BPS_LookAtTarget_C_ReceiveTickAI");
static_assert(offsetof(BPS_LookAtTarget_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BPS_LookAtTarget_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BPS_LookAtTarget_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BPS_LookAtTarget_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BPS_LookAtTarget_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

