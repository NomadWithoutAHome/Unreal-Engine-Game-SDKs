#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GoldAmount

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GoldAmount.WBP_GoldAmount_C
// 0x0028 (0x0308 - 0x02E0)
class UWBP_GoldAmount_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Lerp;                                         // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       ValueText;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         CurrentValue;                                      // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetValue;                                       // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AnimationLerp;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void SetAnimationLerp(double AnimationLerp_0);
	void UpdateCurrentValue(int32 CurrentValue_0);
	void AnimateValue(int32 NewValue);
	void SetCurrentValue(int32 Value);
	void Construct();
	void ExecuteUbergraph_WBP_GoldAmount(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GoldAmount_C">();
	}
	static class UWBP_GoldAmount_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GoldAmount_C>();
	}
};
static_assert(alignof(UWBP_GoldAmount_C) == 0x000008, "Wrong alignment on UWBP_GoldAmount_C");
static_assert(sizeof(UWBP_GoldAmount_C) == 0x000308, "Wrong size on UWBP_GoldAmount_C");
static_assert(offsetof(UWBP_GoldAmount_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_GoldAmount_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_GoldAmount_C, Anim_Lerp) == 0x0002E8, "Member 'UWBP_GoldAmount_C::Anim_Lerp' has a wrong offset!");
static_assert(offsetof(UWBP_GoldAmount_C, ValueText) == 0x0002F0, "Member 'UWBP_GoldAmount_C::ValueText' has a wrong offset!");
static_assert(offsetof(UWBP_GoldAmount_C, CurrentValue) == 0x0002F8, "Member 'UWBP_GoldAmount_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UWBP_GoldAmount_C, TargetValue) == 0x0002FC, "Member 'UWBP_GoldAmount_C::TargetValue' has a wrong offset!");
static_assert(offsetof(UWBP_GoldAmount_C, AnimationLerp) == 0x000300, "Member 'UWBP_GoldAmount_C::AnimationLerp' has a wrong offset!");

}

