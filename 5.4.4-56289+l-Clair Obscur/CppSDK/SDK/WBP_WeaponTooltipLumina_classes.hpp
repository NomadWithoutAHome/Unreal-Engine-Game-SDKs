#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponTooltipLumina

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "EWeaponQuality_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_WeaponTooltipLumina.WBP_WeaponTooltipLumina_C
// 0x0048 (0x0328 - 0x02E0)
class UWBP_WeaponTooltipLumina_C final : public UUserWidget
{
public:
	class UCommonLazyImage*                       LockedBorder;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       LockedIcon;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       LockedMask;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    LuminaDesc;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponLevel_C*                     LuminaLevel;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Name_0;                                            // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void LoadPassiveEffectData(const struct FFPassiveEffect& PassiveEffectDefiniton, EWeaponQuality QualityLevel, bool IsLocked, int32 UnlockLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_WeaponTooltipLumina_C">();
	}
	static class UWBP_WeaponTooltipLumina_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_WeaponTooltipLumina_C>();
	}
};
static_assert(alignof(UWBP_WeaponTooltipLumina_C) == 0x000008, "Wrong alignment on UWBP_WeaponTooltipLumina_C");
static_assert(sizeof(UWBP_WeaponTooltipLumina_C) == 0x000328, "Wrong size on UWBP_WeaponTooltipLumina_C");
static_assert(offsetof(UWBP_WeaponTooltipLumina_C, LockedBorder) == 0x0002E0, "Member 'UWBP_WeaponTooltipLumina_C::LockedBorder' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponTooltipLumina_C, LockedIcon) == 0x0002E8, "Member 'UWBP_WeaponTooltipLumina_C::LockedIcon' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponTooltipLumina_C, LockedMask) == 0x0002F0, "Member 'UWBP_WeaponTooltipLumina_C::LockedMask' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponTooltipLumina_C, LuminaDesc) == 0x0002F8, "Member 'UWBP_WeaponTooltipLumina_C::LuminaDesc' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponTooltipLumina_C, LuminaLevel) == 0x000300, "Member 'UWBP_WeaponTooltipLumina_C::LuminaLevel' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponTooltipLumina_C, Description) == 0x000308, "Member 'UWBP_WeaponTooltipLumina_C::Description' has a wrong offset!");
static_assert(offsetof(UWBP_WeaponTooltipLumina_C, Name_0) == 0x000318, "Member 'UWBP_WeaponTooltipLumina_C::Name_0' has a wrong offset!");

}

