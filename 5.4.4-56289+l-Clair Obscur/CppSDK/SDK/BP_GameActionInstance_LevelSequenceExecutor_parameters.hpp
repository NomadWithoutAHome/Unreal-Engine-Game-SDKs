#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_LevelSequenceExecutor

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.OnLevelSequencePlayed
// 0x0020 (0x0020 - 0x0000)
struct BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LevelSequenceExecutor_C*            CallFunc_GetLevelSequenceData_Executor;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed) == 0x000008, "Wrong alignment on BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed");
static_assert(sizeof(BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed) == 0x000020, "Wrong size on BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed, CallFunc_GetLevelSequenceData_Executor) == 0x000010, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed::CallFunc_GetLevelSequenceData_Executor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed, CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted) == 0x000018, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed::CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed, CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed) == 0x000019, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_OnLevelSequencePlayed::CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed' has a wrong offset!");

// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor
// 0x0048 (0x0048 - 0x0000)
struct BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelSequenceExecutor_C*            CallFunc_GetLevelSequenceData_Executor;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                K2Node_Event_Controller;                           // 0x0028(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LevelSequenceExecutor_Interface_C> CallFunc_IsSequencePlayed_self_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSequencePlayed_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor) == 0x000008, "Wrong alignment on BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor");
static_assert(sizeof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor) == 0x000048, "Wrong size on BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, EntryPoint) == 0x000000, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, CallFunc_GetLevelSequenceData_Executor) == 0x000018, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::CallFunc_GetLevelSequenceData_Executor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted) == 0x000020, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed) == 0x000021, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, K2Node_Event_Controller) == 0x000028, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::K2Node_Event_Controller' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, CallFunc_IsSequencePlayed_self_CastInput) == 0x000030, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::CallFunc_IsSequencePlayed_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, CallFunc_IsSequencePlayed_ReturnValue) == 0x000040, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::CallFunc_IsSequencePlayed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor, CallFunc_BooleanAND_ReturnValue) == 0x000041, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteUbergraph_BP_GameActionInstance_LevelSequenceExecutor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.ExecuteGameAction
// 0x0008 (0x0008 - 0x0000)
struct BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction final
{
public:
	const class APlayerController*                Controller;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction) == 0x000008, "Wrong alignment on BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction");
static_assert(sizeof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction) == 0x000008, "Wrong size on BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction, Controller) == 0x000000, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ExecuteGameAction::Controller' has a wrong offset!");

// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.ShouldTriggerAutoSaveAfterExecution
// 0x0001 (0x0001 - 0x0000)
struct BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution) == 0x000001, "Wrong alignment on BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution");
static_assert(sizeof(BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution) == 0x000001, "Wrong size on BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_ShouldTriggerAutoSaveAfterExecution::ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.GetLevelSequenceData
// 0x0038 (0x0038 - 0x0000)
struct BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData final
{
public:
	class ABP_LevelSequenceExecutor_C*            Executor;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FinishGameActionWhenSequenceIsStarted;             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoNothingIfSequenceIsAlreadyPlayed;                // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_GameAction_LevelSequenceExecutor_C* K2Node_DynamicCast_AsPlay_Level_Sequence_via_Executor; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LevelSequenceExecutor_C*            K2Node_DynamicCast_AsBP_Level_Sequence_Executor;   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData) == 0x000008, "Wrong alignment on BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData");
static_assert(sizeof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData) == 0x000038, "Wrong size on BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, Executor) == 0x000000, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::Executor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, FinishGameActionWhenSequenceIsStarted) == 0x000008, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::FinishGameActionWhenSequenceIsStarted' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, DoNothingIfSequenceIsAlreadyPlayed) == 0x000009, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::DoNothingIfSequenceIsAlreadyPlayed' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, K2Node_DynamicCast_AsPlay_Level_Sequence_via_Executor) == 0x000010, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::K2Node_DynamicCast_AsPlay_Level_Sequence_via_Executor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, K2Node_DynamicCast_AsBP_Level_Sequence_Executor) == 0x000028, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::K2Node_DynamicCast_AsBP_Level_Sequence_Executor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetLevelSequenceData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_GameActionInstance_LevelSequenceExecutor.BP_GameActionInstance_LevelSequenceExecutor_C.GetDebugString
// 0x0110 (0x0110 - 0x0000)
struct BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class ABP_LevelSequenceExecutor_C*            CallFunc_GetLevelSequenceData_Executor;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0050(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString) == 0x000008, "Wrong alignment on BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString");
static_assert(sizeof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString) == 0x000110, "Wrong size on BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_GetLevelSequenceData_Executor) == 0x000010, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_GetLevelSequenceData_Executor' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted) == 0x000018, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_GetLevelSequenceData_FinishGameActionWhenSequenceIsStarted' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed) == 0x000019, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_GetLevelSequenceData_DoNothingIfSequenceIsAlreadyPlayed' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_GetDisplayName_ReturnValue_1) == 0x000030, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000050, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString, CallFunc_Format_ReturnValue) == 0x000100, "Member 'BP_GameActionInstance_LevelSequenceExecutor_C_GetDebugString::CallFunc_Format_ReturnValue' has a wrong offset!");

}

