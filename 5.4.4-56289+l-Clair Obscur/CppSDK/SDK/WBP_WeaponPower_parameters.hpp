#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WeaponPower

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_WeaponPower.WBP_WeaponPower_C.ExecuteUbergraph_WBP_WeaponPower
// 0x0028 (0x0028 - 0x0000)
struct WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Power;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower) == 0x000008, "Wrong alignment on WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower");
static_assert(sizeof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower) == 0x000028, "Wrong size on WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, EntryPoint) == 0x000000, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, Temp_bool_Variable) == 0x000004, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, Temp_byte_Variable) == 0x000005, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, K2Node_CustomEvent_Power) == 0x000008, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::K2Node_CustomEvent_Power' has a wrong offset!");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower, K2Node_Select_Default) == 0x000020, "Member 'WBP_WeaponPower_C_ExecuteUbergraph_WBP_WeaponPower::K2Node_Select_Default' has a wrong offset!");

// Function WBP_WeaponPower.WBP_WeaponPower_C.SetPower
// 0x0004 (0x0004 - 0x0000)
struct WBP_WeaponPower_C_SetPower final
{
public:
	int32                                         Power_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WeaponPower_C_SetPower) == 0x000004, "Wrong alignment on WBP_WeaponPower_C_SetPower");
static_assert(sizeof(WBP_WeaponPower_C_SetPower) == 0x000004, "Wrong size on WBP_WeaponPower_C_SetPower");
static_assert(offsetof(WBP_WeaponPower_C_SetPower, Power_0) == 0x000000, "Member 'WBP_WeaponPower_C_SetPower::Power_0' has a wrong offset!");

}

