#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PassiveEffectNotification

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FSoundEvent_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PassiveEffectNotification.WBP_PassiveEffectNotification_C
// 0x00B8 (0x0398 - 0x02E0)
class UWBP_PassiveEffectNotification_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_CounterIncrement;                             // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_AppearCounter;                                // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_AppearWeapons;                                // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Pictos_Desappear;                             // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_AppearPictos;                                 // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_AppearRegular;                                // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_LootContainer;                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ColorAppear;                                 // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Flash;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Flash_paint;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Flash_Spike;                                 // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LootIcon;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_LootName;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CounterValue;                            // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Background_Raw_List_C*             WBP_Background_Raw_List;                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FFSoundEvent                           SD_RegularLoot;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFSoundEvent                           SD_WeaponLoot;                                     // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFSoundEvent                           SD_PictosLoot;                                     // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CurrentCount;                                      // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UWBP_PassiveEffectNotification_C* Widget)> OnNotificationExpired; // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   PassiveID;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Appear();
	void Disappear();
	void ExecuteUbergraph_WBP_PassiveEffectNotification(int32 EntryPoint);
	void FeedbackPictosLoot();
	void FeedbackWeaponLoot();
	void Increment();
	void LoadPassiveInfo(const class FText& Text);
	void OnDisappearAnimationFinished();
	void SetCount(int32 Count);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PassiveEffectNotification_C">();
	}
	static class UWBP_PassiveEffectNotification_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PassiveEffectNotification_C>();
	}
};
static_assert(alignof(UWBP_PassiveEffectNotification_C) == 0x000008, "Wrong alignment on UWBP_PassiveEffectNotification_C");
static_assert(sizeof(UWBP_PassiveEffectNotification_C) == 0x000398, "Wrong size on UWBP_PassiveEffectNotification_C");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_PassiveEffectNotification_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Anim_CounterIncrement) == 0x0002E8, "Member 'UWBP_PassiveEffectNotification_C::Anim_CounterIncrement' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Anim_AppearCounter) == 0x0002F0, "Member 'UWBP_PassiveEffectNotification_C::Anim_AppearCounter' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Anim_AppearWeapons) == 0x0002F8, "Member 'UWBP_PassiveEffectNotification_C::Anim_AppearWeapons' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Anim_Pictos_Desappear) == 0x000300, "Member 'UWBP_PassiveEffectNotification_C::Anim_Pictos_Desappear' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Anim_AppearPictos) == 0x000308, "Member 'UWBP_PassiveEffectNotification_C::Anim_AppearPictos' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Anim_AppearRegular) == 0x000310, "Member 'UWBP_PassiveEffectNotification_C::Anim_AppearRegular' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Canvas_LootContainer) == 0x000318, "Member 'UWBP_PassiveEffectNotification_C::Canvas_LootContainer' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Image_ColorAppear) == 0x000320, "Member 'UWBP_PassiveEffectNotification_C::Image_ColorAppear' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Image_Flash) == 0x000328, "Member 'UWBP_PassiveEffectNotification_C::Image_Flash' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Image_Flash_paint) == 0x000330, "Member 'UWBP_PassiveEffectNotification_C::Image_Flash_paint' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Image_Flash_Spike) == 0x000338, "Member 'UWBP_PassiveEffectNotification_C::Image_Flash_Spike' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Image_LootIcon) == 0x000340, "Member 'UWBP_PassiveEffectNotification_C::Image_LootIcon' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, Text_LootName) == 0x000348, "Member 'UWBP_PassiveEffectNotification_C::Text_LootName' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, TextBlock_CounterValue) == 0x000350, "Member 'UWBP_PassiveEffectNotification_C::TextBlock_CounterValue' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, WBP_Background_Raw_List) == 0x000358, "Member 'UWBP_PassiveEffectNotification_C::WBP_Background_Raw_List' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, SD_RegularLoot) == 0x000360, "Member 'UWBP_PassiveEffectNotification_C::SD_RegularLoot' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, SD_WeaponLoot) == 0x000368, "Member 'UWBP_PassiveEffectNotification_C::SD_WeaponLoot' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, SD_PictosLoot) == 0x000370, "Member 'UWBP_PassiveEffectNotification_C::SD_PictosLoot' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, CurrentCount) == 0x000378, "Member 'UWBP_PassiveEffectNotification_C::CurrentCount' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, OnNotificationExpired) == 0x000380, "Member 'UWBP_PassiveEffectNotification_C::OnNotificationExpired' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveEffectNotification_C, PassiveID) == 0x000390, "Member 'UWBP_PassiveEffectNotification_C::PassiveID' has a wrong offset!");

}

