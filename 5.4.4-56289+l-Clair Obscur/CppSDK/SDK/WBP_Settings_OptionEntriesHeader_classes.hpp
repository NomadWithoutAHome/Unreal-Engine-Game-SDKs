#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Settings_OptionEntriesHeader

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Settings_OptionEntriesHeader.WBP_Settings_OptionEntriesHeader_C
// 0x0030 (0x0338 - 0x0308)
class UWBP_Settings_OptionEntriesHeader_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       HeaderDisplay;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   HeaderName;                                        // 0x0318(0x0010)(Edit, BlueprintVisible)
	TArray<class UWBP_Settings_OptionEntry_C*>    Entries;                                           // 0x0328(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)

public:
	void UpdateSettingsContext(const struct FGameplayTag& NewContext);
	void SetHeaderName(const class FText& HeaderName_0);
	void InitHeaderAndChildEntries(bool* IsAvailable);
	void PreConstruct(bool IsDesignTime);
	void OnInitialized();
	void ExecuteUbergraph_WBP_Settings_OptionEntriesHeader(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Settings_OptionEntriesHeader_C">();
	}
	static class UWBP_Settings_OptionEntriesHeader_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Settings_OptionEntriesHeader_C>();
	}
};
static_assert(alignof(UWBP_Settings_OptionEntriesHeader_C) == 0x000008, "Wrong alignment on UWBP_Settings_OptionEntriesHeader_C");
static_assert(sizeof(UWBP_Settings_OptionEntriesHeader_C) == 0x000338, "Wrong size on UWBP_Settings_OptionEntriesHeader_C");
static_assert(offsetof(UWBP_Settings_OptionEntriesHeader_C, UberGraphFrame) == 0x000308, "Member 'UWBP_Settings_OptionEntriesHeader_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Settings_OptionEntriesHeader_C, HeaderDisplay) == 0x000310, "Member 'UWBP_Settings_OptionEntriesHeader_C::HeaderDisplay' has a wrong offset!");
static_assert(offsetof(UWBP_Settings_OptionEntriesHeader_C, HeaderName) == 0x000318, "Member 'UWBP_Settings_OptionEntriesHeader_C::HeaderName' has a wrong offset!");
static_assert(offsetof(UWBP_Settings_OptionEntriesHeader_C, Entries) == 0x000328, "Member 'UWBP_Settings_OptionEntriesHeader_C::Entries' has a wrong offset!");

}

