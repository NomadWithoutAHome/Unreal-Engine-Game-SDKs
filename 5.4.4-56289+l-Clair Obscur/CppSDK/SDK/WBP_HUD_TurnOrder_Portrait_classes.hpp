#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HUD_TurnOrder_Portrait

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_HUD_TurnOrder_Portrait.WBP_HUD_TurnOrder_Portrait_C
// 0x00A0 (0x0380 - 0x02E0)
class UWBP_HUD_TurnOrder_Portrait_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_IsSecond;                                     // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_SetFirst;                                     // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Selected;                                     // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Appear;                                       // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Ally_BG;                                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Ally_Box;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Enemy_BG;                                          // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EnemyAlly_Box;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              EnemyAllyScaleBox;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EnemyBox;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              EnemyScaleBox;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_Sep;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Portrait_Ally;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Portrait_enemy;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Portrait_EnemyAlly;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TurnOrder_PortraitBackground_Ally_C* WBP_TurnOrder_PortraitBackground_Ally;           // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TurnOrder_PortraitBackground_Enemy_C* WBP_TurnOrder_PortraitBackground_Enemy;         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsAlly;                                            // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsFirst;                                           // 0x0371(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PortraitMaterialRef;                               // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Appear_Event(bool PlayAnim);
	void ClearHighlight();
	void Construct();
	void ExecuteUbergraph_WBP_HUD_TurnOrder_Portrait(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetCharacter(class UAC_jRPG_CharacterBattleStats_C* CharacterStats);
	void SetHighlighted(bool Highlighted);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_HUD_TurnOrder_Portrait_C">();
	}
	static class UWBP_HUD_TurnOrder_Portrait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_HUD_TurnOrder_Portrait_C>();
	}
};
static_assert(alignof(UWBP_HUD_TurnOrder_Portrait_C) == 0x000008, "Wrong alignment on UWBP_HUD_TurnOrder_Portrait_C");
static_assert(sizeof(UWBP_HUD_TurnOrder_Portrait_C) == 0x000380, "Wrong size on UWBP_HUD_TurnOrder_Portrait_C");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, UberGraphFrame) == 0x0002E0, "Member 'UWBP_HUD_TurnOrder_Portrait_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Anim_IsSecond) == 0x0002E8, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Anim_IsSecond' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Anim_SetFirst) == 0x0002F0, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Anim_SetFirst' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Anim_Selected) == 0x0002F8, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Anim_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Anim_Appear) == 0x000300, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Anim_Appear' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Ally_BG) == 0x000308, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Ally_BG' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Ally_Box) == 0x000310, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Ally_Box' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Enemy_BG) == 0x000318, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Enemy_BG' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, EnemyAlly_Box) == 0x000320, "Member 'UWBP_HUD_TurnOrder_Portrait_C::EnemyAlly_Box' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, EnemyAllyScaleBox) == 0x000328, "Member 'UWBP_HUD_TurnOrder_Portrait_C::EnemyAllyScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, EnemyBox) == 0x000330, "Member 'UWBP_HUD_TurnOrder_Portrait_C::EnemyBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, EnemyScaleBox) == 0x000338, "Member 'UWBP_HUD_TurnOrder_Portrait_C::EnemyScaleBox' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Line_Sep) == 0x000340, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Line_Sep' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Portrait_Ally) == 0x000348, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Portrait_Ally' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Portrait_enemy) == 0x000350, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Portrait_enemy' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, Portrait_EnemyAlly) == 0x000358, "Member 'UWBP_HUD_TurnOrder_Portrait_C::Portrait_EnemyAlly' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, WBP_TurnOrder_PortraitBackground_Ally) == 0x000360, "Member 'UWBP_HUD_TurnOrder_Portrait_C::WBP_TurnOrder_PortraitBackground_Ally' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, WBP_TurnOrder_PortraitBackground_Enemy) == 0x000368, "Member 'UWBP_HUD_TurnOrder_Portrait_C::WBP_TurnOrder_PortraitBackground_Enemy' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, IsAlly) == 0x000370, "Member 'UWBP_HUD_TurnOrder_Portrait_C::IsAlly' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, IsFirst) == 0x000371, "Member 'UWBP_HUD_TurnOrder_Portrait_C::IsFirst' has a wrong offset!");
static_assert(offsetof(UWBP_HUD_TurnOrder_Portrait_C, PortraitMaterialRef) == 0x000378, "Member 'UWBP_HUD_TurnOrder_Portrait_C::PortraitMaterialRef' has a wrong offset!");

}

