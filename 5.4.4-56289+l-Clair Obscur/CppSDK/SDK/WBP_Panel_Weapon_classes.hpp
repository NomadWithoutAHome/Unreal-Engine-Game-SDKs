#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Panel_Weapon

#include "Basic.hpp"

#include "S_jRPG_Item_DynamicData_structs.hpp"
#include "Engine_structs.hpp"
#include "SandFall_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Panel_Weapon.WBP_Panel_Weapon_C
// 0x00E0 (0x0510 - 0x0430)
class UWBP_Panel_Weapon_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_WeaponTooltip_C*                   EquippedWeaponTooltip;                             // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Back;                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_Equip;                 // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonBoundActionButton_C*         WBP_CommonBoundActionButton_HideTooltip;           // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GM_CharacterSheet_C*               WBP_GM_CharacterSheet;                             // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeaponsList_C*                     WeaponsList;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CurrentCharacterData;                              // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    PreviewCharacterData;                              // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool ShouldLock)> OnRequestLockCharacterSwitch;                    // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(const struct FS_jRPG_Item_DynamicData& A, const struct FS_jRPG_Item_DynamicData& B, class UOrderingResult* Result)> DummyDispatcher_SortLumina; // 0x0488(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FSoundEventDataTableRowHandle          SD_OnEquipedWeaponPictos;                          // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void(class UBP_WeaponViewItem_C* WeaponViewItem)> OnEquippedWeaponChanged; // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsBlacksmithMode;                                  // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundEventDataTableRowHandle          SD_OnActivated;                                    // 0x04C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_OnDeactivated;                                  // 0x04D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_ShowTooltip;                                    // 0x04E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FSoundEventDataTableRowHandle          SD_HideTooltip;                                    // 0x04F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TMulticastInlineDelegate<void(class UBP_WeaponViewItem_C* WeaponViewItem)> OnWeaponTargetForUpgrade; // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_Panel_Weapon_WBP_CommonBoundActionButton_HideTooltip_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_1_OnWeaponItemNavigated__DelegateSignature(class UBP_WeaponViewItem_C* InWeaponViewItem, const struct FVector2D& AbsolutePos);
	void BndEvt__WBP_Panel_Weapon_WeaponsList_K2Node_ComponentBoundEvent_9_OnWeaponItemClicked__DelegateSignature(class UBP_WeaponViewItem_C* InWeaponViewItem);
	void BP_OnActivated();
	void BP_OnDeactivated();
	void BPI_GetCharacterNotificationState(class UBP_CharacterData_C* CharacterData, bool* HasNotification);
	void BPI_LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void CreateModalWindowForExcludedCharacter(const struct FS_jRPG_Item_StaticData& Item, class UBP_CharacterData_C* OtherCharacter, class UWBP_ModalPopup_C** ModalWindow);
	void ExecuteUbergraph_WBP_Panel_Weapon(int32 EntryPoint);
	void LoadCharacter(class UBP_CharacterData_C* CharacterData);
	void NavigateToFocusedWeapon(const struct FS_jRPG_Item_StaticData& ItemStaticData);
	void OnUpgradeFinished(class UBP_WeaponViewItem_C* WeaponToFocus);
	void OnUpgradeStart(class UBP_WeaponViewItem_C* WeaponToUpgrade);
	void OnWeaponItemClicked(class UBP_WeaponViewItem_C* InWeaponViewItem);
	void ProcessEquipWeapon(class UBP_WeaponViewItem_C* InWeaponViewItem);
	void RebuildActionBarButtons(class UWBP_CommonActionBarContainer_C* ActionBarContainerWidget);
	void SetBlacksmithMode(bool IsInBlacksmithMode);
	void StartEquip();
	void StopEquip();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Panel_Weapon_C">();
	}
	static class UWBP_Panel_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Panel_Weapon_C>();
	}
};
static_assert(alignof(UWBP_Panel_Weapon_C) == 0x000008, "Wrong alignment on UWBP_Panel_Weapon_C");
static_assert(sizeof(UWBP_Panel_Weapon_C) == 0x000510, "Wrong size on UWBP_Panel_Weapon_C");
static_assert(offsetof(UWBP_Panel_Weapon_C, UberGraphFrame) == 0x000430, "Member 'UWBP_Panel_Weapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, EquippedWeaponTooltip) == 0x000438, "Member 'UWBP_Panel_Weapon_C::EquippedWeaponTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, WBP_CommonBoundActionButton_Back) == 0x000440, "Member 'UWBP_Panel_Weapon_C::WBP_CommonBoundActionButton_Back' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, WBP_CommonBoundActionButton_Equip) == 0x000448, "Member 'UWBP_Panel_Weapon_C::WBP_CommonBoundActionButton_Equip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, WBP_CommonBoundActionButton_HideTooltip) == 0x000450, "Member 'UWBP_Panel_Weapon_C::WBP_CommonBoundActionButton_HideTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, WBP_GM_CharacterSheet) == 0x000458, "Member 'UWBP_Panel_Weapon_C::WBP_GM_CharacterSheet' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, WeaponsList) == 0x000460, "Member 'UWBP_Panel_Weapon_C::WeaponsList' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, CurrentCharacterData) == 0x000468, "Member 'UWBP_Panel_Weapon_C::CurrentCharacterData' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, PreviewCharacterData) == 0x000470, "Member 'UWBP_Panel_Weapon_C::PreviewCharacterData' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, OnRequestLockCharacterSwitch) == 0x000478, "Member 'UWBP_Panel_Weapon_C::OnRequestLockCharacterSwitch' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, DummyDispatcher_SortLumina) == 0x000488, "Member 'UWBP_Panel_Weapon_C::DummyDispatcher_SortLumina' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, SD_OnEquipedWeaponPictos) == 0x000498, "Member 'UWBP_Panel_Weapon_C::SD_OnEquipedWeaponPictos' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, OnEquippedWeaponChanged) == 0x0004A8, "Member 'UWBP_Panel_Weapon_C::OnEquippedWeaponChanged' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, IsBlacksmithMode) == 0x0004B8, "Member 'UWBP_Panel_Weapon_C::IsBlacksmithMode' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, SD_OnActivated) == 0x0004C0, "Member 'UWBP_Panel_Weapon_C::SD_OnActivated' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, SD_OnDeactivated) == 0x0004D0, "Member 'UWBP_Panel_Weapon_C::SD_OnDeactivated' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, SD_ShowTooltip) == 0x0004E0, "Member 'UWBP_Panel_Weapon_C::SD_ShowTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, SD_HideTooltip) == 0x0004F0, "Member 'UWBP_Panel_Weapon_C::SD_HideTooltip' has a wrong offset!");
static_assert(offsetof(UWBP_Panel_Weapon_C, OnWeaponTargetForUpgrade) == 0x000500, "Member 'UWBP_Panel_Weapon_C::OnWeaponTargetForUpgrade' has a wrong offset!");

}

