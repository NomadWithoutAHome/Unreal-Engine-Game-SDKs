#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SkillDataComponent_PerfectionMechanic

#include "Basic.hpp"

#include "BP_SkillDataComponent_PerfectionMechanic_classes.hpp"
#include "BP_SkillDataComponent_PerfectionMechanic_parameters.hpp"


namespace SDK
{

// Function BP_SkillDataComponent_PerfectionMechanic.BP_SkillDataComponent_PerfectionMechanic_C.GetRankValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Perfection_Ranks                      Rank                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_SkillDataComponent_PerfectionMechanic_C::GetRankValue(E_Perfection_Ranks Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_PerfectionMechanic_C", "GetRankValue");

	Params::BP_SkillDataComponent_PerfectionMechanic_C_GetRankValue Parms{};

	Parms.Rank = Rank;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SkillDataComponent_PerfectionMechanic.BP_SkillDataComponent_PerfectionMechanic_C.IsOverchargeActive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterStat                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Active                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_PerfectionMechanic_C::IsOverchargeActive(class UAC_jRPG_CharacterBattleStats_C* CharacterStat, bool* Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_PerfectionMechanic_C", "IsOverchargeActive");

	Params::BP_SkillDataComponent_PerfectionMechanic_C_IsOverchargeActive Parms{};

	Parms.CharacterStat = CharacterStat;

	UObject::ProcessEvent(Func, &Parms);

	if (Active != nullptr)
		*Active = Parms.Active;
}


// Function BP_SkillDataComponent_PerfectionMechanic.BP_SkillDataComponent_PerfectionMechanic_C.ModifySkillButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_HUD_SkillButton_Big_C*       SkillButtonWidget                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_PerfectionMechanic_C::ModifySkillButton(class UWBP_HUD_SkillButton_Big_C* SkillButtonWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_PerfectionMechanic_C", "ModifySkillButton");

	Params::BP_SkillDataComponent_PerfectionMechanic_C_ModifySkillButton Parms{};

	Parms.SkillButtonWidget = SkillButtonWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SkillDataComponent_PerfectionMechanic.BP_SkillDataComponent_PerfectionMechanic_C.ModifySkillTooltip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_SkillTooltip_C*              SkillTooltipWidget                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_SkillDataComponent_PerfectionMechanic_C::ModifySkillTooltip(class UWBP_SkillTooltip_C* SkillTooltipWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SkillDataComponent_PerfectionMechanic_C", "ModifySkillTooltip");

	Params::BP_SkillDataComponent_PerfectionMechanic_C_ModifySkillTooltip Parms{};

	Parms.SkillTooltipWidget = SkillTooltipWidget;

	UObject::ProcessEvent(Func, &Parms);
}

}

