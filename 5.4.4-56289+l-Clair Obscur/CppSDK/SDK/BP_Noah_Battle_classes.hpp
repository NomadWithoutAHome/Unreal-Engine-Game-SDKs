#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Noah_Battle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EHealReason_structs.hpp"
#include "EAttackType_structs.hpp"
#include "BP_jRPG_Character_Battle_Base_classes.hpp"
#include "EDamageReason_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Noah_Battle.BP_Noah_Battle_C
// 0x0090 (0x15F0 - 0x1560)
class ABP_Noah_Battle_C final : public ABP_jRPG_Character_Battle_Base_C
{
public:
	uint8                                         Pad_1551[0x7];                                     // 0x1551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Noah_Battle_C;                   // 0x1558(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FX_MecaUnique1;                                    // 0x1560(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FX_MecaUnique;                                     // 0x1568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_UniqueMechanic_Charge_Component_C*  BP_UniqueMechanic_Charge_Component;                // 0x1570(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_BattleLookAtComponent_C*            BP_BattleLookAtComponent;                          // 0x1578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Haircut_SkeletalMesh_Mustache;                     // 0x1580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Haircut_SkeletalMesh_Hair;                         // 0x1588(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Haircut_SkeletalMesh_Beard;                        // 0x1590(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroomComponent*                        Mustache;                                          // 0x1598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroomComponent*                        Eyebrows;                                          // 0x15A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroomComponent*                        Beard;                                             // 0x15A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UGroomComponent*                        Eyelashes;                                         // 0x15B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair;                                              // 0x15B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Face;                                              // 0x15C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   Body_low;                                          // 0x15C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_TrailComponent_C*                   Body;                                              // 0x15D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Weapon_Mesh_L_0;                                   // 0x15D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Weapon_Mesh_R_0;                                   // 0x15E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh_0;                                            // 0x15E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Noah_Battle(int32 EntryPoint);
	void FX_FeedbackUniqueMecanic(int32 NewValue, int32 PreviousValue);
	void OnBattleStart();
	void OnHealed(double HealAmount, bool RestoredMP_, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter, EHealReason Reason);
	void OnResurrected(double HealAmount);
	void OnDamageReceived(double Damage, bool Critical_, bool Weakness_, bool Resistant_, EAttackType Element, EDamageReason Reason, class ABP_jRPG_Character_Battle_Base_C* DamageCharacterSource);
	void OnDeath(bool DeathByCounter);
	void DodgeParameters(class UStaticMeshComponent* Hair_0, class USkeletalMeshComponent* Mesh_0, class USkeletalMeshComponent* Face_0, double Movement, double Black);
	void Attach_Weapons_to_Hands(class ABP_WeaponSkin_C* WeaponActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Noah_Battle_C">();
	}
	static class ABP_Noah_Battle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Noah_Battle_C>();
	}
};
static_assert(alignof(ABP_Noah_Battle_C) == 0x000010, "Wrong alignment on ABP_Noah_Battle_C");
static_assert(sizeof(ABP_Noah_Battle_C) == 0x0015F0, "Wrong size on ABP_Noah_Battle_C");
static_assert(offsetof(ABP_Noah_Battle_C, UberGraphFrame_BP_Noah_Battle_C) == 0x001558, "Member 'ABP_Noah_Battle_C::UberGraphFrame_BP_Noah_Battle_C' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, FX_MecaUnique1) == 0x001560, "Member 'ABP_Noah_Battle_C::FX_MecaUnique1' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, FX_MecaUnique) == 0x001568, "Member 'ABP_Noah_Battle_C::FX_MecaUnique' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, BP_UniqueMechanic_Charge_Component) == 0x001570, "Member 'ABP_Noah_Battle_C::BP_UniqueMechanic_Charge_Component' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, BP_BattleLookAtComponent) == 0x001578, "Member 'ABP_Noah_Battle_C::BP_BattleLookAtComponent' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Haircut_SkeletalMesh_Mustache) == 0x001580, "Member 'ABP_Noah_Battle_C::Haircut_SkeletalMesh_Mustache' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Haircut_SkeletalMesh_Hair) == 0x001588, "Member 'ABP_Noah_Battle_C::Haircut_SkeletalMesh_Hair' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Haircut_SkeletalMesh_Beard) == 0x001590, "Member 'ABP_Noah_Battle_C::Haircut_SkeletalMesh_Beard' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Mustache) == 0x001598, "Member 'ABP_Noah_Battle_C::Mustache' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Eyebrows) == 0x0015A0, "Member 'ABP_Noah_Battle_C::Eyebrows' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Beard) == 0x0015A8, "Member 'ABP_Noah_Battle_C::Beard' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Eyelashes) == 0x0015B0, "Member 'ABP_Noah_Battle_C::Eyelashes' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Hair) == 0x0015B8, "Member 'ABP_Noah_Battle_C::Hair' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Face) == 0x0015C0, "Member 'ABP_Noah_Battle_C::Face' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Body_low) == 0x0015C8, "Member 'ABP_Noah_Battle_C::Body_low' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Body) == 0x0015D0, "Member 'ABP_Noah_Battle_C::Body' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Weapon_Mesh_L_0) == 0x0015D8, "Member 'ABP_Noah_Battle_C::Weapon_Mesh_L_0' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Weapon_Mesh_R_0) == 0x0015E0, "Member 'ABP_Noah_Battle_C::Weapon_Mesh_R_0' has a wrong offset!");
static_assert(offsetof(ABP_Noah_Battle_C, Mesh_0) == 0x0015E8, "Member 'ABP_Noah_Battle_C::Mesh_0' has a wrong offset!");

}

