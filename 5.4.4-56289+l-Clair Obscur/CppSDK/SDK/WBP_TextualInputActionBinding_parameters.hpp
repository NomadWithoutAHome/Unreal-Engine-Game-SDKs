#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TextualInputActionBinding

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C.SetRadialProgress
// 0x0008 (0x0008 - 0x0000)
struct WBP_TextualInputActionBinding_C_SetRadialProgress final
{
public:
	double                                        InProgress;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextualInputActionBinding_C_SetRadialProgress) == 0x000008, "Wrong alignment on WBP_TextualInputActionBinding_C_SetRadialProgress");
static_assert(sizeof(WBP_TextualInputActionBinding_C_SetRadialProgress) == 0x000008, "Wrong size on WBP_TextualInputActionBinding_C_SetRadialProgress");
static_assert(offsetof(WBP_TextualInputActionBinding_C_SetRadialProgress, InProgress) == 0x000000, "Member 'WBP_TextualInputActionBinding_C_SetRadialProgress::InProgress' has a wrong offset!");

// Function WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C.SetInputText
// 0x0010 (0x0010 - 0x0000)
struct WBP_TextualInputActionBinding_C_SetInputText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_TextualInputActionBinding_C_SetInputText) == 0x000008, "Wrong alignment on WBP_TextualInputActionBinding_C_SetInputText");
static_assert(sizeof(WBP_TextualInputActionBinding_C_SetInputText) == 0x000010, "Wrong size on WBP_TextualInputActionBinding_C_SetInputText");
static_assert(offsetof(WBP_TextualInputActionBinding_C_SetInputText, Text) == 0x000000, "Member 'WBP_TextualInputActionBinding_C_SetInputText::Text' has a wrong offset!");

// Function WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C.RefreshText
// 0x0030 (0x0030 - 0x0000)
struct WBP_TextualInputActionBinding_C_RefreshText final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInputName_Name;                        // 0x0008(0x0010)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0020(0x0010)()
};
static_assert(alignof(WBP_TextualInputActionBinding_C_RefreshText) == 0x000008, "Wrong alignment on WBP_TextualInputActionBinding_C_RefreshText");
static_assert(sizeof(WBP_TextualInputActionBinding_C_RefreshText) == 0x000030, "Wrong size on WBP_TextualInputActionBinding_C_RefreshText");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshText, Temp_bool_Variable) == 0x000000, "Member 'WBP_TextualInputActionBinding_C_RefreshText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshText, CallFunc_GetInputName_Name) == 0x000008, "Member 'WBP_TextualInputActionBinding_C_RefreshText::CallFunc_GetInputName_Name' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshText, CallFunc_TextIsEmpty_ReturnValue) == 0x000018, "Member 'WBP_TextualInputActionBinding_C_RefreshText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshText, K2Node_Select_Default) == 0x000020, "Member 'WBP_TextualInputActionBinding_C_RefreshText::K2Node_Select_Default' has a wrong offset!");

// Function WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C.RefreshWidget
// 0x0028 (0x0028 - 0x0000)
struct WBP_TextualInputActionBinding_C_RefreshWidget final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Size_ImplicitCast;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Size_ImplicitCast_1;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Size_ImplicitCast_2;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextualInputActionBinding_C_RefreshWidget) == 0x000008, "Wrong alignment on WBP_TextualInputActionBinding_C_RefreshWidget");
static_assert(sizeof(WBP_TextualInputActionBinding_C_RefreshWidget) == 0x000028, "Wrong size on WBP_TextualInputActionBinding_C_RefreshWidget");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshWidget, Temp_bool_Variable) == 0x000000, "Member 'WBP_TextualInputActionBinding_C_RefreshWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshWidget, K2Node_Select_Default) == 0x000008, "Member 'WBP_TextualInputActionBinding_C_RefreshWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshWidget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'WBP_TextualInputActionBinding_C_RefreshWidget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshWidget, CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast) == 0x000018, "Member 'WBP_TextualInputActionBinding_C_RefreshWidget::CallFunc_SetUserSpecifiedScale_InUserSpecifiedScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshWidget, K2Node_SetFieldsInStruct_Size_ImplicitCast) == 0x00001C, "Member 'WBP_TextualInputActionBinding_C_RefreshWidget::K2Node_SetFieldsInStruct_Size_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshWidget, K2Node_SetFieldsInStruct_Size_ImplicitCast_1) == 0x000020, "Member 'WBP_TextualInputActionBinding_C_RefreshWidget::K2Node_SetFieldsInStruct_Size_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_RefreshWidget, K2Node_SetFieldsInStruct_Size_ImplicitCast_2) == 0x000024, "Member 'WBP_TextualInputActionBinding_C_RefreshWidget::K2Node_SetFieldsInStruct_Size_ImplicitCast_2' has a wrong offset!");

// Function WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C.SetAllowed
// 0x0001 (0x0001 - 0x0000)
struct WBP_TextualInputActionBinding_C_SetAllowed final
{
public:
	bool                                          isAllowed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextualInputActionBinding_C_SetAllowed) == 0x000001, "Wrong alignment on WBP_TextualInputActionBinding_C_SetAllowed");
static_assert(sizeof(WBP_TextualInputActionBinding_C_SetAllowed) == 0x000001, "Wrong size on WBP_TextualInputActionBinding_C_SetAllowed");
static_assert(offsetof(WBP_TextualInputActionBinding_C_SetAllowed, isAllowed) == 0x000000, "Member 'WBP_TextualInputActionBinding_C_SetAllowed::isAllowed' has a wrong offset!");

// Function WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TextualInputActionBinding_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextualInputActionBinding_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TextualInputActionBinding_C_PreConstruct");
static_assert(sizeof(WBP_TextualInputActionBinding_C_PreConstruct) == 0x000001, "Wrong size on WBP_TextualInputActionBinding_C_PreConstruct");
static_assert(offsetof(WBP_TextualInputActionBinding_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TextualInputActionBinding_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TextualInputActionBinding.WBP_TextualInputActionBinding_C.ExecuteUbergraph_WBP_TextualInputActionBinding
// 0x0050 (0x0050 - 0x0000)
struct WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsAllowed;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding) == 0x000008, "Wrong alignment on WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding");
static_assert(sizeof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding) == 0x000050, "Wrong size on WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, EntryPoint) == 0x000000, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, Temp_bool_Variable) == 0x000004, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, Temp_struct_Variable) == 0x000008, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, Temp_struct_Variable_1) == 0x000018, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, K2Node_CustomEvent_IsAllowed) == 0x000028, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::K2Node_CustomEvent_IsAllowed' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, K2Node_Select_Default) == 0x000038, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding, K2Node_Event_IsDesignTime) == 0x000048, "Member 'WBP_TextualInputActionBinding_C_ExecuteUbergraph_WBP_TextualInputActionBinding::K2Node_Event_IsDesignTime' has a wrong offset!");

}

