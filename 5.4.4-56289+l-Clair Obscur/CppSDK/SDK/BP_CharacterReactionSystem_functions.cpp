#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharacterReactionSystem

#include "Basic.hpp"

#include "BP_CharacterReactionSystem_classes.hpp"
#include "BP_CharacterReactionSystem_parameters.hpp"


namespace SDK
{

// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.BeginChoosingBattleLines
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleLineGatherer_C**        Gatherer                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::BeginChoosingBattleLines(class UBP_BattleLineGatherer_C** Gatherer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "BeginChoosingBattleLines");

	Params::BP_CharacterReactionSystem_C_BeginChoosingBattleLines Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Gatherer != nullptr)
		*Gatherer = Parms.Gatherer;
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.DEBUG_CVarChange_BattleLine_SkipRoll
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::DEBUG_CVarChange_BattleLine_SkipRoll(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "DEBUG_CVarChange_BattleLine_SkipRoll");

	Params::BP_CharacterReactionSystem_C_DEBUG_CVarChange_BattleLine_SkipRoll Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.EndChooseBattleLines
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleLineGatherer_C*         Gatherer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::EndChooseBattleLines(class UBP_BattleLineGatherer_C* Gatherer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "EndChooseBattleLines");

	Params::BP_CharacterReactionSystem_C_EndChooseBattleLines Parms{};

	Parms.Gatherer = Gatherer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.ExecuteUbergraph_BP_CharacterReactionSystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::ExecuteUbergraph_BP_CharacterReactionSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "ExecuteUbergraph_BP_CharacterReactionSystem");

	Params::BP_CharacterReactionSystem_C_ExecuteUbergraph_BP_CharacterReactionSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.GetAnyAllyCharacterExcept
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  Except                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class ABP_jRPG_Character_Battle_Base_C**CharacterActor                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::GetAnyAllyCharacterExcept(class UAC_jRPG_CharacterBattleStats_C* Except, class ABP_jRPG_Character_Battle_Base_C** CharacterActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "GetAnyAllyCharacterExcept");

	Params::BP_CharacterReactionSystem_C_GetAnyAllyCharacterExcept Parms{};

	Parms.Except = Except;

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterActor != nullptr)
		*CharacterActor = Parms.CharacterActor;
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.GetBattleLineSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_BattleLineSettings_C**        Settings                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::GetBattleLineSettings(class UBP_BattleLineSettings_C** Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "GetBattleLineSettings");

	Params::BP_CharacterReactionSystem_C_GetBattleLineSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Settings != nullptr)
		*Settings = Parms.Settings;
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.Internal_EndGatherBattleLines_OLD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CharacterReactionSystem_C::Internal_EndGatherBattleLines_OLD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "Internal_EndGatherBattleLines_OLD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.LogPerCharacterReaction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Reaction                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  ReactingCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  SubjectCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::LogPerCharacterReaction(const class FString& Reaction, class UAC_jRPG_CharacterBattleStats_C* ReactingCharacter, class UAC_jRPG_CharacterBattleStats_C* SubjectCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "LogPerCharacterReaction");

	Params::BP_CharacterReactionSystem_C_LogPerCharacterReaction Parms{};

	Parms.Reaction = std::move(Reaction);
	Parms.ReactingCharacter = ReactingCharacter;
	Parms.SubjectCharacter = SubjectCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnBattleEnds
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterReactionSystem_C::OnBattleEnds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnBattleEnds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnBattleStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_BattleManager_C*         BattleManager                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnBattleStart(class UAC_jRPG_BattleManager_C* BattleManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnBattleStart");

	Params::BP_CharacterReactionSystem_C_OnBattleStart Parms{};

	Parms.BattleManager = BattleManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnCharacterBuffed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleBuffInstance_C*         BuffInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  TargetCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  SourceCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnCharacterBuffed(class UBP_BattleBuffInstance_C* BuffInstance, class UAC_jRPG_CharacterBattleStats_C* TargetCharacter, class UAC_jRPG_CharacterBattleStats_C* SourceCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnCharacterBuffed");

	Params::BP_CharacterReactionSystem_C_OnCharacterBuffed Parms{};

	Parms.BuffInstance = BuffInstance;
	Parms.TargetCharacter = TargetCharacter;
	Parms.SourceCharacter = SourceCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnCharacterHealed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleHeal_C*                 HealEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnCharacterHealed(class UBP_BattleHeal_C* HealEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnCharacterHealed");

	Params::BP_CharacterReactionSystem_C_OnCharacterHealed Parms{};

	Parms.HealEvent = HealEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnCharacterHealSuccessful
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleHeal_C*                 HealObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnCharacterHealSuccessful(class UBP_BattleHeal_C* HealObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnCharacterHealSuccessful");

	Params::BP_CharacterReactionSystem_C_OnCharacterHealSuccessful Parms{};

	Parms.HealObject = HealObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnCharacterKilled
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_BattleDamages_C*              LethalDamages                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnCharacterKilled(class UBP_BattleDamages_C* LethalDamages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnCharacterKilled");

	Params::BP_CharacterReactionSystem_C_OnCharacterKilled Parms{};

	Parms.LethalDamages = LethalDamages;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnCharacterReceivedDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  AttackedCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  AttackerCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  DamageAmount                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnCharacterReceivedDamage(class UAC_jRPG_CharacterBattleStats_C* AttackedCharacter, class UAC_jRPG_CharacterBattleStats_C* AttackerCharacter, double DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnCharacterReceivedDamage");

	Params::BP_CharacterReactionSystem_C_OnCharacterReceivedDamage Parms{};

	Parms.AttackedCharacter = AttackedCharacter;
	Parms.AttackerCharacter = AttackerCharacter;
	Parms.DamageAmount = DamageAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnCharacterRevived
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  RevivedCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  RevivingCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnCharacterRevived(class UAC_jRPG_CharacterBattleStats_C* RevivedCharacter, class UAC_jRPG_CharacterBattleStats_C* RevivingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnCharacterRevived");

	Params::BP_CharacterReactionSystem_C_OnCharacterRevived Parms{};

	Parms.RevivedCharacter = RevivedCharacter;
	Parms.RevivingCharacter = RevivingCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnEnemyAcquiredTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  EnemyStats                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAC_jRPG_CharacterBattleStats_C*  TargetedStats                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnEnemyAcquiredTarget(class UAC_jRPG_CharacterBattleStats_C* EnemyStats, class UAC_jRPG_CharacterBattleStats_C* TargetedStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnEnemyAcquiredTarget");

	Params::BP_CharacterReactionSystem_C_OnEnemyAcquiredTarget Parms{};

	Parms.EnemyStats = EnemyStats;
	Parms.TargetedStats = TargetedStats;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.OnTurnStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAC_jRPG_CharacterBattleStats_C*  CharacterTurn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::OnTurnStart(class UAC_jRPG_CharacterBattleStats_C* CharacterTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "OnTurnStart");

	Params::BP_CharacterReactionSystem_C_OnTurnStart Parms{};

	Parms.CharacterTurn = CharacterTurn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_CharacterReactionSystem_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.ResetTurnState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CharacterReactionSystem_C::ResetTurnState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "ResetTurnState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.RollFromPool
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_BattleLinePool&         BattleLinePool                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FS_BattleLine*                   BattleLine                                             (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_CharacterReactionSystem_C::RollFromPool(const struct FS_BattleLinePool& BattleLinePool, struct FS_BattleLine* BattleLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "RollFromPool");

	Params::BP_CharacterReactionSystem_C_RollFromPool Parms{};

	Parms.BattleLinePool = std::move(BattleLinePool);

	UObject::ProcessEvent(Func, &Parms);

	if (BattleLine != nullptr)
		*BattleLine = std::move(Parms.BattleLine);
}


// Function BP_CharacterReactionSystem.BP_CharacterReactionSystem_C.ShouldSkipAllRolls
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_CharacterReactionSystem_C::ShouldSkipAllRolls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CharacterReactionSystem_C", "ShouldSkipAllRolls");

	Params::BP_CharacterReactionSystem_C_ShouldSkipAllRolls Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

