#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameActionInstance_ChildExecutor

#include "Basic.hpp"

#include "SandFall_structs.hpp"


namespace SDK::Params
{

// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.ExecuteChildGameAction
// 0x0040 (0x0040 - 0x0000)
struct BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction final
{
public:
	struct FGameAction_Wrapper                    GameActionWrapper;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UGameAction*                            CallFunc_GetGameActionFromWrapperPure_GameAction;  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameActionInstance>        CallFunc_GetInstanceClass_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(class UGameActionInstance* GameActionInstance)> K2Node_CreateDelegate_OutputDelegate; // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameActionInstance*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction) == 0x000008, "Wrong alignment on BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction");
static_assert(sizeof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction) == 0x000040, "Wrong size on BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction, GameActionWrapper) == 0x000000, "Member 'BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction::GameActionWrapper' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction, CallFunc_GetGameActionFromWrapperPure_GameAction) == 0x000010, "Member 'BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction::CallFunc_GetGameActionFromWrapperPure_GameAction' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction, CallFunc_GetInstanceClass_ReturnValue) == 0x000020, "Member 'BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction::CallFunc_GetInstanceClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction, CallFunc_SpawnObject_ReturnValue) == 0x000038, "Member 'BP_GameActionInstance_ChildExecutor_C_ExecuteChildGameAction::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.OnChildGameActionFinished
// 0x0020 (0x0020 - 0x0000)
struct BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished final
{
public:
	class UGameActionInstance*                    GameActionInstance;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGameActionInstance* GameActionInstance)> K2Node_CreateDelegate_OutputDelegate; // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished) == 0x000008, "Wrong alignment on BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished");
static_assert(sizeof(BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished) == 0x000020, "Wrong size on BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished, GameActionInstance) == 0x000000, "Member 'BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished::GameActionInstance' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_GameActionInstance_ChildExecutor_C_OnChildGameActionFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.TryExecuteChildGameAction
// 0x0018 (0x0018 - 0x0000)
struct BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction final
{
public:
	struct FGameAction_Wrapper                    GameActionWrapper;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValidGameActionWrapper_IsValid;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction) == 0x000008, "Wrong alignment on BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction");
static_assert(sizeof(BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction) == 0x000018, "Wrong size on BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction, GameActionWrapper) == 0x000000, "Member 'BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction::GameActionWrapper' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction, CallFunc_IsValidGameActionWrapper_IsValid) == 0x000010, "Member 'BP_GameActionInstance_ChildExecutor_C_TryExecuteChildGameAction::CallFunc_IsValidGameActionWrapper_IsValid' has a wrong offset!");

// Function BP_GameActionInstance_ChildExecutor.BP_GameActionInstance_ChildExecutor_C.GetDebugString
// 0x0028 (0x0028 - 0x0000)
struct BP_GameActionInstance_ChildExecutor_C_GetDebugString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugString_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameActionInstance_ChildExecutor_C_GetDebugString) == 0x000008, "Wrong alignment on BP_GameActionInstance_ChildExecutor_C_GetDebugString");
static_assert(sizeof(BP_GameActionInstance_ChildExecutor_C_GetDebugString) == 0x000028, "Wrong size on BP_GameActionInstance_ChildExecutor_C_GetDebugString");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_GetDebugString, ReturnValue) == 0x000000, "Member 'BP_GameActionInstance_ChildExecutor_C_GetDebugString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_GetDebugString, CallFunc_GetDebugString_ReturnValue) == 0x000010, "Member 'BP_GameActionInstance_ChildExecutor_C_GetDebugString::CallFunc_GetDebugString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameActionInstance_ChildExecutor_C_GetDebugString, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_GameActionInstance_ChildExecutor_C_GetDebugString::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

