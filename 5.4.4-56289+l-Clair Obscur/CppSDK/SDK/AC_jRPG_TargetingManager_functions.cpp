#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_TargetingManager

#include "Basic.hpp"

#include "AC_jRPG_TargetingManager_classes.hpp"
#include "AC_jRPG_TargetingManager_parameters.hpp"


namespace SDK
{

// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.AddSingleCharacterTargetingGroup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const TArray<class UBP_TargetingGroup_C*>&TargetGroups_0                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UBP_TargetingGroup_C**            TargetingGroup                                         (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::AddSingleCharacterTargetingGroup(class ABP_jRPG_Character_Battle_Base_C* Character, const TArray<class UBP_TargetingGroup_C*>& TargetGroups_0, class UBP_TargetingGroup_C** TargetingGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "AddSingleCharacterTargetingGroup");

	Params::AC_jRPG_TargetingManager_C_AddSingleCharacterTargetingGroup Parms{};

	Parms.Character = Character;
	Parms.TargetGroups_0 = std::move(TargetGroups_0);

	UObject::ProcessEvent(Func, &Parms);

	if (TargetingGroup != nullptr)
		*TargetingGroup = Parms.TargetingGroup;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.AddTargetingGroup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_jRPG_Character_Battle_Base_C*>&Characters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const TArray<class UBP_TargetingGroup_C*>&TargetGroups_0                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UBP_TargetingGroup_C**            TargetingGroup                                         (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::AddTargetingGroup(TArray<class ABP_jRPG_Character_Battle_Base_C*>& Characters, const TArray<class UBP_TargetingGroup_C*>& TargetGroups_0, class UBP_TargetingGroup_C** TargetingGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "AddTargetingGroup");

	Params::AC_jRPG_TargetingManager_C_AddTargetingGroup Parms{};

	Parms.Characters = std::move(Characters);
	Parms.TargetGroups_0 = std::move(TargetGroups_0);

	UObject::ProcessEvent(Func, &Parms);

	Characters = std::move(Parms.Characters);

	if (TargetingGroup != nullptr)
		*TargetingGroup = Parms.TargetingGroup;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.CancelTargeting
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::CancelTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "CancelTargeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ComputeTargetGroups
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_jRPG_TargetingType                    TargetingType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    BypassChecks                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAlly                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UBP_TargetingGroup_C*>*    TargetGroups_0                                         (Parm, OutParm)
// class ABP_jRPG_Character_Battle_Base_C**PreferedNextInitialTarget_0                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::ComputeTargetGroups(E_jRPG_TargetingType TargetingType, bool BypassChecks, bool* IsAlly, TArray<class UBP_TargetingGroup_C*>* TargetGroups_0, class ABP_jRPG_Character_Battle_Base_C** PreferedNextInitialTarget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "ComputeTargetGroups");

	Params::AC_jRPG_TargetingManager_C_ComputeTargetGroups Parms{};

	Parms.TargetingType = TargetingType;
	Parms.BypassChecks = BypassChecks;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAlly != nullptr)
		*IsAlly = Parms.IsAlly;

	if (TargetGroups_0 != nullptr)
		*TargetGroups_0 = std::move(Parms.TargetGroups_0);

	if (PreferedNextInitialTarget_0 != nullptr)
		*PreferedNextInitialTarget_0 = Parms.PreferedNextInitialTarget_0;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ConfirmTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::ConfirmTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "ConfirmTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.DEPRECATED_GetTargetsWithGamepad
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_jRPG_TargetingType                    TargetingType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectedTargetIndex                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SelectDescendingForSingleAllyType_                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_jRPG_Character_Battle_Base_C*>*Targets                                                (Parm, OutParm)
// int32*                                  SelectedTargetIndexOutput                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::DEPRECATED_GetTargetsWithGamepad(E_jRPG_TargetingType TargetingType, int32 SelectedTargetIndex, bool SelectDescendingForSingleAllyType_, TArray<class ABP_jRPG_Character_Battle_Base_C*>* Targets, int32* SelectedTargetIndexOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "DEPRECATED_GetTargetsWithGamepad");

	Params::AC_jRPG_TargetingManager_C_DEPRECATED_GetTargetsWithGamepad Parms{};

	Parms.TargetingType = TargetingType;
	Parms.SelectedTargetIndex = SelectedTargetIndex;
	Parms.SelectDescendingForSingleAllyType_ = SelectDescendingForSingleAllyType_;

	UObject::ProcessEvent(Func, &Parms);

	if (Targets != nullptr)
		*Targets = std::move(Parms.Targets);

	if (SelectedTargetIndexOutput != nullptr)
		*SelectedTargetIndexOutput = Parms.SelectedTargetIndexOutput;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.DEPRECATED_ShowTargets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* IndicatedCharacter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::DEPRECATED_ShowTargets(class ABP_jRPG_Character_Battle_Base_C* IndicatedCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "DEPRECATED_ShowTargets");

	Params::AC_jRPG_TargetingManager_C_DEPRECATED_ShowTargets Parms{};

	Parms.IndicatedCharacter = IndicatedCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.DisableTargeting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::DisableTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "DisableTargeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.EnablePreTargeting
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::EnablePreTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "EnablePreTargeting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.EnableTargeting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_jRPG_TargetingType                    TargetingType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::EnableTargeting(E_jRPG_TargetingType TargetingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "EnableTargeting");

	Params::AC_jRPG_TargetingManager_C_EnableTargeting Parms{};

	Parms.TargetingType = TargetingType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.EnableTargetingInternal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_jRPG_TargetingType                    TargetingType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    StartPreTargeting                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::EnableTargetingInternal(E_jRPG_TargetingType TargetingType, bool StartPreTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "EnableTargetingInternal");

	Params::AC_jRPG_TargetingManager_C_EnableTargetingInternal Parms{};

	Parms.TargetingType = TargetingType;
	Parms.StartPreTargeting = StartPreTargeting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ExecuteUbergraph_AC_jRPG_TargetingManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::ExecuteUbergraph_AC_jRPG_TargetingManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "ExecuteUbergraph_AC_jRPG_TargetingManager");

	Params::AC_jRPG_TargetingManager_C_ExecuteUbergraph_AC_jRPG_TargetingManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.GetBattleManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAC_jRPG_BattleManager_C*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UAC_jRPG_BattleManager_C* UAC_jRPG_TargetingManager_C::GetBattleManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "GetBattleManager");

	Params::AC_jRPG_TargetingManager_C_GetBattleManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.GetTargetingGroupForCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_TargetingGroup_C**            Array_Element                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::GetTargetingGroupForCharacter(class ABP_jRPG_Character_Battle_Base_C* Character, class UBP_TargetingGroup_C** Array_Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "GetTargetingGroupForCharacter");

	Params::AC_jRPG_TargetingManager_C_GetTargetingGroupForCharacter Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Array_Element != nullptr)
		*Array_Element = Parms.Array_Element;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.HideTargets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::HideTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "HideTargets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.IsCurrentlyTargetingAllies
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAC_jRPG_TargetingManager_C::IsCurrentlyTargetingAllies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "IsCurrentlyTargetingAllies");

	Params::AC_jRPG_TargetingManager_C_IsCurrentlyTargetingAllies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.IsCurrentlyTargetingEnemies
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UAC_jRPG_TargetingManager_C::IsCurrentlyTargetingEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "IsCurrentlyTargetingEnemies");

	Params::AC_jRPG_TargetingManager_C_IsCurrentlyTargetingEnemies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.NotifyTargetChange
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::NotifyTargetChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "NotifyTargetChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.OnTargetChanged
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::OnTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "OnTargetChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "ReceiveTick");

	Params::AC_jRPG_TargetingManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.RegisterTargetingGroupsInUINavigation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_Battle_Base_C* PreferedInitialTarget                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::RegisterTargetingGroupsInUINavigation(class ABP_jRPG_Character_Battle_Base_C* PreferedInitialTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "RegisterTargetingGroupsInUINavigation");

	Params::AC_jRPG_TargetingManager_C_RegisterTargetingGroupsInUINavigation Parms{};

	Parms.PreferedInitialTarget = PreferedInitialTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ResetTargetingSystem
// (Public, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_TargetingManager_C::ResetTargetingSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "ResetTargetingSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.SetFocusedTargetingGroup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_TargetingGroup_C*             TargetingGroup                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::SetFocusedTargetingGroup(class UBP_TargetingGroup_C* TargetingGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "SetFocusedTargetingGroup");

	Params::AC_jRPG_TargetingManager_C_SetFocusedTargetingGroup Parms{};

	Parms.TargetingGroup = TargetingGroup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ShiftTargetingGroup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::ShiftTargetingGroup(int32 Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "ShiftTargetingGroup");

	Params::AC_jRPG_TargetingManager_C_ShiftTargetingGroup Parms{};

	Parms.Offset = Offset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.TryFocusTargetGroup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_TargetingGroup_C*             TargetGroup                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::TryFocusTargetGroup(class UBP_TargetingGroup_C* TargetGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "TryFocusTargetGroup");

	Params::AC_jRPG_TargetingManager_C_TryFocusTargetGroup Parms{};

	Parms.TargetGroup = TargetGroup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.TryUnfocusTargetGroup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_TargetingGroup_C*             TargetGroup                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::TryUnfocusTargetGroup(class UBP_TargetingGroup_C* TargetGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "TryUnfocusTargetGroup");

	Params::AC_jRPG_TargetingManager_C_TryUnfocusTargetGroup Parms{};

	Parms.TargetGroup = TargetGroup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.UpdateTargetGroups
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_jRPG_TargetingType                    TargetingType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsAlly                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::UpdateTargetGroups(E_jRPG_TargetingType TargetingType, bool* IsAlly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "UpdateTargetGroups");

	Params::AC_jRPG_TargetingManager_C_UpdateTargetGroups Parms{};

	Parms.TargetingType = TargetingType;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAlly != nullptr)
		*IsAlly = Parms.IsAlly;
}


// Function AC_jRPG_TargetingManager.AC_jRPG_TargetingManager_C.ValidateTargetCandidates
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UAC_jRPG_CharacterBattleStats_C*>&TargetCharacterStats                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool*                                   Validated                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_BlockedActionFeedback*        BlockedReason                                          (Parm, OutParm, HasGetValueTypeHash)

void UAC_jRPG_TargetingManager_C::ValidateTargetCandidates(TArray<class UAC_jRPG_CharacterBattleStats_C*>& TargetCharacterStats, bool* Validated, struct FS_BlockedActionFeedback* BlockedReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_TargetingManager_C", "ValidateTargetCandidates");

	Params::AC_jRPG_TargetingManager_C_ValidateTargetCandidates Parms{};

	Parms.TargetCharacterStats = std::move(TargetCharacterStats);

	UObject::ProcessEvent(Func, &Parms);

	TargetCharacterStats = std::move(Parms.TargetCharacterStats);

	if (Validated != nullptr)
		*Validated = Parms.Validated;

	if (BlockedReason != nullptr)
		*BlockedReason = std::move(Parms.BlockedReason);
}

}

