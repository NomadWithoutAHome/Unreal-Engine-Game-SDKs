#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GPE_Rope

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FPromptParams_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GPE_Rope.BP_GPE_Rope_C.ApplySplineRadius
// 0x0030 (0x0030 - 0x0000)
struct BP_GPE_Rope_C_ApplySplineRadius final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_ApplySplineRadius) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_ApplySplineRadius");
static_assert(sizeof(BP_GPE_Rope_C_ApplySplineRadius) == 0x000030, "Wrong size on BP_GPE_Rope_C_ApplySplineRadius");
static_assert(offsetof(BP_GPE_Rope_C_ApplySplineRadius, Temp_int_Variable) == 0x000000, "Member 'BP_GPE_Rope_C_ApplySplineRadius::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ApplySplineRadius, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'BP_GPE_Rope_C_ApplySplineRadius::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ApplySplineRadius, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_GPE_Rope_C_ApplySplineRadius::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ApplySplineRadius, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_GPE_Rope_C_ApplySplineRadius::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ApplySplineRadius, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000028, "Member 'BP_GPE_Rope_C_ApplySplineRadius::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ApplySplineRadius, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GPE_Rope_C_ApplySplineRadius::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BottomTriggerSphereBig_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature) == 0x000001, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature, Activated) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_6_OnActivationChanged__DelegateSignature::Activated' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature) == 0x000001, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature, Activated) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_BP_GPE_InternalActivationComponent_K2Node_ComponentBoundEvent_7_OnInstantActivationChanged__DelegateSignature::Activated' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_EntryTriggerSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_GPE_Rope_C_BndEvt__BP_GPE_Rope_TopTriggerSphereBig_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.CanInteractWithMount
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_CanInteractWithMount final
{
public:
	bool                                          CanInteract;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_CanInteractWithMount) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_CanInteractWithMount");
static_assert(sizeof(BP_GPE_Rope_C_CanInteractWithMount) == 0x000001, "Wrong size on BP_GPE_Rope_C_CanInteractWithMount");
static_assert(offsetof(BP_GPE_Rope_C_CanInteractWithMount, CanInteract) == 0x000000, "Member 'BP_GPE_Rope_C_CanInteractWithMount::CanInteract' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.CreateSplineMesh
// 0x0004 (0x0004 - 0x0000)
struct BP_GPE_Rope_C_CreateSplineMesh final
{
public:
	int32                                         local_CurrentIndex;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_CreateSplineMesh) == 0x000004, "Wrong alignment on BP_GPE_Rope_C_CreateSplineMesh");
static_assert(sizeof(BP_GPE_Rope_C_CreateSplineMesh) == 0x000004, "Wrong size on BP_GPE_Rope_C_CreateSplineMesh");
static_assert(offsetof(BP_GPE_Rope_C_CreateSplineMesh, local_CurrentIndex) == 0x000000, "Member 'BP_GPE_Rope_C_CreateSplineMesh::local_CurrentIndex' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.ExecuteUbergraph_BP_GPE_Rope
// 0x0750 (0x0750 - 0x0000)
struct BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_BattleState;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_InteractingWorldCharacter;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_5;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_5;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_5;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_5;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_3;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_3;          // 0x0038(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0170(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InteractionState;                     // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Activated_1;            // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_Activated;              // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Instant;                        // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296[0x2];                                      // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_4;              // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0308(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402[0x6];                                      // 0x0402(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0428(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0528(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Interaction_C>    CallFunc_RegisterDistantInteractiveObject_InteractiveObject_CastInput; // 0x0530(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetRopeFXHeight_ReturnValue;              // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_5;              // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue_1;                // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DB[0x5];                                      // 0x05DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_2;                           // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0610(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0618(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0638(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue_2;                // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0739(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x073A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73B[0x5];                                      // 0x073B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0748(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope");
static_assert(sizeof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope) == 0x000750, "Wrong size on BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, EntryPoint) == 0x000000, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Event_BattleState) == 0x000004, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Event_BattleState' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Event_EndPlayReason) == 0x000005, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Event_InteractingWorldCharacter) == 0x000008, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Event_InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Event_Instant) == 0x000010, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OverlappedComponent_5) == 0x000018, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OverlappedComponent_5' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherActor_5) == 0x000020, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherComp_5) == 0x000028, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherBodyIndex_5) == 0x000030, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherBodyIndex_5' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_bFromSweep_3) == 0x000034, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_bFromSweep_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_SweepResult_3) == 0x000038, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_SweepResult_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000130, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000138, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000140, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000148, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000150, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000158, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000160, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000168, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x00016C, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000170, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000268, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000270, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000278, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000280, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Event_InteractionState) == 0x000284, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Event_InteractionState' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetPlayerPawn_ReturnValue) == 0x000288, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000290, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_IsActivated_ReturnValue) == 0x000291, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_Activated_1) == 0x000292, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_Activated_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_Activated) == 0x000293, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_Activated' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_CustomEvent_Instant) == 0x000294, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_CustomEvent_Instant' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_Not_PreBool_ReturnValue) == 0x000295, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000298, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002A0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0002B8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0002C0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x0002C8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0002D8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetPlayerPawn_ReturnValue_4) == 0x0002E0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetPlayerPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0002E8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0002F0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0002F8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000300, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000304, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000308, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000400, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000401, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000408, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherActor) == 0x000410, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherComp) == 0x000418, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000420, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_bFromSweep) == 0x000424, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_ComponentBoundEvent_SweepResult) == 0x000428, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000520, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetInteractionSystem_ReturnValue) == 0x000528, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_RegisterDistantInteractiveObject_InteractiveObject_CastInput) == 0x000530, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_RegisterDistantInteractiveObject_InteractiveObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetRopeFXHeight_ReturnValue) == 0x000540, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetRopeFXHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_GetPlayerPawn_ReturnValue_5) == 0x000548, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_GetPlayerPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_MakeVector_ReturnValue) == 0x000550, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000568, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000570, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, Temp_real_Variable) == 0x000588, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, Temp_real_Variable_1) == 0x000590, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, Temp_bool_Variable) == 0x000598, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, Temp_bool_Variable_1) == 0x000599, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Select_Default) == 0x0005A0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Select_Default_1) == 0x0005A8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_MakeVector_ReturnValue_1) == 0x0005C0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_IsActivated_ReturnValue_1) == 0x0005D8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_IsActivated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_BooleanOR_ReturnValue) == 0x0005D9, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, Temp_bool_Variable_2) == 0x0005DA, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, K2Node_Select_Default_2) == 0x0005E0, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0005F8, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000610, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000618, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_VLerp_ReturnValue) == 0x000620, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000638, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_Lerp_ReturnValue) == 0x000730, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_IsActivated_ReturnValue_2) == 0x000738, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_IsActivated_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_Not_PreBool_ReturnValue_1) == 0x000739, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_BooleanAND_ReturnValue) == 0x00073A, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000740, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000748, "Member 'BP_GPE_Rope_C_ExecuteUbergraph_BP_GPE_Rope::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.GetEndPositionAndTangent
// 0x0070 (0x0070 - 0x0000)
struct BP_GPE_Rope_C_GetEndPositionAndTangent final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                position;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tangent;                                           // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_CurrentIndex;                                // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetStartPositionAndTangent_Position;      // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetStartPositionAndTangent_Tangent;       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_GetEndPositionAndTangent) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_GetEndPositionAndTangent");
static_assert(sizeof(BP_GPE_Rope_C_GetEndPositionAndTangent) == 0x000070, "Wrong size on BP_GPE_Rope_C_GetEndPositionAndTangent");
static_assert(offsetof(BP_GPE_Rope_C_GetEndPositionAndTangent, Index_0) == 0x000000, "Member 'BP_GPE_Rope_C_GetEndPositionAndTangent::Index_0' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetEndPositionAndTangent, position) == 0x000008, "Member 'BP_GPE_Rope_C_GetEndPositionAndTangent::position' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetEndPositionAndTangent, Tangent) == 0x000020, "Member 'BP_GPE_Rope_C_GetEndPositionAndTangent::Tangent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetEndPositionAndTangent, local_CurrentIndex) == 0x000038, "Member 'BP_GPE_Rope_C_GetEndPositionAndTangent::local_CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetEndPositionAndTangent, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GPE_Rope_C_GetEndPositionAndTangent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetEndPositionAndTangent, CallFunc_GetStartPositionAndTangent_Position) == 0x000040, "Member 'BP_GPE_Rope_C_GetEndPositionAndTangent::CallFunc_GetStartPositionAndTangent_Position' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetEndPositionAndTangent, CallFunc_GetStartPositionAndTangent_Tangent) == 0x000058, "Member 'BP_GPE_Rope_C_GetEndPositionAndTangent::CallFunc_GetStartPositionAndTangent_Tangent' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.GetInteractionPromptParams
// 0x0020 (0x0020 - 0x0000)
struct BP_GPE_Rope_C_GetInteractionPromptParams final
{
public:
	struct FFPromptParams                         PromptParams;                                      // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_GetInteractionPromptParams) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_GetInteractionPromptParams");
static_assert(sizeof(BP_GPE_Rope_C_GetInteractionPromptParams) == 0x000020, "Wrong size on BP_GPE_Rope_C_GetInteractionPromptParams");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionPromptParams, PromptParams) == 0x000000, "Member 'BP_GPE_Rope_C_GetInteractionPromptParams::PromptParams' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionPromptParams, CallFunc_IsActivated_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_GetInteractionPromptParams::CallFunc_IsActivated_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.GetRopeFXHeight
// 0x0028 (0x0028 - 0x0000)
struct BP_GPE_Rope_C_GetRopeFXHeight final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_GetRopeFXHeight) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_GetRopeFXHeight");
static_assert(sizeof(BP_GPE_Rope_C_GetRopeFXHeight) == 0x000028, "Wrong size on BP_GPE_Rope_C_GetRopeFXHeight");
static_assert(offsetof(BP_GPE_Rope_C_GetRopeFXHeight, ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_GetRopeFXHeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetRopeFXHeight, CallFunc_IsActivated_ReturnValue) == 0x000008, "Member 'BP_GPE_Rope_C_GetRopeFXHeight::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetRopeFXHeight, CallFunc_GetSplineLength_ReturnValue) == 0x00000C, "Member 'BP_GPE_Rope_C_GetRopeFXHeight::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetRopeFXHeight, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_GPE_Rope_C_GetRopeFXHeight::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetRopeFXHeight, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_GetRopeFXHeight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetRopeFXHeight, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000020, "Member 'BP_GPE_Rope_C_GetRopeFXHeight::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.GetStartPositionAndTangent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_GPE_Rope_C_GetStartPositionAndTangent final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                position;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tangent;                                           // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_CurrentIndex;                                // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_GetStartPositionAndTangent) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_GetStartPositionAndTangent");
static_assert(sizeof(BP_GPE_Rope_C_GetStartPositionAndTangent) == 0x0000A0, "Wrong size on BP_GPE_Rope_C_GetStartPositionAndTangent");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, Index_0) == 0x000000, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::Index_0' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, position) == 0x000008, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::position' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, Tangent) == 0x000020, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::Tangent' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, local_CurrentIndex) == 0x000038, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::local_CurrentIndex' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000050, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x000068, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, CallFunc_ClampVectorSize_ReturnValue) == 0x000080, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x000098, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetStartPositionAndTangent, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x00009C, "Member 'BP_GPE_Rope_C_GetStartPositionAndTangent::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.IsInteractionAvailable
// 0x0005 (0x0005 - 0x0000)
struct BP_GPE_Rope_C_IsInteractionAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_IsInteractionAvailable) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_IsInteractionAvailable");
static_assert(sizeof(BP_GPE_Rope_C_IsInteractionAvailable) == 0x000005, "Wrong size on BP_GPE_Rope_C_IsInteractionAvailable");
static_assert(offsetof(BP_GPE_Rope_C_IsInteractionAvailable, Available) == 0x000000, "Member 'BP_GPE_Rope_C_IsInteractionAvailable::Available' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_IsInteractionAvailable, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_GPE_Rope_C_IsInteractionAvailable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_IsInteractionAvailable, CallFunc_IsActivated_ReturnValue) == 0x000002, "Member 'BP_GPE_Rope_C_IsInteractionAvailable::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_IsInteractionAvailable, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_GPE_Rope_C_IsInteractionAvailable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_IsInteractionAvailable, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_GPE_Rope_C_IsInteractionAvailable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.IsInteractionDone
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_IsInteractionDone final
{
public:
	bool                                          Done;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_IsInteractionDone) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_IsInteractionDone");
static_assert(sizeof(BP_GPE_Rope_C_IsInteractionDone) == 0x000001, "Wrong size on BP_GPE_Rope_C_IsInteractionDone");
static_assert(offsetof(BP_GPE_Rope_C_IsInteractionDone, Done) == 0x000000, "Member 'BP_GPE_Rope_C_IsInteractionDone::Done' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.OnEnemyBattleStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_OnEnemyBattleStateLoaded final
{
public:
	bool                                          BattleState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_OnEnemyBattleStateLoaded");
static_assert(sizeof(BP_GPE_Rope_C_OnEnemyBattleStateLoaded) == 0x000001, "Wrong size on BP_GPE_Rope_C_OnEnemyBattleStateLoaded");
static_assert(offsetof(BP_GPE_Rope_C_OnEnemyBattleStateLoaded, BattleState) == 0x000000, "Member 'BP_GPE_Rope_C_OnEnemyBattleStateLoaded::BattleState' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.OnInteractionRequested
// 0x0010 (0x0010 - 0x0000)
struct BP_GPE_Rope_C_OnInteractionRequested final
{
public:
	class ABP_jRPG_Character_World_C*             InteractingWorldCharacter;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_OnInteractionRequested) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_OnInteractionRequested");
static_assert(sizeof(BP_GPE_Rope_C_OnInteractionRequested) == 0x000010, "Wrong size on BP_GPE_Rope_C_OnInteractionRequested");
static_assert(offsetof(BP_GPE_Rope_C_OnInteractionRequested, InteractingWorldCharacter) == 0x000000, "Member 'BP_GPE_Rope_C_OnInteractionRequested::InteractingWorldCharacter' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_OnInteractionRequested, Instant) == 0x000008, "Member 'BP_GPE_Rope_C_OnInteractionRequested::Instant' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.OnObjectInteractionStateLoaded
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_OnObjectInteractionStateLoaded final
{
public:
	bool                                          InteractionState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_OnObjectInteractionStateLoaded");
static_assert(sizeof(BP_GPE_Rope_C_OnObjectInteractionStateLoaded) == 0x000001, "Wrong size on BP_GPE_Rope_C_OnObjectInteractionStateLoaded");
static_assert(offsetof(BP_GPE_Rope_C_OnObjectInteractionStateLoaded, InteractionState) == 0x000000, "Member 'BP_GPE_Rope_C_OnObjectInteractionStateLoaded::InteractionState' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_ReceiveEndPlay");
static_assert(sizeof(BP_GPE_Rope_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_GPE_Rope_C_ReceiveEndPlay");
static_assert(offsetof(BP_GPE_Rope_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_GPE_Rope_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.RegisterInteractionIfPossible
// 0x0018 (0x0018 - 0x0000)
struct BP_GPE_Rope_C_RegisterInteractionIfPossible final
{
public:
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Interaction_C>    CallFunc_RegisterInteractiveObject_InteractiveObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_RegisterInteractionIfPossible) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_RegisterInteractionIfPossible");
static_assert(sizeof(BP_GPE_Rope_C_RegisterInteractionIfPossible) == 0x000018, "Wrong size on BP_GPE_Rope_C_RegisterInteractionIfPossible");
static_assert(offsetof(BP_GPE_Rope_C_RegisterInteractionIfPossible, CallFunc_GetInteractionSystem_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_RegisterInteractionIfPossible::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_RegisterInteractionIfPossible, CallFunc_RegisterInteractiveObject_InteractiveObject_CastInput) == 0x000008, "Member 'BP_GPE_Rope_C_RegisterInteractionIfPossible::CallFunc_RegisterInteractiveObject_InteractiveObject_CastInput' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.SetCurrentUser
// 0x00A0 (0x00A0 - 0x0000)
struct BP_GPE_Rope_C_SetCurrentUser final
{
public:
	class ABP_jRPG_Character_World_C*             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_SetCurrentUser) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_SetCurrentUser");
static_assert(sizeof(BP_GPE_Rope_C_SetCurrentUser) == 0x0000A0, "Wrong size on BP_GPE_Rope_C_SetCurrentUser");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, Character) == 0x000000, "Member 'BP_GPE_Rope_C_SetCurrentUser::Character' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GPE_Rope_C_SetCurrentUser::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'BP_GPE_Rope_C_SetCurrentUser::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_GPE_Rope_C_SetCurrentUser::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_GPE_Rope_C_SetCurrentUser::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_GPE_Rope_C_SetCurrentUser::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_GPE_Rope_C_SetCurrentUser::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetCurrentUser, CallFunc_Format_ReturnValue) == 0x000090, "Member 'BP_GPE_Rope_C_SetCurrentUser::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.SetupFXParameters
// 0x0160 (0x0160 - 0x0000)
struct BP_GPE_Rope_C_SetupFXParameters final
{
public:
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0058(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_SetupFXParameters) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_SetupFXParameters");
static_assert(sizeof(BP_GPE_Rope_C_SetupFXParameters) == 0x000160, "Wrong size on BP_GPE_Rope_C_SetupFXParameters");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_GetSplineLength_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000058, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000150, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000158, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SetupFXParameters, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00015C, "Member 'BP_GPE_Rope_C_SetupFXParameters::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.ShouldHideDistantInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_ShouldHideDistantInteraction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_ShouldHideDistantInteraction) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_ShouldHideDistantInteraction");
static_assert(sizeof(BP_GPE_Rope_C_ShouldHideDistantInteraction) == 0x000001, "Wrong size on BP_GPE_Rope_C_ShouldHideDistantInteraction");
static_assert(offsetof(BP_GPE_Rope_C_ShouldHideDistantInteraction, ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_ShouldHideDistantInteraction::ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.SpawnActivationExplosionFX
// 0x0020 (0x0020 - 0x0000)
struct BP_GPE_Rope_C_SpawnActivationExplosionFX final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_SpawnActivationExplosionFX) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_SpawnActivationExplosionFX");
static_assert(sizeof(BP_GPE_Rope_C_SpawnActivationExplosionFX) == 0x000020, "Wrong size on BP_GPE_Rope_C_SpawnActivationExplosionFX");
static_assert(offsetof(BP_GPE_Rope_C_SpawnActivationExplosionFX, Location) == 0x000000, "Member 'BP_GPE_Rope_C_SpawnActivationExplosionFX::Location' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_SpawnActivationExplosionFX, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_SpawnActivationExplosionFX::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UnregisterInteractionIfNeeded
// 0x0018 (0x0018 - 0x0000)
struct BP_GPE_Rope_C_UnregisterInteractionIfNeeded final
{
public:
	class UBP_InteractionSystem_C*                CallFunc_GetInteractionSystem_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Interaction_C>    CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UnregisterInteractionIfNeeded) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UnregisterInteractionIfNeeded");
static_assert(sizeof(BP_GPE_Rope_C_UnregisterInteractionIfNeeded) == 0x000018, "Wrong size on BP_GPE_Rope_C_UnregisterInteractionIfNeeded");
static_assert(offsetof(BP_GPE_Rope_C_UnregisterInteractionIfNeeded, CallFunc_GetInteractionSystem_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UnregisterInteractionIfNeeded::CallFunc_GetInteractionSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UnregisterInteractionIfNeeded, CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput) == 0x000008, "Member 'BP_GPE_Rope_C_UnregisterInteractionIfNeeded::CallFunc_UnregisterInteractiveObject_InteractiveObject_CastInput' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateArrowsColor
// 0x0024 (0x0024 - 0x0000)
struct BP_GPE_Rope_C_UpdateArrowsColor final
{
public:
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateArrowsColor) == 0x000004, "Wrong alignment on BP_GPE_Rope_C_UpdateArrowsColor");
static_assert(sizeof(BP_GPE_Rope_C_UpdateArrowsColor) == 0x000024, "Wrong size on BP_GPE_Rope_C_UpdateArrowsColor");
static_assert(offsetof(BP_GPE_Rope_C_UpdateArrowsColor, CallFunc_IsActivated_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateArrowsColor::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateArrowsColor, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'BP_GPE_Rope_C_UpdateArrowsColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateArrowsColor, CallFunc_SelectColor_ReturnValue_1) == 0x000014, "Member 'BP_GPE_Rope_C_UpdateArrowsColor::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateEntryPointsLocation
// 0x0220 (0x0220 - 0x0000)
struct BP_GPE_Rope_C_UpdateEntryPointsLocation final
{
public:
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0018(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0128(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateEntryPointsLocation) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UpdateEntryPointsLocation");
static_assert(sizeof(BP_GPE_Rope_C_UpdateEntryPointsLocation) == 0x000220, "Wrong size on BP_GPE_Rope_C_UpdateEntryPointsLocation");
static_assert(offsetof(BP_GPE_Rope_C_UpdateEntryPointsLocation, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateEntryPointsLocation::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateEntryPointsLocation, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000018, "Member 'BP_GPE_Rope_C_UpdateEntryPointsLocation::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateEntryPointsLocation, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000110, "Member 'BP_GPE_Rope_C_UpdateEntryPointsLocation::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateEntryPointsLocation, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000128, "Member 'BP_GPE_Rope_C_UpdateEntryPointsLocation::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateFXRope
// 0x0001 (0x0001 - 0x0000)
struct BP_GPE_Rope_C_UpdateFXRope final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateFXRope) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_UpdateFXRope");
static_assert(sizeof(BP_GPE_Rope_C_UpdateFXRope) == 0x000001, "Wrong size on BP_GPE_Rope_C_UpdateFXRope");
static_assert(offsetof(BP_GPE_Rope_C_UpdateFXRope, Instant) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateFXRope::Instant' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateSplineMeshesVisibility
// 0x0038 (0x0038 - 0x0000)
struct BP_GPE_Rope_C_UpdateSplineMeshesVisibility final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USplineMeshComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UpdateSplineMeshesVisibility");
static_assert(sizeof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility) == 0x000038, "Wrong size on BP_GPE_Rope_C_UpdateSplineMeshesVisibility");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, CallFunc_IsActivated_ReturnValue) == 0x000020, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplineMeshesVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_GPE_Rope_C_UpdateSplineMeshesVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateSplinePointLocationAtIndex
// 0x0008 (0x0008 - 0x0000)
struct BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex) == 0x000004, "Wrong alignment on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex");
static_assert(sizeof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex) == 0x000008, "Wrong size on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex, Index_0) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex::Index_0' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateSplinePointLocationAtIndex0
// 0x00C8 (0x00C8 - 0x0000)
struct BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0 final
{
public:
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0");
static_assert(sizeof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0) == 0x0000C8, "Wrong size on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_GetRightVector_ReturnValue) == 0x000068, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000080, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex0::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateSplinePointLocationAtIndex1
// 0x00C8 (0x00C8 - 0x0000)
struct BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1 final
{
public:
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1");
static_assert(sizeof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1) == 0x0000C8, "Wrong size on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000068, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_GetUpVector_ReturnValue) == 0x000080, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000098, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex1::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateSplinePointLocationAtIndex2
// 0x00C8 (0x00C8 - 0x0000)
struct BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2 final
{
public:
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2");
static_assert(sizeof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2) == 0x0000C8, "Wrong size on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000050, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_GetRightVector_ReturnValue) == 0x000068, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000098, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B0, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex2::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateSplinePointLocationAtIndex3
// 0x0078 (0x0078 - 0x0000)
struct BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3 final
{
public:
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3");
static_assert(sizeof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3) == 0x000078, "Wrong size on BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000018, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_BreakVector_X) == 0x000030, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_BreakVector_Z) == 0x000040, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_BreakVector_X_1) == 0x000048, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_GPE_Rope_C_UpdateSplinePointLocationAtIndex3::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateState
// 0x0002 (0x0002 - 0x0000)
struct BP_GPE_Rope_C_UpdateState final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateState) == 0x000001, "Wrong alignment on BP_GPE_Rope_C_UpdateState");
static_assert(sizeof(BP_GPE_Rope_C_UpdateState) == 0x000002, "Wrong size on BP_GPE_Rope_C_UpdateState");
static_assert(offsetof(BP_GPE_Rope_C_UpdateState, Instant) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateState::Instant' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_GPE_Rope_C_UpdateState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UpdateStateInstant
// 0x0018 (0x0018 - 0x0000)
struct BP_GPE_Rope_C_UpdateStateInstant final
{
public:
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRopeFXHeight_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UpdateStateInstant) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UpdateStateInstant");
static_assert(sizeof(BP_GPE_Rope_C_UpdateStateInstant) == 0x000018, "Wrong size on BP_GPE_Rope_C_UpdateStateInstant");
static_assert(offsetof(BP_GPE_Rope_C_UpdateStateInstant, CallFunc_IsActivated_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UpdateStateInstant::CallFunc_IsActivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateStateInstant, CallFunc_GetRopeFXHeight_ReturnValue) == 0x000008, "Member 'BP_GPE_Rope_C_UpdateStateInstant::CallFunc_GetRopeFXHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UpdateStateInstant, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000010, "Member 'BP_GPE_Rope_C_UpdateStateInstant::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_GPE_Rope_C_UserConstructionScript final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_UserConstructionScript");
static_assert(sizeof(BP_GPE_Rope_C_UserConstructionScript) == 0x000010, "Wrong size on BP_GPE_Rope_C_UserConstructionScript");
static_assert(offsetof(BP_GPE_Rope_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_GPE_Rope_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000008, "Member 'BP_GPE_Rope_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1) == 0x00000C, "Member 'BP_GPE_Rope_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.GetInteractionFeedbackLocation
// 0x0050 (0x0050 - 0x0000)
struct BP_GPE_Rope_C_GetInteractionFeedbackLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_GetInteractionFeedbackLocation) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_GetInteractionFeedbackLocation");
static_assert(sizeof(BP_GPE_Rope_C_GetInteractionFeedbackLocation) == 0x000050, "Wrong size on BP_GPE_Rope_C_GetInteractionFeedbackLocation");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionFeedbackLocation, Location) == 0x000000, "Member 'BP_GPE_Rope_C_GetInteractionFeedbackLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionFeedbackLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_GetInteractionFeedbackLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionFeedbackLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_GPE_Rope_C_GetInteractionFeedbackLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionFeedbackLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000038, "Member 'BP_GPE_Rope_C_GetInteractionFeedbackLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.GetInteractionLocation
// 0x0050 (0x0050 - 0x0000)
struct BP_GPE_Rope_C_GetInteractionLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_GetInteractionLocation) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_GetInteractionLocation");
static_assert(sizeof(BP_GPE_Rope_C_GetInteractionLocation) == 0x000050, "Wrong size on BP_GPE_Rope_C_GetInteractionLocation");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionLocation, Location) == 0x000000, "Member 'BP_GPE_Rope_C_GetInteractionLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'BP_GPE_Rope_C_GetInteractionLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_GPE_Rope_C_GetInteractionLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GPE_Rope_C_GetInteractionLocation, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000038, "Member 'BP_GPE_Rope_C_GetInteractionLocation::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function BP_GPE_Rope.BP_GPE_Rope_C.GPE_GetActivationComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_GPE_Rope_C_GPE_GetActivationComponent final
{
public:
	class UBP_GPE_InternalActivationComponent_C*  ActivationComponent;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GPE_Rope_C_GPE_GetActivationComponent) == 0x000008, "Wrong alignment on BP_GPE_Rope_C_GPE_GetActivationComponent");
static_assert(sizeof(BP_GPE_Rope_C_GPE_GetActivationComponent) == 0x000008, "Wrong size on BP_GPE_Rope_C_GPE_GetActivationComponent");
static_assert(offsetof(BP_GPE_Rope_C_GPE_GetActivationComponent, ActivationComponent) == 0x000000, "Member 'BP_GPE_Rope_C_GPE_GetActivationComponent::ActivationComponent' has a wrong offset!");

}

