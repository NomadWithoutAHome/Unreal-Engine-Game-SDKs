#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InputLockComponent

#include "Basic.hpp"

#include "BP_InputLockComponent_classes.hpp"
#include "BP_InputLockComponent_parameters.hpp"


namespace SDK
{

// Function BP_InputLockComponent.BP_InputLockComponent_C.AddInputLock
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_InputLockParameters&    Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSF_ReferenceCounterHandle&      InputLockBlocker                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const class FString&                    DebugName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_InputLockComponent_C::AddInputLock(const struct FS_InputLockParameters& Parameters, struct FSF_ReferenceCounterHandle& InputLockBlocker, const class FString& DebugName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "AddInputLock");

	Params::BP_InputLockComponent_C_AddInputLock Parms{};

	Parms.Parameters = std::move(Parameters);
	Parms.InputLockBlocker = std::move(InputLockBlocker);
	Parms.DebugName = std::move(DebugName);

	UObject::ProcessEvent(Func, &Parms);

	InputLockBlocker = std::move(Parms.InputLockBlocker);
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.ClearInputLocks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_InputLockComponent_C::ClearInputLocks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "ClearInputLocks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.ExecuteUbergraph_BP_InputLockComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputLockComponent_C::ExecuteUbergraph_BP_InputLockComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "ExecuteUbergraph_BP_InputLockComponent");

	Params::BP_InputLockComponent_C_ExecuteUbergraph_BP_InputLockComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.IsCameraInputLocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_InputLockComponent_C::IsCameraInputLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "IsCameraInputLocked");

	Params::BP_InputLockComponent_C_IsCameraInputLocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.IsMovementInputLocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_InputLockComponent_C::IsMovementInputLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "IsMovementInputLocked");

	Params::BP_InputLockComponent_C_IsMovementInputLocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.OnAnyInputLockChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    _isActive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputLockComponent_C::OnAnyInputLockChanged(bool _isActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "OnAnyInputLockChanged");

	Params::BP_InputLockComponent_C_OnAnyInputLockChanged Parms{};

	Parms._isActive = _isActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_InputLockComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InputLockComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "ReceiveEndPlay");

	Params::BP_InputLockComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InputLockComponent.BP_InputLockComponent_C.RemoveInputLock
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_InputLockParameters&    Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSF_ReferenceCounterHandle&      InputLockBlocker                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_InputLockComponent_C::RemoveInputLock(const struct FS_InputLockParameters& Parameters, struct FSF_ReferenceCounterHandle& InputLockBlocker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InputLockComponent_C", "RemoveInputLock");

	Params::BP_InputLockComponent_C_RemoveInputLock Parms{};

	Parms.Parameters = std::move(Parameters);
	Parms.InputLockBlocker = std::move(InputLockBlocker);

	UObject::ProcessEvent(Func, &Parms);

	InputLockBlocker = std::move(Parms.InputLockBlocker);
}

}

