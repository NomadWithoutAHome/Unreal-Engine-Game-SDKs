#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DependencyRefCounter

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DependencyRefCounter.BP_DependencyRefCounter_C
// 0x0038 (0x0060 - 0x0028)
class UBP_DependencyRefCounter_C final : public UObject
{
public:
	TMulticastInlineDelegate<void()>              OnAllDependenciesSolved;                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UObject*>                        Dependencies;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UObject*>                        SolvedDependencies;                                // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsListening;                                       // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasDependency;                                     // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTriggered;                                      // 0x005A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AreAllDependenciesSolved(bool* AllSolved);
	void CheckDependencies();
	void GetDebugText(class FText* Result);
	bool HasNoPendingDependency();
	bool HasObjectAsDependency(const class UObject*& Object);
	void Register_Dependency(class UObject* Dependency);
	void Reset();
	void ResetAllDependencies();
	void SolveDependency(class UObject* Dependency);
	void StartListenToDependencies();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DependencyRefCounter_C">();
	}
	static class UBP_DependencyRefCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_DependencyRefCounter_C>();
	}
};
static_assert(alignof(UBP_DependencyRefCounter_C) == 0x000008, "Wrong alignment on UBP_DependencyRefCounter_C");
static_assert(sizeof(UBP_DependencyRefCounter_C) == 0x000060, "Wrong size on UBP_DependencyRefCounter_C");
static_assert(offsetof(UBP_DependencyRefCounter_C, OnAllDependenciesSolved) == 0x000028, "Member 'UBP_DependencyRefCounter_C::OnAllDependenciesSolved' has a wrong offset!");
static_assert(offsetof(UBP_DependencyRefCounter_C, Dependencies) == 0x000038, "Member 'UBP_DependencyRefCounter_C::Dependencies' has a wrong offset!");
static_assert(offsetof(UBP_DependencyRefCounter_C, SolvedDependencies) == 0x000048, "Member 'UBP_DependencyRefCounter_C::SolvedDependencies' has a wrong offset!");
static_assert(offsetof(UBP_DependencyRefCounter_C, IsListening) == 0x000058, "Member 'UBP_DependencyRefCounter_C::IsListening' has a wrong offset!");
static_assert(offsetof(UBP_DependencyRefCounter_C, HasDependency) == 0x000059, "Member 'UBP_DependencyRefCounter_C::HasDependency' has a wrong offset!");
static_assert(offsetof(UBP_DependencyRefCounter_C, HasTriggered) == 0x00005A, "Member 'UBP_DependencyRefCounter_C::HasTriggered' has a wrong offset!");

}

