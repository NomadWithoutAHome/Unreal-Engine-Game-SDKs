#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GM_COV_WeaponPictosPanel

#include "Basic.hpp"

#include "FEquipmentSlot_structs.hpp"
#include "Engine_structs.hpp"
#include "E_jRPG_ItemType_structs.hpp"


namespace SDK::Params
{

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature final
{
public:
	class UWBP_COV_PictosElement_C*               Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature) == 0x000008, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature, Widget) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement0_K2Node_ComponentBoundEvent_7_OnNavigated__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature final
{
public:
	class UWBP_COV_PictosElement_C*               Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature) == 0x000008, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature, Widget) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement1_K2Node_ComponentBoundEvent_5_OnNavigated__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature final
{
public:
	class UWBP_COV_PictosElement_C*               Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature) == 0x000008, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature, Widget) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_PictoElement2_K2Node_ComponentBoundEvent_6_OnNavigated__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature final
{
public:
	class UWBP_COV_WeaponElement_C*               WeaponWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature) == 0x000008, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature, WeaponWidget) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_BndEvt__WBP_GM_COV_WeaponPictosPanel_WeaponElement0_K2Node_ComponentBoundEvent_4_OnNavigated__DelegateSignature::WeaponWidget' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel
// 0x0028 (0x0028 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_COV_PictosElement_C*               K2Node_ComponentBoundEvent_Widget;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_COV_WeaponElement_C*               K2Node_ComponentBoundEvent_WeaponWidget;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_COV_PictosElement_C*               K2Node_ComponentBoundEvent_Widget_2;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_COV_PictosElement_C*               K2Node_ComponentBoundEvent_Widget_1;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel) == 0x000028, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel, EntryPoint) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel, K2Node_ComponentBoundEvent_Widget) == 0x000008, "Member 'WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel, K2Node_ComponentBoundEvent_WeaponWidget) == 0x000010, "Member 'WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel::K2Node_ComponentBoundEvent_WeaponWidget' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel, K2Node_ComponentBoundEvent_Widget_2) == 0x000018, "Member 'WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel::K2Node_ComponentBoundEvent_Widget_2' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel, K2Node_ComponentBoundEvent_Widget_1) == 0x000020, "Member 'WBP_GM_COV_WeaponPictosPanel_C_ExecuteUbergraph_WBP_GM_COV_WeaponPictosPanel::K2Node_ComponentBoundEvent_Widget_1' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.GetListEntryFromItemSlot
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot final
{
public:
	struct FFEquipmentSlot                        EquipmentSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonUserWidget*                      ListEntry;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UWBP_COV_PictosElement_C*>       Temp_wildcard_Variable;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_COV_PictosElement_C*>       CallFunc_GetPictosSlotListEntries_Array;           // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_COV_PictosElement_C*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot) == 0x0000D0, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, EquipmentSlot) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, ListEntry) == 0x000008, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::ListEntry' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, Temp_wildcard_Variable) == 0x000010, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, CallFunc_GetPictosSlotListEntries_Array) == 0x000020, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::CallFunc_GetPictosSlotListEntries_Array' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000040, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, K2Node_MakeArray_Array) == 0x0000B0, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetListEntryFromItemSlot::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.GetPictosSlotListEntries
// 0x0020 (0x0020 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries final
{
public:
	TArray<class UWBP_COV_PictosElement_C*>       Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UWBP_COV_PictosElement_C*>       K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries) == 0x000020, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries, Array) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries::Array' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_GM_COV_WeaponPictosPanel_C_GetPictosSlotListEntries::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.LoadCharacter
// 0x0068 (0x0068 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFEquipmentSlot>                CallFunc_GetAllEquipmentSlotTypes_EquipmentSlots;  // 0x0010(0x0010)(ReferenceParm)
	struct FFEquipmentSlot                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ItemInstance_Gear_C*                CallFunc_GetItemInstanceInSlot_ItemInstance;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotUsed_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UINotifiedObject_C> CallFunc_LoadNotificationData_NotifiedObject_CastInput; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_UINotifiedObject_C> CallFunc_LoadNotificationData_NotifiedObject_CastInput_1; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter) == 0x000068, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CharacterData) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_GetAllEquipmentSlotTypes_EquipmentSlots) == 0x000010, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_GetAllEquipmentSlotTypes_EquipmentSlots' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_GetItemInstanceInSlot_ItemInstance) == 0x000030, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_GetItemInstanceInSlot_ItemInstance' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_IsSlotEmpty_ReturnValue) == 0x000038, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_IsSlotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_IsSlotUsed_ReturnValue) == 0x000039, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_IsSlotUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_LoadNotificationData_NotifiedObject_CastInput) == 0x000048, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_LoadNotificationData_NotifiedObject_CastInput' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter, CallFunc_LoadNotificationData_NotifiedObject_CastInput_1) == 0x000058, "Member 'WBP_GM_COV_WeaponPictosPanel_C_LoadCharacter::CallFunc_LoadNotificationData_NotifiedObject_CastInput_1' has a wrong offset!");

// Function WBP_GM_COV_WeaponPictosPanel.WBP_GM_COV_WeaponPictosPanel_C.SetItemInstanceInSlot
// 0x0040 (0x0040 - 0x0000)
struct WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot final
{
public:
	class UBP_ItemInstance_Gear_C*                GearInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFEquipmentSlot                        EquipmentSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UCommonUserWidget*                      CallFunc_GetListEntryFromItemSlot_ListEntry;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UWBP_COV_WeaponElement_C*               K2Node_DynamicCast_AsWBP_COV_Weapon_Element;       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_COV_PictosElement_C*               K2Node_DynamicCast_AsWBP_COV_Pictos_Element;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot) == 0x000008, "Wrong alignment on WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot");
static_assert(sizeof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot) == 0x000040, "Wrong size on WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, GearInstance) == 0x000000, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::GearInstance' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, EquipmentSlot) == 0x000008, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, CharacterData) == 0x000010, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, CallFunc_GetListEntryFromItemSlot_ListEntry) == 0x000018, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::CallFunc_GetListEntryFromItemSlot_ListEntry' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, K2Node_DynamicCast_AsWBP_COV_Weapon_Element) == 0x000020, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::K2Node_DynamicCast_AsWBP_COV_Weapon_Element' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, K2Node_DynamicCast_AsWBP_COV_Pictos_Element) == 0x000030, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::K2Node_DynamicCast_AsWBP_COV_Pictos_Element' has a wrong offset!");
static_assert(offsetof(WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WBP_GM_COV_WeaponPictosPanel_C_SetItemInstanceInSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

