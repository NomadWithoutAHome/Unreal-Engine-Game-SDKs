#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimTarget_Button

#include "Basic.hpp"

#include "BP_FreeAimTarget_Button_classes.hpp"
#include "BP_FreeAimTarget_Button_parameters.hpp"


namespace SDK
{

// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.TriggerTargets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Instant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::TriggerTargets(bool Instant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "TriggerTargets");

	Params::BP_FreeAimTarget_Button_C_TriggerTargets Parms{};

	Parms.Instant = Instant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.SpawnFlyingIndicator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ActorToTrigger_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::SpawnFlyingIndicator(class AActor* ActorToTrigger_0, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "SpawnFlyingIndicator");

	Params::BP_FreeAimTarget_Button_C_SpawnFlyingIndicator Parms{};

	Parms.ActorToTrigger_0 = ActorToTrigger_0;
	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_FreeAimTarget_Button_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.OnObjectInteractionStateLoaded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InteractionState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::OnObjectInteractionStateLoaded(bool InteractionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "OnObjectInteractionStateLoaded");

	Params::BP_FreeAimTarget_Button_C_OnObjectInteractionStateLoaded Parms{};

	Parms.InteractionState = InteractionState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.IsInteractionAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Available                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::IsInteractionAvailable(bool* Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "IsInteractionAvailable");

	Params::BP_FreeAimTarget_Button_C_IsInteractionAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Available != nullptr)
		*Available = Parms.Available;
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.FreeAimHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       PlayerCharacterWorld                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::FreeAimHit(class ABP_jRPG_Character_World_C* PlayerCharacterWorld, const struct FVector& HitLocation, bool IsDisabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "FreeAimHit");

	Params::BP_FreeAimTarget_Button_C_FreeAimHit Parms{};

	Parms.PlayerCharacterWorld = PlayerCharacterWorld;
	Parms.HitLocation = std::move(HitLocation);
	Parms.IsDisabled = IsDisabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.ExplorationAttacked
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_jRPG_Character_World_C*       PlayerCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   ImpactPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::ExplorationAttacked(class ABP_jRPG_Character_World_C* PlayerCharacter, const struct FVector& ImpactPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "ExplorationAttacked");

	Params::BP_FreeAimTarget_Button_C_ExplorationAttacked Parms{};

	Parms.PlayerCharacter = PlayerCharacter;
	Parms.ImpactPoint = std::move(ImpactPoint);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.ExecuteUbergraph_BP_FreeAimTarget_Button
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::ExecuteUbergraph_BP_FreeAimTarget_Button(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "ExecuteUbergraph_BP_FreeAimTarget_Button");

	Params::BP_FreeAimTarget_Button_C_ExecuteUbergraph_BP_FreeAimTarget_Button Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_FreeAimTarget_Button.BP_FreeAimTarget_Button_C.CreateDynamicFlyingBehavior
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FTransform&                TargetTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_FreeAimTarget_Button_C::CreateDynamicFlyingBehavior(class AActor* Target, const struct FTransform& TargetTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FreeAimTarget_Button_C", "CreateDynamicFlyingBehavior");

	Params::BP_FreeAimTarget_Button_C_CreateDynamicFlyingBehavior Parms{};

	Parms.Target = Target;
	Parms.TargetTransform = std::move(TargetTransform);

	UObject::ProcessEvent(Func, &Parms);
}

}

