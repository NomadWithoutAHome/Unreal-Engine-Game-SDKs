#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GodRay

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GodRay.BP_GodRay_C
// 0x0068 (0x02F8 - 0x0290)
class ABP_GodRay_C final : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    UISprite;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GodRayMesh;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Sun;                                               // 0x02A8(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Width;                                             // 0x02B0(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x02B8(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_material;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02C8(0x0010)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        Brightness;                                        // 0x02D8(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	double                                        FadeDistance;                                      // 0x02E0(0x0008)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          Animated;                                          // 0x02E8(0x0001)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          RandomTime;                                        // 0x02EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	bool                                          SpotLight;                                         // 0x02F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSun;                                            // 0x02F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GodRay_C">();
	}
	static class ABP_GodRay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GodRay_C>();
	}
};
static_assert(alignof(ABP_GodRay_C) == 0x000008, "Wrong alignment on ABP_GodRay_C");
static_assert(sizeof(ABP_GodRay_C) == 0x0002F8, "Wrong size on ABP_GodRay_C");
static_assert(offsetof(ABP_GodRay_C, StaticMesh1) == 0x000290, "Member 'ABP_GodRay_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, UISprite) == 0x000298, "Member 'ABP_GodRay_C::UISprite' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, GodRayMesh) == 0x0002A0, "Member 'ABP_GodRay_C::GodRayMesh' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Sun) == 0x0002A8, "Member 'ABP_GodRay_C::Sun' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Width) == 0x0002B0, "Member 'ABP_GodRay_C::Width' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Length) == 0x0002B8, "Member 'ABP_GodRay_C::Length' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Dynamic_material) == 0x0002C0, "Member 'ABP_GodRay_C::Dynamic_material' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Color) == 0x0002C8, "Member 'ABP_GodRay_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Brightness) == 0x0002D8, "Member 'ABP_GodRay_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, FadeDistance) == 0x0002E0, "Member 'ABP_GodRay_C::FadeDistance' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, Animated) == 0x0002E8, "Member 'ABP_GodRay_C::Animated' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, RandomTime) == 0x0002EC, "Member 'ABP_GodRay_C::RandomTime' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, SpotLight) == 0x0002F4, "Member 'ABP_GodRay_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_GodRay_C, UseSun) == 0x0002F5, "Member 'ABP_GodRay_C::UseSun' has a wrong offset!");

}

