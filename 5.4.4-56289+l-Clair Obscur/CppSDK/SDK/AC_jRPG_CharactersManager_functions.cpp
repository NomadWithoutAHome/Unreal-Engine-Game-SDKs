#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AC_jRPG_CharactersManager

#include "Basic.hpp"

#include "AC_jRPG_CharactersManager_classes.hpp"
#include "AC_jRPG_CharactersManager_parameters.hpp"


namespace SDK
{

// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.AddCharacterToParty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::AddCharacterToParty(class FName CharacterHardcodedName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "AddCharacterToParty");

	Params::AC_jRPG_CharactersManager_C_AddCharacterToParty Parms{};

	Parms.CharacterHardcodedName = CharacterHardcodedName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.AddNewCharacterToCollection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_jRPG_CharacterSaveState&CharacterSaveState                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::AddNewCharacterToCollection(const struct FS_jRPG_CharacterSaveState& CharacterSaveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "AddNewCharacterToCollection");

	Params::AC_jRPG_CharactersManager_C_AddNewCharacterToCollection Parms{};

	Parms.CharacterSaveState = std::move(CharacterSaveState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.CheckIfThereIsCharacterInParty
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32*                                  SlotIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::CheckIfThereIsCharacterInParty(class FName CharacterHardcodedName, bool* Success_, int32* SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "CheckIfThereIsCharacterInParty");

	Params::AC_jRPG_CharactersManager_C_CheckIfThereIsCharacterInParty Parms{};

	Parms.CharacterHardcodedName = CharacterHardcodedName;

	UObject::ProcessEvent(Func, &Parms);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;

	if (SlotIndex != nullptr)
		*SlotIndex = Parms.SlotIndex;
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.ComputePartyWithExclusions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_CharactersManager_C::ComputePartyWithExclusions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "ComputePartyWithExclusions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.FullHealAllCharacters
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_CharactersManager_C::FullHealAllCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "FullHealAllCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.GetCharacterData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             CharacterId                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_CharacterData_C**             CharacterData                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::GetCharacterData(class FName CharacterId, class UBP_CharacterData_C** CharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "GetCharacterData");

	Params::AC_jRPG_CharactersManager_C_GetCharacterData Parms{};

	Parms.CharacterId = CharacterId;

	UObject::ProcessEvent(Func, &Parms);

	if (CharacterData != nullptr)
		*CharacterData = Parms.CharacterData;
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.InitCharacterData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FS_jRPG_CharacterSaveState&CharacterSaveState                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UBP_CharacterData_C*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UBP_CharacterData_C* UAC_jRPG_CharactersManager_C::InitCharacterData(const struct FS_jRPG_CharacterSaveState& CharacterSaveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "InitCharacterData");

	Params::AC_jRPG_CharactersManager_C_InitCharacterData Parms{};

	Parms.CharacterSaveState = std::move(CharacterSaveState);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.LearnNewAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UpgradeIfAlreadyLearned                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::LearnNewAction(class FName Character, class FName ActionName, bool UpgradeIfAlreadyLearned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "LearnNewAction");

	Params::AC_jRPG_CharactersManager_C_LearnNewAction Parms{};

	Parms.Character = Character;
	Parms.ActionName = ActionName;
	Parms.UpgradeIfAlreadyLearned = UpgradeIfAlreadyLearned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.RemoveCharacterFromCollection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_CharacterData_C*              CharacterData                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::RemoveCharacterFromCollection(class UBP_CharacterData_C* CharacterData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "RemoveCharacterFromCollection");

	Params::AC_jRPG_CharactersManager_C_RemoveCharacterFromCollection Parms{};

	Parms.CharacterData = CharacterData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.RemoveCharacterFromParty
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::RemoveCharacterFromParty(class FName CharacterHardcodedName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "RemoveCharacterFromParty");

	Params::AC_jRPG_CharactersManager_C_RemoveCharacterFromParty Parms{};

	Parms.CharacterHardcodedName = CharacterHardcodedName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.ReplaceCharacterInParty
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::ReplaceCharacterInParty(class FName CharacterHardcodedName, int32 position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "ReplaceCharacterInParty");

	Params::AC_jRPG_CharactersManager_C_ReplaceCharacterInParty Parms{};

	Parms.CharacterHardcodedName = CharacterHardcodedName;
	Parms.position = position;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.RestoreHP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  HP_Amount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::RestoreHP(class FName CharacterHardcodedName, double HP_Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "RestoreHP");

	Params::AC_jRPG_CharactersManager_C_RestoreHP Parms{};

	Parms.CharacterHardcodedName = CharacterHardcodedName;
	Parms.HP_Amount = HP_Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.RestoreMP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MP_Amount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::RestoreMP(class FName CharacterHardcodedName, double MP_Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "RestoreMP");

	Params::AC_jRPG_CharactersManager_C_RestoreMP Parms{};

	Parms.CharacterHardcodedName = CharacterHardcodedName;
	Parms.MP_Amount = MP_Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.SetCharacterExclusions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    CharactersToExclude                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>&                    CharactersToInclude                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UAC_jRPG_CharactersManager_C::SetCharacterExclusions(TArray<class FName>& CharactersToExclude, TArray<class FName>& CharactersToInclude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "SetCharacterExclusions");

	Params::AC_jRPG_CharactersManager_C_SetCharacterExclusions Parms{};

	Parms.CharactersToExclude = std::move(CharactersToExclude);
	Parms.CharactersToInclude = std::move(CharactersToInclude);

	UObject::ProcessEvent(Func, &Parms);

	CharactersToExclude = std::move(Parms.CharactersToExclude);
	CharactersToInclude = std::move(Parms.CharactersToInclude);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.SetCharacterHP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharacterHardcodedName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAC_jRPG_CharactersManager_C::SetCharacterHP(class FName CharacterHardcodedName, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "SetCharacterHP");

	Params::AC_jRPG_CharactersManager_C_SetCharacterHP Parms{};

	Parms.CharacterHardcodedName = CharacterHardcodedName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.SetParty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>&                    InputPin                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UAC_jRPG_CharactersManager_C::SetParty(TArray<class FName>& InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "SetParty");

	Params::AC_jRPG_CharactersManager_C_SetParty Parms{};

	Parms.InputPin = std::move(InputPin);

	UObject::ProcessEvent(Func, &Parms);

	InputPin = std::move(Parms.InputPin);
}


// Function AC_jRPG_CharactersManager.AC_jRPG_CharactersManager_C.ValidateCharacterExclusions
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAC_jRPG_CharactersManager_C::ValidateCharacterExclusions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AC_jRPG_CharactersManager_C", "ValidateCharacterExclusions");

	UObject::ProcessEvent(Func, nullptr);
}

}

