#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CustomMoveZone_Ladder

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_CustomMoveZone_Ladder.BPI_CustomMoveZone_Ladder_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_CustomMoveZone_Ladder_C final
{
public:
	void CheckEnterToBottom(const struct FVector& Character_Bottom_Location, const struct FVector& Input_Direction, double Input_Scale, bool* Result);
	void CheckEnterToMiddle(const struct FVector& Character_Bottom_Location, const struct FVector& Input_Direction, double Input_Scale, bool* Result);
	void CheckEnterToTop(const struct FVector& Character_Bottom_Location, const struct FVector& Input_Direction, double Input_Scale, bool* Result);
	void CheckExitToBottom(const struct FVector& Character_Bottom_Location, double Input_Scale, bool* Result);
	void CheckExitToTop(const struct FVector& Character_Bottom_Location, double Input_Scale, bool* Result);
	void GetBottomEnterLocation(class ACharacter* Character, struct FVector* Bottom_Enter_Location, struct FRotator* Bottom_Enter_Rotation);
	void GetLadderLocation(class ACharacter* Character, struct FVector* Top_Location, struct FVector* Bottom_Location);
	void GetLadderRotation(struct FRotator* Ladder_Rotation);
	void GetTopEnterLocation(class ACharacter* Character, struct FVector* Top_Enter_Location, struct FRotator* Top_Enter_Rotation);

	void GetLadderStepHeight(double* StepHeight) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_CustomMoveZone_Ladder_C">();
	}
	static class IBPI_CustomMoveZone_Ladder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_CustomMoveZone_Ladder_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_CustomMoveZone_Ladder_C) == 0x000001, "Wrong alignment on IBPI_CustomMoveZone_Ladder_C");
static_assert(sizeof(IBPI_CustomMoveZone_Ladder_C) == 0x000001, "Wrong size on IBPI_CustomMoveZone_Ladder_C");

}

