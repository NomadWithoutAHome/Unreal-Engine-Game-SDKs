#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FL_AudioHelpers

#include "Basic.hpp"

#include "BP_FL_AudioHelpers_classes.hpp"
#include "BP_FL_AudioHelpers_parameters.hpp"


namespace SDK
{

// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.GetWorldAudioComponent
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_World_Audio_Component_C**     WorldAudioComponent                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_FL_AudioHelpers_C::GetWorldAudioComponent(class UObject* __WorldContext, class UBP_World_Audio_Component_C** WorldAudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FL_AudioHelpers_C", "GetWorldAudioComponent");

	Params::BP_FL_AudioHelpers_C_GetWorldAudioComponent Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (WorldAudioComponent != nullptr)
		*WorldAudioComponent = Parms.WorldAudioComponent;
}


// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.ValidateRangedAmbienceParameters
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const struct FS_RangedAmbienceParameters&AmbienceParameters                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FL_AudioHelpers_C::ValidateRangedAmbienceParameters(const struct FS_RangedAmbienceParameters& AmbienceParameters, class UObject* __WorldContext, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FL_AudioHelpers_C", "ValidateRangedAmbienceParameters");

	Params::BP_FL_AudioHelpers_C_ValidateRangedAmbienceParameters Parms{};

	Parms.AmbienceParameters = std::move(AmbienceParameters);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.GetInteractiveMusicSystem
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_InteractiveMusicSystem_C**    InteractiveMusicSystem                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FL_AudioHelpers_C::GetInteractiveMusicSystem(class UObject* __WorldContext, class UBP_InteractiveMusicSystem_C** InteractiveMusicSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FL_AudioHelpers_C", "GetInteractiveMusicSystem");

	Params::BP_FL_AudioHelpers_C_GetInteractiveMusicSystem Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (InteractiveMusicSystem != nullptr)
		*InteractiveMusicSystem = Parms.InteractiveMusicSystem;
}


// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.GetPlayerAudioLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_FL_AudioHelpers_C::GetPlayerAudioLocation(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FL_AudioHelpers_C", "GetPlayerAudioLocation");

	Params::BP_FL_AudioHelpers_C_GetPlayerAudioLocation Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.StartTimer
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_RuntimeSoundDataWithDelay&    SoundData                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TDelegate<void()>&                      Event                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FL_AudioHelpers_C::StartTimer(struct FS_RuntimeSoundDataWithDelay& SoundData, TDelegate<void()>& Event, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FL_AudioHelpers_C", "StartTimer");

	Params::BP_FL_AudioHelpers_C_StartTimer Parms{};

	Parms.SoundData = std::move(SoundData);
	Parms.Event = Event;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SoundData = std::move(Parms.SoundData);
	Event = Parms.Event;
}


// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.ApplySlidingWindow
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_RuntimeSoundDataWithDelay&    SoundData                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class USoundBase*                       PlayedSound                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_FL_AudioHelpers_C::ApplySlidingWindow(struct FS_RuntimeSoundDataWithDelay& SoundData, class USoundBase* PlayedSound, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FL_AudioHelpers_C", "ApplySlidingWindow");

	Params::BP_FL_AudioHelpers_C_ApplySlidingWindow Parms{};

	Parms.SoundData = std::move(SoundData);
	Parms.PlayedSound = PlayedSound;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SoundData = std::move(Parms.SoundData);
}


// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.ValidateInteractiveMusicParameters
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InteractiveMusicParameters&   Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FL_AudioHelpers_C::ValidateInteractiveMusicParameters(struct FS_InteractiveMusicParameters& Parameters, class UObject* __WorldContext, bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FL_AudioHelpers_C", "ValidateInteractiveMusicParameters");

	Params::BP_FL_AudioHelpers_C_ValidateInteractiveMusicParameters Parms{};

	Parms.Parameters = std::move(Parameters);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	Parameters = std::move(Parms.Parameters);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function BP_FL_AudioHelpers.BP_FL_AudioHelpers_C.GetFoleyAudioValuesFromOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UAudioComponent*                  AudioComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double*                                 FoleyLowCut                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 FoleyVolume                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FL_AudioHelpers_C::GetFoleyAudioValuesFromOwner(class UAudioComponent* AudioComponent, class UObject* __WorldContext, double* FoleyLowCut, double* FoleyVolume) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FL_AudioHelpers_C", "GetFoleyAudioValuesFromOwner");

	Params::BP_FL_AudioHelpers_C_GetFoleyAudioValuesFromOwner Parms{};

	Parms.AudioComponent = AudioComponent;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (FoleyLowCut != nullptr)
		*FoleyLowCut = Parms.FoleyLowCut;

	if (FoleyVolume != nullptr)
		*FoleyVolume = Parms.FoleyVolume;
}

}

