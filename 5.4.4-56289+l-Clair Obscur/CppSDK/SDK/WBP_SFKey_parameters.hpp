#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SFKey

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_SFKey.WBP_SFKey_C.ExecuteUbergraph_WBP_SFKey
// 0x0008 (0x0008 - 0x0000)
struct WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey) == 0x000004, "Wrong alignment on WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey");
static_assert(sizeof(WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey) == 0x000008, "Wrong size on WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey");
static_assert(offsetof(WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey, EntryPoint) == 0x000000, "Member 'WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_SFKey_C_ExecuteUbergraph_WBP_SFKey::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_SFKey.WBP_SFKey_C.GetKey
// 0x0018 (0x0018 - 0x0000)
struct WBP_SFKey_C_GetKey final
{
public:
	struct FKey                                   Key_0;                                             // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SFKey_C_GetKey) == 0x000008, "Wrong alignment on WBP_SFKey_C_GetKey");
static_assert(sizeof(WBP_SFKey_C_GetKey) == 0x000018, "Wrong size on WBP_SFKey_C_GetKey");
static_assert(offsetof(WBP_SFKey_C_GetKey, Key_0) == 0x000000, "Member 'WBP_SFKey_C_GetKey::Key_0' has a wrong offset!");

// Function WBP_SFKey.WBP_SFKey_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SFKey_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SFKey_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SFKey_C_PreConstruct");
static_assert(sizeof(WBP_SFKey_C_PreConstruct) == 0x000001, "Wrong size on WBP_SFKey_C_PreConstruct");
static_assert(offsetof(WBP_SFKey_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SFKey_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SFKey.WBP_SFKey_C.SetKey
// 0x0060 (0x0060 - 0x0000)
struct WBP_SFKey_C_SetKey final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0020(0x0010)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_Map_Find_Value;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SFKey_C_SetKey) == 0x000008, "Wrong alignment on WBP_SFKey_C_SetKey");
static_assert(sizeof(WBP_SFKey_C_SetKey) == 0x000060, "Wrong size on WBP_SFKey_C_SetKey");
static_assert(offsetof(WBP_SFKey_C_SetKey, InKey) == 0x000000, "Member 'WBP_SFKey_C_SetKey::InKey' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, Temp_byte_Variable) == 0x000018, "Member 'WBP_SFKey_C_SetKey::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, Temp_bool_Variable) == 0x000019, "Member 'WBP_SFKey_C_SetKey::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, Temp_byte_Variable_1) == 0x00001A, "Member 'WBP_SFKey_C_SetKey::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, Temp_byte_Variable_2) == 0x00001B, "Member 'WBP_SFKey_C_SetKey::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, Temp_byte_Variable_3) == 0x00001C, "Member 'WBP_SFKey_C_SetKey::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00001D, "Member 'WBP_SFKey_C_SetKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, CallFunc_Not_PreBool_ReturnValue) == 0x00001E, "Member 'WBP_SFKey_C_SetKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, Temp_bool_Variable_1) == 0x00001F, "Member 'WBP_SFKey_C_SetKey::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000020, "Member 'WBP_SFKey_C_SetKey::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, CallFunc_Map_Find_Value) == 0x000030, "Member 'WBP_SFKey_C_SetKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'WBP_SFKey_C_SetKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, K2Node_Select_Default) == 0x000059, "Member 'WBP_SFKey_C_SetKey::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SFKey_C_SetKey, K2Node_Select_Default_1) == 0x00005A, "Member 'WBP_SFKey_C_SetKey::K2Node_Select_Default_1' has a wrong offset!");

}

