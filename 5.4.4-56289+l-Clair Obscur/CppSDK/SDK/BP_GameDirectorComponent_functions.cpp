#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameDirectorComponent

#include "Basic.hpp"

#include "BP_GameDirectorComponent_classes.hpp"
#include "BP_GameDirectorComponent_parameters.hpp"


namespace SDK
{

// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.PrintText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FText&                      InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_GameDirectorComponent_C::PrintText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "PrintText");

	Params::BP_GameDirectorComponent_C_PrintText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnWorldSkillEnd
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnWorldSkillEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnWorldSkillEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnFreeAimCancelled
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnFreeAimCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnFreeAimCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnWorldSkillStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnWorldSkillStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnWorldSkillStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.Unload Sequence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALevelSequenceActor*              LevelSequenceActor                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::Unload_Sequence(class ALevelSequenceActor* LevelSequenceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "Unload Sequence");

	Params::BP_GameDirectorComponent_C_Unload_Sequence Parms{};

	Parms.LevelSequenceActor = LevelSequenceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.PreloadLevelSequence
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ALevelSequenceActor**             OutActor                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::PreloadLevelSequence(class ULevelSequence* LevelSequence, class ALevelSequenceActor** OutActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "PreloadLevelSequence");

	Params::BP_GameDirectorComponent_C_PreloadLevelSequence Parms{};

	Parms.LevelSequence = LevelSequence;

	UObject::ProcessEvent(Func, &Parms);

	if (OutActor != nullptr)
		*OutActor = Parms.OutActor;
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.PlayBattleTurnSequence
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ALevelSequenceActor*              BattleTurnSequence                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::PlayBattleTurnSequence(class ALevelSequenceActor* BattleTurnSequence, class AActor* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "PlayBattleTurnSequence");

	Params::BP_GameDirectorComponent_C_PlayBattleTurnSequence Parms{};

	Parms.BattleTurnSequence = BattleTurnSequence;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnBattleTurnSequenceStop
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnBattleTurnSequenceStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnBattleTurnSequenceStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnBattleTurnSequencePaused
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnBattleTurnSequencePaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnBattleTurnSequencePaused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.StartPreloadingLevelSequence
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::StartPreloadingLevelSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "StartPreloadingLevelSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.StopAnyBattleTurnSequence
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::StopAnyBattleTurnSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "StopAnyBattleTurnSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnEpicBattleSequencePlay
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnEpicBattleSequencePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnEpicBattleSequencePlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "ReceiveTick");

	Params::BP_GameDirectorComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnDynamicCameraActivatedInternal
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnDynamicCameraActivatedInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnDynamicCameraActivatedInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnDynamicCameraActivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    DEBUG_CameraType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::OnDynamicCameraActivated(const class FString& DEBUG_CameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnDynamicCameraActivated");

	Params::BP_GameDirectorComponent_C_OnDynamicCameraActivated Parms{};

	Parms.DEBUG_CameraType = std::move(DEBUG_CameraType);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.ActivateTargetingCamera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 TargetingCamera                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// class AActor*                           ViewTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::ActivateTargetingCamera(class UCameraComponent* TargetingCamera, class AActor* ViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "ActivateTargetingCamera");

	Params::BP_GameDirectorComponent_C_ActivateTargetingCamera Parms{};

	Parms.TargetingCamera = TargetingCamera;
	Parms.ViewTarget = ViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.InterruptDynamicCameraChange
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::InterruptDynamicCameraChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "InterruptDynamicCameraChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnBattleEnd
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnBattleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnBattleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.OnEpicBattleSequenceEnds
// (BlueprintCallable, BlueprintEvent)

void UBP_GameDirectorComponent_C::OnEpicBattleSequenceEnds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "OnEpicBattleSequenceEnds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.DisableTargetingCamera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  TargetingCamera                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::DisableTargetingCamera(class UActorComponent* TargetingCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "DisableTargetingCamera");

	Params::BP_GameDirectorComponent_C_DisableTargetingCamera Parms{};

	Parms.TargetingCamera = TargetingCamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GameDirectorComponent.BP_GameDirectorComponent_C.ExecuteUbergraph_BP_GameDirectorComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_GameDirectorComponent_C::ExecuteUbergraph_BP_GameDirectorComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GameDirectorComponent_C", "ExecuteUbergraph_BP_GameDirectorComponent");

	Params::BP_GameDirectorComponent_C_ExecuteUbergraph_BP_GameDirectorComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

