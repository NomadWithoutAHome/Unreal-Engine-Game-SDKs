#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PictoCartridge

#include "Basic.hpp"

#include "CommonUI_classes.hpp"
#include "EWeaponQuality_structs.hpp"
#include "E_jRPG_StatType_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PictoCartridge.WBP_PictoCartridge_C
// 0x0020 (0x0328 - 0x0308)
class UWBP_PictoCartridge_C final : public UCommonUserWidget
{
public:
	class UCommonTextBlock*                       LuminaDescription;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WrappingText_C*                    PictoName;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDynamicEntryBox*                       StatsList;                                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PictoLevel_C*                      WBP_PictoLevel;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetPictoDataFromInstance(class UBP_ItemInstance_Gear_Pictos_C* ItemInstance);
	void Set_Picto_Data(class UBP_PictoViewItem_C* PictoViewItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PictoCartridge_C">();
	}
	static class UWBP_PictoCartridge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PictoCartridge_C>();
	}
};
static_assert(alignof(UWBP_PictoCartridge_C) == 0x000008, "Wrong alignment on UWBP_PictoCartridge_C");
static_assert(sizeof(UWBP_PictoCartridge_C) == 0x000328, "Wrong size on UWBP_PictoCartridge_C");
static_assert(offsetof(UWBP_PictoCartridge_C, LuminaDescription) == 0x000308, "Member 'UWBP_PictoCartridge_C::LuminaDescription' has a wrong offset!");
static_assert(offsetof(UWBP_PictoCartridge_C, PictoName) == 0x000310, "Member 'UWBP_PictoCartridge_C::PictoName' has a wrong offset!");
static_assert(offsetof(UWBP_PictoCartridge_C, StatsList) == 0x000318, "Member 'UWBP_PictoCartridge_C::StatsList' has a wrong offset!");
static_assert(offsetof(UWBP_PictoCartridge_C, WBP_PictoLevel) == 0x000320, "Member 'UWBP_PictoCartridge_C::WBP_PictoLevel' has a wrong offset!");

}

