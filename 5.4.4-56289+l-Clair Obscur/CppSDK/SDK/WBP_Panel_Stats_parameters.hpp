#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Panel_Stats

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Panel_Stats.WBP_Panel_Stats_C.BPI_GetCharacterNotificationState
// 0x0020 (0x0020 - 0x0000)
struct WBP_Panel_Stats_C_BPI_GetCharacterNotificationState final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasNotification;                                   // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_jRPG_GI_Custom_C*                   CallFunc_GetCustomGI_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldObjectBeNotified_IsNotified;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Stats_C_BPI_GetCharacterNotificationState) == 0x000008, "Wrong alignment on WBP_Panel_Stats_C_BPI_GetCharacterNotificationState");
static_assert(sizeof(WBP_Panel_Stats_C_BPI_GetCharacterNotificationState) == 0x000020, "Wrong size on WBP_Panel_Stats_C_BPI_GetCharacterNotificationState");
static_assert(offsetof(WBP_Panel_Stats_C_BPI_GetCharacterNotificationState, CharacterData) == 0x000000, "Member 'WBP_Panel_Stats_C_BPI_GetCharacterNotificationState::CharacterData' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Stats_C_BPI_GetCharacterNotificationState, HasNotification) == 0x000008, "Member 'WBP_Panel_Stats_C_BPI_GetCharacterNotificationState::HasNotification' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Stats_C_BPI_GetCharacterNotificationState, CallFunc_GetCustomGI_ReturnValue) == 0x000010, "Member 'WBP_Panel_Stats_C_BPI_GetCharacterNotificationState::CallFunc_GetCustomGI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Stats_C_BPI_GetCharacterNotificationState, CallFunc_ShouldObjectBeNotified_IsNotified) == 0x000018, "Member 'WBP_Panel_Stats_C_BPI_GetCharacterNotificationState::CallFunc_ShouldObjectBeNotified_IsNotified' has a wrong offset!");

// Function WBP_Panel_Stats.WBP_Panel_Stats_C.BPI_LoadCharacter
// 0x0008 (0x0008 - 0x0000)
struct WBP_Panel_Stats_C_BPI_LoadCharacter final
{
public:
	class UBP_CharacterData_C*                    CharacterData;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Stats_C_BPI_LoadCharacter) == 0x000008, "Wrong alignment on WBP_Panel_Stats_C_BPI_LoadCharacter");
static_assert(sizeof(WBP_Panel_Stats_C_BPI_LoadCharacter) == 0x000008, "Wrong size on WBP_Panel_Stats_C_BPI_LoadCharacter");
static_assert(offsetof(WBP_Panel_Stats_C_BPI_LoadCharacter, CharacterData) == 0x000000, "Member 'WBP_Panel_Stats_C_BPI_LoadCharacter::CharacterData' has a wrong offset!");

// Function WBP_Panel_Stats.WBP_Panel_Stats_C.BPI_SetIsReadOnly
// 0x0001 (0x0001 - 0x0000)
struct WBP_Panel_Stats_C_BPI_SetIsReadOnly final
{
public:
	bool                                          IsReadOnly;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Stats_C_BPI_SetIsReadOnly) == 0x000001, "Wrong alignment on WBP_Panel_Stats_C_BPI_SetIsReadOnly");
static_assert(sizeof(WBP_Panel_Stats_C_BPI_SetIsReadOnly) == 0x000001, "Wrong size on WBP_Panel_Stats_C_BPI_SetIsReadOnly");
static_assert(offsetof(WBP_Panel_Stats_C_BPI_SetIsReadOnly, IsReadOnly) == 0x000000, "Member 'WBP_Panel_Stats_C_BPI_SetIsReadOnly::IsReadOnly' has a wrong offset!");

// Function WBP_Panel_Stats.WBP_Panel_Stats_C.ExecuteUbergraph_WBP_Panel_Stats
// 0x0020 (0x0020 - 0x0000)
struct WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReadOnly;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterData_C*                    K2Node_Event_CharacterData;                        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats) == 0x000008, "Wrong alignment on WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats");
static_assert(sizeof(WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats) == 0x000020, "Wrong size on WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats");
static_assert(offsetof(WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats, EntryPoint) == 0x000000, "Member 'WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats, K2Node_Event_IsReadOnly) == 0x000010, "Member 'WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats::K2Node_Event_IsReadOnly' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats, K2Node_Event_CharacterData) == 0x000018, "Member 'WBP_Panel_Stats_C_ExecuteUbergraph_WBP_Panel_Stats::K2Node_Event_CharacterData' has a wrong offset!");

// Function WBP_Panel_Stats.WBP_Panel_Stats_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_Panel_Stats_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Panel_Stats_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Panel_Stats_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Panel_Stats_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_Panel_Stats_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Panel_Stats_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Panel_Stats_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Panel_Stats_C_BP_GetDesiredFocusTarget, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000008, "Member 'WBP_Panel_Stats_C_BP_GetDesiredFocusTarget::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");

}

