#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_CharacterBP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ALS_CharacterBP.ALS_CharacterBP_C.ExecuteUbergraph_ALS_CharacterBP
// 0x0120 (0x0120 - 0x0000)
struct ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFallDetectionInPause_IsInPause;         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetWorldLocationOnStartFalling_Location;  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetRollAnimation_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP) == 0x000008, "Wrong alignment on ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP");
static_assert(sizeof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP) == 0x000120, "Wrong size on ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, EntryPoint) == 0x000000, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CustomEvent_NotifyName_4) == 0x000004, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CustomEvent_NotifyName_3) == 0x00000C, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CustomEvent_NotifyName_2) == 0x000024, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CustomEvent_NotifyName_1) == 0x00003C, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CustomEvent_NotifyName) == 0x000054, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, Temp_name_Variable) == 0x00006C, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_IsFallDetectionInPause_IsInPause) == 0x000074, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_IsFallDetectionInPause_IsInPause' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_GetWorldLocationOnStartFalling_Location) == 0x000078, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_GetWorldLocationOnStartFalling_Location' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_BreakVector_X) == 0x000098, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_GetRollAnimation_ReturnValue) == 0x0000B0, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_GetRollAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0000C0, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000CC, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_BreakVector_X_1) == 0x0000F8, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_BreakVector_Y_1) == 0x000100, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_BreakVector_Z_1) == 0x000108, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000110, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000118, "Member 'ALS_CharacterBP_C_ExecuteUbergraph_ALS_CharacterBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.GetGetUpAnimation
// 0x0018 (0x0018 - 0x0000)
struct ALS_CharacterBP_C_GetGetUpAnimation final
{
public:
	bool                                          bRagdollFaceUpState;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_GetGetUpAnimation) == 0x000008, "Wrong alignment on ALS_CharacterBP_C_GetGetUpAnimation");
static_assert(sizeof(ALS_CharacterBP_C_GetGetUpAnimation) == 0x000018, "Wrong size on ALS_CharacterBP_C_GetGetUpAnimation");
static_assert(offsetof(ALS_CharacterBP_C_GetGetUpAnimation, bRagdollFaceUpState) == 0x000000, "Member 'ALS_CharacterBP_C_GetGetUpAnimation::bRagdollFaceUpState' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_GetGetUpAnimation, ReturnValue) == 0x000008, "Member 'ALS_CharacterBP_C_GetGetUpAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_GetGetUpAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'ALS_CharacterBP_C_GetGetUpAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_GetGetUpAnimation, K2Node_SwitchEnum_CmpSuccess_1) == 0x000011, "Member 'ALS_CharacterBP_C_GetGetUpAnimation::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.GetMaxVelocityToDisablePostProcess
// 0x0008 (0x0008 - 0x0000)
struct ALS_CharacterBP_C_GetMaxVelocityToDisablePostProcess final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_GetMaxVelocityToDisablePostProcess) == 0x000008, "Wrong alignment on ALS_CharacterBP_C_GetMaxVelocityToDisablePostProcess");
static_assert(sizeof(ALS_CharacterBP_C_GetMaxVelocityToDisablePostProcess) == 0x000008, "Wrong size on ALS_CharacterBP_C_GetMaxVelocityToDisablePostProcess");
static_assert(offsetof(ALS_CharacterBP_C_GetMaxVelocityToDisablePostProcess, ReturnValue) == 0x000000, "Member 'ALS_CharacterBP_C_GetMaxVelocityToDisablePostProcess::ReturnValue' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.GetRollAnimation
// 0x0018 (0x0018 - 0x0000)
struct ALS_CharacterBP_C_GetRollAnimation final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_GetRollAnimation) == 0x000008, "Wrong alignment on ALS_CharacterBP_C_GetRollAnimation");
static_assert(sizeof(ALS_CharacterBP_C_GetRollAnimation) == 0x000018, "Wrong size on ALS_CharacterBP_C_GetRollAnimation");
static_assert(offsetof(ALS_CharacterBP_C_GetRollAnimation, ReturnValue) == 0x000000, "Member 'ALS_CharacterBP_C_GetRollAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_GetRollAnimation, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'ALS_CharacterBP_C_GetRollAnimation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_GetRollAnimation, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'ALS_CharacterBP_C_GetRollAnimation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnBlendOut_C7B148F34DFE01EB080502B343933C4B
// 0x0008 (0x0008 - 0x0000)
struct ALS_CharacterBP_C_OnBlendOut_C7B148F34DFE01EB080502B343933C4B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnBlendOut_C7B148F34DFE01EB080502B343933C4B) == 0x000004, "Wrong alignment on ALS_CharacterBP_C_OnBlendOut_C7B148F34DFE01EB080502B343933C4B");
static_assert(sizeof(ALS_CharacterBP_C_OnBlendOut_C7B148F34DFE01EB080502B343933C4B) == 0x000008, "Wrong size on ALS_CharacterBP_C_OnBlendOut_C7B148F34DFE01EB080502B343933C4B");
static_assert(offsetof(ALS_CharacterBP_C_OnBlendOut_C7B148F34DFE01EB080502B343933C4B, NotifyName) == 0x000000, "Member 'ALS_CharacterBP_C_OnBlendOut_C7B148F34DFE01EB080502B343933C4B::NotifyName' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnCompleted_C7B148F34DFE01EB080502B343933C4B
// 0x0008 (0x0008 - 0x0000)
struct ALS_CharacterBP_C_OnCompleted_C7B148F34DFE01EB080502B343933C4B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnCompleted_C7B148F34DFE01EB080502B343933C4B) == 0x000004, "Wrong alignment on ALS_CharacterBP_C_OnCompleted_C7B148F34DFE01EB080502B343933C4B");
static_assert(sizeof(ALS_CharacterBP_C_OnCompleted_C7B148F34DFE01EB080502B343933C4B) == 0x000008, "Wrong size on ALS_CharacterBP_C_OnCompleted_C7B148F34DFE01EB080502B343933C4B");
static_assert(offsetof(ALS_CharacterBP_C_OnCompleted_C7B148F34DFE01EB080502B343933C4B, NotifyName) == 0x000000, "Member 'ALS_CharacterBP_C_OnCompleted_C7B148F34DFE01EB080502B343933C4B::NotifyName' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnInterrupted_C7B148F34DFE01EB080502B343933C4B
// 0x0008 (0x0008 - 0x0000)
struct ALS_CharacterBP_C_OnInterrupted_C7B148F34DFE01EB080502B343933C4B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnInterrupted_C7B148F34DFE01EB080502B343933C4B) == 0x000004, "Wrong alignment on ALS_CharacterBP_C_OnInterrupted_C7B148F34DFE01EB080502B343933C4B");
static_assert(sizeof(ALS_CharacterBP_C_OnInterrupted_C7B148F34DFE01EB080502B343933C4B) == 0x000008, "Wrong size on ALS_CharacterBP_C_OnInterrupted_C7B148F34DFE01EB080502B343933C4B");
static_assert(offsetof(ALS_CharacterBP_C_OnInterrupted_C7B148F34DFE01EB080502B343933C4B, NotifyName) == 0x000000, "Member 'ALS_CharacterBP_C_OnInterrupted_C7B148F34DFE01EB080502B343933C4B::NotifyName' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B
// 0x0008 (0x0008 - 0x0000)
struct ALS_CharacterBP_C_OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B) == 0x000004, "Wrong alignment on ALS_CharacterBP_C_OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B");
static_assert(sizeof(ALS_CharacterBP_C_OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B) == 0x000008, "Wrong size on ALS_CharacterBP_C_OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B");
static_assert(offsetof(ALS_CharacterBP_C_OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B, NotifyName) == 0x000000, "Member 'ALS_CharacterBP_C_OnNotifyBegin_C7B148F34DFE01EB080502B343933C4B::NotifyName' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B
// 0x0008 (0x0008 - 0x0000)
struct ALS_CharacterBP_C_OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B) == 0x000004, "Wrong alignment on ALS_CharacterBP_C_OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B");
static_assert(sizeof(ALS_CharacterBP_C_OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B) == 0x000008, "Wrong size on ALS_CharacterBP_C_OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B");
static_assert(offsetof(ALS_CharacterBP_C_OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B, NotifyName) == 0x000000, "Member 'ALS_CharacterBP_C_OnNotifyEnd_C7B148F34DFE01EB080502B343933C4B::NotifyName' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnRollAnimationStopped
// 0x0001 (0x0001 - 0x0000)
struct ALS_CharacterBP_C_OnRollAnimationStopped final
{
public:
	bool                                          IsInterrupted;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnRollAnimationStopped) == 0x000001, "Wrong alignment on ALS_CharacterBP_C_OnRollAnimationStopped");
static_assert(sizeof(ALS_CharacterBP_C_OnRollAnimationStopped) == 0x000001, "Wrong size on ALS_CharacterBP_C_OnRollAnimationStopped");
static_assert(offsetof(ALS_CharacterBP_C_OnRollAnimationStopped, IsInterrupted) == 0x000000, "Member 'ALS_CharacterBP_C_OnRollAnimationStopped::IsInterrupted' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnUpdateHeldObject
// 0x0001 (0x0001 - 0x0000)
struct ALS_CharacterBP_C_OnUpdateHeldObject final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnUpdateHeldObject) == 0x000001, "Wrong alignment on ALS_CharacterBP_C_OnUpdateHeldObject");
static_assert(sizeof(ALS_CharacterBP_C_OnUpdateHeldObject) == 0x000001, "Wrong size on ALS_CharacterBP_C_OnUpdateHeldObject");
static_assert(offsetof(ALS_CharacterBP_C_OnUpdateHeldObject, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'ALS_CharacterBP_C_OnUpdateHeldObject::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ALS_CharacterBP.ALS_CharacterBP_C.OnUpdateHeldObjectAnimations
// 0x0028 (0x0028 - 0x0000)
struct ALS_CharacterBP_C_OnUpdateHeldObjectAnimations final
{
public:
	float                                         CallFunc_GetAnimCurveValue_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBow_AnimBP_C*                          K2Node_DynamicCast_AsBow_Anim_BP;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Draw_ImplicitCast;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations) == 0x000008, "Wrong alignment on ALS_CharacterBP_C_OnUpdateHeldObjectAnimations");
static_assert(sizeof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations) == 0x000028, "Wrong size on ALS_CharacterBP_C_OnUpdateHeldObjectAnimations");
static_assert(offsetof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations, CallFunc_GetAnimCurveValue_ReturnValue) == 0x000000, "Member 'ALS_CharacterBP_C_OnUpdateHeldObjectAnimations::CallFunc_GetAnimCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'ALS_CharacterBP_C_OnUpdateHeldObjectAnimations::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'ALS_CharacterBP_C_OnUpdateHeldObjectAnimations::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations, K2Node_DynamicCast_AsBow_Anim_BP) == 0x000010, "Member 'ALS_CharacterBP_C_OnUpdateHeldObjectAnimations::K2Node_DynamicCast_AsBow_Anim_BP' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ALS_CharacterBP_C_OnUpdateHeldObjectAnimations::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_CharacterBP_C_OnUpdateHeldObjectAnimations, K2Node_VariableSet_Draw_ImplicitCast) == 0x000020, "Member 'ALS_CharacterBP_C_OnUpdateHeldObjectAnimations::K2Node_VariableSet_Draw_ImplicitCast' has a wrong offset!");

}

