#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ClimbingElement

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPI_ClimbingElement.BPI_ClimbingElement_C
// 0x0000 (0x0000 - 0x0000)
class IBPI_ClimbingElement_C final
{
public:
	void CheckCanExitToBottom(const struct FVector& InputDirectionVertical, double InputScale, bool* CanExit, struct FVector* Location, struct FRotator* Rotation);
	void CheckCanExitToTop(const struct FVector& InputDirectionVertical, double InputScale, bool* CanExit, struct FVector* Location, struct FRotator* Rotation);
	void CheckMoveToNextClimbingElement(const struct FVector& InputDirectionHorizontal, const struct FVector& InputDirectionVertical, double InputScale, const struct FVector& CameraForward, const struct FVector& CameraLocation, bool* CanMove, TScriptInterface<class IBPI_ClimbingElement_C>* NextHold);
	void GetClimbingElementLocation(struct FVector* Location);
	void GetClimbingElementRotation(struct FRotator* Rotation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPI_ClimbingElement_C">();
	}
	static class IBPI_ClimbingElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBPI_ClimbingElement_C>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBPI_ClimbingElement_C) == 0x000001, "Wrong alignment on IBPI_ClimbingElement_C");
static_assert(sizeof(IBPI_ClimbingElement_C) == 0x000001, "Wrong size on IBPI_ClimbingElement_C");

}

