#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FreeAimTarget_Trigger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FreeAimTarget_Trigger.BP_FreeAimTarget_Trigger_C.FreeAimHit
// 0x0028 (0x0028 - 0x0000)
struct BP_FreeAimTarget_Trigger_C_FreeAimHit final
{
public:
	class ABP_jRPG_Character_World_C*             PlayerCharacterWorld;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisabled;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Trigger_C_FreeAimHit) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Trigger_C_FreeAimHit");
static_assert(sizeof(BP_FreeAimTarget_Trigger_C_FreeAimHit) == 0x000028, "Wrong size on BP_FreeAimTarget_Trigger_C_FreeAimHit");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_FreeAimHit, PlayerCharacterWorld) == 0x000000, "Member 'BP_FreeAimTarget_Trigger_C_FreeAimHit::PlayerCharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_FreeAimHit, HitLocation) == 0x000008, "Member 'BP_FreeAimTarget_Trigger_C_FreeAimHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_FreeAimHit, IsDisabled) == 0x000020, "Member 'BP_FreeAimTarget_Trigger_C_FreeAimHit::IsDisabled' has a wrong offset!");

// Function BP_FreeAimTarget_Trigger.BP_FreeAimTarget_Trigger_C.ExplorationAttacked
// 0x0020 (0x0020 - 0x0000)
struct BP_FreeAimTarget_Trigger_C_ExplorationAttacked final
{
public:
	class ABP_jRPG_Character_World_C*             PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Trigger_C_ExplorationAttacked) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Trigger_C_ExplorationAttacked");
static_assert(sizeof(BP_FreeAimTarget_Trigger_C_ExplorationAttacked) == 0x000020, "Wrong size on BP_FreeAimTarget_Trigger_C_ExplorationAttacked");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExplorationAttacked, PlayerCharacter) == 0x000000, "Member 'BP_FreeAimTarget_Trigger_C_ExplorationAttacked::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExplorationAttacked, ImpactPoint) == 0x000008, "Member 'BP_FreeAimTarget_Trigger_C_ExplorationAttacked::ImpactPoint' has a wrong offset!");

// Function BP_FreeAimTarget_Trigger.BP_FreeAimTarget_Trigger_C.ExecuteUbergraph_BP_FreeAimTarget_Trigger
// 0x0058 (0x0058 - 0x0000)
struct BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_PlayerCharacter;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ImpactPoint;                          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Instant;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_jRPG_Character_World_C*             K2Node_Event_PlayerCharacterWorld;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDisabled;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger");
static_assert(sizeof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger) == 0x000058, "Wrong size on BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger, EntryPoint) == 0x000000, "Member 'BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger, K2Node_Event_PlayerCharacter) == 0x000008, "Member 'BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger::K2Node_Event_PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger, K2Node_Event_ImpactPoint) == 0x000010, "Member 'BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger::K2Node_Event_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger, K2Node_Event_Instant) == 0x000028, "Member 'BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger::K2Node_Event_Instant' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger, K2Node_Event_PlayerCharacterWorld) == 0x000030, "Member 'BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger::K2Node_Event_PlayerCharacterWorld' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger, K2Node_Event_HitLocation) == 0x000038, "Member 'BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger, K2Node_Event_IsDisabled) == 0x000050, "Member 'BP_FreeAimTarget_Trigger_C_ExecuteUbergraph_BP_FreeAimTarget_Trigger::K2Node_Event_IsDisabled' has a wrong offset!");

// Function BP_FreeAimTarget_Trigger.BP_FreeAimTarget_Trigger_C.ButtonTrigger
// 0x0001 (0x0001 - 0x0000)
struct BP_FreeAimTarget_Trigger_C_ButtonTrigger final
{
public:
	bool                                          Instant;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Trigger_C_ButtonTrigger) == 0x000001, "Wrong alignment on BP_FreeAimTarget_Trigger_C_ButtonTrigger");
static_assert(sizeof(BP_FreeAimTarget_Trigger_C_ButtonTrigger) == 0x000001, "Wrong size on BP_FreeAimTarget_Trigger_C_ButtonTrigger");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_ButtonTrigger, Instant) == 0x000000, "Member 'BP_FreeAimTarget_Trigger_C_ButtonTrigger::Instant' has a wrong offset!");

// Function BP_FreeAimTarget_Trigger.BP_FreeAimTarget_Trigger_C.Editor_DrawDebugShapes
// 0x0098 (0x0098 - 0x0000)
struct BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0030(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes) == 0x000008, "Wrong alignment on BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes");
static_assert(sizeof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes) == 0x000098, "Wrong size on BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, ReturnValue) == 0x000000, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000060, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, K2Node_DynamicCast_AsActor) == 0x000068, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_FreeAimTarget_Trigger_C_Editor_DrawDebugShapes::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

