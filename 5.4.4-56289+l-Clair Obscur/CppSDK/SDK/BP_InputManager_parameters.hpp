#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InputManager

#include "Basic.hpp"

#include "EInputAction_structs.hpp"
#include "FInputLayer_structs.hpp"
#include "Engine_structs.hpp"
#include "S_Tutorial_structs.hpp"
#include "EInputType_structs.hpp"
#include "InputCore_structs.hpp"
#include "FKeyVisualInfo_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_InputManager.BP_InputManager_C.BindToActionAxis
// 0x0090 (0x0090 - 0x0000)
struct BP_InputManager_C_BindToActionAxis final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(double Value)>                 Event;                                             // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0020(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_BindToActionAxis) == 0x000008, "Wrong alignment on BP_InputManager_C_BindToActionAxis");
static_assert(sizeof(BP_InputManager_C_BindToActionAxis) == 0x000090, "Wrong size on BP_InputManager_C_BindToActionAxis");
static_assert(offsetof(BP_InputManager_C_BindToActionAxis, Action) == 0x000000, "Member 'BP_InputManager_C_BindToActionAxis::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionAxis, Event) == 0x000004, "Member 'BP_InputManager_C_BindToActionAxis::Event' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionAxis, Object) == 0x000018, "Member 'BP_InputManager_C_BindToActionAxis::Object' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionAxis, CallFunc_GetCurrentLayer_Output) == 0x000020, "Member 'BP_InputManager_C_BindToActionAxis::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionAxis, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000088, "Member 'BP_InputManager_C_BindToActionAxis::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.BindToActionPressed
// 0x0090 (0x0090 - 0x0000)
struct BP_InputManager_C_BindToActionPressed final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             Event;                                             // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0020(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_BindToActionPressed) == 0x000008, "Wrong alignment on BP_InputManager_C_BindToActionPressed");
static_assert(sizeof(BP_InputManager_C_BindToActionPressed) == 0x000090, "Wrong size on BP_InputManager_C_BindToActionPressed");
static_assert(offsetof(BP_InputManager_C_BindToActionPressed, Action) == 0x000000, "Member 'BP_InputManager_C_BindToActionPressed::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressed, Event) == 0x000004, "Member 'BP_InputManager_C_BindToActionPressed::Event' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressed, Object) == 0x000018, "Member 'BP_InputManager_C_BindToActionPressed::Object' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressed, CallFunc_GetCurrentLayer_Output) == 0x000020, "Member 'BP_InputManager_C_BindToActionPressed::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressed, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000088, "Member 'BP_InputManager_C_BindToActionPressed::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.BindToActionPressedKey
// 0x0090 (0x0090 - 0x0000)
struct BP_InputManager_C_BindToActionPressedKey final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_InputKeyState_C* KeyState)> Event;                                      // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0020(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_BindToActionPressedKey) == 0x000008, "Wrong alignment on BP_InputManager_C_BindToActionPressedKey");
static_assert(sizeof(BP_InputManager_C_BindToActionPressedKey) == 0x000090, "Wrong size on BP_InputManager_C_BindToActionPressedKey");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedKey, Action) == 0x000000, "Member 'BP_InputManager_C_BindToActionPressedKey::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedKey, Object) == 0x000008, "Member 'BP_InputManager_C_BindToActionPressedKey::Object' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedKey, Event) == 0x000010, "Member 'BP_InputManager_C_BindToActionPressedKey::Event' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedKey, CallFunc_GetCurrentLayer_Output) == 0x000020, "Member 'BP_InputManager_C_BindToActionPressedKey::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedKey, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000088, "Member 'BP_InputManager_C_BindToActionPressedKey::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.BindToActionPressedReleased
// 0x00A0 (0x00A0 - 0x0000)
struct BP_InputManager_C_BindToActionPressedReleased final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             PressedEvent;                                      // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             Released;                                          // 0x0014(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0030(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_BindToActionPressedReleased) == 0x000008, "Wrong alignment on BP_InputManager_C_BindToActionPressedReleased");
static_assert(sizeof(BP_InputManager_C_BindToActionPressedReleased) == 0x0000A0, "Wrong size on BP_InputManager_C_BindToActionPressedReleased");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedReleased, Action) == 0x000000, "Member 'BP_InputManager_C_BindToActionPressedReleased::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedReleased, PressedEvent) == 0x000004, "Member 'BP_InputManager_C_BindToActionPressedReleased::PressedEvent' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedReleased, Released) == 0x000014, "Member 'BP_InputManager_C_BindToActionPressedReleased::Released' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedReleased, Object) == 0x000028, "Member 'BP_InputManager_C_BindToActionPressedReleased::Object' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedReleased, CallFunc_GetCurrentLayer_Output) == 0x000030, "Member 'BP_InputManager_C_BindToActionPressedReleased::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionPressedReleased, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000098, "Member 'BP_InputManager_C_BindToActionPressedReleased::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.BindToActionReleased
// 0x0090 (0x0090 - 0x0000)
struct BP_InputManager_C_BindToActionReleased final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             Event;                                             // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                BoundObject;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0020(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_BindToActionReleased) == 0x000008, "Wrong alignment on BP_InputManager_C_BindToActionReleased");
static_assert(sizeof(BP_InputManager_C_BindToActionReleased) == 0x000090, "Wrong size on BP_InputManager_C_BindToActionReleased");
static_assert(offsetof(BP_InputManager_C_BindToActionReleased, Action) == 0x000000, "Member 'BP_InputManager_C_BindToActionReleased::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionReleased, Event) == 0x000004, "Member 'BP_InputManager_C_BindToActionReleased::Event' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionReleased, BoundObject) == 0x000018, "Member 'BP_InputManager_C_BindToActionReleased::BoundObject' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionReleased, CallFunc_GetCurrentLayer_Output) == 0x000020, "Member 'BP_InputManager_C_BindToActionReleased::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_BindToActionReleased, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000088, "Member 'BP_InputManager_C_BindToActionReleased::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.CreateInputLayer
// 0x0228 (0x0228 - 0x0000)
struct BP_InputManager_C_CreateInputLayer final
{
public:
	bool                                          IsModal;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  Guid;                                              // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class UBP_InputKeyState_C*> local_keyStates;                                   // 0x0018(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetAllActionNamesFromEnum_ActionNames;    // 0x0078(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActionKeyState_IsKeyDown;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    CallFunc_GetActionKeyState_InputType;              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetActionKeyState_AxisValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetActionKeyState_Key;                    // 0x00A0(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFInputLayer                           Temp_wildcard_Variable;                            // 0x00C0(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           K2Node_MakeStruct_FInputLayer;                     // 0x0140(0x0068)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputKeyState_C*                    CallFunc_SpawnObject_ReturnValue;                  // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_CreateInputLayer) == 0x000008, "Wrong alignment on BP_InputManager_C_CreateInputLayer");
static_assert(sizeof(BP_InputManager_C_CreateInputLayer) == 0x000228, "Wrong size on BP_InputManager_C_CreateInputLayer");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, IsModal) == 0x000000, "Member 'BP_InputManager_C_CreateInputLayer::IsModal' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, Guid) == 0x000004, "Member 'BP_InputManager_C_CreateInputLayer::Guid' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, local_keyStates) == 0x000018, "Member 'BP_InputManager_C_CreateInputLayer::local_keyStates' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_InputManager_C_CreateInputLayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_InputManager_C_CreateInputLayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_GetAllActionNamesFromEnum_ActionNames) == 0x000078, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_GetAllActionNamesFromEnum_ActionNames' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_GetActionKeyState_IsKeyDown) == 0x000094, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_GetActionKeyState_IsKeyDown' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_GetActionKeyState_InputType) == 0x000095, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_GetActionKeyState_InputType' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_GetActionKeyState_AxisValue) == 0x000098, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_GetActionKeyState_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_GetActionKeyState_Key) == 0x0000A0, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_GetActionKeyState_Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, Temp_wildcard_Variable) == 0x0000C0, "Member 'BP_InputManager_C_CreateInputLayer::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_NewGuid_ReturnValue) == 0x00012C, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_NewGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Array_Length_ReturnValue_2) == 0x00013C, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, K2Node_MakeStruct_FInputLayer) == 0x000140, "Member 'BP_InputManager_C_CreateInputLayer::K2Node_MakeStruct_FInputLayer' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001A8, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, K2Node_MakeStruct_FormatArgumentData) == 0x0001B0, "Member 'BP_InputManager_C_CreateInputLayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, K2Node_MakeArray_Array) == 0x0001F8, "Member 'BP_InputManager_C_CreateInputLayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Format_ReturnValue) == 0x000208, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_Array_Add_ReturnValue) == 0x000218, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_CreateInputLayer, CallFunc_SpawnObject_ReturnValue) == 0x000220, "Member 'BP_InputManager_C_CreateInputLayer::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.CustomEvent_0
// 0x0001 (0x0001 - 0x0000)
struct BP_InputManager_C_CustomEvent_0 final
{
public:
	EInputType                                    InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_CustomEvent_0) == 0x000001, "Wrong alignment on BP_InputManager_C_CustomEvent_0");
static_assert(sizeof(BP_InputManager_C_CustomEvent_0) == 0x000001, "Wrong size on BP_InputManager_C_CustomEvent_0");
static_assert(offsetof(BP_InputManager_C_CustomEvent_0, InputType) == 0x000000, "Member 'BP_InputManager_C_CustomEvent_0::InputType' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.DEBUG_SetVerboseEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_InputManager_C_DEBUG_SetVerboseEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_DEBUG_SetVerboseEnabled) == 0x000001, "Wrong alignment on BP_InputManager_C_DEBUG_SetVerboseEnabled");
static_assert(sizeof(BP_InputManager_C_DEBUG_SetVerboseEnabled) == 0x000001, "Wrong size on BP_InputManager_C_DEBUG_SetVerboseEnabled");
static_assert(offsetof(BP_InputManager_C_DEBUG_SetVerboseEnabled, Enabled) == 0x000000, "Member 'BP_InputManager_C_DEBUG_SetVerboseEnabled::Enabled' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.DeleteInputLayerByGUID
// 0x0198 (0x0198 - 0x0000)
struct BP_InputManager_C_DeleteInputLayerByGUID final
{
public:
	struct FGuid                                  Guid;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_MakeStruct_Guid;                            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFInputLayer                           CallFunc_FindLayerByGUID_Output;                   // 0x0040(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_FindLayerByGUID_Array_Index;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0130(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0178(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0188(0x0010)()
};
static_assert(alignof(BP_InputManager_C_DeleteInputLayerByGUID) == 0x000008, "Wrong alignment on BP_InputManager_C_DeleteInputLayerByGUID");
static_assert(sizeof(BP_InputManager_C_DeleteInputLayerByGUID) == 0x000198, "Wrong size on BP_InputManager_C_DeleteInputLayerByGUID");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, Guid) == 0x000000, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::Guid' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, K2Node_MakeStruct_Guid) == 0x000010, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::K2Node_MakeStruct_Guid' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_Conv_GuidToString_ReturnValue) == 0x000020, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_FindLayerByGUID_Output) == 0x000040, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_FindLayerByGUID_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_FindLayerByGUID_Array_Index) == 0x0000A8, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_FindLayerByGUID_Array_Index' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_Format_ReturnValue) == 0x000110, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000128, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, K2Node_MakeStruct_FormatArgumentData_1) == 0x000130, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, K2Node_MakeArray_Array_1) == 0x000178, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DeleteInputLayerByGUID, CallFunc_Format_ReturnValue_1) == 0x000188, "Member 'BP_InputManager_C_DeleteInputLayerByGUID::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.DisplayTutoPanel
// 0x00C0 (0x00C0 - 0x0000)
struct BP_InputManager_C_DisplayTutoPanel final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	struct FS_Tutorial                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0010)()
};
static_assert(alignof(BP_InputManager_C_DisplayTutoPanel) == 0x000008, "Wrong alignment on BP_InputManager_C_DisplayTutoPanel");
static_assert(sizeof(BP_InputManager_C_DisplayTutoPanel) == 0x0000C0, "Wrong size on BP_InputManager_C_DisplayTutoPanel");
static_assert(offsetof(BP_InputManager_C_DisplayTutoPanel, RowName) == 0x000000, "Member 'BP_InputManager_C_DisplayTutoPanel::RowName' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DisplayTutoPanel, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'BP_InputManager_C_DisplayTutoPanel::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DisplayTutoPanel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_InputManager_C_DisplayTutoPanel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DisplayTutoPanel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'BP_InputManager_C_DisplayTutoPanel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DisplayTutoPanel, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'BP_InputManager_C_DisplayTutoPanel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DisplayTutoPanel, K2Node_MakeArray_Array) == 0x0000A0, "Member 'BP_InputManager_C_DisplayTutoPanel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_DisplayTutoPanel, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'BP_InputManager_C_DisplayTutoPanel::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.ExecuteUbergraph_BP_InputManager
// 0x000C (0x000C - 0x0000)
struct BP_InputManager_C_ExecuteUbergraph_BP_InputManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    K2Node_CustomEvent_InputType;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_ExecuteUbergraph_BP_InputManager) == 0x000004, "Wrong alignment on BP_InputManager_C_ExecuteUbergraph_BP_InputManager");
static_assert(sizeof(BP_InputManager_C_ExecuteUbergraph_BP_InputManager) == 0x00000C, "Wrong size on BP_InputManager_C_ExecuteUbergraph_BP_InputManager");
static_assert(offsetof(BP_InputManager_C_ExecuteUbergraph_BP_InputManager, EntryPoint) == 0x000000, "Member 'BP_InputManager_C_ExecuteUbergraph_BP_InputManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ExecuteUbergraph_BP_InputManager, K2Node_CustomEvent_InputType) == 0x000004, "Member 'BP_InputManager_C_ExecuteUbergraph_BP_InputManager::K2Node_CustomEvent_InputType' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ExecuteUbergraph_BP_InputManager, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_InputManager_C_ExecuteUbergraph_BP_InputManager::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.FindLayerByGUID
// 0x00F8 (0x00F8 - 0x0000)
struct BP_InputManager_C_FindLayerByGUID final
{
public:
	struct FGuid                                  Guid;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           Output;                                            // 0x0010(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0078(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_Array_Get_Item;                           // 0x0088(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GuidGuid_ReturnValue;          // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_FindLayerByGUID) == 0x000008, "Wrong alignment on BP_InputManager_C_FindLayerByGUID");
static_assert(sizeof(BP_InputManager_C_FindLayerByGUID) == 0x0000F8, "Wrong size on BP_InputManager_C_FindLayerByGUID");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, Guid) == 0x000000, "Member 'BP_InputManager_C_FindLayerByGUID::Guid' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, Output) == 0x000010, "Member 'BP_InputManager_C_FindLayerByGUID::Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, Array_Index) == 0x000078, "Member 'BP_InputManager_C_FindLayerByGUID::Array_Index' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_InputManager_C_FindLayerByGUID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_InputManager_C_FindLayerByGUID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_InputManager_C_FindLayerByGUID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_InputManager_C_FindLayerByGUID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_InputManager_C_FindLayerByGUID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, CallFunc_EqualEqual_GuidGuid_ReturnValue) == 0x0000F4, "Member 'BP_InputManager_C_FindLayerByGUID::CallFunc_EqualEqual_GuidGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_FindLayerByGUID, CallFunc_Less_IntInt_ReturnValue) == 0x0000F5, "Member 'BP_InputManager_C_FindLayerByGUID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetActionKeyState
// 0x0118 (0x0118 - 0x0000)
struct BP_InputManager_C_GetActionKeyState final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyDown;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    InputType;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AxisValue;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0018(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	EInputType                                    Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    Temp_byte_Variable_1;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    Temp_byte_Variable_2;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    Temp_byte_Variable_3;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0050(0x0010)(ReferenceParm)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0060(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAnalogKeyState_ReturnValue;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x00C0(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue_1;          // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    K2Node_Select_Default;                             // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    K2Node_Select_Default_1;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_AxisValue_ImplicitCast;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_GetActionKeyState) == 0x000008, "Wrong alignment on BP_InputManager_C_GetActionKeyState");
static_assert(sizeof(BP_InputManager_C_GetActionKeyState) == 0x000118, "Wrong size on BP_InputManager_C_GetActionKeyState");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, ActionName) == 0x000000, "Member 'BP_InputManager_C_GetActionKeyState::ActionName' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, IsKeyDown) == 0x000008, "Member 'BP_InputManager_C_GetActionKeyState::IsKeyDown' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, InputType) == 0x000009, "Member 'BP_InputManager_C_GetActionKeyState::InputType' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, AxisValue) == 0x000010, "Member 'BP_InputManager_C_GetActionKeyState::AxisValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Key) == 0x000018, "Member 'BP_InputManager_C_GetActionKeyState::Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_byte_Variable) == 0x000030, "Member 'BP_InputManager_C_GetActionKeyState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_bool_Variable) == 0x000031, "Member 'BP_InputManager_C_GetActionKeyState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_byte_Variable_1) == 0x000032, "Member 'BP_InputManager_C_GetActionKeyState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_byte_Variable_2) == 0x000033, "Member 'BP_InputManager_C_GetActionKeyState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_InputManager_C_GetActionKeyState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_InputManager_C_GetActionKeyState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_InputManager_C_GetActionKeyState::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_byte_Variable_3) == 0x000044, "Member 'BP_InputManager_C_GetActionKeyState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_GetInputSettings_ReturnValue) == 0x000048, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_GetAxisMappingByName_OutMappings) == 0x000050, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_GetOwner_ReturnValue) == 0x000090, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x000098, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, K2Node_DynamicCast_AsPlayer_Controller) == 0x0000A0, "Member 'BP_InputManager_C_GetActionKeyState::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_InputManager_C_GetActionKeyState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_GetInputSettings_ReturnValue_1) == 0x0000B0, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_GetInputAnalogKeyState_ReturnValue) == 0x0000B8, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_GetInputAnalogKeyState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_GetActionMappingByName_OutMappings) == 0x0000C0, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Key_IsKeyboardKey_ReturnValue_1) == 0x0000FD, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Key_IsKeyboardKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_IsInputKeyDown_ReturnValue) == 0x0000FE, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, K2Node_Select_Default) == 0x0000FF, "Member 'BP_InputManager_C_GetActionKeyState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_bool_Variable_1) == 0x000100, "Member 'BP_InputManager_C_GetActionKeyState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, Temp_int_Loop_Counter_Variable_1) == 0x000104, "Member 'BP_InputManager_C_GetActionKeyState::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, K2Node_Select_Default_1) == 0x000108, "Member 'BP_InputManager_C_GetActionKeyState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Less_IntInt_ReturnValue_1) == 0x000109, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, CallFunc_Add_IntInt_ReturnValue_1) == 0x00010C, "Member 'BP_InputManager_C_GetActionKeyState::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionKeyState, K2Node_FunctionResult_AxisValue_ImplicitCast) == 0x000110, "Member 'BP_InputManager_C_GetActionKeyState::K2Node_FunctionResult_AxisValue_ImplicitCast' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetActionStateObject
// 0x00B0 (0x00B0 - 0x0000)
struct BP_InputManager_C_GetActionStateObject final
{
public:
	EInputAction                                  ActionName;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputKeyState_C*                    Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
};
static_assert(alignof(BP_InputManager_C_GetActionStateObject) == 0x000008, "Wrong alignment on BP_InputManager_C_GetActionStateObject");
static_assert(sizeof(BP_InputManager_C_GetActionStateObject) == 0x0000B0, "Wrong size on BP_InputManager_C_GetActionStateObject");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, ActionName) == 0x000000, "Member 'BP_InputManager_C_GetActionStateObject::ActionName' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, Value) == 0x000008, "Member 'BP_InputManager_C_GetActionStateObject::Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'BP_InputManager_C_GetActionStateObject::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'BP_InputManager_C_GetActionStateObject::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_InputManager_C_GetActionStateObject::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_InputManager_C_GetActionStateObject::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, CallFunc_Conv_NameToText_ReturnValue) == 0x000038, "Member 'BP_InputManager_C_GetActionStateObject::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_InputManager_C_GetActionStateObject::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_InputManager_C_GetActionStateObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'BP_InputManager_C_GetActionStateObject::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetActionStateObject_FromLayer
// 0x0118 (0x0118 - 0x0000)
struct BP_InputManager_C_GetActionStateObject_FromLayer final
{
public:
	EInputAction                                  ActionName;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFInputLayer                           InputLayer;                                        // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    Value;                                             // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_Map_Find_Value;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0010)()
};
static_assert(alignof(BP_InputManager_C_GetActionStateObject_FromLayer) == 0x000008, "Wrong alignment on BP_InputManager_C_GetActionStateObject_FromLayer");
static_assert(sizeof(BP_InputManager_C_GetActionStateObject_FromLayer) == 0x000118, "Wrong size on BP_InputManager_C_GetActionStateObject_FromLayer");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, ActionName) == 0x000000, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::ActionName' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, InputLayer) == 0x000008, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::InputLayer' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, Value) == 0x000070, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000078, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, CallFunc_Conv_StringToName_ReturnValue) == 0x000088, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, CallFunc_Map_Find_Value) == 0x000090, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, CallFunc_Conv_NameToText_ReturnValue) == 0x0000A0, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, K2Node_MakeStruct_FormatArgumentData) == 0x0000B0, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObject_FromLayer, CallFunc_Format_ReturnValue) == 0x000108, "Member 'BP_InputManager_C_GetActionStateObject_FromLayer::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetActionStateObjectByName
// 0x0098 (0x0098 - 0x0000)
struct BP_InputManager_C_GetActionStateObjectByName final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0010)()
};
static_assert(alignof(BP_InputManager_C_GetActionStateObjectByName) == 0x000008, "Wrong alignment on BP_InputManager_C_GetActionStateObjectByName");
static_assert(sizeof(BP_InputManager_C_GetActionStateObjectByName) == 0x000098, "Wrong size on BP_InputManager_C_GetActionStateObjectByName");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, ActionName) == 0x000000, "Member 'BP_InputManager_C_GetActionStateObjectByName::ActionName' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, Value) == 0x000008, "Member 'BP_InputManager_C_GetActionStateObjectByName::Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, CallFunc_Conv_NameToText_ReturnValue) == 0x000010, "Member 'BP_InputManager_C_GetActionStateObjectByName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'BP_InputManager_C_GetActionStateObjectByName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, CallFunc_Map_Find_Value) == 0x000068, "Member 'BP_InputManager_C_GetActionStateObjectByName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'BP_InputManager_C_GetActionStateObjectByName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_InputManager_C_GetActionStateObjectByName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetActionStateObjectByName, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_InputManager_C_GetActionStateObjectByName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetAllActionNames
// 0x0048 (0x0048 - 0x0000)
struct BP_InputManager_C_GetAllActionNames final
{
public:
	TArray<class FName>                           ActionNames;                                       // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           Temp_wildcard_Variable;                            // 0x0010(0x0010)(ReferenceParm)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAxisNames_AxisNames;                   // 0x0028(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetActionNames_ActionNames;               // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_InputManager_C_GetAllActionNames) == 0x000008, "Wrong alignment on BP_InputManager_C_GetAllActionNames");
static_assert(sizeof(BP_InputManager_C_GetAllActionNames) == 0x000048, "Wrong size on BP_InputManager_C_GetAllActionNames");
static_assert(offsetof(BP_InputManager_C_GetAllActionNames, ActionNames) == 0x000000, "Member 'BP_InputManager_C_GetAllActionNames::ActionNames' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNames, Temp_wildcard_Variable) == 0x000010, "Member 'BP_InputManager_C_GetAllActionNames::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNames, CallFunc_GetInputSettings_ReturnValue) == 0x000020, "Member 'BP_InputManager_C_GetAllActionNames::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNames, CallFunc_GetAxisNames_AxisNames) == 0x000028, "Member 'BP_InputManager_C_GetAllActionNames::CallFunc_GetAxisNames_AxisNames' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNames, CallFunc_GetActionNames_ActionNames) == 0x000038, "Member 'BP_InputManager_C_GetAllActionNames::CallFunc_GetActionNames_ActionNames' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetAllActionNamesFromEnum
// 0x0098 (0x0098 - 0x0000)
struct BP_InputManager_C_GetAllActionNamesFromEnum final
{
public:
	TArray<class FName>                           ActionNames;                                       // 0x0000(0x0010)(Parm, OutParm)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EInputAction>                          Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable; // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_wildcard_Temp_buffer_array_Variable;          // 0x0058(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1; // 0x0070(0x0010)(ConstParm, ReferenceParm)
	TArray<EInputAction>                          Temp_wildcard_Temp_buffer_array_Variable_1;        // 0x0080(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_GetAllActionNamesFromEnum) == 0x000008, "Wrong alignment on BP_InputManager_C_GetAllActionNamesFromEnum");
static_assert(sizeof(BP_InputManager_C_GetAllActionNamesFromEnum) == 0x000098, "Wrong size on BP_InputManager_C_GetAllActionNamesFromEnum");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, ActionNames) == 0x000000, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::ActionNames' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, Temp_int_Variable) == 0x000010, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, Temp_int_Variable_1) == 0x000014, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_GetValidValue_ReturnValue) == 0x000020, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000021, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000022, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000023, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable) == 0x000040, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_MakeLiteralInt_ReturnValue) == 0x000050, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, Temp_wildcard_Temp_buffer_array_Variable) == 0x000058, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::Temp_wildcard_Temp_buffer_array_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1) == 0x000070, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::Temp_wildcard_We_need_a_second_array_to_store_the_result_and_be_able_to_wipe_the_first__buffer__array_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, Temp_wildcard_Temp_buffer_array_Variable_1) == 0x000080, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::Temp_wildcard_Temp_buffer_array_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetAllActionNamesFromEnum, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'BP_InputManager_C_GetAllActionNamesFromEnum::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetBaseBindingKey
// 0x0048 (0x0048 - 0x0000)
struct BP_InputManager_C_GetBaseBindingKey final
{
public:
	EInputAction                                  GameAction;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetBaseBindingKeyByName_Key;              // 0x0030(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_GetBaseBindingKey) == 0x000008, "Wrong alignment on BP_InputManager_C_GetBaseBindingKey");
static_assert(sizeof(BP_InputManager_C_GetBaseBindingKey) == 0x000048, "Wrong size on BP_InputManager_C_GetBaseBindingKey");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKey, GameAction) == 0x000000, "Member 'BP_InputManager_C_GetBaseBindingKey::GameAction' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKey, Key) == 0x000008, "Member 'BP_InputManager_C_GetBaseBindingKey::Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKey, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'BP_InputManager_C_GetBaseBindingKey::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKey, CallFunc_GetBaseBindingKeyByName_Key) == 0x000030, "Member 'BP_InputManager_C_GetBaseBindingKey::CallFunc_GetBaseBindingKeyByName_Key' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetBaseBindingKeyByName
// 0x0130 (0x0130 - 0x0000)
struct BP_InputManager_C_GetBaseBindingKeyByName final
{
public:
	class FString                                 InputActionName;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0010(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0038(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
	EInputType                                    Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         Temp_wildcard_Variable;                            // 0x00C0(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x00D0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE[0x2];                                       // 0x00FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0120(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_InputManager_C_GetBaseBindingKeyByName) == 0x000008, "Wrong alignment on BP_InputManager_C_GetBaseBindingKeyByName");
static_assert(sizeof(BP_InputManager_C_GetBaseBindingKeyByName) == 0x000130, "Wrong size on BP_InputManager_C_GetBaseBindingKeyByName");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, InputActionName) == 0x000000, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::InputActionName' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, Key) == 0x000010, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Conv_NameToText_ReturnValue) == 0x000038, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, Temp_bool_Variable) == 0x000090, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, Temp_byte_Variable) == 0x0000B8, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, Temp_wildcard_Variable) == 0x0000C0, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x0000FC, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x0000FD, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, K2Node_Select_Default) == 0x000104, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Greater_IntInt_ReturnValue) == 0x000105, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_GetInputSettings_ReturnValue) == 0x000118, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyByName, CallFunc_GetActionMappingByName_OutMappings) == 0x000120, "Member 'BP_InputManager_C_GetBaseBindingKeyByName::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetBaseBindingKeyVisualInfo
// 0x0080 (0x0080 - 0x0000)
struct BP_InputManager_C_GetBaseBindingKeyVisualInfo final
{
public:
	EInputAction                                  GameAction;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFKeyVisualInfo                        KeyVisualInfo;                                     // 0x0008(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetBaseBindingKey_Key;                    // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FFKeyVisualInfo                        CallFunc_GetKeyVisualInfo_KeyVisualInfo;           // 0x0050(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_GetBaseBindingKeyVisualInfo) == 0x000008, "Wrong alignment on BP_InputManager_C_GetBaseBindingKeyVisualInfo");
static_assert(sizeof(BP_InputManager_C_GetBaseBindingKeyVisualInfo) == 0x000080, "Wrong size on BP_InputManager_C_GetBaseBindingKeyVisualInfo");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyVisualInfo, GameAction) == 0x000000, "Member 'BP_InputManager_C_GetBaseBindingKeyVisualInfo::GameAction' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyVisualInfo, KeyVisualInfo) == 0x000008, "Member 'BP_InputManager_C_GetBaseBindingKeyVisualInfo::KeyVisualInfo' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyVisualInfo, CallFunc_GetBaseBindingKey_Key) == 0x000038, "Member 'BP_InputManager_C_GetBaseBindingKeyVisualInfo::CallFunc_GetBaseBindingKey_Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetBaseBindingKeyVisualInfo, CallFunc_GetKeyVisualInfo_KeyVisualInfo) == 0x000050, "Member 'BP_InputManager_C_GetBaseBindingKeyVisualInfo::CallFunc_GetKeyVisualInfo_KeyVisualInfo' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetCurrentLayer
// 0x0070 (0x0070 - 0x0000)
struct BP_InputManager_C_GetCurrentLayer final
{
public:
	struct FFInputLayer                           Output;                                            // 0x0000(0x0068)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_GetCurrentLayer) == 0x000008, "Wrong alignment on BP_InputManager_C_GetCurrentLayer");
static_assert(sizeof(BP_InputManager_C_GetCurrentLayer) == 0x000070, "Wrong size on BP_InputManager_C_GetCurrentLayer");
static_assert(offsetof(BP_InputManager_C_GetCurrentLayer, Output) == 0x000000, "Member 'BP_InputManager_C_GetCurrentLayer::Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetCurrentLayer, CallFunc_Array_LastIndex_ReturnValue) == 0x000068, "Member 'BP_InputManager_C_GetCurrentLayer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.GetKeyVisualInfo
// 0x00B0 (0x00B0 - 0x0000)
struct BP_InputManager_C_GetKeyVisualInfo final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FFKeyVisualInfo                        KeyVisualInfo;                                     // 0x0018(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFKeyVisualInfo                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_GetKeyVisualInfo) == 0x000008, "Wrong alignment on BP_InputManager_C_GetKeyVisualInfo");
static_assert(sizeof(BP_InputManager_C_GetKeyVisualInfo) == 0x0000B0, "Wrong size on BP_InputManager_C_GetKeyVisualInfo");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, Key) == 0x000000, "Member 'BP_InputManager_C_GetKeyVisualInfo::Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, KeyVisualInfo) == 0x000018, "Member 'BP_InputManager_C_GetKeyVisualInfo::KeyVisualInfo' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_InputManager_C_GetKeyVisualInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_InputManager_C_GetKeyVisualInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000058, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_Array_Get_Item) == 0x00006C, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_GetKeyVisualInfo, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0000A9, "Member 'BP_InputManager_C_GetKeyVisualInfo::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.ProcessTextForInlineInputTag
// 0x0198 (0x0198 - 0x0000)
struct BP_InputManager_C_ProcessTextForInlineInputTag final
{
public:
	class FText                                   Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Output;                                            // 0x0010(0x0010)(Parm, OutParm)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_1;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_2;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetBaseBindingKeyByName_Key;              // 0x0088(0x0018)(HasGetValueTypeHash)
	struct FFKeyVisualInfo                        CallFunc_GetKeyVisualInfo_KeyVisualInfo;           // 0x00A0(0x0030)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00D0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0178(0x0010)()
	class FText                                   CallFunc_ProcessTextForInlineInputTag_Output;      // 0x0188(0x0010)()
};
static_assert(alignof(BP_InputManager_C_ProcessTextForInlineInputTag) == 0x000008, "Wrong alignment on BP_InputManager_C_ProcessTextForInlineInputTag");
static_assert(sizeof(BP_InputManager_C_ProcessTextForInlineInputTag) == 0x000198, "Wrong size on BP_InputManager_C_ProcessTextForInlineInputTag");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, Input) == 0x000000, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::Input' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, Output) == 0x000010, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Len_ReturnValue) == 0x000020, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_FindSubstring_ReturnValue) == 0x000038, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Len_ReturnValue_1) == 0x00003C, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_GetSubstring_ReturnValue) == 0x000048, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_FindSubstring_ReturnValue_1) == 0x000058, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_FindSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_GetSubstring_ReturnValue_1) == 0x000068, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_GetSubstring_ReturnValue_2) == 0x000078, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_GetSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_GetBaseBindingKeyByName_Key) == 0x000088, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_GetBaseBindingKeyByName_Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_GetKeyVisualInfo_KeyVisualInfo) == 0x0000A0, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_GetKeyVisualInfo_KeyVisualInfo' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Conv_NameToText_ReturnValue) == 0x0000D0, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, K2Node_MakeStruct_FormatArgumentData) == 0x0000E0, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000148, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000168, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_Conv_StringToText_ReturnValue) == 0x000178, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_ProcessTextForInlineInputTag, CallFunc_ProcessTextForInlineInputTag_Output) == 0x000188, "Member 'BP_InputManager_C_ProcessTextForInlineInputTag::CallFunc_ProcessTextForInlineInputTag_Output' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_InputManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_InputManager_C_ReceiveTick");
static_assert(sizeof(BP_InputManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_InputManager_C_ReceiveTick");
static_assert(offsetof(BP_InputManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_InputManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.SetAllInputBlocked
// 0x0001 (0x0001 - 0x0000)
struct BP_InputManager_C_SetAllInputBlocked final
{
public:
	bool                                          bLocked_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_SetAllInputBlocked) == 0x000001, "Wrong alignment on BP_InputManager_C_SetAllInputBlocked");
static_assert(sizeof(BP_InputManager_C_SetAllInputBlocked) == 0x000001, "Wrong size on BP_InputManager_C_SetAllInputBlocked");
static_assert(offsetof(BP_InputManager_C_SetAllInputBlocked, bLocked_0) == 0x000000, "Member 'BP_InputManager_C_SetAllInputBlocked::bLocked_0' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.SetInputActionsRestriction
// 0x0028 (0x0028 - 0x0000)
struct BP_InputManager_C_SetInputActionsRestriction final
{
public:
	TArray<EInputAction>                          InputActions;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          AllowNavigation;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EInputAction>                          K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(BP_InputManager_C_SetInputActionsRestriction) == 0x000008, "Wrong alignment on BP_InputManager_C_SetInputActionsRestriction");
static_assert(sizeof(BP_InputManager_C_SetInputActionsRestriction) == 0x000028, "Wrong size on BP_InputManager_C_SetInputActionsRestriction");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction, InputActions) == 0x000000, "Member 'BP_InputManager_C_SetInputActionsRestriction::InputActions' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction, AllowNavigation) == 0x000010, "Member 'BP_InputManager_C_SetInputActionsRestriction::AllowNavigation' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction, CallFunc_MakeLiteralByte_ReturnValue) == 0x000011, "Member 'BP_InputManager_C_SetInputActionsRestriction::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_InputManager_C_SetInputActionsRestriction::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.SetInputActionsRestriction_NavigationOnly
// 0x0020 (0x0020 - 0x0000)
struct BP_InputManager_C_SetInputActionsRestriction_NavigationOnly final
{
public:
	bool                                          AllowConfirm;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputAction                                  Temp_byte_Variable;                                // 0x0002(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EInputAction>                          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_SetInputActionsRestriction_NavigationOnly) == 0x000008, "Wrong alignment on BP_InputManager_C_SetInputActionsRestriction_NavigationOnly");
static_assert(sizeof(BP_InputManager_C_SetInputActionsRestriction_NavigationOnly) == 0x000020, "Wrong size on BP_InputManager_C_SetInputActionsRestriction_NavigationOnly");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction_NavigationOnly, AllowConfirm) == 0x000000, "Member 'BP_InputManager_C_SetInputActionsRestriction_NavigationOnly::AllowConfirm' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction_NavigationOnly, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'BP_InputManager_C_SetInputActionsRestriction_NavigationOnly::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction_NavigationOnly, Temp_byte_Variable) == 0x000002, "Member 'BP_InputManager_C_SetInputActionsRestriction_NavigationOnly::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction_NavigationOnly, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_InputManager_C_SetInputActionsRestriction_NavigationOnly::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_SetInputActionsRestriction_NavigationOnly, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_InputManager_C_SetInputActionsRestriction_NavigationOnly::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.UnbindToActionPressed
// 0x0090 (0x0090 - 0x0000)
struct BP_InputManager_C_UnbindToActionPressed final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             Event;                                             // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0020(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_UnbindToActionPressed) == 0x000008, "Wrong alignment on BP_InputManager_C_UnbindToActionPressed");
static_assert(sizeof(BP_InputManager_C_UnbindToActionPressed) == 0x000090, "Wrong size on BP_InputManager_C_UnbindToActionPressed");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressed, Action) == 0x000000, "Member 'BP_InputManager_C_UnbindToActionPressed::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressed, Event) == 0x000004, "Member 'BP_InputManager_C_UnbindToActionPressed::Event' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressed, Object) == 0x000018, "Member 'BP_InputManager_C_UnbindToActionPressed::Object' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressed, CallFunc_GetCurrentLayer_Output) == 0x000020, "Member 'BP_InputManager_C_UnbindToActionPressed::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressed, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000088, "Member 'BP_InputManager_C_UnbindToActionPressed::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.UnbindToActionPressedByObject
// 0x0080 (0x0080 - 0x0000)
struct BP_InputManager_C_UnbindToActionPressedByObject final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0010(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_UnbindToActionPressedByObject) == 0x000008, "Wrong alignment on BP_InputManager_C_UnbindToActionPressedByObject");
static_assert(sizeof(BP_InputManager_C_UnbindToActionPressedByObject) == 0x000080, "Wrong size on BP_InputManager_C_UnbindToActionPressedByObject");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressedByObject, Action) == 0x000000, "Member 'BP_InputManager_C_UnbindToActionPressedByObject::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressedByObject, Object) == 0x000008, "Member 'BP_InputManager_C_UnbindToActionPressedByObject::Object' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressedByObject, CallFunc_GetCurrentLayer_Output) == 0x000010, "Member 'BP_InputManager_C_UnbindToActionPressedByObject::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionPressedByObject, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000078, "Member 'BP_InputManager_C_UnbindToActionPressedByObject::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.UnbindToActionReleasedByEvent
// 0x0088 (0x0088 - 0x0000)
struct BP_InputManager_C_UnbindToActionReleasedByEvent final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             Event;                                             // 0x0004(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0018(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_UnbindToActionReleasedByEvent) == 0x000008, "Wrong alignment on BP_InputManager_C_UnbindToActionReleasedByEvent");
static_assert(sizeof(BP_InputManager_C_UnbindToActionReleasedByEvent) == 0x000088, "Wrong size on BP_InputManager_C_UnbindToActionReleasedByEvent");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByEvent, Action) == 0x000000, "Member 'BP_InputManager_C_UnbindToActionReleasedByEvent::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByEvent, Event) == 0x000004, "Member 'BP_InputManager_C_UnbindToActionReleasedByEvent::Event' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByEvent, CallFunc_GetCurrentLayer_Output) == 0x000018, "Member 'BP_InputManager_C_UnbindToActionReleasedByEvent::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByEvent, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000080, "Member 'BP_InputManager_C_UnbindToActionReleasedByEvent::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.UnbindToActionReleasedByObjectReal
// 0x0080 (0x0080 - 0x0000)
struct BP_InputManager_C_UnbindToActionReleasedByObjectReal final
{
public:
	EInputAction                                  Action;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFInputLayer                           CallFunc_GetCurrentLayer_Output;                   // 0x0010(0x0068)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_GetActionStateObject_FromLayer_Value;     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_UnbindToActionReleasedByObjectReal) == 0x000008, "Wrong alignment on BP_InputManager_C_UnbindToActionReleasedByObjectReal");
static_assert(sizeof(BP_InputManager_C_UnbindToActionReleasedByObjectReal) == 0x000080, "Wrong size on BP_InputManager_C_UnbindToActionReleasedByObjectReal");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByObjectReal, Action) == 0x000000, "Member 'BP_InputManager_C_UnbindToActionReleasedByObjectReal::Action' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByObjectReal, Object) == 0x000008, "Member 'BP_InputManager_C_UnbindToActionReleasedByObjectReal::Object' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByObjectReal, CallFunc_GetCurrentLayer_Output) == 0x000010, "Member 'BP_InputManager_C_UnbindToActionReleasedByObjectReal::CallFunc_GetCurrentLayer_Output' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UnbindToActionReleasedByObjectReal, CallFunc_GetActionStateObject_FromLayer_Value) == 0x000078, "Member 'BP_InputManager_C_UnbindToActionReleasedByObjectReal::CallFunc_GetActionStateObject_FromLayer_Value' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.UpdateLayerForKey
// 0x0358 (0x0358 - 0x0000)
struct BP_InputManager_C_UpdateLayerForKey final
{
public:
	EInputAction                                  InputAction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyDown;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AxisValue;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FFInputLayer                           Layer;                                             // 0x0028(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FKey                                   local_keyToDebug;                                  // 0x0090(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          local_isActionAllowed;                             // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_hasFoundModal;                               // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   local_debugKey;                                    // 0x00AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isModal;                                     // 0x00B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x00B8(0x0010)()
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00C8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D8(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue_1;            // 0x0168(0x0010)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0188(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_Format_ReturnValue;                       // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x01F8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0208(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFInputLayer                           Temp_wildcard_Variable;                            // 0x0258(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x02D0(0x0048)(HasGetValueTypeHash)
	class UBP_InputKeyState_C*                    CallFunc_Map_Find_Value;                           // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0328(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0338(0x0010)()
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateState_WasConsumed;                  // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0357(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_UpdateLayerForKey) == 0x000008, "Wrong alignment on BP_InputManager_C_UpdateLayerForKey");
static_assert(sizeof(BP_InputManager_C_UpdateLayerForKey) == 0x000358, "Wrong size on BP_InputManager_C_UpdateLayerForKey");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, InputAction) == 0x000000, "Member 'BP_InputManager_C_UpdateLayerForKey::InputAction' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, IsKeyDown) == 0x000001, "Member 'BP_InputManager_C_UpdateLayerForKey::IsKeyDown' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, AxisValue) == 0x000008, "Member 'BP_InputManager_C_UpdateLayerForKey::AxisValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, Key) == 0x000010, "Member 'BP_InputManager_C_UpdateLayerForKey::Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, Layer) == 0x000028, "Member 'BP_InputManager_C_UpdateLayerForKey::Layer' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, local_keyToDebug) == 0x000090, "Member 'BP_InputManager_C_UpdateLayerForKey::local_keyToDebug' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, local_isActionAllowed) == 0x0000A8, "Member 'BP_InputManager_C_UpdateLayerForKey::local_isActionAllowed' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, local_hasFoundModal) == 0x0000A9, "Member 'BP_InputManager_C_UpdateLayerForKey::local_hasFoundModal' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, local_debugKey) == 0x0000AC, "Member 'BP_InputManager_C_UpdateLayerForKey::local_debugKey' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, local_isModal) == 0x0000B4, "Member 'BP_InputManager_C_UpdateLayerForKey::local_isModal' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Conv_BoolToText_ReturnValue) == 0x0000B8, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Conv_NameToText_ReturnValue) == 0x0000C8, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, K2Node_MakeStruct_FormatArgumentData) == 0x0000D8, "Member 'BP_InputManager_C_UpdateLayerForKey::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'BP_InputManager_C_UpdateLayerForKey::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Conv_NameToText_ReturnValue_1) == 0x000168, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Conv_NameToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, K2Node_MakeArray_Array) == 0x000178, "Member 'BP_InputManager_C_UpdateLayerForKey::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, K2Node_MakeStruct_FormatArgumentData_2) == 0x000188, "Member 'BP_InputManager_C_UpdateLayerForKey::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Format_ReturnValue) == 0x0001D0, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001E0, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Conv_StringToName_ReturnValue) == 0x0001F0, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0001F8, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, K2Node_MakeStruct_FormatArgumentData_3) == 0x000208, "Member 'BP_InputManager_C_UpdateLayerForKey::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000250, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, Temp_wildcard_Variable) == 0x000258, "Member 'BP_InputManager_C_UpdateLayerForKey::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Array_Find_ReturnValue) == 0x0002C0, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0002C8, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, K2Node_MakeStruct_FormatArgumentData_4) == 0x0002D0, "Member 'BP_InputManager_C_UpdateLayerForKey::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Map_Find_Value) == 0x000318, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Map_Find_ReturnValue) == 0x000320, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, K2Node_MakeArray_Array_1) == 0x000328, "Member 'BP_InputManager_C_UpdateLayerForKey::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Format_ReturnValue_1) == 0x000338, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Set_Contains_ReturnValue) == 0x000348, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Not_PreBool_ReturnValue) == 0x000349, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Array_Length_ReturnValue) == 0x00034C, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_Array_Contains_ReturnValue) == 0x000350, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000351, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_BooleanOR_ReturnValue) == 0x000352, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_BooleanOR_ReturnValue_1) == 0x000353, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_BooleanOR_ReturnValue_2) == 0x000354, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_BooleanOR_ReturnValue_3) == 0x000355, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_UpdateState_WasConsumed) == 0x000356, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_UpdateState_WasConsumed' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayerForKey, CallFunc_BooleanOR_ReturnValue_4) == 0x000357, "Member 'BP_InputManager_C_UpdateLayerForKey::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function BP_InputManager.BP_InputManager_C.UpdateLayersForKey
// 0x0178 (0x0178 - 0x0000)
struct BP_InputManager_C_UpdateLayersForKey final
{
public:
	EInputAction                                  InputAction;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyDown;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AxisValue;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          local_isActionAllowed;                             // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_hasFoundModal;                               // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   local_debugKey;                                    // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         local_debugIndex;                                  // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          local_isModal;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputKeyState_C*                    Temp_wildcard_Variable;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFInputLayer                           Temp_wildcard_Variable_1;                          // 0x0080(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateState_WasConsumed;                  // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InputKeyState_C*                    CallFunc_Map_Find_Value;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFInputLayer                           CallFunc_Array_Get_Item;                           // 0x0100(0x0068)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_InputManager_C_UpdateLayersForKey) == 0x000008, "Wrong alignment on BP_InputManager_C_UpdateLayersForKey");
static_assert(sizeof(BP_InputManager_C_UpdateLayersForKey) == 0x000178, "Wrong size on BP_InputManager_C_UpdateLayersForKey");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, InputAction) == 0x000000, "Member 'BP_InputManager_C_UpdateLayersForKey::InputAction' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, IsKeyDown) == 0x000001, "Member 'BP_InputManager_C_UpdateLayersForKey::IsKeyDown' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, AxisValue) == 0x000008, "Member 'BP_InputManager_C_UpdateLayersForKey::AxisValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, Key) == 0x000010, "Member 'BP_InputManager_C_UpdateLayersForKey::Key' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, local_isActionAllowed) == 0x000028, "Member 'BP_InputManager_C_UpdateLayersForKey::local_isActionAllowed' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, local_hasFoundModal) == 0x000029, "Member 'BP_InputManager_C_UpdateLayersForKey::local_hasFoundModal' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, local_debugKey) == 0x00002C, "Member 'BP_InputManager_C_UpdateLayersForKey::local_debugKey' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, local_debugIndex) == 0x000034, "Member 'BP_InputManager_C_UpdateLayersForKey::local_debugIndex' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, local_isModal) == 0x000038, "Member 'BP_InputManager_C_UpdateLayersForKey::local_isModal' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000040, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_InputManager_C_UpdateLayersForKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Conv_StringToName_ReturnValue) == 0x000054, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, Temp_wildcard_Variable) == 0x000060, "Member 'BP_InputManager_C_UpdateLayersForKey::Temp_wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_InputManager_C_UpdateLayersForKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Set_Contains_ReturnValue) == 0x000071, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Array_Contains_ReturnValue) == 0x000078, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000079, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_BooleanOR_ReturnValue) == 0x00007A, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_BooleanOR_ReturnValue_1) == 0x00007B, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, Temp_wildcard_Variable_1) == 0x000080, "Member 'BP_InputManager_C_UpdateLayersForKey::Temp_wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_BooleanOR_ReturnValue_2) == 0x0000E8, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_BooleanOR_ReturnValue_3) == 0x0000E9, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_UpdateState_WasConsumed) == 0x0000EA, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_UpdateState_WasConsumed' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Map_Find_Value) == 0x0000F0, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Array_Get_Item) == 0x000100, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Array_Length_ReturnValue_1) == 0x000168, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00016C, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_InputManager_C_UpdateLayersForKey, CallFunc_Max_ReturnValue) == 0x000170, "Member 'BP_InputManager_C_UpdateLayersForKey::CallFunc_Max_ReturnValue' has a wrong offset!");

}

