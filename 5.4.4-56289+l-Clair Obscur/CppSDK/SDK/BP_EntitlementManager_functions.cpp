#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EntitlementManager

#include "Basic.hpp"

#include "BP_EntitlementManager_classes.hpp"
#include "BP_EntitlementManager_parameters.hpp"


namespace SDK
{

// Function BP_EntitlementManager.BP_EntitlementManager_C.HasAnyEntitlement
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const TArray<class FName>&              Entitlements                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_EntitlementManager_C::HasAnyEntitlement(const TArray<class FName>& Entitlements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "HasAnyEntitlement");

	Params::BP_EntitlementManager_C_HasAnyEntitlement Parms{};

	Parms.Entitlements = std::move(Entitlements);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_EntitlementManager.BP_EntitlementManager_C.LoadState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EntitlementSaveData&          EntitlementData                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_EntitlementManager_C::LoadState(struct FS_EntitlementSaveData& EntitlementData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "LoadState");

	Params::BP_EntitlementManager_C_LoadState Parms{};

	Parms.EntitlementData = std::move(EntitlementData);

	UObject::ProcessEvent(Func, &Parms);

	EntitlementData = std::move(Parms.EntitlementData);
}


// Function BP_EntitlementManager.BP_EntitlementManager_C.OnEntitlementDetected
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EntitlementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_EntitlementDataUpdaterBase_C* EntitlementDataUpdater                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_EntitlementManager_C::OnEntitlementDetected(class FName EntitlementID, class UBP_EntitlementDataUpdaterBase_C* EntitlementDataUpdater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "OnEntitlementDetected");

	Params::BP_EntitlementManager_C_OnEntitlementDetected Parms{};

	Parms.EntitlementID = EntitlementID;
	Parms.EntitlementDataUpdater = EntitlementDataUpdater;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EntitlementManager.BP_EntitlementManager_C.OnEntitlementUndetected
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EntitlementID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_EntitlementDataUpdaterBase_C* EntitlementDataUpdater                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_EntitlementManager_C::OnEntitlementUndetected(class FName EntitlementID, class UBP_EntitlementDataUpdaterBase_C* EntitlementDataUpdater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "OnEntitlementUndetected");

	Params::BP_EntitlementManager_C_OnEntitlementUndetected Parms{};

	Parms.EntitlementID = EntitlementID;
	Parms.EntitlementDataUpdater = EntitlementDataUpdater;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EntitlementManager.BP_EntitlementManager_C.ResetState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EntitlementManager_C::ResetState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "ResetState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EntitlementManager.BP_EntitlementManager_C.RetrieveAllIDsForEntitlement
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EntitlementData&              EntitlementData                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class FName> UBP_EntitlementManager_C::RetrieveAllIDsForEntitlement(struct FS_EntitlementData& EntitlementData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "RetrieveAllIDsForEntitlement");

	Params::BP_EntitlementManager_C_RetrieveAllIDsForEntitlement Parms{};

	Parms.EntitlementData = std::move(EntitlementData);

	UObject::ProcessEvent(Func, &Parms);

	EntitlementData = std::move(Parms.EntitlementData);

	return Parms.ReturnValue;
}


// Function BP_EntitlementManager.BP_EntitlementManager_C.SaveState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EntitlementSaveData&          EntitlementData                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_EntitlementManager_C::SaveState(struct FS_EntitlementSaveData& EntitlementData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "SaveState");

	Params::BP_EntitlementManager_C_SaveState Parms{};

	Parms.EntitlementData = std::move(EntitlementData);

	UObject::ProcessEvent(Func, &Parms);

	EntitlementData = std::move(Parms.EntitlementData);
}


// Function BP_EntitlementManager.BP_EntitlementManager_C.UpdateEntitlementData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_EntitlementManager_C::UpdateEntitlementData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EntitlementManager_C", "UpdateEntitlementData");

	UObject::ProcessEvent(Func, nullptr);
}

}

